if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_isModule) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.pathIsModule[path] = !!opt_isModule;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.writeScripts_(path);
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.importModule_ = function(src) {
    var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
    if (goog.importScript_("", bootstrap)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && goog.dependencies_.pathIsModule[path]) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModuleFromUrl = function(url) {
    goog.retrieveAndExecModule_(url);
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined, declareLegacyNamespace:false};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function() {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = (doc.createElement("script"));
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      var isOldIE = goog.IS_OLD_IE_;
      if (opt_sourceText === undefined) {
        if (!isOldIE) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function(pathToLoad) {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    visitNode(pathToLoad);
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        if (!deps.pathIsModule[path]) {
          goog.importScript_(goog.basePath + path);
        } else {
          goog.importModule_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    var xhr = new goog.global["XMLHttpRequest"];
    xhr.open("get", src, false);
    xhr.send();
    return xhr.responseText;
  }
};
goog.retrieveAndExecModule_ = function(src) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText != null) {
      var execModuleScript = goog.wrapModule_(src, scriptText);
      var isOldIE = goog.IS_OLD_IE_;
      if (isOldIE) {
        goog.dependencies_.deferred[originalPath] = execModuleScript;
        goog.queuedModules_.push(originalPath);
      } else {
        importScript(src, execModuleScript);
      }
    } else {
      throw new Error("load of " + src + "failed");
    }
  }
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in (obj)) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = (doc.createElement("SCRIPT"));
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:" "};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "" && ch <= "�";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\x3c"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  var sb = ['"'];
  for (var i = 0;i < s.length;i++) {
    var ch = s.charAt(i);
    var cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = a[i] != b[j];
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return obj !== null && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in (obj)) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (obj !== null && key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (obj !== null && key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in (obj) ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  var minLen = arguments[0].length;
  for (var i = 1;i < arguments.length;i++) {
    if (arguments[i].length < minLen) {
      minLen = arguments[i].length;
    }
  }
  for (var i = 0;i < minLen;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.9.36";
cljs.core._STAR_unchecked_if_STAR_ = false;
goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
if (typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = function cljs$core$_STAR_print_err_fn_STAR_(_) {
    throw new Error("No *print-err-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var G__10948__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__10948 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__10949__i = 0, G__10949__a = new Array(arguments.length - 0);
        while (G__10949__i < G__10949__a.length) {
          G__10949__a[G__10949__i] = arguments[G__10949__i + 0];
          ++G__10949__i;
        }
        args = new cljs.core.IndexedSeq(G__10949__a, 0);
      }
      return G__10948__delegate.call(this, args);
    };
    G__10948.cljs$lang$maxFixedArity = 0;
    G__10948.cljs$lang$applyTo = function(arglist__10950) {
      var args = cljs.core.seq(arglist__10950);
      return G__10948__delegate(args);
    };
    G__10948.cljs$core$IFn$_invoke$arity$variadic = G__10948__delegate;
    return G__10948;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var G__10951__delegate = function(args) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__10951 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__10952__i = 0, G__10952__a = new Array(arguments.length - 0);
        while (G__10952__i < G__10952__a.length) {
          G__10952__a[G__10952__i] = arguments[G__10952__i + 0];
          ++G__10952__i;
        }
        args = new cljs.core.IndexedSeq(G__10952__a, 0);
      }
      return G__10951__delegate.call(this, args);
    };
    G__10951.cljs$lang$maxFixedArity = 0;
    G__10951.cljs$lang$applyTo = function(arglist__10953) {
      var args = cljs.core.seq(arglist__10953);
      return G__10951__delegate(args);
    };
    G__10951.cljs$core$IFn$_invoke$arity$variadic = G__10951__delegate;
    return G__10951;
  }();
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return goog.string.isUnicodeChar(x);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__6198__auto__ = ty;
    if (cljs.core.truth_(and__6198__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__6198__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4423__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4423__auto__)) {
    var s = temp__4423__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined" && !(performance.now == null)) {
    return performance.now();
  } else {
    if (typeof process !== "undefined" && !(process.hrtime == null)) {
      var t = process.hrtime();
      return (t[0] * 1E9 + t[1]) / 1E6;
    } else {
      return (new Date).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var args10954 = [];
  var len__7285__auto___10960 = arguments.length;
  var i__7286__auto___10961 = 0;
  while (true) {
    if (i__7286__auto___10961 < len__7285__auto___10960) {
      args10954.push(arguments[i__7286__auto___10961]);
      var G__10962 = i__7286__auto___10961 + 1;
      i__7286__auto___10961 = G__10962;
      continue;
    } else {
    }
    break;
  }
  var G__10959 = args10954.length;
  switch(G__10959) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args10954.slice(2), 0, null);
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic = function(type, size, more_sizes) {
  var dims = more_sizes;
  var dimarray = new Array(size);
  var n__7125__auto___10964 = dimarray.length;
  var i_10965 = 0;
  while (true) {
    if (i_10965 < n__7125__auto___10964) {
      dimarray[i_10965] = cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array, null, dims) : cljs.core.apply.call(null, cljs.core.make_array, null, dims);
      var G__10966 = i_10965 + 1;
      i_10965 = G__10966;
      continue;
    } else {
    }
    break;
  }
  return dimarray;
};
cljs.core.make_array.cljs$lang$applyTo = function(seq10955) {
  var G__10956 = cljs.core.first(seq10955);
  var seq10955__$1 = cljs.core.next(seq10955);
  var G__10957 = cljs.core.first(seq10955__$1);
  var seq10955__$2 = cljs.core.next(seq10955__$1);
  return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(G__10956, G__10957, seq10955__$2);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__7125__auto___10967 = len;
  var i_10968 = 0;
  while (true) {
    if (i_10968 < n__7125__auto___10967) {
      new_arr[i_10968] = arr[i_10968];
      var G__10969 = i_10968 + 1;
      i_10968 = G__10969;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__10970 = i + 1;
      i = G__10970;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget(var_args) {
  var args10971 = [];
  var len__7285__auto___10980 = arguments.length;
  var i__7286__auto___10981 = 0;
  while (true) {
    if (i__7286__auto___10981 < len__7285__auto___10980) {
      args10971.push(arguments[i__7286__auto___10981]);
      var G__10982 = i__7286__auto___10981 + 1;
      i__7286__auto___10981 = G__10982;
      continue;
    } else {
    }
    break;
  }
  var G__10976 = args10971.length;
  switch(G__10976) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args10971.slice(2), 0, null);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__10977 = cljs.core.aget;
  var G__10978 = array[i];
  var G__10979 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__10977, G__10978, G__10979) : cljs.core.apply.call(null, G__10977, G__10978, G__10979);
};
cljs.core.aget.cljs$lang$applyTo = function(seq10972) {
  var G__10973 = cljs.core.first(seq10972);
  var seq10972__$1 = cljs.core.next(seq10972);
  var G__10974 = cljs.core.first(seq10972__$1);
  var seq10972__$2 = cljs.core.next(seq10972__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__10973, G__10974, seq10972__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var args10984 = [];
  var len__7285__auto___10995 = arguments.length;
  var i__7286__auto___10996 = 0;
  while (true) {
    if (i__7286__auto___10996 < len__7285__auto___10995) {
      args10984.push(arguments[i__7286__auto___10996]);
      var G__10997 = i__7286__auto___10996 + 1;
      i__7286__auto___10996 = G__10997;
      continue;
    } else {
    }
    break;
  }
  var G__10990 = args10984.length;
  switch(G__10990) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args10984.slice(3), 0, null);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7304__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__10991 = cljs.core.aset;
  var G__10992 = array[idx];
  var G__10993 = idx2;
  var G__10994 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__10991, G__10992, G__10993, G__10994) : cljs.core.apply.call(null, G__10991, G__10992, G__10993, G__10994);
};
cljs.core.aset.cljs$lang$applyTo = function(seq10985) {
  var G__10986 = cljs.core.first(seq10985);
  var seq10985__$1 = cljs.core.next(seq10985);
  var G__10987 = cljs.core.first(seq10985__$1);
  var seq10985__$2 = cljs.core.next(seq10985__$1);
  var G__10988 = cljs.core.first(seq10985__$2);
  var seq10985__$3 = cljs.core.next(seq10985__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__10986, G__10987, G__10988, seq10985__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var args10999 = [];
  var len__7285__auto___11005 = arguments.length;
  var i__7286__auto___11006 = 0;
  while (true) {
    if (i__7286__auto___11006 < len__7285__auto___11005) {
      args10999.push(arguments[i__7286__auto___11006]);
      var G__11007 = i__7286__auto___11006 + 1;
      i__7286__auto___11006 = G__11007;
      continue;
    } else {
    }
    break;
  }
  var G__11001 = args10999.length;
  switch(G__11001) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10999.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__11002 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__11003 = [];
  var G__11004 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11002, G__11003, G__11004) : cljs.core.reduce.call(null, G__11002, G__11003, G__11004);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___11012 = arguments.length;
  var i__7286__auto___11013 = 0;
  while (true) {
    if (i__7286__auto___11013 < len__7285__auto___11012) {
      args__7292__auto__.push(arguments[i__7286__auto___11013]);
      var G__11014 = i__7286__auto___11013 + 1;
      i__7286__auto___11013 = G__11014;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq11009) {
  var G__11010 = cljs.core.first(seq11009);
  var seq11009__$1 = cljs.core.next(seq11009);
  var G__11011 = cljs.core.first(seq11009__$1);
  var seq11009__$2 = cljs.core.next(seq11009__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__11010, G__11011, seq11009__$2);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var args11015 = [];
  var len__7285__auto___11018 = arguments.length;
  var i__7286__auto___11019 = 0;
  while (true) {
    if (i__7286__auto___11019 < len__7285__auto___11018) {
      args11015.push(arguments[i__7286__auto___11019]);
      var G__11020 = i__7286__auto___11019 + 1;
      i__7286__auto___11019 = G__11020;
      continue;
    } else {
    }
    break;
  }
  var G__11017 = args11015.length;
  switch(G__11017) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11015.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__6874__auto__.call(null, this$);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__6874__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__6874__auto__.call(null, this$, a);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__6874__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__6874__auto__.call(null, this$, a, b);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__6874__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$4 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__6874__auto__.call(null, this$, a, b, c);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__6874__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$5 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__6874__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__6874__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$6 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__6874__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__6874__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$7 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__6874__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$8 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$9 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$10 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$11 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$12 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$13 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$14 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$15 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$16 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$17 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$18 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$19 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$20 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$21 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$22 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__6873__auto__ = value == null ? null : value;
    var m__6874__auto__ = cljs.core._clone[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__6874__auto__.call(null, value);
    } else {
      var m__6874__auto____$1 = cljs.core._clone["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__6874__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = function() {
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._count[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._count["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._empty[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._empty["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._conj[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__6874__auto__.call(null, coll, o);
    } else {
      var m__6874__auto____$1 = cljs.core._conj["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__6874__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function cljs$core$_nth(var_args) {
  var args11022 = [];
  var len__7285__auto___11025 = arguments.length;
  var i__7286__auto___11026 = 0;
  while (true) {
    if (i__7286__auto___11026 < len__7285__auto___11025) {
      args11022.push(arguments[i__7286__auto___11026]);
      var G__11027 = i__7286__auto___11026 + 1;
      i__7286__auto___11026 = G__11027;
      continue;
    } else {
    }
    break;
  }
  var G__11024 = args11022.length;
  switch(G__11024) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11022.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._nth[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__6874__auto__.call(null, coll, n);
    } else {
      var m__6874__auto____$1 = cljs.core._nth["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__6874__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._nth[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__6874__auto__.call(null, coll, n, not_found);
    } else {
      var m__6874__auto____$1 = cljs.core._nth["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__6874__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._first[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._first["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._rest[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._rest["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = function() {
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._next[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._next["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var args11029 = [];
  var len__7285__auto___11032 = arguments.length;
  var i__7286__auto___11033 = 0;
  while (true) {
    if (i__7286__auto___11033 < len__7285__auto___11032) {
      args11029.push(arguments[i__7286__auto___11033]);
      var G__11034 = i__7286__auto___11033 + 1;
      i__7286__auto___11033 = G__11034;
      continue;
    } else {
    }
    break;
  }
  var G__11031 = args11029.length;
  switch(G__11031) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11029.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._lookup[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__6874__auto__.call(null, o, k);
    } else {
      var m__6874__auto____$1 = cljs.core._lookup["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__6874__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._lookup[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__6874__auto__.call(null, o, k, not_found);
    } else {
      var m__6874__auto____$1 = cljs.core._lookup["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__6874__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__6874__auto__.call(null, coll, k);
    } else {
      var m__6874__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__6874__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._assoc[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__6874__auto__.call(null, coll, k, v);
    } else {
      var m__6874__auto____$1 = cljs.core._assoc["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__6874__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._dissoc[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__6874__auto__.call(null, coll, k);
    } else {
      var m__6874__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__6874__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._key[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._key["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._val[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._val["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._disjoin[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__6874__auto__.call(null, coll, v);
    } else {
      var m__6874__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__6874__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = function() {
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._peek[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._peek["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._pop[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._pop["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._assoc_n[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__6874__auto__.call(null, coll, n, val);
    } else {
      var m__6874__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__6874__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._deref[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto__.call(null, o);
    } else {
      var m__6874__auto____$1 = cljs.core._deref["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__6874__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__6874__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__6874__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._meta[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto__.call(null, o);
    } else {
      var m__6874__auto____$1 = cljs.core._meta["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._with_meta[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__6874__auto__.call(null, o, meta);
    } else {
      var m__6874__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__6874__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var args11036 = [];
  var len__7285__auto___11039 = arguments.length;
  var i__7286__auto___11040 = 0;
  while (true) {
    if (i__7286__auto___11040 < len__7285__auto___11039) {
      args11036.push(arguments[i__7286__auto___11040]);
      var G__11041 = i__7286__auto___11040 + 1;
      i__7286__auto___11040 = G__11041;
      continue;
    } else {
    }
    break;
  }
  var G__11038 = args11036.length;
  switch(G__11038) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11036.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._reduce[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__6874__auto__.call(null, coll, f);
    } else {
      var m__6874__auto____$1 = cljs.core._reduce["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__6874__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._reduce[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__6874__auto__.call(null, coll, f, start);
    } else {
      var m__6874__auto____$1 = cljs.core._reduce["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__6874__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._kv_reduce[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__6874__auto__.call(null, coll, f, init);
    } else {
      var m__6874__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__6874__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._equiv[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__6874__auto__.call(null, o, other);
    } else {
      var m__6874__auto____$1 = cljs.core._equiv["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__6874__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = function() {
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._hash[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto__.call(null, o);
    } else {
      var m__6874__auto____$1 = cljs.core._hash["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._seq[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto__.call(null, o);
    } else {
      var m__6874__auto____$1 = cljs.core._seq["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._rseq[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._rseq["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._sorted_seq[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__6874__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__6874__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__6874__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__6874__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__6874__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__6874__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._entry_key[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__6874__auto__.call(null, coll, entry);
    } else {
      var m__6874__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__6874__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._comparator[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._comparator["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = function() {
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__6873__auto__ = writer == null ? null : writer;
    var m__6874__auto__ = cljs.core._write[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__6874__auto__.call(null, writer, s);
    } else {
      var m__6874__auto____$1 = cljs.core._write["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__6874__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__6873__auto__ = writer == null ? null : writer;
    var m__6874__auto__ = cljs.core._flush[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__6874__auto__.call(null, writer);
    } else {
      var m__6874__auto____$1 = cljs.core._flush["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__6874__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._pr_writer[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__6874__auto__.call(null, o, writer, opts);
    } else {
      var m__6874__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__6874__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(x) {
  if (!(x == null) && !(x.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return x.cljs$core$IPending$_realized_QMARK_$arity$1(x);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto__.call(null, x);
    } else {
      var m__6874__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", x);
      }
    }
  }
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._notify_watches[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__6874__auto__.call(null, this$, oldval, newval);
    } else {
      var m__6874__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__6874__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._add_watch[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__6874__auto__.call(null, this$, key, f);
    } else {
      var m__6874__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__6874__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._remove_watch[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__6874__auto__.call(null, this$, key);
    } else {
      var m__6874__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__6874__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._as_transient[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__6874__auto__.call(null, tcoll, val);
    } else {
      var m__6874__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__6874__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__6874__auto__.call(null, tcoll);
    } else {
      var m__6874__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__6874__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__6874__auto__.call(null, tcoll, key, val);
    } else {
      var m__6874__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__6874__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__6874__auto__.call(null, tcoll, key);
    } else {
      var m__6874__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__6874__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__6874__auto__.call(null, tcoll, n, val);
    } else {
      var m__6874__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__6874__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__6874__auto__.call(null, tcoll);
    } else {
      var m__6874__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__6874__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__6874__auto__.call(null, tcoll, v);
    } else {
      var m__6874__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__6874__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._compare[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__6874__auto__.call(null, x, y);
    } else {
      var m__6874__auto____$1 = cljs.core._compare["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__6874__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._drop_first[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._chunked_first[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._chunked_rest[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._chunked_next[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = function() {
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._name[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto__.call(null, x);
    } else {
      var m__6874__auto____$1 = cljs.core._name["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._namespace[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto__.call(null, x);
    } else {
      var m__6874__auto____$1 = cljs.core._namespace["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__6874__auto__.call(null, o, new_value);
    } else {
      var m__6874__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__6874__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var args11043 = [];
  var len__7285__auto___11046 = arguments.length;
  var i__7286__auto___11047 = 0;
  while (true) {
    if (i__7286__auto___11047 < len__7285__auto___11046) {
      args11043.push(arguments[i__7286__auto___11047]);
      var G__11048 = i__7286__auto___11047 + 1;
      i__7286__auto___11047 = G__11048;
      continue;
    } else {
    }
    break;
  }
  var G__11045 = args11043.length;
  switch(G__11045) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11043.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__6874__auto__.call(null, o, f);
    } else {
      var m__6874__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__6874__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__6874__auto__.call(null, o, f, a);
    } else {
      var m__6874__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__6874__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$4 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__6874__auto__.call(null, o, f, a, b);
    } else {
      var m__6874__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__6874__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$5 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__6874__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__6874__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__6874__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__6874__auto__.call(null, o, new_value);
    } else {
      var m__6874__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__6874__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._iterator[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._iterator["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__11050 = i + 2;
        var G__11051 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__11050;
        h1 = G__11051;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__11054 = i + 1;
          var G__11055 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__11054;
          hash = G__11055;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  if (k == null) {
    return 0;
  } else {
    var h = cljs.core.string_hash_cache[k];
    if (typeof h === "number") {
      return h;
    } else {
      return cljs.core.add_to_string_hash_cache(k);
    }
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      if (cljs.core.truth_(isFinite(o))) {
        return Math.floor(o) % 2147483647;
      } else {
        var G__11063 = o;
        switch(G__11063) {
          case Infinity:
            return 2146435072;
            break;
          case -Infinity:
            return -1048576;
            break;
          default:
            return 2146959360;
        }
      }
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(c, x) {
  return x instanceof c;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = cljs.core.not(a.ns);
      if (and__6198__auto__) {
        return b.ns;
      } else {
        return and__6198__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__11071 = a.ns;
            var G__11072 = b.ns;
            return goog.array.defaultCompare(G__11071, G__11072);
          }();
          if (0 === nsc) {
            var G__11073 = a.name;
            var G__11074 = b.name;
            return goog.array.defaultCompare(G__11073, G__11074);
          } else {
            return nsc;
          }
        }
      } else {
        var G__11075 = a.name;
        var G__11076 = b.name;
        return goog.array.defaultCompare(G__11075, G__11076);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__11078 = null;
  var G__11078__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
  };
  var G__11078__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
  };
  G__11078 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11078__2.call(this, self__, coll);
      case 3:
        return G__11078__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11078.cljs$core$IFn$_invoke$arity$2 = G__11078__2;
  G__11078.cljs$core$IFn$_invoke$arity$3 = G__11078__3;
  return G__11078;
}();
cljs.core.Symbol.prototype.apply = function(self__, args11077) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11077)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__6645__auto__ = self__._hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var args11079 = [];
  var len__7285__auto___11082 = arguments.length;
  var i__7286__auto___11083 = 0;
  while (true) {
    if (i__7286__auto___11083 < len__7285__auto___11082) {
      args11079.push(arguments[i__7286__auto___11083]);
      var G__11084 = i__7286__auto___11083 + 1;
      i__7286__auto___11083 = G__11084;
      continue;
    } else {
    }
    break;
  }
  var G__11081 = args11079.length;
  switch(G__11081) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11079.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx < 1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 6717441;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    var G__11087 = this$__$1.sym;
    var G__11088 = other.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__11087, G__11088) : cljs.core._EQ_.call(null, G__11087, G__11088);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash_symbol(self__.sym);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__11133 = null;
  var G__11133__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
  };
  var G__11133__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
  };
  var G__11133__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
  };
  var G__11133__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
  };
  var G__11133__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
  };
  var G__11133__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
  };
  var G__11133__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
  };
  var G__11133__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
  };
  var G__11133__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
  };
  var G__11133__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__11133__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__11133__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__11133__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__11133__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__11133__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__11133__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__11133__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__11133__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__11133__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__11133__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__11133__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__11133__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11089 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    var G__11090 = a;
    var G__11091 = b;
    var G__11092 = c;
    var G__11093 = d;
    var G__11094 = e;
    var G__11095 = f;
    var G__11096 = g;
    var G__11097 = h;
    var G__11098 = i;
    var G__11099 = j;
    var G__11100 = k;
    var G__11101 = l;
    var G__11102 = m;
    var G__11103 = n;
    var G__11104 = o;
    var G__11105 = p;
    var G__11106 = q;
    var G__11107 = r;
    var G__11108 = s;
    var G__11109 = t;
    var G__11110 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11089, G__11090, G__11091, G__11092, G__11093, G__11094, G__11095, G__11096, G__11097, G__11098, G__11099, G__11100, G__11101, G__11102, G__11103, G__11104, G__11105, G__11106, G__11107, G__11108, G__11109, G__11110) : cljs.core.apply.call(null, G__11089, G__11090, G__11091, G__11092, G__11093, G__11094, G__11095, G__11096, G__11097, G__11098, G__11099, G__11100, G__11101, G__11102, G__11103, 
    G__11104, G__11105, G__11106, G__11107, G__11108, G__11109, G__11110);
  };
  G__11133 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__11133__1.call(this, self__);
      case 2:
        return G__11133__2.call(this, self__, a);
      case 3:
        return G__11133__3.call(this, self__, a, b);
      case 4:
        return G__11133__4.call(this, self__, a, b, c);
      case 5:
        return G__11133__5.call(this, self__, a, b, c, d);
      case 6:
        return G__11133__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__11133__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__11133__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__11133__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__11133__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__11133__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__11133__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__11133__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__11133__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__11133__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__11133__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__11133__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__11133__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__11133__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__11133__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__11133__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__11133__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11133.cljs$core$IFn$_invoke$arity$1 = G__11133__1;
  G__11133.cljs$core$IFn$_invoke$arity$2 = G__11133__2;
  G__11133.cljs$core$IFn$_invoke$arity$3 = G__11133__3;
  G__11133.cljs$core$IFn$_invoke$arity$4 = G__11133__4;
  G__11133.cljs$core$IFn$_invoke$arity$5 = G__11133__5;
  G__11133.cljs$core$IFn$_invoke$arity$6 = G__11133__6;
  G__11133.cljs$core$IFn$_invoke$arity$7 = G__11133__7;
  G__11133.cljs$core$IFn$_invoke$arity$8 = G__11133__8;
  G__11133.cljs$core$IFn$_invoke$arity$9 = G__11133__9;
  G__11133.cljs$core$IFn$_invoke$arity$10 = G__11133__10;
  G__11133.cljs$core$IFn$_invoke$arity$11 = G__11133__11;
  G__11133.cljs$core$IFn$_invoke$arity$12 = G__11133__12;
  G__11133.cljs$core$IFn$_invoke$arity$13 = G__11133__13;
  G__11133.cljs$core$IFn$_invoke$arity$14 = G__11133__14;
  G__11133.cljs$core$IFn$_invoke$arity$15 = G__11133__15;
  G__11133.cljs$core$IFn$_invoke$arity$16 = G__11133__16;
  G__11133.cljs$core$IFn$_invoke$arity$17 = G__11133__17;
  G__11133.cljs$core$IFn$_invoke$arity$18 = G__11133__18;
  G__11133.cljs$core$IFn$_invoke$arity$19 = G__11133__19;
  G__11133.cljs$core$IFn$_invoke$arity$20 = G__11133__20;
  G__11133.cljs$core$IFn$_invoke$arity$21 = G__11133__21;
  G__11133.cljs$core$IFn$_invoke$arity$22 = G__11133__22;
  return G__11133;
}();
cljs.core.Var.prototype.apply = function(self__, args11086) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11086)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__11111 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  var G__11112 = a;
  var G__11113 = b;
  var G__11114 = c;
  var G__11115 = d;
  var G__11116 = e;
  var G__11117 = f;
  var G__11118 = g;
  var G__11119 = h;
  var G__11120 = i;
  var G__11121 = j;
  var G__11122 = k;
  var G__11123 = l;
  var G__11124 = m;
  var G__11125 = n;
  var G__11126 = o;
  var G__11127 = p;
  var G__11128 = q;
  var G__11129 = r;
  var G__11130 = s;
  var G__11131 = t;
  var G__11132 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11111, G__11112, G__11113, G__11114, G__11115, G__11116, G__11117, G__11118, G__11119, G__11120, G__11121, G__11122, G__11123, G__11124, G__11125, G__11126, G__11127, G__11128, G__11129, G__11130, G__11131, G__11132) : cljs.core.apply.call(null, G__11111, G__11112, G__11113, G__11114, G__11115, G__11116, G__11117, G__11118, G__11119, G__11120, G__11121, G__11122, G__11123, G__11124, G__11125, 
  G__11126, G__11127, G__11128, G__11129, G__11130, G__11131, G__11132);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0, null);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0, null);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var args11146 = [];
  var len__7285__auto___11152 = arguments.length;
  var i__7286__auto___11153 = 0;
  while (true) {
    if (i__7286__auto___11153 < len__7285__auto___11152) {
      args11146.push(arguments[i__7286__auto___11153]);
      var G__11154 = i__7286__auto___11153 + 1;
      i__7286__auto___11153 = G__11154;
      continue;
    } else {
    }
    break;
  }
  var G__11151 = args11146.length;
  switch(G__11151) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11146.slice(2), 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__11156 = y;
        var G__11157 = cljs.core.first(more);
        var G__11158 = cljs.core.next(more);
        x = G__11156;
        y = G__11157;
        more = G__11158;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq11147) {
  var G__11148 = cljs.core.first(seq11147);
  var seq11147__$1 = cljs.core.next(seq11147);
  var G__11149 = cljs.core.first(seq11147__$1);
  var seq11147__$2 = cljs.core.next(seq11147__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__11148, G__11149, seq11147__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__11159 = n + 1;
      var G__11160 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__11161 = cljs.core.next(coll__$1);
      n = G__11159;
      hash_code = G__11160;
      coll__$1 = G__11161;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__11162 = n + 1;
      var G__11163 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__11164 = cljs.core.next(coll__$1);
      n = G__11162;
      hash_code = G__11163;
      coll__$1 = G__11164;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__11165 = this$__$1.valueOf();
    var G__11166 = other.valueOf();
    return goog.array.defaultCompare(G__11165, G__11166);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var args11167 = [];
  var len__7285__auto___11176 = arguments.length;
  var i__7286__auto___11177 = 0;
  while (true) {
    if (i__7286__auto___11177 < len__7285__auto___11176) {
      args11167.push(arguments[i__7286__auto___11177]);
      var G__11178 = i__7286__auto___11177 + 1;
      i__7286__auto___11177 = G__11178;
      continue;
    } else {
    }
    break;
  }
  var G__11169 = args11167.length;
  switch(G__11169) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11167.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11170 = val;
          var G__11171 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11170, G__11171) : f.call(null, G__11170, G__11171);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11180 = nval;
          var G__11181 = n + 1;
          val = G__11180;
          n = G__11181;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__11172 = val__$1;
        var G__11173 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11172, G__11173) : f.call(null, G__11172, G__11173);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__11182 = nval;
        var G__11183 = n + 1;
        val__$1 = G__11182;
        n = G__11183;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__11174 = val__$1;
        var G__11175 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11174, G__11175) : f.call(null, G__11174, G__11175);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__11184 = nval;
        var G__11185 = n + 1;
        val__$1 = G__11184;
        n = G__11185;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var args11186 = [];
  var len__7285__auto___11195 = arguments.length;
  var i__7286__auto___11196 = 0;
  while (true) {
    if (i__7286__auto___11196 < len__7285__auto___11195) {
      args11186.push(arguments[i__7286__auto___11196]);
      var G__11197 = i__7286__auto___11196 + 1;
      i__7286__auto___11196 = G__11197;
      continue;
    } else {
    }
    break;
  }
  var G__11188 = args11186.length;
  switch(G__11188) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11186.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11189 = val;
          var G__11190 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11189, G__11190) : f.call(null, G__11189, G__11190);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11199 = nval;
          var G__11200 = n + 1;
          val = G__11199;
          n = G__11200;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__11191 = val__$1;
        var G__11192 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11191, G__11192) : f.call(null, G__11191, G__11192);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__11201 = nval;
        var G__11202 = n + 1;
        val__$1 = G__11201;
        n = G__11202;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__11193 = val__$1;
        var G__11194 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11193, G__11194) : f.call(null, G__11193, G__11194);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__11203 = nval;
        var G__11204 = n + 1;
        val__$1 = G__11203;
        n = G__11204;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core._indexOf = function cljs$core$_indexOf(var_args) {
  var args11209 = [];
  var len__7285__auto___11212 = arguments.length;
  var i__7286__auto___11213 = 0;
  while (true) {
    if (i__7286__auto___11213 < len__7285__auto___11212) {
      args11209.push(arguments[i__7286__auto___11213]);
      var G__11214 = i__7286__auto___11213 + 1;
      i__7286__auto___11213 = G__11214;
      continue;
    } else {
    }
    break;
  }
  var G__11211 = args11209.length;
  switch(G__11211) {
    case 2:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11209.length)].join(""));;
  }
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll);
  if (start >= len) {
    return -1;
  } else {
    var idx = start > 0 ? start : start < 0 ? function() {
      var x__6541__auto__ = 0;
      var y__6542__auto__ = start + len;
      return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
    }() : start;
    while (true) {
      if (idx < len) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx) : cljs.core.nth.call(null, coll, idx), x)) {
          return idx;
        } else {
          var G__11216 = idx + 1;
          idx = G__11216;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._indexOf.cljs$lang$maxFixedArity = 3;
cljs.core._lastIndexOf = function cljs$core$_lastIndexOf(var_args) {
  var args11217 = [];
  var len__7285__auto___11220 = arguments.length;
  var i__7286__auto___11221 = 0;
  while (true) {
    if (i__7286__auto___11221 < len__7285__auto___11220) {
      args11217.push(arguments[i__7286__auto___11221]);
      var G__11222 = i__7286__auto___11221 + 1;
      i__7286__auto___11221 = G__11222;
      continue;
    } else {
    }
    break;
  }
  var G__11219 = args11217.length;
  switch(G__11219) {
    case 2:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11217.length)].join(""));;
  }
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll);
  if (len === 0) {
    return -1;
  } else {
    var idx = start > 0 ? function() {
      var x__6548__auto__ = len - 1;
      var y__6549__auto__ = start;
      return x__6548__auto__ < y__6549__auto__ ? x__6548__auto__ : y__6549__auto__;
    }() : start < 0 ? len + start : start;
    while (true) {
      if (idx >= 0) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx) : cljs.core.nth.call(null, coll, idx), x)) {
          return idx;
        } else {
          var G__11224 = idx - 1;
          idx = G__11224;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._lastIndexOf.cljs$lang$maxFixedArity = 3;
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i, meta) {
  this.arr = arr;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 166592766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.indexOf = function() {
  var G__11225 = null;
  var G__11225__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__11225__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11225 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11225__1.call(this, x);
      case 2:
        return G__11225__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11225.cljs$core$IFn$_invoke$arity$1 = G__11225__1;
  G__11225.cljs$core$IFn$_invoke$arity$2 = G__11225__2;
  return G__11225;
}();
cljs.core.IndexedSeq.prototype.lastIndexOf = function() {
  var G__11226 = null;
  var G__11226__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
  };
  var G__11226__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11226 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11226__1.call(this, x);
      case 2:
        return G__11226__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11226.cljs$core$IFn$_invoke$arity$1 = G__11226__1;
  G__11226.cljs$core$IFn$_invoke$arity$2 = G__11226__2;
  return G__11226;
}();
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, self__.meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__6541__auto__ = 0;
  var y__6542__auto__ = self__.arr.length - self__.i;
  return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, new_meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i, meta) {
  return new cljs.core.IndexedSeq(arr, i, meta);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var args11227 = [];
  var len__7285__auto___11230 = arguments.length;
  var i__7286__auto___11231 = 0;
  while (true) {
    if (i__7286__auto___11231 < len__7285__auto___11230) {
      args11227.push(arguments[i__7286__auto___11231]);
      var G__11232 = i__7286__auto___11231 + 1;
      i__7286__auto___11231 = G__11232;
      continue;
    } else {
    }
    break;
  }
  var G__11229 = args11227.length;
  switch(G__11229) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11227.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i, null);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var args11234 = [];
  var len__7285__auto___11237 = arguments.length;
  var i__7286__auto___11238 = 0;
  while (true) {
    if (i__7286__auto___11238 < len__7285__auto___11237) {
      args11234.push(arguments[i__7286__auto___11238]);
      var G__11239 = i__7286__auto___11238 + 1;
      i__7286__auto___11238 = G__11239;
      continue;
    } else {
    }
    break;
  }
  var G__11236 = args11234.length;
  switch(G__11236) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11234.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.indexOf = function() {
  var G__11243 = null;
  var G__11243__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__11243__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11243 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11243__1.call(this, x);
      case 2:
        return G__11243__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11243.cljs$core$IFn$_invoke$arity$1 = G__11243__1;
  G__11243.cljs$core$IFn$_invoke$arity$2 = G__11243__2;
  return G__11243;
}();
cljs.core.RSeq.prototype.lastIndexOf = function() {
  var G__11244 = null;
  var G__11244__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
  };
  var G__11244__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11244 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11244__1.call(this, x);
      case 2:
        return G__11244__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11244.cljs$core$IFn$_invoke$arity$1 = G__11244__1;
  G__11244.cljs$core$IFn$_invoke$arity$2 = G__11244__2;
  return G__11244;
}();
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__11241 = cljs.core.List.EMPTY;
  var G__11242 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__11241, G__11242) : cljs.core.with_meta.call(null, G__11241, G__11242);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__11245 = sn;
      s = G__11245;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj(var_args) {
  var args11246 = [];
  var len__7285__auto___11252 = arguments.length;
  var i__7286__auto___11253 = 0;
  while (true) {
    if (i__7286__auto___11253 < len__7285__auto___11252) {
      args11246.push(arguments[i__7286__auto___11253]);
      var G__11254 = i__7286__auto___11253 + 1;
      i__7286__auto___11253 = G__11254;
      continue;
    } else {
    }
    break;
  }
  var G__11251 = args11246.length;
  switch(G__11251) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11246.slice(2), 0, null);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    var x__7044__auto__ = x;
    return cljs.core._conj(cljs.core.List.EMPTY, x__7044__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__11256 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__11257 = cljs.core.first(xs);
      var G__11258 = cljs.core.next(xs);
      coll = G__11256;
      x = G__11257;
      xs = G__11258;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq11247) {
  var G__11248 = cljs.core.first(seq11247);
  var seq11247__$1 = cljs.core.next(seq11247);
  var G__11249 = cljs.core.first(seq11247__$1);
  var seq11247__$2 = cljs.core.next(seq11247__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__11248, G__11249, seq11247__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__11259 = cljs.core.next(s);
      var G__11260 = acc + 1;
      s = G__11259;
      acc = G__11260;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var args11265 = [];
  var len__7285__auto___11268 = arguments.length;
  var i__7286__auto___11269 = 0;
  while (true) {
    if (i__7286__auto___11269 < len__7285__auto___11268) {
      args11265.push(arguments[i__7286__auto___11269]);
      var G__11270 = i__7286__auto___11269 + 1;
      i__7286__auto___11269 = G__11270;
      continue;
    } else {
    }
    break;
  }
  var G__11267 = args11265.length;
  switch(G__11267) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11265.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__11272 = cljs.core.next(coll);
            var G__11273 = n - 1;
            coll = G__11272;
            n = G__11273;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__11274 = cljs.core.next(coll);
            var G__11275 = n - 1;
            var G__11276 = not_found;
            coll = G__11274;
            n = G__11275;
            not_found = G__11276;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var args11277 = [];
  var len__7285__auto___11284 = arguments.length;
  var i__7286__auto___11285 = 0;
  while (true) {
    if (i__7286__auto___11285 < len__7285__auto___11284) {
      args11277.push(arguments[i__7286__auto___11285]);
      var G__11286 = i__7286__auto___11285 + 1;
      i__7286__auto___11285 = G__11286;
      continue;
    } else {
    }
    break;
  }
  var G__11279 = args11277.length;
  switch(G__11279) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11277.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return null;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__11288 = n__$1 - 1;
      var G__11289 = cljs.core.rest(xs);
      n__$1 = G__11288;
      xs = G__11289;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var args11290 = [];
  var len__7285__auto___11295 = arguments.length;
  var i__7286__auto___11296 = 0;
  while (true) {
    if (i__7286__auto___11296 < len__7285__auto___11295) {
      args11290.push(arguments[i__7286__auto___11296]);
      var G__11297 = i__7286__auto___11296 + 1;
      i__7286__auto___11296 = G__11297;
      continue;
    } else {
    }
    break;
  }
  var G__11292 = args11290.length;
  switch(G__11292) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11290.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var args11299 = [];
  var len__7285__auto___11306 = arguments.length;
  var i__7286__auto___11307 = 0;
  while (true) {
    if (i__7286__auto___11307 < len__7285__auto___11306) {
      args11299.push(arguments[i__7286__auto___11307]);
      var G__11308 = i__7286__auto___11307 + 1;
      i__7286__auto___11307 = G__11308;
      continue;
    } else {
    }
    break;
  }
  var G__11305 = args11299.length;
  switch(G__11305) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11299.slice(3), 0, null);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7304__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__11310 = ret;
      var G__11311 = cljs.core.first(kvs);
      var G__11312 = cljs.core.second(kvs);
      var G__11313 = cljs.core.nnext(kvs);
      coll = G__11310;
      k = G__11311;
      v = G__11312;
      kvs = G__11313;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq11300) {
  var G__11301 = cljs.core.first(seq11300);
  var seq11300__$1 = cljs.core.next(seq11300);
  var G__11302 = cljs.core.first(seq11300__$1);
  var seq11300__$2 = cljs.core.next(seq11300__$1);
  var G__11303 = cljs.core.first(seq11300__$2);
  var seq11300__$3 = cljs.core.next(seq11300__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__11301, G__11302, G__11303, seq11300__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var args11314 = [];
  var len__7285__auto___11320 = arguments.length;
  var i__7286__auto___11321 = 0;
  while (true) {
    if (i__7286__auto___11321 < len__7285__auto___11320) {
      args11314.push(arguments[i__7286__auto___11321]);
      var G__11322 = i__7286__auto___11321 + 1;
      i__7286__auto___11321 = G__11322;
      continue;
    } else {
    }
    break;
  }
  var G__11319 = args11314.length;
  switch(G__11319) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11314.slice(2), 0, null);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__11324 = ret;
        var G__11325 = cljs.core.first(ks);
        var G__11326 = cljs.core.next(ks);
        coll = G__11324;
        k = G__11325;
        ks = G__11326;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq11315) {
  var G__11316 = cljs.core.first(seq11315);
  var seq11315__$1 = cljs.core.next(seq11315);
  var G__11317 = cljs.core.first(seq11315__$1);
  var seq11315__$2 = cljs.core.next(seq11315__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__11316, G__11317, seq11315__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__6210__auto__ = goog.isFunction(f);
  if (or__6210__auto__) {
    return or__6210__auto__;
  } else {
    if (!(f == null)) {
      if (false || f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__11332 = null;
  var G__11332__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__11332__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__11332__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__11332__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__11332__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__11332__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__11332__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__11332__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__11332__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__11332__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__11332__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__11332__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__11332__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__11332__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__11332__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__11332__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__11332__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__11332__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__11332__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__11332__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__11332__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__11332__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__11332 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__11332__1.call(this, self__);
      case 2:
        return G__11332__2.call(this, self__, a);
      case 3:
        return G__11332__3.call(this, self__, a, b);
      case 4:
        return G__11332__4.call(this, self__, a, b, c);
      case 5:
        return G__11332__5.call(this, self__, a, b, c, d);
      case 6:
        return G__11332__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__11332__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__11332__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__11332__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__11332__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__11332__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__11332__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__11332__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__11332__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__11332__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__11332__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__11332__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__11332__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__11332__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__11332__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__11332__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__11332__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11332.cljs$core$IFn$_invoke$arity$1 = G__11332__1;
  G__11332.cljs$core$IFn$_invoke$arity$2 = G__11332__2;
  G__11332.cljs$core$IFn$_invoke$arity$3 = G__11332__3;
  G__11332.cljs$core$IFn$_invoke$arity$4 = G__11332__4;
  G__11332.cljs$core$IFn$_invoke$arity$5 = G__11332__5;
  G__11332.cljs$core$IFn$_invoke$arity$6 = G__11332__6;
  G__11332.cljs$core$IFn$_invoke$arity$7 = G__11332__7;
  G__11332.cljs$core$IFn$_invoke$arity$8 = G__11332__8;
  G__11332.cljs$core$IFn$_invoke$arity$9 = G__11332__9;
  G__11332.cljs$core$IFn$_invoke$arity$10 = G__11332__10;
  G__11332.cljs$core$IFn$_invoke$arity$11 = G__11332__11;
  G__11332.cljs$core$IFn$_invoke$arity$12 = G__11332__12;
  G__11332.cljs$core$IFn$_invoke$arity$13 = G__11332__13;
  G__11332.cljs$core$IFn$_invoke$arity$14 = G__11332__14;
  G__11332.cljs$core$IFn$_invoke$arity$15 = G__11332__15;
  G__11332.cljs$core$IFn$_invoke$arity$16 = G__11332__16;
  G__11332.cljs$core$IFn$_invoke$arity$17 = G__11332__17;
  G__11332.cljs$core$IFn$_invoke$arity$18 = G__11332__18;
  G__11332.cljs$core$IFn$_invoke$arity$19 = G__11332__19;
  G__11332.cljs$core$IFn$_invoke$arity$20 = G__11332__20;
  G__11332.cljs$core$IFn$_invoke$arity$21 = G__11332__21;
  G__11332.cljs$core$IFn$_invoke$arity$22 = G__11332__22;
  return G__11332;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args11331) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11331)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__6198__auto__ = !(o == null);
    if (and__6198__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__6198__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var args11337 = [];
  var len__7285__auto___11343 = arguments.length;
  var i__7286__auto___11344 = 0;
  while (true) {
    if (i__7286__auto___11344 < len__7285__auto___11343) {
      args11337.push(arguments[i__7286__auto___11344]);
      var G__11345 = i__7286__auto___11344 + 1;
      i__7286__auto___11344 = G__11345;
      continue;
    } else {
    }
    break;
  }
  var G__11342 = args11337.length;
  switch(G__11342) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11337.slice(2), 0, null);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__11347 = ret;
        var G__11348 = cljs.core.first(ks);
        var G__11349 = cljs.core.next(ks);
        coll = G__11347;
        k = G__11348;
        ks = G__11349;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq11338) {
  var G__11339 = cljs.core.first(seq11338);
  var seq11338__$1 = cljs.core.next(seq11338);
  var G__11340 = cljs.core.first(seq11338__$1);
  var seq11338__$2 = cljs.core.next(seq11338__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__11339, G__11340, seq11338__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var args11370 = [];
  var len__7285__auto___11376 = arguments.length;
  var i__7286__auto___11377 = 0;
  while (true) {
    if (i__7286__auto___11377 < len__7285__auto___11376) {
      args11370.push(arguments[i__7286__auto___11377]);
      var G__11378 = i__7286__auto___11377 + 1;
      i__7286__auto___11377 = G__11378;
      continue;
    } else {
    }
    break;
  }
  var G__11373 = args11370.length;
  switch(G__11373) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11370.slice(0), 0, null);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__7304__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq11371) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11371));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__11382_11384 = obj;
  var G__11383_11385 = function(G__11382_11384, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__11382_11384, keys);
  goog.object.forEach(G__11382_11384, G__11383_11385);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__11386 = i__$1 + 1;
      var G__11387 = j__$1 + 1;
      var G__11388 = len__$1 - 1;
      i__$1 = G__11386;
      j__$1 = G__11387;
      len__$1 = G__11388;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__11389 = i__$1 - 1;
      var G__11390 = j__$1 - 1;
      var G__11391 = len__$1 - 1;
      i__$1 = G__11389;
      j__$1 = G__11390;
      len__$1 = G__11391;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  if (!(s == null)) {
    if (s.cljs$lang$protocol_mask$partition0$ & 8388608 || s.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!s.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__6210__auto__ = cljs.core.fn_QMARK_(f);
  if (or__6210__auto__) {
    return or__6210__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var args11402 = [];
  var len__7285__auto___11408 = arguments.length;
  var i__7286__auto___11409 = 0;
  while (true) {
    if (i__7286__auto___11409 < len__7285__auto___11408) {
      args11402.push(arguments[i__7286__auto___11409]);
      var G__11410 = i__7286__auto___11409 + 1;
      i__7286__auto___11409 = G__11410;
      continue;
    } else {
    }
    break;
  }
  var G__11407 = args11402.length;
  switch(G__11407) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11402.slice(2), 0, null);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__11412 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__11413 = etc;
          s = G__11412;
          xs = G__11413;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq11403) {
  var G__11404 = cljs.core.first(seq11403);
  var seq11403__$1 = cljs.core.next(seq11403);
  var G__11405 = cljs.core.first(seq11403__$1);
  var seq11403__$2 = cljs.core.next(seq11403__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__11404, G__11405, seq11403__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var args11416 = [];
  var len__7285__auto___11419 = arguments.length;
  var i__7286__auto___11420 = 0;
  while (true) {
    if (i__7286__auto___11420 < len__7285__auto___11419) {
      args11416.push(arguments[i__7286__auto___11420]);
      var G__11421 = i__7286__auto___11420 + 1;
      i__7286__auto___11420 = G__11421;
      continue;
    } else {
    }
    break;
  }
  var G__11418 = args11416.length;
  switch(G__11418) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11416.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__11423 = xs;
      var G__11424 = ys;
      var G__11425 = len;
      var G__11426 = n + 1;
      xs = G__11423;
      ys = G__11424;
      len = G__11425;
      n = G__11426;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort(var_args) {
  var args11427 = [];
  var len__7285__auto___11432 = arguments.length;
  var i__7286__auto___11433 = 0;
  while (true) {
    if (i__7286__auto___11433 < len__7285__auto___11432) {
      args11427.push(arguments[i__7286__auto___11433]);
      var G__11434 = i__7286__auto___11433 + 1;
      i__7286__auto___11433 = G__11434;
      continue;
    } else {
    }
    break;
  }
  var G__11429 = args11427.length;
  switch(G__11429) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11427.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
    var G__11430_11436 = a;
    var G__11431_11437 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__11430_11436, G__11431_11437);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var args11438 = [];
  var len__7285__auto___11441 = arguments.length;
  var i__7286__auto___11442 = 0;
  while (true) {
    if (i__7286__auto___11442 < len__7285__auto___11441) {
      args11438.push(arguments[i__7286__auto___11442]);
      var G__11443 = i__7286__auto___11442 + 1;
      i__7286__auto___11442 = G__11443;
      continue;
    } else {
    }
    break;
  }
  var G__11440 = args11438.length;
  switch(G__11440) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11438.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var args11445 = [];
  var len__7285__auto___11453 = arguments.length;
  var i__7286__auto___11454 = 0;
  while (true) {
    if (i__7286__auto___11454 < len__7285__auto___11453) {
      args11445.push(arguments[i__7286__auto___11454]);
      var G__11455 = i__7286__auto___11454 + 1;
      i__7286__auto___11454 = G__11455;
      continue;
    } else {
    }
    break;
  }
  var G__11447 = args11445.length;
  switch(G__11447) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11445.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4423__auto__ = cljs.core.seq(coll);
  if (temp__4423__auto__) {
    var s = temp__4423__auto__;
    var G__11448 = f;
    var G__11449 = cljs.core.first(s);
    var G__11450 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11448, G__11449, G__11450) : cljs.core.reduce.call(null, G__11448, G__11449, G__11450);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__11451 = val__$1;
        var G__11452 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11451, G__11452) : f.call(null, G__11451, G__11452);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__11457 = nval;
        var G__11458 = cljs.core.next(coll__$1);
        val__$1 = G__11457;
        coll__$1 = G__11458;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var args11459 = [];
  var len__7285__auto___11464 = arguments.length;
  var i__7286__auto___11465 = 0;
  while (true) {
    if (i__7286__auto___11465 < len__7285__auto___11464) {
      args11459.push(arguments[i__7286__auto___11465]);
      var G__11466 = i__7286__auto___11465 + 1;
      i__7286__auto___11465 = G__11466;
      continue;
    } else {
    }
    break;
  }
  var G__11461 = args11459.length;
  switch(G__11461) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11459.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var args11468 = [];
  var len__7285__auto___11471 = arguments.length;
  var i__7286__auto___11472 = 0;
  while (true) {
    if (i__7286__auto___11472 < len__7285__auto___11471) {
      args11468.push(arguments[i__7286__auto___11472]);
      var G__11473 = i__7286__auto___11472 + 1;
      i__7286__auto___11472 = G__11473;
      continue;
    } else {
    }
    break;
  }
  var G__11470 = args11468.length;
  switch(G__11470) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11468.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__11475 = null;
    var G__11475__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__11475__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__11475__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__11475 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__11475__0.call(this);
        case 1:
          return G__11475__1.call(this, x);
        case 2:
          return G__11475__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11475.cljs$core$IFn$_invoke$arity$0 = G__11475__0;
    G__11475.cljs$core$IFn$_invoke$arity$1 = G__11475__1;
    G__11475.cljs$core$IFn$_invoke$arity$2 = G__11475__2;
    return G__11475;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var args11476 = [];
  var len__7285__auto___11479 = arguments.length;
  var i__7286__auto___11480 = 0;
  while (true) {
    if (i__7286__auto___11480 < len__7285__auto___11479) {
      args11476.push(arguments[i__7286__auto___11480]);
      var G__11481 = i__7286__auto___11480 + 1;
      i__7286__auto___11480 = G__11481;
      continue;
    } else {
    }
    break;
  }
  var G__11478 = args11476.length;
  switch(G__11478) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11476.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var args11483 = [];
  var len__7285__auto___11489 = arguments.length;
  var i__7286__auto___11490 = 0;
  while (true) {
    if (i__7286__auto___11490 < len__7285__auto___11489) {
      args11483.push(arguments[i__7286__auto___11490]);
      var G__11491 = i__7286__auto___11490 + 1;
      i__7286__auto___11490 = G__11491;
      continue;
    } else {
    }
    break;
  }
  var G__11488 = args11483.length;
  switch(G__11488) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11483.slice(2), 0, null);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq11484) {
  var G__11485 = cljs.core.first(seq11484);
  var seq11484__$1 = cljs.core.next(seq11484);
  var G__11486 = cljs.core.first(seq11484__$1);
  var seq11484__$2 = cljs.core.next(seq11484__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__11485, G__11486, seq11484__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var args11493 = [];
  var len__7285__auto___11499 = arguments.length;
  var i__7286__auto___11500 = 0;
  while (true) {
    if (i__7286__auto___11500 < len__7285__auto___11499) {
      args11493.push(arguments[i__7286__auto___11500]);
      var G__11501 = i__7286__auto___11500 + 1;
      i__7286__auto___11500 = G__11501;
      continue;
    } else {
    }
    break;
  }
  var G__11498 = args11493.length;
  switch(G__11498) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11493.slice(2), 0, null);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq11494) {
  var G__11495 = cljs.core.first(seq11494);
  var seq11494__$1 = cljs.core.next(seq11494);
  var G__11496 = cljs.core.first(seq11494__$1);
  var seq11494__$2 = cljs.core.next(seq11494__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__11495, G__11496, seq11494__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var args11503 = [];
  var len__7285__auto___11509 = arguments.length;
  var i__7286__auto___11510 = 0;
  while (true) {
    if (i__7286__auto___11510 < len__7285__auto___11509) {
      args11503.push(arguments[i__7286__auto___11510]);
      var G__11511 = i__7286__auto___11510 + 1;
      i__7286__auto___11510 = G__11511;
      continue;
    } else {
    }
    break;
  }
  var G__11508 = args11503.length;
  switch(G__11508) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11503.slice(2), 0, null);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq11504) {
  var G__11505 = cljs.core.first(seq11504);
  var seq11504__$1 = cljs.core.next(seq11504);
  var G__11506 = cljs.core.first(seq11504__$1);
  var seq11504__$2 = cljs.core.next(seq11504__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__11505, G__11506, seq11504__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var args11513 = [];
  var len__7285__auto___11519 = arguments.length;
  var i__7286__auto___11520 = 0;
  while (true) {
    if (i__7286__auto___11520 < len__7285__auto___11519) {
      args11513.push(arguments[i__7286__auto___11520]);
      var G__11521 = i__7286__auto___11520 + 1;
      i__7286__auto___11520 = G__11521;
      continue;
    } else {
    }
    break;
  }
  var G__11518 = args11513.length;
  switch(G__11518) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11513.slice(2), 0, null);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq11514) {
  var G__11515 = cljs.core.first(seq11514);
  var seq11514__$1 = cljs.core.next(seq11514);
  var G__11516 = cljs.core.first(seq11514__$1);
  var seq11514__$2 = cljs.core.next(seq11514__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__11515, G__11516, seq11514__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var args11523 = [];
  var len__7285__auto___11529 = arguments.length;
  var i__7286__auto___11530 = 0;
  while (true) {
    if (i__7286__auto___11530 < len__7285__auto___11529) {
      args11523.push(arguments[i__7286__auto___11530]);
      var G__11531 = i__7286__auto___11530 + 1;
      i__7286__auto___11530 = G__11531;
      continue;
    } else {
    }
    break;
  }
  var G__11528 = args11523.length;
  switch(G__11528) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11523.slice(2), 0, null);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__11533 = y;
        var G__11534 = cljs.core.first(more);
        var G__11535 = cljs.core.next(more);
        x = G__11533;
        y = G__11534;
        more = G__11535;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq11524) {
  var G__11525 = cljs.core.first(seq11524);
  var seq11524__$1 = cljs.core.next(seq11524);
  var G__11526 = cljs.core.first(seq11524__$1);
  var seq11524__$2 = cljs.core.next(seq11524__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__11525, G__11526, seq11524__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var args11536 = [];
  var len__7285__auto___11542 = arguments.length;
  var i__7286__auto___11543 = 0;
  while (true) {
    if (i__7286__auto___11543 < len__7285__auto___11542) {
      args11536.push(arguments[i__7286__auto___11543]);
      var G__11544 = i__7286__auto___11543 + 1;
      i__7286__auto___11543 = G__11544;
      continue;
    } else {
    }
    break;
  }
  var G__11541 = args11536.length;
  switch(G__11541) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11536.slice(2), 0, null);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__11546 = y;
        var G__11547 = cljs.core.first(more);
        var G__11548 = cljs.core.next(more);
        x = G__11546;
        y = G__11547;
        more = G__11548;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq11537) {
  var G__11538 = cljs.core.first(seq11537);
  var seq11537__$1 = cljs.core.next(seq11537);
  var G__11539 = cljs.core.first(seq11537__$1);
  var seq11537__$2 = cljs.core.next(seq11537__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__11538, G__11539, seq11537__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var args11549 = [];
  var len__7285__auto___11555 = arguments.length;
  var i__7286__auto___11556 = 0;
  while (true) {
    if (i__7286__auto___11556 < len__7285__auto___11555) {
      args11549.push(arguments[i__7286__auto___11556]);
      var G__11557 = i__7286__auto___11556 + 1;
      i__7286__auto___11556 = G__11557;
      continue;
    } else {
    }
    break;
  }
  var G__11554 = args11549.length;
  switch(G__11554) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11549.slice(2), 0, null);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__11559 = y;
        var G__11560 = cljs.core.first(more);
        var G__11561 = cljs.core.next(more);
        x = G__11559;
        y = G__11560;
        more = G__11561;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq11550) {
  var G__11551 = cljs.core.first(seq11550);
  var seq11550__$1 = cljs.core.next(seq11550);
  var G__11552 = cljs.core.first(seq11550__$1);
  var seq11550__$2 = cljs.core.next(seq11550__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__11551, G__11552, seq11550__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var args11562 = [];
  var len__7285__auto___11568 = arguments.length;
  var i__7286__auto___11569 = 0;
  while (true) {
    if (i__7286__auto___11569 < len__7285__auto___11568) {
      args11562.push(arguments[i__7286__auto___11569]);
      var G__11570 = i__7286__auto___11569 + 1;
      i__7286__auto___11569 = G__11570;
      continue;
    } else {
    }
    break;
  }
  var G__11567 = args11562.length;
  switch(G__11567) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11562.slice(2), 0, null);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__11572 = y;
        var G__11573 = cljs.core.first(more);
        var G__11574 = cljs.core.next(more);
        x = G__11572;
        y = G__11573;
        more = G__11574;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq11563) {
  var G__11564 = cljs.core.first(seq11563);
  var seq11563__$1 = cljs.core.next(seq11563);
  var G__11565 = cljs.core.first(seq11563__$1);
  var seq11563__$2 = cljs.core.next(seq11563__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__11564, G__11565, seq11563__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var args11575 = [];
  var len__7285__auto___11581 = arguments.length;
  var i__7286__auto___11582 = 0;
  while (true) {
    if (i__7286__auto___11582 < len__7285__auto___11581) {
      args11575.push(arguments[i__7286__auto___11582]);
      var G__11583 = i__7286__auto___11582 + 1;
      i__7286__auto___11582 = G__11583;
      continue;
    } else {
    }
    break;
  }
  var G__11580 = args11575.length;
  switch(G__11580) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11575.slice(2), 0, null);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__6541__auto__ = x;
  var y__6542__auto__ = y;
  return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__6541__auto__ = x;
    var y__6542__auto__ = y;
    return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq11576) {
  var G__11577 = cljs.core.first(seq11576);
  var seq11576__$1 = cljs.core.next(seq11576);
  var G__11578 = cljs.core.first(seq11576__$1);
  var seq11576__$2 = cljs.core.next(seq11576__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__11577, G__11578, seq11576__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var args11585 = [];
  var len__7285__auto___11591 = arguments.length;
  var i__7286__auto___11592 = 0;
  while (true) {
    if (i__7286__auto___11592 < len__7285__auto___11591) {
      args11585.push(arguments[i__7286__auto___11592]);
      var G__11593 = i__7286__auto___11592 + 1;
      i__7286__auto___11592 = G__11593;
      continue;
    } else {
    }
    break;
  }
  var G__11590 = args11585.length;
  switch(G__11590) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11585.slice(2), 0, null);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__6548__auto__ = x;
  var y__6549__auto__ = y;
  return x__6548__auto__ < y__6549__auto__ ? x__6548__auto__ : y__6549__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__6548__auto__ = x;
    var y__6549__auto__ = y;
    return x__6548__auto__ < y__6549__auto__ ? x__6548__auto__ : y__6549__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq11586) {
  var G__11587 = cljs.core.first(seq11586);
  var seq11586__$1 = cljs.core.next(seq11586);
  var G__11588 = cljs.core.first(seq11586__$1);
  var seq11586__$2 = cljs.core.next(seq11586__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__11587, G__11588, seq11586__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var args11595 = [];
  var len__7285__auto___11601 = arguments.length;
  var i__7286__auto___11602 = 0;
  while (true) {
    if (i__7286__auto___11602 < len__7285__auto___11601) {
      args11595.push(arguments[i__7286__auto___11602]);
      var G__11603 = i__7286__auto___11602 + 1;
      i__7286__auto___11602 = G__11603;
      continue;
    } else {
    }
    break;
  }
  var G__11600 = args11595.length;
  switch(G__11600) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11595.slice(2), 0, null);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq11596) {
  var G__11597 = cljs.core.first(seq11596);
  var seq11596__$1 = cljs.core.next(seq11596);
  var G__11598 = cljs.core.first(seq11596__$1);
  var seq11596__$2 = cljs.core.next(seq11596__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__11597, G__11598, seq11596__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var args11605 = [];
  var len__7285__auto___11611 = arguments.length;
  var i__7286__auto___11612 = 0;
  while (true) {
    if (i__7286__auto___11612 < len__7285__auto___11611) {
      args11605.push(arguments[i__7286__auto___11612]);
      var G__11613 = i__7286__auto___11612 + 1;
      i__7286__auto___11612 = G__11613;
      continue;
    } else {
    }
    break;
  }
  var G__11610 = args11605.length;
  switch(G__11610) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11605.slice(2), 0, null);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq11606) {
  var G__11607 = cljs.core.first(seq11606);
  var seq11606__$1 = cljs.core.next(seq11606);
  var G__11608 = cljs.core.first(seq11606__$1);
  var seq11606__$2 = cljs.core.next(seq11606__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__11607, G__11608, seq11606__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var args11615 = [];
  var len__7285__auto___11621 = arguments.length;
  var i__7286__auto___11622 = 0;
  while (true) {
    if (i__7286__auto___11622 < len__7285__auto___11621) {
      args11615.push(arguments[i__7286__auto___11622]);
      var G__11623 = i__7286__auto___11622 + 1;
      i__7286__auto___11622 = G__11623;
      continue;
    } else {
    }
    break;
  }
  var G__11620 = args11615.length;
  switch(G__11620) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11615.slice(2), 0, null);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq11616) {
  var G__11617 = cljs.core.first(seq11616);
  var seq11616__$1 = cljs.core.next(seq11616);
  var G__11618 = cljs.core.first(seq11616__$1);
  var seq11616__$2 = cljs.core.next(seq11616__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__11617, G__11618, seq11616__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var args11625 = [];
  var len__7285__auto___11631 = arguments.length;
  var i__7286__auto___11632 = 0;
  while (true) {
    if (i__7286__auto___11632 < len__7285__auto___11631) {
      args11625.push(arguments[i__7286__auto___11632]);
      var G__11633 = i__7286__auto___11632 + 1;
      i__7286__auto___11632 = G__11633;
      continue;
    } else {
    }
    break;
  }
  var G__11630 = args11625.length;
  switch(G__11630) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11625.slice(2), 0, null);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq11626) {
  var G__11627 = cljs.core.first(seq11626);
  var seq11626__$1 = cljs.core.next(seq11626);
  var G__11628 = cljs.core.first(seq11626__$1);
  var seq11626__$2 = cljs.core.next(seq11626__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__11627, G__11628, seq11626__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var args11635 = [];
  var len__7285__auto___11641 = arguments.length;
  var i__7286__auto___11642 = 0;
  while (true) {
    if (i__7286__auto___11642 < len__7285__auto___11641) {
      args11635.push(arguments[i__7286__auto___11642]);
      var G__11643 = i__7286__auto___11642 + 1;
      i__7286__auto___11642 = G__11643;
      continue;
    } else {
    }
    break;
  }
  var G__11640 = args11635.length;
  switch(G__11640) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11635.slice(2), 0, null);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq11636) {
  var G__11637 = cljs.core.first(seq11636);
  var seq11636__$1 = cljs.core.next(seq11636);
  var G__11638 = cljs.core.first(seq11636__$1);
  var seq11636__$2 = cljs.core.next(seq11636__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__11637, G__11638, seq11636__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var args11645 = [];
  var len__7285__auto___11651 = arguments.length;
  var i__7286__auto___11652 = 0;
  while (true) {
    if (i__7286__auto___11652 < len__7285__auto___11651) {
      args11645.push(arguments[i__7286__auto___11652]);
      var G__11653 = i__7286__auto___11652 + 1;
      i__7286__auto___11652 = G__11653;
      continue;
    } else {
    }
    break;
  }
  var G__11650 = args11645.length;
  switch(G__11650) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11645.slice(2), 0, null);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq11646) {
  var G__11647 = cljs.core.first(seq11646);
  var seq11646__$1 = cljs.core.next(seq11646);
  var G__11648 = cljs.core.first(seq11646__$1);
  var seq11646__$2 = cljs.core.next(seq11646__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__11647, G__11648, seq11646__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var args11655 = [];
  var len__7285__auto___11661 = arguments.length;
  var i__7286__auto___11662 = 0;
  while (true) {
    if (i__7286__auto___11662 < len__7285__auto___11661) {
      args11655.push(arguments[i__7286__auto___11662]);
      var G__11663 = i__7286__auto___11662 + 1;
      i__7286__auto___11662 = G__11663;
      continue;
    } else {
    }
    break;
  }
  var G__11660 = args11655.length;
  switch(G__11660) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11655.slice(2), 0, null);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq11656) {
  var G__11657 = cljs.core.first(seq11656);
  var seq11656__$1 = cljs.core.next(seq11656);
  var G__11658 = cljs.core.first(seq11656__$1);
  var seq11656__$2 = cljs.core.next(seq11656__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__11657, G__11658, seq11656__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var args11665 = [];
  var len__7285__auto___11671 = arguments.length;
  var i__7286__auto___11672 = 0;
  while (true) {
    if (i__7286__auto___11672 < len__7285__auto___11671) {
      args11665.push(arguments[i__7286__auto___11672]);
      var G__11673 = i__7286__auto___11672 + 1;
      i__7286__auto___11672 = G__11673;
      continue;
    } else {
    }
    break;
  }
  var G__11670 = args11665.length;
  switch(G__11670) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11665.slice(2), 0, null);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq11666) {
  var G__11667 = cljs.core.first(seq11666);
  var seq11666__$1 = cljs.core.next(seq11666);
  var G__11668 = cljs.core.first(seq11666__$1);
  var seq11666__$2 = cljs.core.next(seq11666__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__11667, G__11668, seq11666__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var args11675 = [];
  var len__7285__auto___11681 = arguments.length;
  var i__7286__auto___11682 = 0;
  while (true) {
    if (i__7286__auto___11682 < len__7285__auto___11681) {
      args11675.push(arguments[i__7286__auto___11682]);
      var G__11683 = i__7286__auto___11682 + 1;
      i__7286__auto___11682 = G__11683;
      continue;
    } else {
    }
    break;
  }
  var G__11680 = args11675.length;
  switch(G__11680) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11675.slice(2), 0, null);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq11676) {
  var G__11677 = cljs.core.first(seq11676);
  var seq11676__$1 = cljs.core.next(seq11676);
  var G__11678 = cljs.core.first(seq11676__$1);
  var seq11676__$2 = cljs.core.next(seq11676__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__11677, G__11678, seq11676__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var args11685 = [];
  var len__7285__auto___11691 = arguments.length;
  var i__7286__auto___11692 = 0;
  while (true) {
    if (i__7286__auto___11692 < len__7285__auto___11691) {
      args11685.push(arguments[i__7286__auto___11692]);
      var G__11693 = i__7286__auto___11692 + 1;
      i__7286__auto___11692 = G__11693;
      continue;
    } else {
    }
    break;
  }
  var G__11690 = args11685.length;
  switch(G__11690) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11685.slice(2), 0, null);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq11686) {
  var G__11687 = cljs.core.first(seq11686);
  var seq11686__$1 = cljs.core.next(seq11686);
  var G__11688 = cljs.core.first(seq11686__$1);
  var seq11686__$2 = cljs.core.next(seq11686__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__11687, G__11688, seq11686__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var args11695 = [];
  var len__7285__auto___11701 = arguments.length;
  var i__7286__auto___11702 = 0;
  while (true) {
    if (i__7286__auto___11702 < len__7285__auto___11701) {
      args11695.push(arguments[i__7286__auto___11702]);
      var G__11703 = i__7286__auto___11702 + 1;
      i__7286__auto___11702 = G__11703;
      continue;
    } else {
    }
    break;
  }
  var G__11700 = args11695.length;
  switch(G__11700) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11695.slice(2), 0, null);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq11696) {
  var G__11697 = cljs.core.first(seq11696);
  var seq11696__$1 = cljs.core.next(seq11696);
  var G__11698 = cljs.core.first(seq11696__$1);
  var seq11696__$2 = cljs.core.next(seq11696__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__11697, G__11698, seq11696__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var args11705 = [];
  var len__7285__auto___11711 = arguments.length;
  var i__7286__auto___11712 = 0;
  while (true) {
    if (i__7286__auto___11712 < len__7285__auto___11711) {
      args11705.push(arguments[i__7286__auto___11712]);
      var G__11713 = i__7286__auto___11712 + 1;
      i__7286__auto___11712 = G__11713;
      continue;
    } else {
    }
    break;
  }
  var G__11710 = args11705.length;
  switch(G__11710) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11705.slice(2), 0, null);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__11715 = y;
        var G__11716 = cljs.core.first(more);
        var G__11717 = cljs.core.next(more);
        x = G__11715;
        y = G__11716;
        more = G__11717;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq11706) {
  var G__11707 = cljs.core.first(seq11706);
  var seq11706__$1 = cljs.core.next(seq11706);
  var G__11708 = cljs.core.first(seq11706__$1);
  var seq11706__$2 = cljs.core.next(seq11706__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__11707, G__11708, seq11706__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(x) {
  return x > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(x) {
  return x === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__11718 = n__$1 - 1;
      var G__11719 = cljs.core.next(xs);
      n__$1 = G__11718;
      xs = G__11719;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var args11720 = [];
  var len__7285__auto___11725 = arguments.length;
  var i__7286__auto___11726 = 0;
  while (true) {
    if (i__7286__auto___11726 < len__7285__auto___11725) {
      args11720.push(arguments[i__7286__auto___11726]);
      var G__11727 = i__7286__auto___11726 + 1;
      i__7286__auto___11726 = G__11727;
      continue;
    } else {
    }
    break;
  }
  var G__11724 = args11720.length;
  switch(G__11724) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11720.slice(1), 0, null);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7304__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__11729 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__11730 = cljs.core.next(more);
      sb = G__11729;
      more = G__11730;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq11721) {
  var G__11722 = cljs.core.first(seq11721);
  var seq11721__$1 = cljs.core.next(seq11721);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__11722, seq11721__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var args11731 = [];
  var len__7285__auto___11734 = arguments.length;
  var i__7286__auto___11735 = 0;
  while (true) {
    if (i__7286__auto___11735 < len__7285__auto___11734) {
      args11731.push(arguments[i__7286__auto___11735]);
      var G__11736 = i__7286__auto___11735 + 1;
      i__7286__auto___11735 = G__11736;
      continue;
    } else {
    }
    break;
  }
  var G__11733 = args11731.length;
  switch(G__11733) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11731.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__11738 = cljs.core.next(xs);
            var G__11739 = cljs.core.next(ys);
            xs = G__11738;
            ys = G__11739;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__11740 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__11741 = cljs.core.next(s);
        res = G__11740;
        s = G__11741;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__11742 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__11743 = cljs.core.next(s);
      h = G__11742;
      s = G__11743;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__11744 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__11745 = cljs.core.next(s__$1);
      h = G__11744;
      s__$1 = G__11745;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__11756_11766 = cljs.core.seq(fn_map);
  var chunk__11757_11767 = null;
  var count__11758_11768 = 0;
  var i__11759_11769 = 0;
  while (true) {
    if (i__11759_11769 < count__11758_11768) {
      var vec__11760_11770 = chunk__11757_11767.cljs$core$IIndexed$_nth$arity$2(null, i__11759_11769);
      var key_name_11771 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11760_11770, 0, null);
      var f_11772 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11760_11770, 1, null);
      var str_name_11773 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_11771) : cljs.core.name.call(null, key_name_11771);
      obj[str_name_11773] = f_11772;
      var G__11774 = seq__11756_11766;
      var G__11775 = chunk__11757_11767;
      var G__11776 = count__11758_11768;
      var G__11777 = i__11759_11769 + 1;
      seq__11756_11766 = G__11774;
      chunk__11757_11767 = G__11775;
      count__11758_11768 = G__11776;
      i__11759_11769 = G__11777;
      continue;
    } else {
      var temp__4425__auto___11778 = cljs.core.seq(seq__11756_11766);
      if (temp__4425__auto___11778) {
        var seq__11756_11779__$1 = temp__4425__auto___11778;
        if (cljs.core.chunked_seq_QMARK_(seq__11756_11779__$1)) {
          var c__7021__auto___11780 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__11756_11779__$1) : cljs.core.chunk_first.call(null, seq__11756_11779__$1);
          var G__11781 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__11756_11779__$1) : cljs.core.chunk_rest.call(null, seq__11756_11779__$1);
          var G__11782 = c__7021__auto___11780;
          var G__11783 = cljs.core.count(c__7021__auto___11780);
          var G__11784 = 0;
          seq__11756_11766 = G__11781;
          chunk__11757_11767 = G__11782;
          count__11758_11768 = G__11783;
          i__11759_11769 = G__11784;
          continue;
        } else {
          var vec__11763_11785 = cljs.core.first(seq__11756_11779__$1);
          var key_name_11786 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11763_11785, 0, null);
          var f_11787 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11763_11785, 1, null);
          var str_name_11788 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_11786) : cljs.core.name.call(null, key_name_11786);
          obj[str_name_11788] = f_11787;
          var G__11789 = cljs.core.next(seq__11756_11779__$1);
          var G__11790 = null;
          var G__11791 = 0;
          var G__11792 = 0;
          seq__11756_11766 = G__11789;
          chunk__11757_11767 = G__11790;
          count__11758_11768 = G__11791;
          i__11759_11769 = G__11792;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.indexOf = function() {
  var G__11793 = null;
  var G__11793__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__11793__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11793 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11793__1.call(this, x);
      case 2:
        return G__11793__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11793.cljs$core$IFn$_invoke$arity$1 = G__11793__1;
  G__11793.cljs$core$IFn$_invoke$arity$2 = G__11793__2;
  return G__11793;
}();
cljs.core.List.prototype.lastIndexOf = function() {
  var G__11794 = null;
  var G__11794__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__11794__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11794 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11794__1.call(this, x);
      case 2:
        return G__11794__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11794.cljs$core$IFn$_invoke$arity$1 = G__11794__1;
  G__11794.cljs$core$IFn$_invoke$arity$2 = G__11794__2;
  return G__11794;
}();
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.indexOf = function() {
  var G__11797 = null;
  var G__11797__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__11797__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11797 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11797__1.call(this, x);
      case 2:
        return G__11797__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11797.cljs$core$IFn$_invoke$arity$1 = G__11797__1;
  G__11797.cljs$core$IFn$_invoke$arity$2 = G__11797__2;
  return G__11797;
}();
cljs.core.EmptyList.prototype.lastIndexOf = function() {
  var G__11798 = null;
  var G__11798__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__11798__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11798 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11798__1.call(this, x);
      case 2:
        return G__11798__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11798.cljs$core$IFn$_invoke$arity$1 = G__11798__1;
  G__11798.cljs$core$IFn$_invoke$arity$2 = G__11798__2;
  return G__11798;
}();
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(rev) {
  return cljs.core._rseq(rev);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___11802 = arguments.length;
  var i__7286__auto___11803 = 0;
  while (true) {
    if (i__7286__auto___11803 < len__7285__auto___11802) {
      args__7292__auto__.push(arguments[i__7286__auto___11803]);
      var G__11804 = i__7286__auto___11803 + 1;
      i__7286__auto___11803 = G__11804;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__11805 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__11805;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__11806 = i - 1;
      var G__11807 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__11806;
      r = G__11807;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq11801) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11801));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.indexOf = function() {
  var G__11808 = null;
  var G__11808__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__11808__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11808 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11808__1.call(this, x);
      case 2:
        return G__11808__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11808.cljs$core$IFn$_invoke$arity$1 = G__11808__1;
  G__11808.cljs$core$IFn$_invoke$arity$2 = G__11808__2;
  return G__11808;
}();
cljs.core.Cons.prototype.lastIndexOf = function() {
  var G__11809 = null;
  var G__11809__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__11809__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11809 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11809__1.call(this, x);
      case 2:
        return G__11809__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11809.cljs$core$IFn$_invoke$arity$1 = G__11809__1;
  G__11809.cljs$core$IFn$_invoke$arity$2 = G__11809__2;
  return G__11809;
}();
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, null);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__6210__auto__ = coll == null;
    if (or__6210__auto__) {
      return or__6210__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = cljs.core.not(a.ns);
      if (and__6198__auto__) {
        return b.ns;
      } else {
        return and__6198__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__11820 = a.ns;
            var G__11821 = b.ns;
            return goog.array.defaultCompare(G__11820, G__11821);
          }();
          if (0 === nsc) {
            var G__11822 = a.name;
            var G__11823 = b.name;
            return goog.array.defaultCompare(G__11822, G__11823);
          } else {
            return nsc;
          }
        }
      } else {
        var G__11824 = a.name;
        var G__11825 = b.name;
        return goog.array.defaultCompare(G__11824, G__11825);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__11827 = null;
  var G__11827__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__11827__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__11827 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11827__2.call(this, self__, coll);
      case 3:
        return G__11827__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11827.cljs$core$IFn$_invoke$arity$2 = G__11827__2;
  G__11827.cljs$core$IFn$_invoke$arity$3 = G__11827__3;
  return G__11827;
}();
cljs.core.Keyword.prototype.apply = function(self__, args11826) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11826)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__6645__auto__ = self__._hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var args11830 = [];
  var len__7285__auto___11833 = arguments.length;
  var i__7286__auto___11834 = 0;
  while (true) {
    if (i__7286__auto___11834 < len__7285__auto___11833) {
      args11830.push(arguments[i__7286__auto___11834]);
      var G__11835 = i__7286__auto___11834 + 1;
      i__7286__auto___11834 = G__11835;
      continue;
    } else {
    }
    break;
  }
  var G__11832 = args11830.length;
  switch(G__11832) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11830.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.indexOf = function() {
  var G__11837 = null;
  var G__11837__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__11837__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11837 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11837__1.call(this, x);
      case 2:
        return G__11837__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11837.cljs$core$IFn$_invoke$arity$1 = G__11837__1;
  G__11837.cljs$core$IFn$_invoke$arity$2 = G__11837__2;
  return G__11837;
}();
cljs.core.LazySeq.prototype.lastIndexOf = function() {
  var G__11838 = null;
  var G__11838__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__11838__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11838 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11838__1.call(this, x);
      case 2:
        return G__11838__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11838.cljs$core$IFn$_invoke$arity$1 = G__11838__1;
  G__11838.cljs$core$IFn$_invoke$arity$2 = G__11838__2;
  return G__11838;
}();
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.not(self__.fn);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__11839 = ls.sval();
        ls = G__11839;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var args11840 = [];
  var len__7285__auto___11843 = arguments.length;
  var i__7286__auto___11844 = 0;
  while (true) {
    if (i__7286__auto___11844 < len__7285__auto___11843) {
      args11840.push(arguments[i__7286__auto___11844]);
      var G__11845 = i__7286__auto___11844 + 1;
      i__7286__auto___11844 = G__11845;
      continue;
    } else {
    }
    break;
  }
  var G__11842 = args11840.length;
  switch(G__11842) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11840.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.indexOf = function() {
  var G__11847 = null;
  var G__11847__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__11847__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11847 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11847__1.call(this, x);
      case 2:
        return G__11847__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11847.cljs$core$IFn$_invoke$arity$1 = G__11847__1;
  G__11847.cljs$core$IFn$_invoke$arity$2 = G__11847__2;
  return G__11847;
}();
cljs.core.ChunkedCons.prototype.lastIndexOf = function() {
  var G__11848 = null;
  var G__11848__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__11848__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11848 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11848__1.call(this, x);
      case 2:
        return G__11848__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11848.cljs$core$IFn$_invoke$arity$1 = G__11848__1;
  G__11848.cljs$core$IFn$_invoke$arity$2 = G__11848__2;
  return G__11848;
}();
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__11851 = cljs.core.next(s__$1);
      s__$1 = G__11851;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_11852 = 0;
  var xs_11853 = cljs.core.seq(coll);
  while (true) {
    if (xs_11853) {
      ret[i_11852] = cljs.core.to_array(cljs.core.first(xs_11853));
      var G__11854 = i_11852 + 1;
      var G__11855 = cljs.core.next(xs_11853);
      i_11852 = G__11854;
      xs_11853 = G__11855;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var args11856 = [];
  var len__7285__auto___11859 = arguments.length;
  var i__7286__auto___11860 = 0;
  while (true) {
    if (i__7286__auto___11860 < len__7285__auto___11859) {
      args11856.push(arguments[i__7286__auto___11860]);
      var G__11861 = i__7286__auto___11860 + 1;
      i__7286__auto___11860 = G__11861;
      continue;
    } else {
    }
    break;
  }
  var G__11858 = args11856.length;
  switch(G__11858) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11856.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__11863 = i + 1;
        var G__11864 = cljs.core.next(s__$1);
        i = G__11863;
        s__$1 = G__11864;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__7125__auto___11865 = size;
    var i_11866 = 0;
    while (true) {
      if (i_11866 < n__7125__auto___11865) {
        a[i_11866] = init_val_or_seq;
        var G__11867 = i_11866 + 1;
        i_11866 = G__11867;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var args11868 = [];
  var len__7285__auto___11871 = arguments.length;
  var i__7286__auto___11872 = 0;
  while (true) {
    if (i__7286__auto___11872 < len__7285__auto___11871) {
      args11868.push(arguments[i__7286__auto___11872]);
      var G__11873 = i__7286__auto___11872 + 1;
      i__7286__auto___11872 = G__11873;
      continue;
    } else {
    }
    break;
  }
  var G__11870 = args11868.length;
  switch(G__11870) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11868.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__11875 = i + 1;
        var G__11876 = cljs.core.next(s__$1);
        i = G__11875;
        s__$1 = G__11876;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__7125__auto___11877 = size;
    var i_11878 = 0;
    while (true) {
      if (i_11878 < n__7125__auto___11877) {
        a[i_11878] = init_val_or_seq;
        var G__11879 = i_11878 + 1;
        i_11878 = G__11879;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var args11880 = [];
  var len__7285__auto___11883 = arguments.length;
  var i__7286__auto___11884 = 0;
  while (true) {
    if (i__7286__auto___11884 < len__7285__auto___11883) {
      args11880.push(arguments[i__7286__auto___11884]);
      var G__11885 = i__7286__auto___11884 + 1;
      i__7286__auto___11884 = G__11885;
      continue;
    } else {
    }
    break;
  }
  var G__11882 = args11880.length;
  switch(G__11882) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11880.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__11887 = i + 1;
        var G__11888 = cljs.core.next(s__$1);
        i = G__11887;
        s__$1 = G__11888;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__7125__auto___11889 = size;
    var i_11890 = 0;
    while (true) {
      if (i_11890 < n__7125__auto___11889) {
        a[i_11890] = init_val_or_seq;
        var G__11891 = i_11890 + 1;
        i_11890 = G__11891;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var args11892 = [];
  var len__7285__auto___11895 = arguments.length;
  var i__7286__auto___11896 = 0;
  while (true) {
    if (i__7286__auto___11896 < len__7285__auto___11895) {
      args11892.push(arguments[i__7286__auto___11896]);
      var G__11897 = i__7286__auto___11896 + 1;
      i__7286__auto___11896 = G__11897;
      continue;
    } else {
    }
    break;
  }
  var G__11894 = args11892.length;
  switch(G__11894) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11892.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__11899 = i + 1;
        var G__11900 = cljs.core.next(s__$1);
        i = G__11899;
        s__$1 = G__11900;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__7125__auto___11901 = size;
    var i_11902 = 0;
    while (true) {
      if (i_11902 < n__7125__auto___11901) {
        a[i_11902] = init_val_or_seq;
        var G__11903 = i_11902 + 1;
        i_11902 = G__11903;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__11904 = cljs.core.next(s__$1);
        var G__11905 = i - 1;
        var G__11906 = sum + 1;
        s__$1 = G__11904;
        i = G__11905;
        sum = G__11906;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var args11908 = [];
  var len__7285__auto___11920 = arguments.length;
  var i__7286__auto___11921 = 0;
  while (true) {
    if (i__7286__auto___11921 < len__7285__auto___11920) {
      args11908.push(arguments[i__7286__auto___11921]);
      var G__11922 = i__7286__auto___11921 + 1;
      i__7286__auto___11921 = G__11922;
      continue;
    } else {
    }
    break;
  }
  var G__11913 = args11908.length;
  switch(G__11913) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11908.slice(2), 0, null);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq11909) {
  var G__11910 = cljs.core.first(seq11909);
  var seq11909__$1 = cljs.core.next(seq11909);
  var G__11911 = cljs.core.first(seq11909__$1);
  var seq11909__$2 = cljs.core.next(seq11909__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__11910, G__11911, seq11909__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var args11924 = [];
  var len__7285__auto___11932 = arguments.length;
  var i__7286__auto___11933 = 0;
  while (true) {
    if (i__7286__auto___11933 < len__7285__auto___11932) {
      args11924.push(arguments[i__7286__auto___11933]);
      var G__11934 = i__7286__auto___11933 + 1;
      i__7286__auto___11933 = G__11934;
      continue;
    } else {
    }
    break;
  }
  var G__11931 = args11924.length;
  switch(G__11931) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11924.slice(4), 0, null);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7304__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq11925) {
  var G__11926 = cljs.core.first(seq11925);
  var seq11925__$1 = cljs.core.next(seq11925);
  var G__11927 = cljs.core.first(seq11925__$1);
  var seq11925__$2 = cljs.core.next(seq11925__$1);
  var G__11928 = cljs.core.first(seq11925__$2);
  var seq11925__$3 = cljs.core.next(seq11925__$2);
  var G__11929 = cljs.core.first(seq11925__$3);
  var seq11925__$4 = cljs.core.next(seq11925__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__11926, G__11927, G__11928, G__11929, seq11925__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var args11936 = [];
  var len__7285__auto___11942 = arguments.length;
  var i__7286__auto___11943 = 0;
  while (true) {
    if (i__7286__auto___11943 < len__7285__auto___11942) {
      args11936.push(arguments[i__7286__auto___11943]);
      var G__11944 = i__7286__auto___11943 + 1;
      i__7286__auto___11943 = G__11944;
      continue;
    } else {
    }
    break;
  }
  var G__11941 = args11936.length;
  switch(G__11941) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11936.slice(2), 0, null);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(tcoll) {
  return tcoll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__11946 = ntcoll;
      var G__11947 = cljs.core.first(vals);
      var G__11948 = cljs.core.next(vals);
      tcoll = G__11946;
      val = G__11947;
      vals = G__11948;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq11937) {
  var G__11938 = cljs.core.first(seq11937);
  var seq11937__$1 = cljs.core.next(seq11937);
  var G__11939 = cljs.core.first(seq11937__$1);
  var seq11937__$2 = cljs.core.next(seq11937__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__11938, G__11939, seq11937__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var args11949 = [];
  var len__7285__auto___11956 = arguments.length;
  var i__7286__auto___11957 = 0;
  while (true) {
    if (i__7286__auto___11957 < len__7285__auto___11956) {
      args11949.push(arguments[i__7286__auto___11957]);
      var G__11958 = i__7286__auto___11957 + 1;
      i__7286__auto___11957 = G__11958;
      continue;
    } else {
    }
    break;
  }
  var G__11955 = args11949.length;
  switch(G__11955) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11949.slice(3), 0, null);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7304__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__11960 = ntcoll;
      var G__11961 = cljs.core.first(kvs);
      var G__11962 = cljs.core.second(kvs);
      var G__11963 = cljs.core.nnext(kvs);
      tcoll = G__11960;
      key = G__11961;
      val = G__11962;
      kvs = G__11963;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq11950) {
  var G__11951 = cljs.core.first(seq11950);
  var seq11950__$1 = cljs.core.next(seq11950);
  var G__11952 = cljs.core.first(seq11950__$1);
  var seq11950__$2 = cljs.core.next(seq11950__$1);
  var G__11953 = cljs.core.first(seq11950__$2);
  var seq11950__$3 = cljs.core.next(seq11950__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__11951, G__11952, G__11953, seq11950__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var args11964 = [];
  var len__7285__auto___11970 = arguments.length;
  var i__7286__auto___11971 = 0;
  while (true) {
    if (i__7286__auto___11971 < len__7285__auto___11970) {
      args11964.push(arguments[i__7286__auto___11971]);
      var G__11972 = i__7286__auto___11971 + 1;
      i__7286__auto___11971 = G__11972;
      continue;
    } else {
    }
    break;
  }
  var G__11969 = args11964.length;
  switch(G__11969) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11964.slice(2), 0, null);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__11974 = ntcoll;
      var G__11975 = cljs.core.first(ks);
      var G__11976 = cljs.core.next(ks);
      tcoll = G__11974;
      key = G__11975;
      ks = G__11976;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq11965) {
  var G__11966 = cljs.core.first(seq11965);
  var seq11965__$1 = cljs.core.next(seq11965);
  var G__11967 = cljs.core.first(seq11965__$1);
  var seq11965__$2 = cljs.core.next(seq11965__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__11966, G__11967, seq11965__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var args11977 = [];
  var len__7285__auto___11983 = arguments.length;
  var i__7286__auto___11984 = 0;
  while (true) {
    if (i__7286__auto___11984 < len__7285__auto___11983) {
      args11977.push(arguments[i__7286__auto___11984]);
      var G__11985 = i__7286__auto___11984 + 1;
      i__7286__auto___11984 = G__11985;
      continue;
    } else {
    }
    break;
  }
  var G__11982 = args11977.length;
  switch(G__11982) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11977.slice(2), 0, null);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__11987 = ntcoll;
      var G__11988 = cljs.core.first(vals);
      var G__11989 = cljs.core.next(vals);
      tcoll = G__11987;
      val = G__11988;
      vals = G__11989;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq11978) {
  var G__11979 = cljs.core.first(seq11978);
  var seq11978__$1 = cljs.core.next(seq11978);
  var G__11980 = cljs.core.first(seq11978__$1);
  var seq11978__$2 = cljs.core.next(seq11978__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__11979, G__11980, seq11978__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a7169 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a7169);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a7169) : f.call(null, a7169);
      }
    } else {
      var b7170 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a7169, b7170);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a7169, b7170) : f.call(null, a7169, b7170);
        }
      } else {
        var c7171 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a7169, b7170, c7171);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a7169, b7170, c7171) : f.call(null, a7169, b7170, c7171);
          }
        } else {
          var d7172 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a7169, b7170, c7171, d7172);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a7169, b7170, c7171, d7172) : f.call(null, a7169, b7170, c7171, d7172);
            }
          } else {
            var e7173 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a7169, b7170, c7171, d7172, e7173);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a7169, b7170, c7171, d7172, e7173) : f.call(null, a7169, b7170, c7171, d7172, e7173);
              }
            } else {
              var f7174 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a7169, b7170, c7171, d7172, e7173, f7174);
                } else {
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a7169, b7170, c7171, d7172, e7173, f7174) : f.call(null, a7169, b7170, c7171, d7172, e7173, f7174);
                }
              } else {
                var g7175 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a7169, b7170, c7171, d7172, e7173, f7174, g7175);
                  } else {
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a7169, b7170, c7171, d7172, e7173, f7174, g7175) : f.call(null, a7169, b7170, c7171, d7172, e7173, f7174, g7175);
                  }
                } else {
                  var h7176 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176);
                    } else {
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176) : f.call(null, a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176);
                    }
                  } else {
                    var i7177 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177);
                      } else {
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177) : f.call(null, a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177);
                      }
                    } else {
                      var j7178 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178);
                        } else {
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178) : f.call(null, a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178);
                        }
                      } else {
                        var k7179 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179);
                          } else {
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179) : f.call(null, a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179);
                          }
                        } else {
                          var l7180 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180);
                            } else {
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180) : f.call(null, a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180);
                            }
                          } else {
                            var m7181 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181);
                              } else {
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181) : f.call(null, a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181);
                              }
                            } else {
                              var n7182 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182);
                                } else {
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182) : f.call(null, a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182);
                                }
                              } else {
                                var o7183 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182, o7183);
                                  } else {
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182, o7183) : f.call(null, a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182, o7183);
                                  }
                                } else {
                                  var p7184 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182, o7183, p7184);
                                    } else {
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182, o7183, p7184) : f.call(null, a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182, o7183, p7184);
                                    }
                                  } else {
                                    var q7185 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182, o7183, p7184, q7185);
                                      } else {
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182, o7183, p7184, q7185) : f.call(null, a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182, o7183, p7184, q7185);
                                      }
                                    } else {
                                      var r7186 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182, o7183, p7184, q7185, r7186);
                                        } else {
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182, o7183, p7184, q7185, r7186) : f.call(null, a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182, o7183, p7184, q7185, r7186);
                                        }
                                      } else {
                                        var s7187 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182, o7183, p7184, q7185, r7186, s7187);
                                          } else {
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182, o7183, p7184, q7185, r7186, s7187) : f.call(null, a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182, o7183, p7184, q7185, r7186, s7187);
                                          }
                                        } else {
                                          var t7188 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182, o7183, p7184, q7185, r7186, s7187, t7188);
                                            } else {
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182, o7183, p7184, q7185, r7186, s7187, t7188) : f.call(null, a7169, b7170, c7171, d7172, e7173, f7174, g7175, h7176, i7177, j7178, k7179, l7180, m7181, n7182, o7183, p7184, q7185, r7186, s7187, t7188);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply(var_args) {
  var args11990 = [];
  var len__7285__auto___11999 = arguments.length;
  var i__7286__auto___12000 = 0;
  while (true) {
    if (i__7286__auto___12000 < len__7285__auto___11999) {
      args11990.push(arguments[i__7286__auto___12000]);
      var G__12001 = i__7286__auto___12000 + 1;
      i__7286__auto___12000 = G__12001;
      continue;
    } else {
    }
    break;
  }
  var G__11998 = args11990.length;
  switch(G__11998) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args11990.slice(5), 0, null);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__7304__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq11991) {
  var G__11992 = cljs.core.first(seq11991);
  var seq11991__$1 = cljs.core.next(seq11991);
  var G__11993 = cljs.core.first(seq11991__$1);
  var seq11991__$2 = cljs.core.next(seq11991__$1);
  var G__11994 = cljs.core.first(seq11991__$2);
  var seq11991__$3 = cljs.core.next(seq11991__$2);
  var G__11995 = cljs.core.first(seq11991__$3);
  var seq11991__$4 = cljs.core.next(seq11991__$3);
  var G__11996 = cljs.core.first(seq11991__$4);
  var seq11991__$5 = cljs.core.next(seq11991__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__11992, G__11993, G__11994, G__11995, G__11996, seq11991__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var args12003 = [];
  var len__7285__auto___12028 = arguments.length;
  var i__7286__auto___12029 = 0;
  while (true) {
    if (i__7286__auto___12029 < len__7285__auto___12028) {
      args12003.push(arguments[i__7286__auto___12029]);
      var G__12030 = i__7286__auto___12029 + 1;
      i__7286__auto___12029 = G__12030;
      continue;
    } else {
    }
    break;
  }
  var G__12012 = args12003.length;
  switch(G__12012) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args12003.slice(6), 0, null);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__7304__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__12013 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12013) : f.call(null, G__12013);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__12014 = cljs.core.meta(obj);
    var G__12015 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12014, G__12015) : f.call(null, G__12014, G__12015);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__12016 = cljs.core.meta(obj);
    var G__12017 = a;
    var G__12018 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12016, G__12017, G__12018) : f.call(null, G__12016, G__12017, G__12018);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__12019 = cljs.core.meta(obj);
    var G__12020 = a;
    var G__12021 = b;
    var G__12022 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12019, G__12020, G__12021, G__12022) : f.call(null, G__12019, G__12020, G__12021, G__12022);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__12023 = cljs.core.meta(obj);
    var G__12024 = a;
    var G__12025 = b;
    var G__12026 = c;
    var G__12027 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12023, G__12024, G__12025, G__12026, G__12027) : f.call(null, G__12023, G__12024, G__12025, G__12026, G__12027);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq12004) {
  var G__12005 = cljs.core.first(seq12004);
  var seq12004__$1 = cljs.core.next(seq12004);
  var G__12006 = cljs.core.first(seq12004__$1);
  var seq12004__$2 = cljs.core.next(seq12004__$1);
  var G__12007 = cljs.core.first(seq12004__$2);
  var seq12004__$3 = cljs.core.next(seq12004__$2);
  var G__12008 = cljs.core.first(seq12004__$3);
  var seq12004__$4 = cljs.core.next(seq12004__$3);
  var G__12009 = cljs.core.first(seq12004__$4);
  var seq12004__$5 = cljs.core.next(seq12004__$4);
  var G__12010 = cljs.core.first(seq12004__$5);
  var seq12004__$6 = cljs.core.next(seq12004__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__12005, G__12006, G__12007, G__12008, G__12009, G__12010, seq12004__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var args12032 = [];
  var len__7285__auto___12038 = arguments.length;
  var i__7286__auto___12039 = 0;
  while (true) {
    if (i__7286__auto___12039 < len__7285__auto___12038) {
      args12032.push(arguments[i__7286__auto___12039]);
      var G__12040 = i__7286__auto___12039 + 1;
      i__7286__auto___12039 = G__12040;
      continue;
    } else {
    }
    break;
  }
  var G__12037 = args12032.length;
  switch(G__12037) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args12032.slice(2), 0, null);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq12033) {
  var G__12034 = cljs.core.first(seq12033);
  var seq12033__$1 = cljs.core.next(seq12033);
  var G__12035 = cljs.core.first(seq12033__$1);
  var seq12033__$2 = cljs.core.next(seq12033__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__12034, G__12035, seq12033__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t_cljs$core12045 !== "undefined") {
  } else {
    cljs.core.t_cljs$core12045 = function(nil_iter, meta12046) {
      this.nil_iter = nil_iter;
      this.meta12046 = meta12046;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core12045.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12047, meta12046__$1) {
      var self__ = this;
      var _12047__$1 = this;
      return new cljs.core.t_cljs$core12045(self__.nil_iter, meta12046__$1);
    };
    cljs.core.t_cljs$core12045.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12047) {
      var self__ = this;
      var _12047__$1 = this;
      return self__.meta12046;
    };
    cljs.core.t_cljs$core12045.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core12045.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core12045.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core12045.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), new cljs.core.Symbol(null, "meta12046", "meta12046", 1957453168, null)], 
      null);
    };
    cljs.core.t_cljs$core12045.cljs$lang$type = true;
    cljs.core.t_cljs$core12045.cljs$lang$ctorStr = "cljs.core/t_cljs$core12045";
    cljs.core.t_cljs$core12045.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
      return cljs.core._write(writer__6817__auto__, "cljs.core/t_cljs$core12045");
    };
    cljs.core.__GT_t_cljs$core12045 = function cljs$core$nil_iter_$___GT_t_cljs$core12045(nil_iter__$1, meta12046) {
      return new cljs.core.t_cljs$core12045(nil_iter__$1, meta12046);
    };
  }
  return new cljs.core.t_cljs$core12045(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = !(lt.stepper == null);
      if (and__6198__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__6198__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__12048 = lt;
        var G__12049 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__12048, G__12049) : self__.xform.call(null, G__12048, G__12049);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__12050 = cljs.core.next(iters__$1);
        iters__$1 = G__12050;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__7125__auto___12051 = self__.iters.length;
  var i_12052 = 0;
  while (true) {
    if (i_12052 < n__7125__auto___12051) {
      self__.nexts[i_12052] = self__.iters[i_12052].next();
      var G__12053 = i_12052 + 1;
      i_12052 = G__12053;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = !(lt.stepper == null);
      if (and__6198__auto__) {
        return this$.hasNext();
      } else {
        return and__6198__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper(var_args) {
  var args12054 = [];
  var len__7285__auto___12057 = arguments.length;
  var i__7286__auto___12058 = 0;
  while (true) {
    if (i__7286__auto___12058 < len__7285__auto___12057) {
      args12054.push(arguments[i__7286__auto___12058]);
      var G__12059 = i__7286__auto___12058 + 1;
      i__7286__auto___12058 = G__12059;
      continue;
    } else {
    }
    break;
  }
  var G__12056 = args12054.length;
  switch(G__12056) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12054.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31850700;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.indexOf = function() {
  var G__12061 = null;
  var G__12061__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__12061__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12061 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12061__1.call(this, x);
      case 2:
        return G__12061__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12061.cljs$core$IFn$_invoke$arity$1 = G__12061__1;
  G__12061.cljs$core$IFn$_invoke$arity$2 = G__12061__2;
  return G__12061;
}();
cljs.core.LazyTransformer.prototype.lastIndexOf = function() {
  var G__12062 = null;
  var G__12062__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__12062__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12062 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12062__1.call(this, x);
      case 2:
        return G__12062__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12062.cljs$core$IFn$_invoke$arity$1 = G__12062__1;
  G__12062.cljs$core$IFn$_invoke$arity$2 = G__12062__2;
  return G__12062;
}();
cljs.core.LazyTransformer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.meta;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__12063_12067 = cljs.core.seq(colls);
  var chunk__12064_12068 = null;
  var count__12065_12069 = 0;
  var i__12066_12070 = 0;
  while (true) {
    if (i__12066_12070 < count__12065_12069) {
      var coll_12071 = chunk__12064_12068.cljs$core$IIndexed$_nth$arity$2(null, i__12066_12070);
      iters.push(cljs.core.iter(coll_12071));
      var G__12072 = seq__12063_12067;
      var G__12073 = chunk__12064_12068;
      var G__12074 = count__12065_12069;
      var G__12075 = i__12066_12070 + 1;
      seq__12063_12067 = G__12072;
      chunk__12064_12068 = G__12073;
      count__12065_12069 = G__12074;
      i__12066_12070 = G__12075;
      continue;
    } else {
      var temp__4425__auto___12076 = cljs.core.seq(seq__12063_12067);
      if (temp__4425__auto___12076) {
        var seq__12063_12077__$1 = temp__4425__auto___12076;
        if (cljs.core.chunked_seq_QMARK_(seq__12063_12077__$1)) {
          var c__7021__auto___12078 = cljs.core.chunk_first(seq__12063_12077__$1);
          var G__12079 = cljs.core.chunk_rest(seq__12063_12077__$1);
          var G__12080 = c__7021__auto___12078;
          var G__12081 = cljs.core.count(c__7021__auto___12078);
          var G__12082 = 0;
          seq__12063_12067 = G__12079;
          chunk__12064_12068 = G__12080;
          count__12065_12069 = G__12081;
          i__12066_12070 = G__12082;
          continue;
        } else {
          var coll_12083 = cljs.core.first(seq__12063_12077__$1);
          iters.push(cljs.core.iter(coll_12083));
          var G__12084 = cljs.core.next(seq__12063_12077__$1);
          var G__12085 = null;
          var G__12086 = 0;
          var G__12087 = 0;
          seq__12063_12067 = G__12084;
          chunk__12064_12068 = G__12085;
          count__12065_12069 = G__12086;
          i__12066_12070 = G__12087;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var args12088 = [];
  var len__7285__auto___12094 = arguments.length;
  var i__7286__auto___12095 = 0;
  while (true) {
    if (i__7286__auto___12095 < len__7285__auto___12094) {
      args12088.push(arguments[i__7286__auto___12095]);
      var G__12096 = i__7286__auto___12095 + 1;
      i__7286__auto___12095 = G__12096;
      continue;
    } else {
    }
    break;
  }
  var G__12093 = args12088.length;
  switch(G__12093) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args12088.slice(2), 0, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__6210__auto__ = cljs.core.seq(coll);
    if (or__6210__auto__) {
      return or__6210__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq12089) {
  var G__12090 = cljs.core.first(seq12089);
  var seq12089__$1 = cljs.core.next(seq12089);
  var G__12091 = cljs.core.first(seq12089__$1);
  var seq12089__$2 = cljs.core.next(seq12089__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__12090, G__12091, seq12089__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__12099 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12099) : pred.call(null, G__12099);
      }())) {
        var G__12100 = pred;
        var G__12101 = cljs.core.next(coll);
        pred = G__12100;
        coll = G__12101;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__6210__auto__ = function() {
        var G__12105 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12105) : pred.call(null, G__12105);
      }();
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var G__12106 = pred;
        var G__12107 = cljs.core.next(coll);
        pred = G__12106;
        coll = G__12107;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__12108 = null;
    var G__12108__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__12108__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__12108__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__12108__3 = function() {
      var G__12109__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__12109 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__12110__i = 0, G__12110__a = new Array(arguments.length - 2);
          while (G__12110__i < G__12110__a.length) {
            G__12110__a[G__12110__i] = arguments[G__12110__i + 2];
            ++G__12110__i;
          }
          zs = new cljs.core.IndexedSeq(G__12110__a, 0);
        }
        return G__12109__delegate.call(this, x, y, zs);
      };
      G__12109.cljs$lang$maxFixedArity = 2;
      G__12109.cljs$lang$applyTo = function(arglist__12111) {
        var x = cljs.core.first(arglist__12111);
        arglist__12111 = cljs.core.next(arglist__12111);
        var y = cljs.core.first(arglist__12111);
        var zs = cljs.core.rest(arglist__12111);
        return G__12109__delegate(x, y, zs);
      };
      G__12109.cljs$core$IFn$_invoke$arity$variadic = G__12109__delegate;
      return G__12109;
    }();
    G__12108 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__12108__0.call(this);
        case 1:
          return G__12108__1.call(this, x);
        case 2:
          return G__12108__2.call(this, x, y);
        default:
          var G__12112 = null;
          if (arguments.length > 2) {
            var G__12113__i = 0, G__12113__a = new Array(arguments.length - 2);
            while (G__12113__i < G__12113__a.length) {
              G__12113__a[G__12113__i] = arguments[G__12113__i + 2];
              ++G__12113__i;
            }
            G__12112 = new cljs.core.IndexedSeq(G__12113__a, 0);
          }
          return G__12108__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12112);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12108.cljs$lang$maxFixedArity = 2;
    G__12108.cljs$lang$applyTo = G__12108__3.cljs$lang$applyTo;
    G__12108.cljs$core$IFn$_invoke$arity$0 = G__12108__0;
    G__12108.cljs$core$IFn$_invoke$arity$1 = G__12108__1;
    G__12108.cljs$core$IFn$_invoke$arity$2 = G__12108__2;
    G__12108.cljs$core$IFn$_invoke$arity$variadic = G__12108__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__12108;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__12114__delegate = function(args) {
      return x;
    };
    var G__12114 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__12115__i = 0, G__12115__a = new Array(arguments.length - 0);
        while (G__12115__i < G__12115__a.length) {
          G__12115__a[G__12115__i] = arguments[G__12115__i + 0];
          ++G__12115__i;
        }
        args = new cljs.core.IndexedSeq(G__12115__a, 0);
      }
      return G__12114__delegate.call(this, args);
    };
    G__12114.cljs$lang$maxFixedArity = 0;
    G__12114.cljs$lang$applyTo = function(arglist__12116) {
      var args = cljs.core.seq(arglist__12116);
      return G__12114__delegate(args);
    };
    G__12114.cljs$core$IFn$_invoke$arity$variadic = G__12114__delegate;
    return G__12114;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var args12117 = [];
  var len__7285__auto___12144 = arguments.length;
  var i__7286__auto___12145 = 0;
  while (true) {
    if (i__7286__auto___12145 < len__7285__auto___12144) {
      args12117.push(arguments[i__7286__auto___12145]);
      var G__12146 = i__7286__auto___12145 + 1;
      i__7286__auto___12145 = G__12146;
      continue;
    } else {
    }
    break;
  }
  var G__12123 = args12117.length;
  switch(G__12123) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args12117.slice(3), 0, null);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7304__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__12148 = null;
    var G__12148__0 = function() {
      var G__12124 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12124) : f.call(null, G__12124);
    };
    var G__12148__1 = function(x) {
      var G__12125 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12125) : f.call(null, G__12125);
    };
    var G__12148__2 = function(x, y) {
      var G__12126 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12126) : f.call(null, G__12126);
    };
    var G__12148__3 = function(x, y, z) {
      var G__12127 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12127) : f.call(null, G__12127);
    };
    var G__12148__4 = function() {
      var G__12149__delegate = function(x, y, z, args) {
        var G__12128 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12128) : f.call(null, G__12128);
      };
      var G__12149 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__12150__i = 0, G__12150__a = new Array(arguments.length - 3);
          while (G__12150__i < G__12150__a.length) {
            G__12150__a[G__12150__i] = arguments[G__12150__i + 3];
            ++G__12150__i;
          }
          args = new cljs.core.IndexedSeq(G__12150__a, 0);
        }
        return G__12149__delegate.call(this, x, y, z, args);
      };
      G__12149.cljs$lang$maxFixedArity = 3;
      G__12149.cljs$lang$applyTo = function(arglist__12151) {
        var x = cljs.core.first(arglist__12151);
        arglist__12151 = cljs.core.next(arglist__12151);
        var y = cljs.core.first(arglist__12151);
        arglist__12151 = cljs.core.next(arglist__12151);
        var z = cljs.core.first(arglist__12151);
        var args = cljs.core.rest(arglist__12151);
        return G__12149__delegate(x, y, z, args);
      };
      G__12149.cljs$core$IFn$_invoke$arity$variadic = G__12149__delegate;
      return G__12149;
    }();
    G__12148 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__12148__0.call(this);
        case 1:
          return G__12148__1.call(this, x);
        case 2:
          return G__12148__2.call(this, x, y);
        case 3:
          return G__12148__3.call(this, x, y, z);
        default:
          var G__12152 = null;
          if (arguments.length > 3) {
            var G__12153__i = 0, G__12153__a = new Array(arguments.length - 3);
            while (G__12153__i < G__12153__a.length) {
              G__12153__a[G__12153__i] = arguments[G__12153__i + 3];
              ++G__12153__i;
            }
            G__12152 = new cljs.core.IndexedSeq(G__12153__a, 0);
          }
          return G__12148__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12152);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12148.cljs$lang$maxFixedArity = 3;
    G__12148.cljs$lang$applyTo = G__12148__4.cljs$lang$applyTo;
    G__12148.cljs$core$IFn$_invoke$arity$0 = G__12148__0;
    G__12148.cljs$core$IFn$_invoke$arity$1 = G__12148__1;
    G__12148.cljs$core$IFn$_invoke$arity$2 = G__12148__2;
    G__12148.cljs$core$IFn$_invoke$arity$3 = G__12148__3;
    G__12148.cljs$core$IFn$_invoke$arity$variadic = G__12148__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__12148;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__12154 = null;
    var G__12154__0 = function() {
      var G__12130 = function() {
        var G__12131 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12131) : g.call(null, G__12131);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12130) : f.call(null, G__12130);
    };
    var G__12154__1 = function(x) {
      var G__12133 = function() {
        var G__12134 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12134) : g.call(null, G__12134);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12133) : f.call(null, G__12133);
    };
    var G__12154__2 = function(x, y) {
      var G__12136 = function() {
        var G__12137 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12137) : g.call(null, G__12137);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12136) : f.call(null, G__12136);
    };
    var G__12154__3 = function(x, y, z) {
      var G__12139 = function() {
        var G__12140 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12140) : g.call(null, G__12140);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12139) : f.call(null, G__12139);
    };
    var G__12154__4 = function() {
      var G__12155__delegate = function(x, y, z, args) {
        var G__12142 = function() {
          var G__12143 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12143) : g.call(null, G__12143);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12142) : f.call(null, G__12142);
      };
      var G__12155 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__12156__i = 0, G__12156__a = new Array(arguments.length - 3);
          while (G__12156__i < G__12156__a.length) {
            G__12156__a[G__12156__i] = arguments[G__12156__i + 3];
            ++G__12156__i;
          }
          args = new cljs.core.IndexedSeq(G__12156__a, 0);
        }
        return G__12155__delegate.call(this, x, y, z, args);
      };
      G__12155.cljs$lang$maxFixedArity = 3;
      G__12155.cljs$lang$applyTo = function(arglist__12157) {
        var x = cljs.core.first(arglist__12157);
        arglist__12157 = cljs.core.next(arglist__12157);
        var y = cljs.core.first(arglist__12157);
        arglist__12157 = cljs.core.next(arglist__12157);
        var z = cljs.core.first(arglist__12157);
        var args = cljs.core.rest(arglist__12157);
        return G__12155__delegate(x, y, z, args);
      };
      G__12155.cljs$core$IFn$_invoke$arity$variadic = G__12155__delegate;
      return G__12155;
    }();
    G__12154 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__12154__0.call(this);
        case 1:
          return G__12154__1.call(this, x);
        case 2:
          return G__12154__2.call(this, x, y);
        case 3:
          return G__12154__3.call(this, x, y, z);
        default:
          var G__12158 = null;
          if (arguments.length > 3) {
            var G__12159__i = 0, G__12159__a = new Array(arguments.length - 3);
            while (G__12159__i < G__12159__a.length) {
              G__12159__a[G__12159__i] = arguments[G__12159__i + 3];
              ++G__12159__i;
            }
            G__12158 = new cljs.core.IndexedSeq(G__12159__a, 0);
          }
          return G__12154__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12158);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12154.cljs$lang$maxFixedArity = 3;
    G__12154.cljs$lang$applyTo = G__12154__4.cljs$lang$applyTo;
    G__12154.cljs$core$IFn$_invoke$arity$0 = G__12154__0;
    G__12154.cljs$core$IFn$_invoke$arity$1 = G__12154__1;
    G__12154.cljs$core$IFn$_invoke$arity$2 = G__12154__2;
    G__12154.cljs$core$IFn$_invoke$arity$3 = G__12154__3;
    G__12154.cljs$core$IFn$_invoke$arity$variadic = G__12154__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__12154;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__12160__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__12161 = cljs.core.first(fs__$2).call(null, ret);
            var G__12162 = cljs.core.next(fs__$2);
            ret = G__12161;
            fs__$2 = G__12162;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__12160 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__12163__i = 0, G__12163__a = new Array(arguments.length - 0);
          while (G__12163__i < G__12163__a.length) {
            G__12163__a[G__12163__i] = arguments[G__12163__i + 0];
            ++G__12163__i;
          }
          args = new cljs.core.IndexedSeq(G__12163__a, 0);
        }
        return G__12160__delegate.call(this, args);
      };
      G__12160.cljs$lang$maxFixedArity = 0;
      G__12160.cljs$lang$applyTo = function(arglist__12164) {
        var args = cljs.core.seq(arglist__12164);
        return G__12160__delegate(args);
      };
      G__12160.cljs$core$IFn$_invoke$arity$variadic = G__12160__delegate;
      return G__12160;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq12118) {
  var G__12119 = cljs.core.first(seq12118);
  var seq12118__$1 = cljs.core.next(seq12118);
  var G__12120 = cljs.core.first(seq12118__$1);
  var seq12118__$2 = cljs.core.next(seq12118__$1);
  var G__12121 = cljs.core.first(seq12118__$2);
  var seq12118__$3 = cljs.core.next(seq12118__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__12119, G__12120, G__12121, seq12118__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var args12165 = [];
  var len__7285__auto___12173 = arguments.length;
  var i__7286__auto___12174 = 0;
  while (true) {
    if (i__7286__auto___12174 < len__7285__auto___12173) {
      args12165.push(arguments[i__7286__auto___12174]);
      var G__12175 = i__7286__auto___12174 + 1;
      i__7286__auto___12174 = G__12175;
      continue;
    } else {
    }
    break;
  }
  var G__12172 = args12165.length;
  switch(G__12172) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args12165.slice(4), 0, null);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7304__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__12177 = null;
    var G__12177__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__12177__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__12177__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__12177__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__12177__4 = function() {
      var G__12178__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__12178 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__12179__i = 0, G__12179__a = new Array(arguments.length - 3);
          while (G__12179__i < G__12179__a.length) {
            G__12179__a[G__12179__i] = arguments[G__12179__i + 3];
            ++G__12179__i;
          }
          args = new cljs.core.IndexedSeq(G__12179__a, 0);
        }
        return G__12178__delegate.call(this, x, y, z, args);
      };
      G__12178.cljs$lang$maxFixedArity = 3;
      G__12178.cljs$lang$applyTo = function(arglist__12180) {
        var x = cljs.core.first(arglist__12180);
        arglist__12180 = cljs.core.next(arglist__12180);
        var y = cljs.core.first(arglist__12180);
        arglist__12180 = cljs.core.next(arglist__12180);
        var z = cljs.core.first(arglist__12180);
        var args = cljs.core.rest(arglist__12180);
        return G__12178__delegate(x, y, z, args);
      };
      G__12178.cljs$core$IFn$_invoke$arity$variadic = G__12178__delegate;
      return G__12178;
    }();
    G__12177 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__12177__0.call(this);
        case 1:
          return G__12177__1.call(this, x);
        case 2:
          return G__12177__2.call(this, x, y);
        case 3:
          return G__12177__3.call(this, x, y, z);
        default:
          var G__12181 = null;
          if (arguments.length > 3) {
            var G__12182__i = 0, G__12182__a = new Array(arguments.length - 3);
            while (G__12182__i < G__12182__a.length) {
              G__12182__a[G__12182__i] = arguments[G__12182__i + 3];
              ++G__12182__i;
            }
            G__12181 = new cljs.core.IndexedSeq(G__12182__a, 0);
          }
          return G__12177__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12181);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12177.cljs$lang$maxFixedArity = 3;
    G__12177.cljs$lang$applyTo = G__12177__4.cljs$lang$applyTo;
    G__12177.cljs$core$IFn$_invoke$arity$0 = G__12177__0;
    G__12177.cljs$core$IFn$_invoke$arity$1 = G__12177__1;
    G__12177.cljs$core$IFn$_invoke$arity$2 = G__12177__2;
    G__12177.cljs$core$IFn$_invoke$arity$3 = G__12177__3;
    G__12177.cljs$core$IFn$_invoke$arity$variadic = G__12177__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__12177;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__12183 = null;
    var G__12183__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__12183__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__12183__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__12183__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__12183__4 = function() {
      var G__12184__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__12184 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__12185__i = 0, G__12185__a = new Array(arguments.length - 3);
          while (G__12185__i < G__12185__a.length) {
            G__12185__a[G__12185__i] = arguments[G__12185__i + 3];
            ++G__12185__i;
          }
          args = new cljs.core.IndexedSeq(G__12185__a, 0);
        }
        return G__12184__delegate.call(this, x, y, z, args);
      };
      G__12184.cljs$lang$maxFixedArity = 3;
      G__12184.cljs$lang$applyTo = function(arglist__12186) {
        var x = cljs.core.first(arglist__12186);
        arglist__12186 = cljs.core.next(arglist__12186);
        var y = cljs.core.first(arglist__12186);
        arglist__12186 = cljs.core.next(arglist__12186);
        var z = cljs.core.first(arglist__12186);
        var args = cljs.core.rest(arglist__12186);
        return G__12184__delegate(x, y, z, args);
      };
      G__12184.cljs$core$IFn$_invoke$arity$variadic = G__12184__delegate;
      return G__12184;
    }();
    G__12183 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__12183__0.call(this);
        case 1:
          return G__12183__1.call(this, x);
        case 2:
          return G__12183__2.call(this, x, y);
        case 3:
          return G__12183__3.call(this, x, y, z);
        default:
          var G__12187 = null;
          if (arguments.length > 3) {
            var G__12188__i = 0, G__12188__a = new Array(arguments.length - 3);
            while (G__12188__i < G__12188__a.length) {
              G__12188__a[G__12188__i] = arguments[G__12188__i + 3];
              ++G__12188__i;
            }
            G__12187 = new cljs.core.IndexedSeq(G__12188__a, 0);
          }
          return G__12183__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12187);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12183.cljs$lang$maxFixedArity = 3;
    G__12183.cljs$lang$applyTo = G__12183__4.cljs$lang$applyTo;
    G__12183.cljs$core$IFn$_invoke$arity$0 = G__12183__0;
    G__12183.cljs$core$IFn$_invoke$arity$1 = G__12183__1;
    G__12183.cljs$core$IFn$_invoke$arity$2 = G__12183__2;
    G__12183.cljs$core$IFn$_invoke$arity$3 = G__12183__3;
    G__12183.cljs$core$IFn$_invoke$arity$variadic = G__12183__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__12183;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__12189 = null;
    var G__12189__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__12189__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__12189__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__12189__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__12189__4 = function() {
      var G__12190__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__12190 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__12191__i = 0, G__12191__a = new Array(arguments.length - 3);
          while (G__12191__i < G__12191__a.length) {
            G__12191__a[G__12191__i] = arguments[G__12191__i + 3];
            ++G__12191__i;
          }
          args = new cljs.core.IndexedSeq(G__12191__a, 0);
        }
        return G__12190__delegate.call(this, x, y, z, args);
      };
      G__12190.cljs$lang$maxFixedArity = 3;
      G__12190.cljs$lang$applyTo = function(arglist__12192) {
        var x = cljs.core.first(arglist__12192);
        arglist__12192 = cljs.core.next(arglist__12192);
        var y = cljs.core.first(arglist__12192);
        arglist__12192 = cljs.core.next(arglist__12192);
        var z = cljs.core.first(arglist__12192);
        var args = cljs.core.rest(arglist__12192);
        return G__12190__delegate(x, y, z, args);
      };
      G__12190.cljs$core$IFn$_invoke$arity$variadic = G__12190__delegate;
      return G__12190;
    }();
    G__12189 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__12189__0.call(this);
        case 1:
          return G__12189__1.call(this, x);
        case 2:
          return G__12189__2.call(this, x, y);
        case 3:
          return G__12189__3.call(this, x, y, z);
        default:
          var G__12193 = null;
          if (arguments.length > 3) {
            var G__12194__i = 0, G__12194__a = new Array(arguments.length - 3);
            while (G__12194__i < G__12194__a.length) {
              G__12194__a[G__12194__i] = arguments[G__12194__i + 3];
              ++G__12194__i;
            }
            G__12193 = new cljs.core.IndexedSeq(G__12194__a, 0);
          }
          return G__12189__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12193);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12189.cljs$lang$maxFixedArity = 3;
    G__12189.cljs$lang$applyTo = G__12189__4.cljs$lang$applyTo;
    G__12189.cljs$core$IFn$_invoke$arity$0 = G__12189__0;
    G__12189.cljs$core$IFn$_invoke$arity$1 = G__12189__1;
    G__12189.cljs$core$IFn$_invoke$arity$2 = G__12189__2;
    G__12189.cljs$core$IFn$_invoke$arity$3 = G__12189__3;
    G__12189.cljs$core$IFn$_invoke$arity$variadic = G__12189__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__12189;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__12195__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__12195 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__12196__i = 0, G__12196__a = new Array(arguments.length - 0);
        while (G__12196__i < G__12196__a.length) {
          G__12196__a[G__12196__i] = arguments[G__12196__i + 0];
          ++G__12196__i;
        }
        args = new cljs.core.IndexedSeq(G__12196__a, 0);
      }
      return G__12195__delegate.call(this, args);
    };
    G__12195.cljs$lang$maxFixedArity = 0;
    G__12195.cljs$lang$applyTo = function(arglist__12197) {
      var args = cljs.core.seq(arglist__12197);
      return G__12195__delegate(args);
    };
    G__12195.cljs$core$IFn$_invoke$arity$variadic = G__12195__delegate;
    return G__12195;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq12166) {
  var G__12167 = cljs.core.first(seq12166);
  var seq12166__$1 = cljs.core.next(seq12166);
  var G__12168 = cljs.core.first(seq12166__$1);
  var seq12166__$2 = cljs.core.next(seq12166__$1);
  var G__12169 = cljs.core.first(seq12166__$2);
  var seq12166__$3 = cljs.core.next(seq12166__$2);
  var G__12170 = cljs.core.first(seq12166__$3);
  var seq12166__$4 = cljs.core.next(seq12166__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__12167, G__12168, G__12169, G__12170, seq12166__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var args12198 = [];
  var len__7285__auto___12217 = arguments.length;
  var i__7286__auto___12218 = 0;
  while (true) {
    if (i__7286__auto___12218 < len__7285__auto___12217) {
      args12198.push(arguments[i__7286__auto___12218]);
      var G__12219 = i__7286__auto___12218 + 1;
      i__7286__auto___12218 = G__12219;
      continue;
    } else {
    }
    break;
  }
  var G__12200 = args12198.length;
  switch(G__12200) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12198.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__12221 = null;
    var G__12221__1 = function(a) {
      var G__12201 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12201) : f.call(null, G__12201);
    };
    var G__12221__2 = function(a, b) {
      var G__12202 = a == null ? x : a;
      var G__12203 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12202, G__12203) : f.call(null, G__12202, G__12203);
    };
    var G__12221__3 = function(a, b, c) {
      var G__12204 = a == null ? x : a;
      var G__12205 = b;
      var G__12206 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12204, G__12205, G__12206) : f.call(null, G__12204, G__12205, G__12206);
    };
    var G__12221__4 = function() {
      var G__12222__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__12222 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__12223__i = 0, G__12223__a = new Array(arguments.length - 3);
          while (G__12223__i < G__12223__a.length) {
            G__12223__a[G__12223__i] = arguments[G__12223__i + 3];
            ++G__12223__i;
          }
          ds = new cljs.core.IndexedSeq(G__12223__a, 0);
        }
        return G__12222__delegate.call(this, a, b, c, ds);
      };
      G__12222.cljs$lang$maxFixedArity = 3;
      G__12222.cljs$lang$applyTo = function(arglist__12224) {
        var a = cljs.core.first(arglist__12224);
        arglist__12224 = cljs.core.next(arglist__12224);
        var b = cljs.core.first(arglist__12224);
        arglist__12224 = cljs.core.next(arglist__12224);
        var c = cljs.core.first(arglist__12224);
        var ds = cljs.core.rest(arglist__12224);
        return G__12222__delegate(a, b, c, ds);
      };
      G__12222.cljs$core$IFn$_invoke$arity$variadic = G__12222__delegate;
      return G__12222;
    }();
    G__12221 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__12221__1.call(this, a);
        case 2:
          return G__12221__2.call(this, a, b);
        case 3:
          return G__12221__3.call(this, a, b, c);
        default:
          var G__12225 = null;
          if (arguments.length > 3) {
            var G__12226__i = 0, G__12226__a = new Array(arguments.length - 3);
            while (G__12226__i < G__12226__a.length) {
              G__12226__a[G__12226__i] = arguments[G__12226__i + 3];
              ++G__12226__i;
            }
            G__12225 = new cljs.core.IndexedSeq(G__12226__a, 0);
          }
          return G__12221__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__12225);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12221.cljs$lang$maxFixedArity = 3;
    G__12221.cljs$lang$applyTo = G__12221__4.cljs$lang$applyTo;
    G__12221.cljs$core$IFn$_invoke$arity$1 = G__12221__1;
    G__12221.cljs$core$IFn$_invoke$arity$2 = G__12221__2;
    G__12221.cljs$core$IFn$_invoke$arity$3 = G__12221__3;
    G__12221.cljs$core$IFn$_invoke$arity$variadic = G__12221__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__12221;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__12227 = null;
    var G__12227__2 = function(a, b) {
      var G__12207 = a == null ? x : a;
      var G__12208 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12207, G__12208) : f.call(null, G__12207, G__12208);
    };
    var G__12227__3 = function(a, b, c) {
      var G__12209 = a == null ? x : a;
      var G__12210 = b == null ? y : b;
      var G__12211 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12209, G__12210, G__12211) : f.call(null, G__12209, G__12210, G__12211);
    };
    var G__12227__4 = function() {
      var G__12228__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__12228 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__12229__i = 0, G__12229__a = new Array(arguments.length - 3);
          while (G__12229__i < G__12229__a.length) {
            G__12229__a[G__12229__i] = arguments[G__12229__i + 3];
            ++G__12229__i;
          }
          ds = new cljs.core.IndexedSeq(G__12229__a, 0);
        }
        return G__12228__delegate.call(this, a, b, c, ds);
      };
      G__12228.cljs$lang$maxFixedArity = 3;
      G__12228.cljs$lang$applyTo = function(arglist__12230) {
        var a = cljs.core.first(arglist__12230);
        arglist__12230 = cljs.core.next(arglist__12230);
        var b = cljs.core.first(arglist__12230);
        arglist__12230 = cljs.core.next(arglist__12230);
        var c = cljs.core.first(arglist__12230);
        var ds = cljs.core.rest(arglist__12230);
        return G__12228__delegate(a, b, c, ds);
      };
      G__12228.cljs$core$IFn$_invoke$arity$variadic = G__12228__delegate;
      return G__12228;
    }();
    G__12227 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__12227__2.call(this, a, b);
        case 3:
          return G__12227__3.call(this, a, b, c);
        default:
          var G__12231 = null;
          if (arguments.length > 3) {
            var G__12232__i = 0, G__12232__a = new Array(arguments.length - 3);
            while (G__12232__i < G__12232__a.length) {
              G__12232__a[G__12232__i] = arguments[G__12232__i + 3];
              ++G__12232__i;
            }
            G__12231 = new cljs.core.IndexedSeq(G__12232__a, 0);
          }
          return G__12227__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__12231);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12227.cljs$lang$maxFixedArity = 3;
    G__12227.cljs$lang$applyTo = G__12227__4.cljs$lang$applyTo;
    G__12227.cljs$core$IFn$_invoke$arity$2 = G__12227__2;
    G__12227.cljs$core$IFn$_invoke$arity$3 = G__12227__3;
    G__12227.cljs$core$IFn$_invoke$arity$variadic = G__12227__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__12227;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__12233 = null;
    var G__12233__2 = function(a, b) {
      var G__12212 = a == null ? x : a;
      var G__12213 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12212, G__12213) : f.call(null, G__12212, G__12213);
    };
    var G__12233__3 = function(a, b, c) {
      var G__12214 = a == null ? x : a;
      var G__12215 = b == null ? y : b;
      var G__12216 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12214, G__12215, G__12216) : f.call(null, G__12214, G__12215, G__12216);
    };
    var G__12233__4 = function() {
      var G__12234__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__12234 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__12235__i = 0, G__12235__a = new Array(arguments.length - 3);
          while (G__12235__i < G__12235__a.length) {
            G__12235__a[G__12235__i] = arguments[G__12235__i + 3];
            ++G__12235__i;
          }
          ds = new cljs.core.IndexedSeq(G__12235__a, 0);
        }
        return G__12234__delegate.call(this, a, b, c, ds);
      };
      G__12234.cljs$lang$maxFixedArity = 3;
      G__12234.cljs$lang$applyTo = function(arglist__12236) {
        var a = cljs.core.first(arglist__12236);
        arglist__12236 = cljs.core.next(arglist__12236);
        var b = cljs.core.first(arglist__12236);
        arglist__12236 = cljs.core.next(arglist__12236);
        var c = cljs.core.first(arglist__12236);
        var ds = cljs.core.rest(arglist__12236);
        return G__12234__delegate(a, b, c, ds);
      };
      G__12234.cljs$core$IFn$_invoke$arity$variadic = G__12234__delegate;
      return G__12234;
    }();
    G__12233 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__12233__2.call(this, a, b);
        case 3:
          return G__12233__3.call(this, a, b, c);
        default:
          var G__12237 = null;
          if (arguments.length > 3) {
            var G__12238__i = 0, G__12238__a = new Array(arguments.length - 3);
            while (G__12238__i < G__12238__a.length) {
              G__12238__a[G__12238__i] = arguments[G__12238__i + 3];
              ++G__12238__i;
            }
            G__12237 = new cljs.core.IndexedSeq(G__12238__a, 0);
          }
          return G__12233__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__12237);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12233.cljs$lang$maxFixedArity = 3;
    G__12233.cljs$lang$applyTo = G__12233__4.cljs$lang$applyTo;
    G__12233.cljs$core$IFn$_invoke$arity$2 = G__12233__2;
    G__12233.cljs$core$IFn$_invoke$arity$3 = G__12233__3;
    G__12233.cljs$core$IFn$_invoke$arity$variadic = G__12233__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__12233;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var args12239 = [];
  var len__7285__auto___12272 = arguments.length;
  var i__7286__auto___12273 = 0;
  while (true) {
    if (i__7286__auto___12273 < len__7285__auto___12272) {
      args12239.push(arguments[i__7286__auto___12273]);
      var G__12274 = i__7286__auto___12273 + 1;
      i__7286__auto___12273 = G__12274;
      continue;
    } else {
    }
    break;
  }
  var G__12241 = args12239.length;
  switch(G__12241) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12239.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1);
    return function(i) {
      return function() {
        var G__12276 = null;
        var G__12276__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__12276__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__12276__2 = function(result, input) {
          var G__12244 = result;
          var G__12245 = function() {
            var G__12246 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__12247 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12246, G__12247) : f.call(null, G__12246, G__12247);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12244, G__12245) : rf.call(null, G__12244, G__12245);
        };
        G__12276 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__12276__0.call(this);
            case 1:
              return G__12276__1.call(this, result);
            case 2:
              return G__12276__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__12276.cljs$core$IFn$_invoke$arity$0 = G__12276__0;
        G__12276.cljs$core$IFn$_invoke$arity$1 = G__12276__1;
        G__12276.cljs$core$IFn$_invoke$arity$2 = G__12276__2;
        return G__12276;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__7125__auto___12277 = size;
          var i_12278 = 0;
          while (true) {
            if (i_12278 < n__7125__auto___12277) {
              cljs.core.chunk_append(b, function() {
                var G__12268 = idx + i_12278;
                var G__12269 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_12278);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12268, G__12269) : f.call(null, G__12268, G__12269);
              }());
              var G__12279 = i_12278 + 1;
              i_12278 = G__12279;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__12270 = idx;
            var G__12271 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12270, G__12271) : f.call(null, G__12270, G__12271);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var args12280 = [];
  var len__7285__auto___12285 = arguments.length;
  var i__7286__auto___12286 = 0;
  while (true) {
    if (i__7286__auto___12286 < len__7285__auto___12285) {
      args12280.push(arguments[i__7286__auto___12286]);
      var G__12287 = i__7286__auto___12286 + 1;
      i__7286__auto___12286 = G__12287;
      continue;
    } else {
    }
    break;
  }
  var G__12282 = args12280.length;
  switch(G__12282) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12280.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__12289 = null;
      var G__12289__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__12289__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__12289__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__12289 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__12289__0.call(this);
          case 1:
            return G__12289__1.call(this, result);
          case 2:
            return G__12289__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12289.cljs$core$IFn$_invoke$arity$0 = G__12289__0;
      G__12289.cljs$core$IFn$_invoke$arity$1 = G__12289__1;
      G__12289.cljs$core$IFn$_invoke$arity$2 = G__12289__2;
      return G__12289;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__7125__auto___12290 = size;
        var i_12291 = 0;
        while (true) {
          if (i_12291 < n__7125__auto___12290) {
            var x_12292 = function() {
              var G__12283 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_12291);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12283) : f.call(null, G__12283);
            }();
            if (x_12292 == null) {
            } else {
              cljs.core.chunk_append(b, x_12292);
            }
            var G__12293 = i_12291 + 1;
            i_12291 = G__12293;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__12284 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12284) : f.call(null, G__12284);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__12294 = cljs.core.seq(self__.watches);
  var chunk__12295 = null;
  var count__12296 = 0;
  var i__12297 = 0;
  while (true) {
    if (i__12297 < count__12296) {
      var vec__12298 = chunk__12295.cljs$core$IIndexed$_nth$arity$2(null, i__12297);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12298, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12298, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__12304 = seq__12294;
      var G__12305 = chunk__12295;
      var G__12306 = count__12296;
      var G__12307 = i__12297 + 1;
      seq__12294 = G__12304;
      chunk__12295 = G__12305;
      count__12296 = G__12306;
      i__12297 = G__12307;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__12294);
      if (temp__4425__auto__) {
        var seq__12294__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__12294__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__12294__$1);
          var G__12308 = cljs.core.chunk_rest(seq__12294__$1);
          var G__12309 = c__7021__auto__;
          var G__12310 = cljs.core.count(c__7021__auto__);
          var G__12311 = 0;
          seq__12294 = G__12308;
          chunk__12295 = G__12309;
          count__12296 = G__12310;
          i__12297 = G__12311;
          continue;
        } else {
          var vec__12301 = cljs.core.first(seq__12294__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12301, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12301, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__12312 = cljs.core.next(seq__12294__$1);
          var G__12313 = null;
          var G__12314 = 0;
          var G__12315 = 0;
          seq__12294 = G__12312;
          chunk__12295 = G__12313;
          count__12296 = G__12314;
          i__12297 = G__12315;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var args12316 = [];
  var len__7285__auto___12324 = arguments.length;
  var i__7286__auto___12325 = 0;
  while (true) {
    if (i__7286__auto___12325 < len__7285__auto___12324) {
      args12316.push(arguments[i__7286__auto___12325]);
      var G__12326 = i__7286__auto___12325 + 1;
      i__7286__auto___12325 = G__12326;
      continue;
    } else {
    }
    break;
  }
  var G__12320 = args12316.length;
  switch(G__12320) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args12316.slice(1), 0, null);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7304__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__12321) {
  var map__12322 = p__12321;
  var map__12322__$1 = (!(map__12322 == null) ? map__12322.cljs$lang$protocol_mask$partition0$ & 64 || map__12322.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12322) : map__12322;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12322__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12322__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq12317) {
  var G__12318 = cljs.core.first(seq12317);
  var seq12317__$1 = cljs.core.next(seq12317);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__12318, seq12317__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str("(validate new-value)")].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var args12328 = [];
  var len__7285__auto___12342 = arguments.length;
  var i__7286__auto___12343 = 0;
  while (true) {
    if (i__7286__auto___12343 < len__7285__auto___12342) {
      args12328.push(arguments[i__7286__auto___12343]);
      var G__12344 = i__7286__auto___12343 + 1;
      i__7286__auto___12343 = G__12344;
      continue;
    } else {
    }
    break;
  }
  var G__12335 = args12328.length;
  switch(G__12335) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args12328.slice(4), 0, null);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7304__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__12336 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12336) : f.call(null, G__12336);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__12337 = a.state;
      var G__12338 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12337, G__12338) : f.call(null, G__12337, G__12338);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__12339 = a.state;
      var G__12340 = x;
      var G__12341 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12339, G__12340, G__12341) : f.call(null, G__12339, G__12340, G__12341);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq12329) {
  var G__12330 = cljs.core.first(seq12329);
  var seq12329__$1 = cljs.core.next(seq12329);
  var G__12331 = cljs.core.first(seq12329__$1);
  var seq12329__$2 = cljs.core.next(seq12329__$1);
  var G__12332 = cljs.core.first(seq12329__$2);
  var seq12329__$3 = cljs.core.next(seq12329__$2);
  var G__12333 = cljs.core.first(seq12329__$3);
  var seq12329__$4 = cljs.core.next(seq12329__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__12330, G__12331, G__12332, G__12333, seq12329__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var args12346 = [];
  var len__7285__auto___12377 = arguments.length;
  var i__7286__auto___12378 = 0;
  while (true) {
    if (i__7286__auto___12378 < len__7285__auto___12377) {
      args12346.push(arguments[i__7286__auto___12378]);
      var G__12379 = i__7286__auto___12378 + 1;
      i__7286__auto___12378 = G__12379;
      continue;
    } else {
    }
    break;
  }
  var G__12348 = args12346.length;
  switch(G__12348) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12346.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__12381 = null;
        var G__12381__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__12381__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__12381__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__12381 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__12381__0.call(this);
            case 1:
              return G__12381__1.call(this, result);
            case 2:
              return G__12381__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__12381.cljs$core$IFn$_invoke$arity$0 = G__12381__0;
        G__12381.cljs$core$IFn$_invoke$arity$1 = G__12381__1;
        G__12381.cljs$core$IFn$_invoke$arity$2 = G__12381__2;
        return G__12381;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__7125__auto___12382 = size;
          var i_12383 = 0;
          while (true) {
            if (i_12383 < n__7125__auto___12382) {
              var x_12384 = function() {
                var G__12373 = idx + i_12383;
                var G__12374 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_12383);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12373, G__12374) : f.call(null, G__12373, G__12374);
              }();
              if (x_12384 == null) {
              } else {
                cljs.core.chunk_append(b, x_12384);
              }
              var G__12385 = i_12383 + 1;
              i_12383 = G__12385;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__12375 = idx;
            var G__12376 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12375, G__12376) : f.call(null, G__12375, G__12376);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var args12392 = [];
  var len__7285__auto___12399 = arguments.length;
  var i__7286__auto___12400 = 0;
  while (true) {
    if (i__7286__auto___12400 < len__7285__auto___12399) {
      args12392.push(arguments[i__7286__auto___12400]);
      var G__12401 = i__7286__auto___12400 + 1;
      i__7286__auto___12400 = G__12401;
      continue;
    } else {
    }
    break;
  }
  var G__12398 = args12392.length;
  switch(G__12398) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args12392.slice(3), 0, null);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7304__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__12403__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__6198__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__6198__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__6198__auto__;
          }
        }());
      };
      var G__12403 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__12404__i = 0, G__12404__a = new Array(arguments.length - 3);
          while (G__12404__i < G__12404__a.length) {
            G__12404__a[G__12404__i] = arguments[G__12404__i + 3];
            ++G__12404__i;
          }
          args = new cljs.core.IndexedSeq(G__12404__a, 0);
        }
        return G__12403__delegate.call(this, x, y, z, args);
      };
      G__12403.cljs$lang$maxFixedArity = 3;
      G__12403.cljs$lang$applyTo = function(arglist__12405) {
        var x = cljs.core.first(arglist__12405);
        arglist__12405 = cljs.core.next(arglist__12405);
        var y = cljs.core.first(arglist__12405);
        arglist__12405 = cljs.core.next(arglist__12405);
        var z = cljs.core.first(arglist__12405);
        var args = cljs.core.rest(arglist__12405);
        return G__12403__delegate(x, y, z, args);
      };
      G__12403.cljs$core$IFn$_invoke$arity$variadic = G__12403__delegate;
      return G__12403;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__12406 = null;
          if (arguments.length > 3) {
            var G__12407__i = 0, G__12407__a = new Array(arguments.length - 3);
            while (G__12407__i < G__12407__a.length) {
              G__12407__a[G__12407__i] = arguments[G__12407__i + 3];
              ++G__12407__i;
            }
            G__12406 = new cljs.core.IndexedSeq(G__12407__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12406);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            var and__6198__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__6198__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__6198__auto____$2;
            }
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            var and__6198__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__6198__auto____$2)) {
              var and__6198__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__6198__auto____$3)) {
                var and__6198__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__6198__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__6198__auto____$4;
                }
              } else {
                return and__6198__auto____$3;
              }
            } else {
              return and__6198__auto____$2;
            }
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__12408__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__6198__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__6198__auto__)) {
            return cljs.core.every_QMARK_(function(and__6198__auto__) {
              return function(p1__12386_SHARP_) {
                var and__6198__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__12386_SHARP_) : p1.call(null, p1__12386_SHARP_);
                if (cljs.core.truth_(and__6198__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__12386_SHARP_) : p2.call(null, p1__12386_SHARP_);
                } else {
                  return and__6198__auto____$1;
                }
              };
            }(and__6198__auto__), args);
          } else {
            return and__6198__auto__;
          }
        }());
      };
      var G__12408 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__12409__i = 0, G__12409__a = new Array(arguments.length - 3);
          while (G__12409__i < G__12409__a.length) {
            G__12409__a[G__12409__i] = arguments[G__12409__i + 3];
            ++G__12409__i;
          }
          args = new cljs.core.IndexedSeq(G__12409__a, 0);
        }
        return G__12408__delegate.call(this, x, y, z, args);
      };
      G__12408.cljs$lang$maxFixedArity = 3;
      G__12408.cljs$lang$applyTo = function(arglist__12410) {
        var x = cljs.core.first(arglist__12410);
        arglist__12410 = cljs.core.next(arglist__12410);
        var y = cljs.core.first(arglist__12410);
        arglist__12410 = cljs.core.next(arglist__12410);
        var z = cljs.core.first(arglist__12410);
        var args = cljs.core.rest(arglist__12410);
        return G__12408__delegate(x, y, z, args);
      };
      G__12408.cljs$core$IFn$_invoke$arity$variadic = G__12408__delegate;
      return G__12408;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__12411 = null;
          if (arguments.length > 3) {
            var G__12412__i = 0, G__12412__a = new Array(arguments.length - 3);
            while (G__12412__i < G__12412__a.length) {
              G__12412__a[G__12412__i] = arguments[G__12412__i + 3];
              ++G__12412__i;
            }
            G__12411 = new cljs.core.IndexedSeq(G__12412__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12411);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            var and__6198__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__6198__auto____$2)) {
              var and__6198__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__6198__auto____$3)) {
                var and__6198__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__6198__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__6198__auto____$4;
                }
              } else {
                return and__6198__auto____$3;
              }
            } else {
              return and__6198__auto____$2;
            }
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            var and__6198__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__6198__auto____$2)) {
              var and__6198__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__6198__auto____$3)) {
                var and__6198__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__6198__auto____$4)) {
                  var and__6198__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__6198__auto____$5)) {
                    var and__6198__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__6198__auto____$6)) {
                      var and__6198__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__6198__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__6198__auto____$7;
                      }
                    } else {
                      return and__6198__auto____$6;
                    }
                  } else {
                    return and__6198__auto____$5;
                  }
                } else {
                  return and__6198__auto____$4;
                }
              } else {
                return and__6198__auto____$3;
              }
            } else {
              return and__6198__auto____$2;
            }
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__12413__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__6198__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__6198__auto__)) {
            return cljs.core.every_QMARK_(function(and__6198__auto__) {
              return function(p1__12387_SHARP_) {
                var and__6198__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__12387_SHARP_) : p1.call(null, p1__12387_SHARP_);
                if (cljs.core.truth_(and__6198__auto____$1)) {
                  var and__6198__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__12387_SHARP_) : p2.call(null, p1__12387_SHARP_);
                  if (cljs.core.truth_(and__6198__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__12387_SHARP_) : p3.call(null, p1__12387_SHARP_);
                  } else {
                    return and__6198__auto____$2;
                  }
                } else {
                  return and__6198__auto____$1;
                }
              };
            }(and__6198__auto__), args);
          } else {
            return and__6198__auto__;
          }
        }());
      };
      var G__12413 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__12414__i = 0, G__12414__a = new Array(arguments.length - 3);
          while (G__12414__i < G__12414__a.length) {
            G__12414__a[G__12414__i] = arguments[G__12414__i + 3];
            ++G__12414__i;
          }
          args = new cljs.core.IndexedSeq(G__12414__a, 0);
        }
        return G__12413__delegate.call(this, x, y, z, args);
      };
      G__12413.cljs$lang$maxFixedArity = 3;
      G__12413.cljs$lang$applyTo = function(arglist__12415) {
        var x = cljs.core.first(arglist__12415);
        arglist__12415 = cljs.core.next(arglist__12415);
        var y = cljs.core.first(arglist__12415);
        arglist__12415 = cljs.core.next(arglist__12415);
        var z = cljs.core.first(arglist__12415);
        var args = cljs.core.rest(arglist__12415);
        return G__12413__delegate(x, y, z, args);
      };
      G__12413.cljs$core$IFn$_invoke$arity$variadic = G__12413__delegate;
      return G__12413;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__12416 = null;
          if (arguments.length > 3) {
            var G__12417__i = 0, G__12417__a = new Array(arguments.length - 3);
            while (G__12417__i < G__12417__a.length) {
              G__12417__a[G__12417__i] = arguments[G__12417__i + 3];
              ++G__12417__i;
            }
            G__12416 = new cljs.core.IndexedSeq(G__12417__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12416);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__12388_SHARP_) {
            return p1__12388_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12388_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__12388_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__12389_SHARP_) {
            var and__6198__auto__ = p1__12389_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12389_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__12389_SHARP_.call(null, x);
            if (cljs.core.truth_(and__6198__auto__)) {
              return p1__12389_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12389_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__12389_SHARP_.call(null, y);
            } else {
              return and__6198__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__12390_SHARP_) {
            var and__6198__auto__ = p1__12390_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12390_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__12390_SHARP_.call(null, x);
            if (cljs.core.truth_(and__6198__auto__)) {
              var and__6198__auto____$1 = p1__12390_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12390_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__12390_SHARP_.call(null, y);
              if (cljs.core.truth_(and__6198__auto____$1)) {
                return p1__12390_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12390_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__12390_SHARP_.call(null, z);
              } else {
                return and__6198__auto____$1;
              }
            } else {
              return and__6198__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__12418__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__6198__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__6198__auto__)) {
              return cljs.core.every_QMARK_(function(and__6198__auto__, ps__$1) {
                return function(p1__12391_SHARP_) {
                  return cljs.core.every_QMARK_(p1__12391_SHARP_, args);
                };
              }(and__6198__auto__, ps__$1), ps__$1);
            } else {
              return and__6198__auto__;
            }
          }());
        };
        var G__12418 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12419__i = 0, G__12419__a = new Array(arguments.length - 3);
            while (G__12419__i < G__12419__a.length) {
              G__12419__a[G__12419__i] = arguments[G__12419__i + 3];
              ++G__12419__i;
            }
            args = new cljs.core.IndexedSeq(G__12419__a, 0);
          }
          return G__12418__delegate.call(this, x, y, z, args);
        };
        G__12418.cljs$lang$maxFixedArity = 3;
        G__12418.cljs$lang$applyTo = function(arglist__12420) {
          var x = cljs.core.first(arglist__12420);
          arglist__12420 = cljs.core.next(arglist__12420);
          var y = cljs.core.first(arglist__12420);
          arglist__12420 = cljs.core.next(arglist__12420);
          var z = cljs.core.first(arglist__12420);
          var args = cljs.core.rest(arglist__12420);
          return G__12418__delegate(x, y, z, args);
        };
        G__12418.cljs$core$IFn$_invoke$arity$variadic = G__12418__delegate;
        return G__12418;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__12421 = null;
            if (arguments.length > 3) {
              var G__12422__i = 0, G__12422__a = new Array(arguments.length - 3);
              while (G__12422__i < G__12422__a.length) {
                G__12422__a[G__12422__i] = arguments[G__12422__i + 3];
                ++G__12422__i;
              }
              G__12421 = new cljs.core.IndexedSeq(G__12422__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12421);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq12393) {
  var G__12394 = cljs.core.first(seq12393);
  var seq12393__$1 = cljs.core.next(seq12393);
  var G__12395 = cljs.core.first(seq12393__$1);
  var seq12393__$2 = cljs.core.next(seq12393__$1);
  var G__12396 = cljs.core.first(seq12393__$2);
  var seq12393__$3 = cljs.core.next(seq12393__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__12394, G__12395, G__12396, seq12393__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var args12429 = [];
  var len__7285__auto___12436 = arguments.length;
  var i__7286__auto___12437 = 0;
  while (true) {
    if (i__7286__auto___12437 < len__7285__auto___12436) {
      args12429.push(arguments[i__7286__auto___12437]);
      var G__12438 = i__7286__auto___12437 + 1;
      i__7286__auto___12437 = G__12438;
      continue;
    } else {
    }
    break;
  }
  var G__12435 = args12429.length;
  switch(G__12435) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args12429.slice(3), 0, null);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7304__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__6210__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__6210__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var or__6210__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__6210__auto____$1)) {
          return or__6210__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__12440__delegate = function(x, y, z, args) {
        var or__6210__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__12440 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__12441__i = 0, G__12441__a = new Array(arguments.length - 3);
          while (G__12441__i < G__12441__a.length) {
            G__12441__a[G__12441__i] = arguments[G__12441__i + 3];
            ++G__12441__i;
          }
          args = new cljs.core.IndexedSeq(G__12441__a, 0);
        }
        return G__12440__delegate.call(this, x, y, z, args);
      };
      G__12440.cljs$lang$maxFixedArity = 3;
      G__12440.cljs$lang$applyTo = function(arglist__12442) {
        var x = cljs.core.first(arglist__12442);
        arglist__12442 = cljs.core.next(arglist__12442);
        var y = cljs.core.first(arglist__12442);
        arglist__12442 = cljs.core.next(arglist__12442);
        var z = cljs.core.first(arglist__12442);
        var args = cljs.core.rest(arglist__12442);
        return G__12440__delegate(x, y, z, args);
      };
      G__12440.cljs$core$IFn$_invoke$arity$variadic = G__12440__delegate;
      return G__12440;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__12443 = null;
          if (arguments.length > 3) {
            var G__12444__i = 0, G__12444__a = new Array(arguments.length - 3);
            while (G__12444__i < G__12444__a.length) {
              G__12444__a[G__12444__i] = arguments[G__12444__i + 3];
              ++G__12444__i;
            }
            G__12443 = new cljs.core.IndexedSeq(G__12444__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12443);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__6210__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__6210__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var or__6210__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__6210__auto____$1)) {
          return or__6210__auto____$1;
        } else {
          var or__6210__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__6210__auto____$2)) {
            return or__6210__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__6210__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var or__6210__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__6210__auto____$1)) {
          return or__6210__auto____$1;
        } else {
          var or__6210__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__6210__auto____$2)) {
            return or__6210__auto____$2;
          } else {
            var or__6210__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__6210__auto____$3)) {
              return or__6210__auto____$3;
            } else {
              var or__6210__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__6210__auto____$4)) {
                return or__6210__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__12445__delegate = function(x, y, z, args) {
        var or__6210__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          return cljs.core.some(function(or__6210__auto__) {
            return function(p1__12423_SHARP_) {
              var or__6210__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__12423_SHARP_) : p1.call(null, p1__12423_SHARP_);
              if (cljs.core.truth_(or__6210__auto____$1)) {
                return or__6210__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__12423_SHARP_) : p2.call(null, p1__12423_SHARP_);
              }
            };
          }(or__6210__auto__), args);
        }
      };
      var G__12445 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__12446__i = 0, G__12446__a = new Array(arguments.length - 3);
          while (G__12446__i < G__12446__a.length) {
            G__12446__a[G__12446__i] = arguments[G__12446__i + 3];
            ++G__12446__i;
          }
          args = new cljs.core.IndexedSeq(G__12446__a, 0);
        }
        return G__12445__delegate.call(this, x, y, z, args);
      };
      G__12445.cljs$lang$maxFixedArity = 3;
      G__12445.cljs$lang$applyTo = function(arglist__12447) {
        var x = cljs.core.first(arglist__12447);
        arglist__12447 = cljs.core.next(arglist__12447);
        var y = cljs.core.first(arglist__12447);
        arglist__12447 = cljs.core.next(arglist__12447);
        var z = cljs.core.first(arglist__12447);
        var args = cljs.core.rest(arglist__12447);
        return G__12445__delegate(x, y, z, args);
      };
      G__12445.cljs$core$IFn$_invoke$arity$variadic = G__12445__delegate;
      return G__12445;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__12448 = null;
          if (arguments.length > 3) {
            var G__12449__i = 0, G__12449__a = new Array(arguments.length - 3);
            while (G__12449__i < G__12449__a.length) {
              G__12449__a[G__12449__i] = arguments[G__12449__i + 3];
              ++G__12449__i;
            }
            G__12448 = new cljs.core.IndexedSeq(G__12449__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12448);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__6210__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var or__6210__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__6210__auto____$1)) {
          return or__6210__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__6210__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var or__6210__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__6210__auto____$1)) {
          return or__6210__auto____$1;
        } else {
          var or__6210__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__6210__auto____$2)) {
            return or__6210__auto____$2;
          } else {
            var or__6210__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__6210__auto____$3)) {
              return or__6210__auto____$3;
            } else {
              var or__6210__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__6210__auto____$4)) {
                return or__6210__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__6210__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var or__6210__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__6210__auto____$1)) {
          return or__6210__auto____$1;
        } else {
          var or__6210__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__6210__auto____$2)) {
            return or__6210__auto____$2;
          } else {
            var or__6210__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__6210__auto____$3)) {
              return or__6210__auto____$3;
            } else {
              var or__6210__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__6210__auto____$4)) {
                return or__6210__auto____$4;
              } else {
                var or__6210__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__6210__auto____$5)) {
                  return or__6210__auto____$5;
                } else {
                  var or__6210__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__6210__auto____$6)) {
                    return or__6210__auto____$6;
                  } else {
                    var or__6210__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__6210__auto____$7)) {
                      return or__6210__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__12450__delegate = function(x, y, z, args) {
        var or__6210__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          return cljs.core.some(function(or__6210__auto__) {
            return function(p1__12424_SHARP_) {
              var or__6210__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__12424_SHARP_) : p1.call(null, p1__12424_SHARP_);
              if (cljs.core.truth_(or__6210__auto____$1)) {
                return or__6210__auto____$1;
              } else {
                var or__6210__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__12424_SHARP_) : p2.call(null, p1__12424_SHARP_);
                if (cljs.core.truth_(or__6210__auto____$2)) {
                  return or__6210__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__12424_SHARP_) : p3.call(null, p1__12424_SHARP_);
                }
              }
            };
          }(or__6210__auto__), args);
        }
      };
      var G__12450 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__12451__i = 0, G__12451__a = new Array(arguments.length - 3);
          while (G__12451__i < G__12451__a.length) {
            G__12451__a[G__12451__i] = arguments[G__12451__i + 3];
            ++G__12451__i;
          }
          args = new cljs.core.IndexedSeq(G__12451__a, 0);
        }
        return G__12450__delegate.call(this, x, y, z, args);
      };
      G__12450.cljs$lang$maxFixedArity = 3;
      G__12450.cljs$lang$applyTo = function(arglist__12452) {
        var x = cljs.core.first(arglist__12452);
        arglist__12452 = cljs.core.next(arglist__12452);
        var y = cljs.core.first(arglist__12452);
        arglist__12452 = cljs.core.next(arglist__12452);
        var z = cljs.core.first(arglist__12452);
        var args = cljs.core.rest(arglist__12452);
        return G__12450__delegate(x, y, z, args);
      };
      G__12450.cljs$core$IFn$_invoke$arity$variadic = G__12450__delegate;
      return G__12450;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__12453 = null;
          if (arguments.length > 3) {
            var G__12454__i = 0, G__12454__a = new Array(arguments.length - 3);
            while (G__12454__i < G__12454__a.length) {
              G__12454__a[G__12454__i] = arguments[G__12454__i + 3];
              ++G__12454__i;
            }
            G__12453 = new cljs.core.IndexedSeq(G__12454__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12453);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__12425_SHARP_) {
            return p1__12425_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12425_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__12425_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__12426_SHARP_) {
            var or__6210__auto__ = p1__12426_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12426_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__12426_SHARP_.call(null, x);
            if (cljs.core.truth_(or__6210__auto__)) {
              return or__6210__auto__;
            } else {
              return p1__12426_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12426_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__12426_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__12427_SHARP_) {
            var or__6210__auto__ = p1__12427_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12427_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__12427_SHARP_.call(null, x);
            if (cljs.core.truth_(or__6210__auto__)) {
              return or__6210__auto__;
            } else {
              var or__6210__auto____$1 = p1__12427_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12427_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__12427_SHARP_.call(null, y);
              if (cljs.core.truth_(or__6210__auto____$1)) {
                return or__6210__auto____$1;
              } else {
                return p1__12427_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12427_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__12427_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__12455__delegate = function(x, y, z, args) {
          var or__6210__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__6210__auto__)) {
            return or__6210__auto__;
          } else {
            return cljs.core.some(function(or__6210__auto__, ps__$1) {
              return function(p1__12428_SHARP_) {
                return cljs.core.some(p1__12428_SHARP_, args);
              };
            }(or__6210__auto__, ps__$1), ps__$1);
          }
        };
        var G__12455 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12456__i = 0, G__12456__a = new Array(arguments.length - 3);
            while (G__12456__i < G__12456__a.length) {
              G__12456__a[G__12456__i] = arguments[G__12456__i + 3];
              ++G__12456__i;
            }
            args = new cljs.core.IndexedSeq(G__12456__a, 0);
          }
          return G__12455__delegate.call(this, x, y, z, args);
        };
        G__12455.cljs$lang$maxFixedArity = 3;
        G__12455.cljs$lang$applyTo = function(arglist__12457) {
          var x = cljs.core.first(arglist__12457);
          arglist__12457 = cljs.core.next(arglist__12457);
          var y = cljs.core.first(arglist__12457);
          arglist__12457 = cljs.core.next(arglist__12457);
          var z = cljs.core.first(arglist__12457);
          var args = cljs.core.rest(arglist__12457);
          return G__12455__delegate(x, y, z, args);
        };
        G__12455.cljs$core$IFn$_invoke$arity$variadic = G__12455__delegate;
        return G__12455;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__12458 = null;
            if (arguments.length > 3) {
              var G__12459__i = 0, G__12459__a = new Array(arguments.length - 3);
              while (G__12459__i < G__12459__a.length) {
                G__12459__a[G__12459__i] = arguments[G__12459__i + 3];
                ++G__12459__i;
              }
              G__12458 = new cljs.core.IndexedSeq(G__12459__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12458);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq12430) {
  var G__12431 = cljs.core.first(seq12430);
  var seq12430__$1 = cljs.core.next(seq12430);
  var G__12432 = cljs.core.first(seq12430__$1);
  var seq12430__$2 = cljs.core.next(seq12430__$1);
  var G__12433 = cljs.core.first(seq12430__$2);
  var seq12430__$3 = cljs.core.next(seq12430__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__12431, G__12432, G__12433, seq12430__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var args12461 = [];
  var len__7285__auto___12481 = arguments.length;
  var i__7286__auto___12482 = 0;
  while (true) {
    if (i__7286__auto___12482 < len__7285__auto___12481) {
      args12461.push(arguments[i__7286__auto___12482]);
      var G__12483 = i__7286__auto___12482 + 1;
      i__7286__auto___12482 = G__12483;
      continue;
    } else {
    }
    break;
  }
  var G__12468 = args12461.length;
  switch(G__12468) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args12461.slice(4), 0, null);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7304__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__12485 = null;
      var G__12485__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__12485__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__12485__2 = function(result, input) {
        var G__12469 = result;
        var G__12470 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12469, G__12470) : rf.call(null, G__12469, G__12470);
      };
      var G__12485__3 = function() {
        var G__12486__delegate = function(result, input, inputs) {
          var G__12471 = result;
          var G__12472 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12471, G__12472) : rf.call(null, G__12471, G__12472);
        };
        var G__12486 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__12487__i = 0, G__12487__a = new Array(arguments.length - 2);
            while (G__12487__i < G__12487__a.length) {
              G__12487__a[G__12487__i] = arguments[G__12487__i + 2];
              ++G__12487__i;
            }
            inputs = new cljs.core.IndexedSeq(G__12487__a, 0);
          }
          return G__12486__delegate.call(this, result, input, inputs);
        };
        G__12486.cljs$lang$maxFixedArity = 2;
        G__12486.cljs$lang$applyTo = function(arglist__12488) {
          var result = cljs.core.first(arglist__12488);
          arglist__12488 = cljs.core.next(arglist__12488);
          var input = cljs.core.first(arglist__12488);
          var inputs = cljs.core.rest(arglist__12488);
          return G__12486__delegate(result, input, inputs);
        };
        G__12486.cljs$core$IFn$_invoke$arity$variadic = G__12486__delegate;
        return G__12486;
      }();
      G__12485 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__12485__0.call(this);
          case 1:
            return G__12485__1.call(this, result);
          case 2:
            return G__12485__2.call(this, result, input);
          default:
            var G__12489 = null;
            if (arguments.length > 2) {
              var G__12490__i = 0, G__12490__a = new Array(arguments.length - 2);
              while (G__12490__i < G__12490__a.length) {
                G__12490__a[G__12490__i] = arguments[G__12490__i + 2];
                ++G__12490__i;
              }
              G__12489 = new cljs.core.IndexedSeq(G__12490__a, 0);
            }
            return G__12485__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__12489);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12485.cljs$lang$maxFixedArity = 2;
      G__12485.cljs$lang$applyTo = G__12485__3.cljs$lang$applyTo;
      G__12485.cljs$core$IFn$_invoke$arity$0 = G__12485__0;
      G__12485.cljs$core$IFn$_invoke$arity$1 = G__12485__1;
      G__12485.cljs$core$IFn$_invoke$arity$2 = G__12485__2;
      G__12485.cljs$core$IFn$_invoke$arity$variadic = G__12485__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__12485;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__7125__auto___12491 = size;
        var i_12492 = 0;
        while (true) {
          if (i_12492 < n__7125__auto___12491) {
            cljs.core.chunk_append(b, function() {
              var G__12473 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_12492);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12473) : f.call(null, G__12473);
            }());
            var G__12493 = i_12492 + 1;
            i_12492 = G__12493;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__12474 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12474) : f.call(null, G__12474);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__12475 = cljs.core.first(s1);
        var G__12476 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12475, G__12476) : f.call(null, G__12475, G__12476);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__12477 = cljs.core.first(s1);
        var G__12478 = cljs.core.first(s2);
        var G__12479 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12477, G__12478, G__12479) : f.call(null, G__12477, G__12478, G__12479);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__12460_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__12460_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq12462) {
  var G__12463 = cljs.core.first(seq12462);
  var seq12462__$1 = cljs.core.next(seq12462);
  var G__12464 = cljs.core.first(seq12462__$1);
  var seq12462__$2 = cljs.core.next(seq12462__$1);
  var G__12465 = cljs.core.first(seq12462__$2);
  var seq12462__$3 = cljs.core.next(seq12462__$2);
  var G__12466 = cljs.core.first(seq12462__$3);
  var seq12462__$4 = cljs.core.next(seq12462__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__12463, G__12464, G__12465, G__12466, seq12462__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var args12494 = [];
  var len__7285__auto___12497 = arguments.length;
  var i__7286__auto___12498 = 0;
  while (true) {
    if (i__7286__auto___12498 < len__7285__auto___12497) {
      args12494.push(arguments[i__7286__auto___12498]);
      var G__12499 = i__7286__auto___12498 + 1;
      i__7286__auto___12498 = G__12499;
      continue;
    } else {
    }
    break;
  }
  var G__12496 = args12494.length;
  switch(G__12496) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12494.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__12501 = null;
        var G__12501__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__12501__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__12501__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__12501 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__12501__0.call(this);
            case 1:
              return G__12501__1.call(this, result);
            case 2:
              return G__12501__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__12501.cljs$core$IFn$_invoke$arity$0 = G__12501__0;
        G__12501.cljs$core$IFn$_invoke$arity$1 = G__12501__1;
        G__12501.cljs$core$IFn$_invoke$arity$2 = G__12501__2;
        return G__12501;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4425__auto__ = cljs.core.seq(coll);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var args12502 = [];
  var len__7285__auto___12505 = arguments.length;
  var i__7286__auto___12506 = 0;
  while (true) {
    if (i__7286__auto___12506 < len__7285__auto___12505) {
      args12502.push(arguments[i__7286__auto___12506]);
      var G__12507 = i__7286__auto___12506 + 1;
      i__7286__auto___12506 = G__12507;
      continue;
    } else {
    }
    break;
  }
  var G__12504 = args12502.length;
  switch(G__12504) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12502.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__12509 = null;
        var G__12509__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__12509__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__12509__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__12509 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__12509__0.call(this);
            case 1:
              return G__12509__1.call(this, result);
            case 2:
              return G__12509__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__12509.cljs$core$IFn$_invoke$arity$0 = G__12509__0;
        G__12509.cljs$core$IFn$_invoke$arity$1 = G__12509__1;
        G__12509.cljs$core$IFn$_invoke$arity$2 = G__12509__2;
        return G__12509;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__12510 = n__$1 - 1;
        var G__12511 = cljs.core.rest(s);
        n__$1 = G__12510;
        coll__$1 = G__12511;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var args12512 = [];
  var len__7285__auto___12515 = arguments.length;
  var i__7286__auto___12516 = 0;
  while (true) {
    if (i__7286__auto___12516 < len__7285__auto___12515) {
      args12512.push(arguments[i__7286__auto___12516]);
      var G__12517 = i__7286__auto___12516 + 1;
      i__7286__auto___12516 = G__12517;
      continue;
    } else {
    }
    break;
  }
  var G__12514 = args12512.length;
  switch(G__12514) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12512.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__12519 = cljs.core.next(s);
      var G__12520 = cljs.core.next(lead);
      s = G__12519;
      lead = G__12520;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var args12521 = [];
  var len__7285__auto___12526 = arguments.length;
  var i__7286__auto___12527 = 0;
  while (true) {
    if (i__7286__auto___12527 < len__7285__auto___12526) {
      args12521.push(arguments[i__7286__auto___12527]);
      var G__12528 = i__7286__auto___12527 + 1;
      i__7286__auto___12527 = G__12528;
      continue;
    } else {
    }
    break;
  }
  var G__12523 = args12521.length;
  switch(G__12523) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12521.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__12530 = null;
        var G__12530__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__12530__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__12530__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__6198__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__6198__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__6198__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__12530 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__12530__0.call(this);
            case 1:
              return G__12530__1.call(this, result);
            case 2:
              return G__12530__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__12530.cljs$core$IFn$_invoke$arity$0 = G__12530__0;
        G__12530.cljs$core$IFn$_invoke$arity$1 = G__12530__1;
        G__12530.cljs$core$IFn$_invoke$arity$2 = G__12530__2;
        return G__12530;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__6198__auto__ = s;
        if (and__6198__auto__) {
          var G__12525 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__12525) : pred__$1.call(null, G__12525);
        } else {
          return and__6198__auto__;
        }
      }())) {
        var G__12531 = pred__$1;
        var G__12532 = cljs.core.rest(s);
        pred__$1 = G__12531;
        coll__$1 = G__12532;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var args12533 = [];
  var len__7285__auto___12536 = arguments.length;
  var i__7286__auto___12537 = 0;
  while (true) {
    if (i__7286__auto___12537 < len__7285__auto___12536) {
      args12533.push(arguments[i__7286__auto___12537]);
      var G__12538 = i__7286__auto___12537 + 1;
      i__7286__auto___12537 = G__12538;
      continue;
    } else {
    }
    break;
  }
  var G__12535 = args12533.length;
  switch(G__12535) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12533.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var args12540 = [];
  var len__7285__auto___12543 = arguments.length;
  var i__7286__auto___12544 = 0;
  while (true) {
    if (i__7286__auto___12544 < len__7285__auto___12543) {
      args12540.push(arguments[i__7286__auto___12544]);
      var G__12545 = i__7286__auto___12544 + 1;
      i__7286__auto___12544 = G__12545;
      continue;
    } else {
    }
    break;
  }
  var G__12542 = args12540.length;
  switch(G__12542) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12540.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var args12549 = [];
  var len__7285__auto___12555 = arguments.length;
  var i__7286__auto___12556 = 0;
  while (true) {
    if (i__7286__auto___12556 < len__7285__auto___12555) {
      args12549.push(arguments[i__7286__auto___12556]);
      var G__12557 = i__7286__auto___12556 + 1;
      i__7286__auto___12556 = G__12557;
      continue;
    } else {
    }
    break;
  }
  var G__12554 = args12549.length;
  switch(G__12554) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args12549.slice(2), 0, null);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq12550) {
  var G__12551 = cljs.core.first(seq12550);
  var seq12550__$1 = cljs.core.next(seq12550);
  var G__12552 = cljs.core.first(seq12550__$1);
  var seq12550__$2 = cljs.core.next(seq12550__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__12551, G__12552, seq12550__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var args12559 = [];
  var len__7285__auto___12562 = arguments.length;
  var i__7286__auto___12563 = 0;
  while (true) {
    if (i__7286__auto___12563 < len__7285__auto___12562) {
      args12559.push(arguments[i__7286__auto___12563]);
      var G__12564 = i__7286__auto___12563 + 1;
      i__7286__auto___12563 = G__12564;
      continue;
    } else {
    }
    break;
  }
  var G__12561 = args12559.length;
  switch(G__12561) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12559.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__12566 = null;
        var G__12566__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__12566__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__12566__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__12566 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__12566__0.call(this);
            case 1:
              return G__12566__1.call(this, result);
            case 2:
              return G__12566__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__12566.cljs$core$IFn$_invoke$arity$0 = G__12566__0;
        G__12566.cljs$core$IFn$_invoke$arity$1 = G__12566__1;
        G__12566.cljs$core$IFn$_invoke$arity$2 = G__12566__2;
        return G__12566;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4423__auto__ = cljs.core.seq(coll);
      if (temp__4423__auto__) {
        var coll__$1 = temp__4423__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var args12575 = [];
  var len__7285__auto___12580 = arguments.length;
  var i__7286__auto___12581 = 0;
  while (true) {
    if (i__7286__auto___12581 < len__7285__auto___12580) {
      args12575.push(arguments[i__7286__auto___12581]);
      var G__12582 = i__7286__auto___12581 + 1;
      i__7286__auto___12581 = G__12582;
      continue;
    } else {
    }
    break;
  }
  var G__12579 = args12575.length;
  switch(G__12579) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args12575.slice(1), 0, null);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7304__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq12576) {
  var G__12577 = cljs.core.first(seq12576);
  var seq12576__$1 = cljs.core.next(seq12576);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__12577, seq12576__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var args12584 = [];
  var len__7285__auto___12588 = arguments.length;
  var i__7286__auto___12589 = 0;
  while (true) {
    if (i__7286__auto___12589 < len__7285__auto___12588) {
      args12584.push(arguments[i__7286__auto___12589]);
      var G__12590 = i__7286__auto___12589 + 1;
      i__7286__auto___12589 = G__12590;
      continue;
    } else {
    }
    break;
  }
  var G__12586 = args12584.length;
  switch(G__12586) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12584.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__12592 = null;
      var G__12592__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__12592__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__12592__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__12592 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__12592__0.call(this);
          case 1:
            return G__12592__1.call(this, result);
          case 2:
            return G__12592__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12592.cljs$core$IFn$_invoke$arity$0 = G__12592__0;
      G__12592.cljs$core$IFn$_invoke$arity$1 = G__12592__1;
      G__12592.cljs$core$IFn$_invoke$arity$2 = G__12592__2;
      return G__12592;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__7125__auto___12593 = size;
        var i_12594 = 0;
        while (true) {
          if (i_12594 < n__7125__auto___12593) {
            if (cljs.core.truth_(function() {
              var G__12587 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_12594);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12587) : pred.call(null, G__12587);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_12594));
            } else {
            }
            var G__12595 = i_12594 + 1;
            i_12594 = G__12595;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var args12596 = [];
  var len__7285__auto___12599 = arguments.length;
  var i__7286__auto___12600 = 0;
  while (true) {
    if (i__7286__auto___12600 < len__7285__auto___12599) {
      args12596.push(arguments[i__7286__auto___12600]);
      var G__12601 = i__7286__auto___12600 + 1;
      i__7286__auto___12600 = G__12601;
      continue;
    } else {
    }
    break;
  }
  var G__12598 = args12596.length;
  switch(G__12598) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12596.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__12603_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__12603_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var args12604 = [];
  var len__7285__auto___12609 = arguments.length;
  var i__7286__auto___12610 = 0;
  while (true) {
    if (i__7286__auto___12610 < len__7285__auto___12609) {
      args12604.push(arguments[i__7286__auto___12610]);
      var G__12611 = i__7286__auto___12610 + 1;
      i__7286__auto___12610 = G__12611;
      continue;
    } else {
    }
    break;
  }
  var G__12606 = args12604.length;
  switch(G__12606) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12604.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var args12613 = [];
  var len__7285__auto___12621 = arguments.length;
  var i__7286__auto___12622 = 0;
  while (true) {
    if (i__7286__auto___12622 < len__7285__auto___12621) {
      args12613.push(arguments[i__7286__auto___12622]);
      var G__12623 = i__7286__auto___12622 + 1;
      i__7286__auto___12622 = G__12623;
      continue;
    } else {
    }
    break;
  }
  var G__12620 = args12613.length;
  switch(G__12620) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args12613.slice(4), 0, null);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7304__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq12614) {
  var G__12615 = cljs.core.first(seq12614);
  var seq12614__$1 = cljs.core.next(seq12614);
  var G__12616 = cljs.core.first(seq12614__$1);
  var seq12614__$2 = cljs.core.next(seq12614__$1);
  var G__12617 = cljs.core.first(seq12614__$2);
  var seq12614__$3 = cljs.core.next(seq12614__$2);
  var G__12618 = cljs.core.first(seq12614__$3);
  var seq12614__$4 = cljs.core.next(seq12614__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__12615, G__12616, G__12617, G__12618, seq12614__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var args12625 = [];
  var len__7285__auto___12628 = arguments.length;
  var i__7286__auto___12629 = 0;
  while (true) {
    if (i__7286__auto___12629 < len__7285__auto___12628) {
      args12625.push(arguments[i__7286__auto___12629]);
      var G__12630 = i__7286__auto___12629 + 1;
      i__7286__auto___12629 = G__12630;
      continue;
    } else {
    }
    break;
  }
  var G__12627 = args12625.length;
  switch(G__12627) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12625.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        var x__7044__auto__ = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad));
        return cljs.core._conj(cljs.core.List.EMPTY, x__7044__auto__);
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var args12632 = [];
  var len__7285__auto___12636 = arguments.length;
  var i__7286__auto___12637 = 0;
  while (true) {
    if (i__7286__auto___12637 < len__7285__auto___12636) {
      args12632.push(arguments[i__7286__auto___12637]);
      var G__12638 = i__7286__auto___12637 + 1;
      i__7286__auto___12637 = G__12638;
      continue;
    } else {
    }
    break;
  }
  var G__12634 = args12632.length;
  switch(G__12634) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12632.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get, m, ks);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!(!(m__$1 == null) ? m__$1.cljs$lang$protocol_mask$partition0$ & 256 || m__$1.cljs$core$ILookup$ ? true : !m__$1.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1))) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__12640 = sentinel;
          var G__12641 = m__$2;
          var G__12642 = cljs.core.next(ks__$1);
          sentinel = G__12640;
          m__$1 = G__12641;
          ks__$1 = G__12642;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__12643, v) {
  var vec__12650 = p__12643;
  var seq__12651 = cljs.core.seq(vec__12650);
  var first__12652 = cljs.core.first(seq__12651);
  var seq__12651__$1 = cljs.core.next(seq__12651);
  var k = first__12652;
  var ks = seq__12651__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var args12653 = [];
  var len__7285__auto___12693 = arguments.length;
  var i__7286__auto___12694 = 0;
  while (true) {
    if (i__7286__auto___12694 < len__7285__auto___12693) {
      args12653.push(arguments[i__7286__auto___12694]);
      var G__12695 = i__7286__auto___12694 + 1;
      i__7286__auto___12694 = G__12695;
      continue;
    } else {
    }
    break;
  }
  var G__12662 = args12653.length;
  switch(G__12662) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args12653.slice(6), 0, null);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__7304__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__12663, f) {
  var vec__12664 = p__12663;
  var seq__12665 = cljs.core.seq(vec__12664);
  var first__12666 = cljs.core.first(seq__12665);
  var seq__12665__$1 = cljs.core.next(seq__12665);
  var k = first__12666;
  var ks = seq__12665__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__12667 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12667) : f.call(null, G__12667);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__12668, f, a) {
  var vec__12669 = p__12668;
  var seq__12670 = cljs.core.seq(vec__12669);
  var first__12671 = cljs.core.first(seq__12670);
  var seq__12670__$1 = cljs.core.next(seq__12670);
  var k = first__12671;
  var ks = seq__12670__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__12672 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__12673 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12672, G__12673) : f.call(null, G__12672, G__12673);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__12674, f, a, b) {
  var vec__12675 = p__12674;
  var seq__12676 = cljs.core.seq(vec__12675);
  var first__12677 = cljs.core.first(seq__12676);
  var seq__12676__$1 = cljs.core.next(seq__12676);
  var k = first__12677;
  var ks = seq__12676__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__12678 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__12679 = a;
      var G__12680 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12678, G__12679, G__12680) : f.call(null, G__12678, G__12679, G__12680);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__12681, f, a, b, c) {
  var vec__12682 = p__12681;
  var seq__12683 = cljs.core.seq(vec__12682);
  var first__12684 = cljs.core.first(seq__12683);
  var seq__12683__$1 = cljs.core.next(seq__12683);
  var k = first__12684;
  var ks = seq__12683__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__12685 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__12686 = a;
      var G__12687 = b;
      var G__12688 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12685, G__12686, G__12687, G__12688) : f.call(null, G__12685, G__12686, G__12687, G__12688);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__12689, f, a, b, c, args) {
  var vec__12690 = p__12689;
  var seq__12691 = cljs.core.seq(vec__12690);
  var first__12692 = cljs.core.first(seq__12691);
  var seq__12691__$1 = cljs.core.next(seq__12691);
  var k = first__12692;
  var ks = seq__12691__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq12654) {
  var G__12655 = cljs.core.first(seq12654);
  var seq12654__$1 = cljs.core.next(seq12654);
  var G__12656 = cljs.core.first(seq12654__$1);
  var seq12654__$2 = cljs.core.next(seq12654__$1);
  var G__12657 = cljs.core.first(seq12654__$2);
  var seq12654__$3 = cljs.core.next(seq12654__$2);
  var G__12658 = cljs.core.first(seq12654__$3);
  var seq12654__$4 = cljs.core.next(seq12654__$3);
  var G__12659 = cljs.core.first(seq12654__$4);
  var seq12654__$5 = cljs.core.next(seq12654__$4);
  var G__12660 = cljs.core.first(seq12654__$5);
  var seq12654__$6 = cljs.core.next(seq12654__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__12655, G__12656, G__12657, G__12658, G__12659, G__12660, seq12654__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var args12697 = [];
  var len__7285__auto___12717 = arguments.length;
  var i__7286__auto___12718 = 0;
  while (true) {
    if (i__7286__auto___12718 < len__7285__auto___12717) {
      args12697.push(arguments[i__7286__auto___12718]);
      var G__12719 = i__7286__auto___12718 + 1;
      i__7286__auto___12718 = G__12719;
      continue;
    } else {
    }
    break;
  }
  var G__12706 = args12697.length;
  switch(G__12706) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args12697.slice(6), 0, null);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__7304__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__12707 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12707) : f.call(null, G__12707);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__12708 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__12709 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12708, G__12709) : f.call(null, G__12708, G__12709);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__12710 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__12711 = x;
    var G__12712 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12710, G__12711, G__12712) : f.call(null, G__12710, G__12711, G__12712);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__12713 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__12714 = x;
    var G__12715 = y;
    var G__12716 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12713, G__12714, G__12715, G__12716) : f.call(null, G__12713, G__12714, G__12715, G__12716);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq12698) {
  var G__12699 = cljs.core.first(seq12698);
  var seq12698__$1 = cljs.core.next(seq12698);
  var G__12700 = cljs.core.first(seq12698__$1);
  var seq12698__$2 = cljs.core.next(seq12698__$1);
  var G__12701 = cljs.core.first(seq12698__$2);
  var seq12698__$3 = cljs.core.next(seq12698__$2);
  var G__12702 = cljs.core.first(seq12698__$3);
  var seq12698__$4 = cljs.core.next(seq12698__$3);
  var G__12703 = cljs.core.first(seq12698__$4);
  var seq12698__$5 = cljs.core.next(seq12698__$4);
  var G__12704 = cljs.core.first(seq12698__$5);
  var seq12698__$6 = cljs.core.next(seq12698__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__12699, G__12700, G__12701, G__12702, G__12703, G__12704, seq12698__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__12721 = ll - 5;
      var G__12722 = r;
      ll = G__12721;
      ret = G__12722;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__12727 = cljs.core.pv_aget(node, 0);
      var G__12728 = level - 5;
      node = G__12727;
      level = G__12728;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__12729 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__12730 = level - 5;
        node = G__12729;
        level = G__12730;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.indexOf = function() {
  var G__12749 = null;
  var G__12749__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__12749__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12749 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12749__1.call(this, x);
      case 2:
        return G__12749__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12749.cljs$core$IFn$_invoke$arity$1 = G__12749__1;
  G__12749.cljs$core$IFn$_invoke$arity$2 = G__12749__2;
  return G__12749;
}();
cljs.core.PersistentVector.prototype.lastIndexOf = function() {
  var G__12750 = null;
  var G__12750__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__12750__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12750 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12750__1.call(this, x);
      case 2:
        return G__12750__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12750.cljs$core$IFn$_invoke$arity$1 = G__12750__1;
  G__12750.cljs$core$IFn$_invoke$arity$2 = G__12750__2;
  return G__12750;
}();
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__12740 = init__$2;
              var G__12741 = j + i;
              var G__12742 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12740, G__12741, G__12742) : f.call(null, G__12740, G__12741, G__12742);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__12751 = j + 1;
              var G__12752 = init__$3;
              j = G__12751;
              init__$2 = G__12752;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__12753 = i + len;
        var G__12754 = init__$2;
        i = G__12753;
        init__$1 = G__12754;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__12743 = init__$2;
              var G__12744 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12743, G__12744) : f.call(null, G__12743, G__12744);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__12755 = j + 1;
              var G__12756 = init__$3;
              j = G__12755;
              init__$2 = G__12756;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__12757 = i + len;
        var G__12758 = init__$2;
        i = G__12757;
        init__$1 = G__12758;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0, null);
    } else {
      var G__12745 = coll__$1;
      var G__12746 = cljs.core.first_array_for_longvec(coll__$1);
      var G__12747 = 0;
      var G__12748 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__12745, G__12746, G__12747, G__12748) : cljs.core.chunked_seq.call(null, G__12745, G__12746, G__12747, G__12748);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__7125__auto___12759 = len;
    var i_12760 = 0;
    while (true) {
      if (i_12760 < n__7125__auto___12759) {
        new_tail[i_12760] = self__.tail[i_12760];
        var G__12761 = i_12760 + 1;
        i_12760 = G__12761;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__12762 = null;
  var G__12762__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__12762__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__12762 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12762__2.call(this, self__, k);
      case 3:
        return G__12762__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12762.cljs$core$IFn$_invoke$arity$2 = G__12762__2;
  G__12762.cljs$core$IFn$_invoke$arity$3 = G__12762__3;
  return G__12762;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args12739) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12739)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__12763 = i + 1;
        var G__12764 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__12763;
        out = G__12764;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___12766 = arguments.length;
  var i__7286__auto___12767 = 0;
  while (true) {
    if (i__7286__auto___12767 < len__7285__auto___12766) {
      args__7292__auto__.push(arguments[i__7286__auto___12767]);
      var G__12768 = i__7286__auto___12767 + 1;
      i__7286__auto___12767 = G__12768;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq12765) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12765));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.indexOf = function() {
  var G__12791 = null;
  var G__12791__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__12791__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12791 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12791__1.call(this, x);
      case 2:
        return G__12791__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12791.cljs$core$IFn$_invoke$arity$1 = G__12791__1;
  G__12791.cljs$core$IFn$_invoke$arity$2 = G__12791__2;
  return G__12791;
}();
cljs.core.ChunkedSeq.prototype.lastIndexOf = function() {
  var G__12792 = null;
  var G__12792__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__12792__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12792 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12792__1.call(this, x);
      case 2:
        return G__12792__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12792.cljs$core$IFn$_invoke$arity$1 = G__12792__1;
  G__12792.cljs$core$IFn$_invoke$arity$2 = G__12792__2;
  return G__12792;
}();
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__12769 = self__.vec;
      var G__12770 = self__.node;
      var G__12771 = self__.i;
      var G__12772 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__12769, G__12770, G__12771, G__12772) : cljs.core.chunked_seq.call(null, G__12769, G__12770, G__12771, G__12772);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__12773 = self__.vec;
    var G__12774 = self__.i + self__.off;
    var G__12775 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__12773, G__12774, G__12775) : cljs.core.subvec.call(null, G__12773, G__12774, G__12775);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__12776 = self__.vec;
    var G__12777 = self__.i + self__.off;
    var G__12778 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__12776, G__12777, G__12778) : cljs.core.subvec.call(null, G__12776, G__12777, G__12778);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__12779 = self__.vec;
      var G__12780 = self__.node;
      var G__12781 = self__.i;
      var G__12782 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__12779, G__12780, G__12781, G__12782) : cljs.core.chunked_seq.call(null, G__12779, G__12780, G__12781, G__12782);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__12783 = self__.vec;
    var G__12784 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__12785 = end;
    var G__12786 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__12783, G__12784, G__12785, G__12786) : cljs.core.chunked_seq.call(null, G__12783, G__12784, G__12785, G__12786);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__12787 = self__.vec;
    var G__12788 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__12789 = end;
    var G__12790 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__12787, G__12788, G__12789, G__12790) : cljs.core.chunked_seq.call(null, G__12787, G__12788, G__12789, G__12790);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var args12793 = [];
  var len__7285__auto___12796 = arguments.length;
  var i__7286__auto___12797 = 0;
  while (true) {
    if (i__7286__auto___12797 < len__7285__auto___12796) {
      args12793.push(arguments[i__7286__auto___12797]);
      var G__12798 = i__7286__auto___12797 + 1;
      i__7286__auto___12797 = G__12798;
      continue;
    } else {
    }
    break;
  }
  var G__12795 = args12793.length;
  switch(G__12795) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12793.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.indexOf = function() {
  var G__12820 = null;
  var G__12820__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__12820__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__12820 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__12820__1.call(this, x);
      case 2:
        return G__12820__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12820.cljs$core$IFn$_invoke$arity$1 = G__12820__1;
  G__12820.cljs$core$IFn$_invoke$arity$2 = G__12820__2;
  return G__12820;
}();
cljs.core.Subvec.prototype.lastIndexOf = function() {
  var G__12821 = null;
  var G__12821__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__12821__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__12821 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__12821__1.call(this, x);
      case 2:
        return G__12821__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12821.cljs$core$IFn$_invoke$arity$1 = G__12821__1;
  G__12821.cljs$core$IFn$_invoke$arity$2 = G__12821__2;
  return G__12821;
}();
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__12801 = init__$1;
        var G__12802 = j;
        var G__12803 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12801, G__12802, G__12803) : f.call(null, G__12801, G__12802, G__12803);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__12822 = i + 1;
        var G__12823 = j + 1;
        var G__12824 = init__$2;
        i = G__12822;
        j = G__12823;
        init__$1 = G__12824;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__12804 = self__.meta;
  var G__12805 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__12806 = self__.start;
  var G__12807 = function() {
    var x__6541__auto__ = self__.end;
    var y__6542__auto__ = v_pos + 1;
    return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
  }();
  var G__12808 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__12804, G__12805, G__12806, G__12807, G__12808) : cljs.core.build_subvec.call(null, G__12804, G__12805, G__12806, G__12807, G__12808);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__12809 = self__.meta;
    var G__12810 = self__.v;
    var G__12811 = self__.start;
    var G__12812 = self__.end - 1;
    var G__12813 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__12809, G__12810, G__12811, G__12812, G__12813) : cljs.core.build_subvec.call(null, G__12809, G__12810, G__12811, G__12812, G__12813);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__12815 = self__.meta;
  var G__12816 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__12817 = self__.start;
  var G__12818 = self__.end + 1;
  var G__12819 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__12815, G__12816, G__12817, G__12818, G__12819) : cljs.core.build_subvec.call(null, G__12815, G__12816, G__12817, G__12818, G__12819);
};
cljs.core.Subvec.prototype.call = function() {
  var G__12825 = null;
  var G__12825__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__12825__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__12825 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12825__2.call(this, self__, k);
      case 3:
        return G__12825__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12825.cljs$core$IFn$_invoke$arity$2 = G__12825__2;
  G__12825.cljs$core$IFn$_invoke$arity$3 = G__12825__3;
  return G__12825;
}();
cljs.core.Subvec.prototype.apply = function(self__, args12800) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12800)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__12826 = meta;
      var G__12827 = v.v;
      var G__12828 = v.start + start;
      var G__12829 = v.start + end;
      var G__12830 = __hash;
      meta = G__12826;
      v = G__12827;
      start = G__12828;
      end = G__12829;
      __hash = G__12830;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var args12831 = [];
  var len__7285__auto___12834 = arguments.length;
  var i__7286__auto___12835 = 0;
  while (true) {
    if (i__7286__auto___12835 < len__7285__auto___12834) {
      args12831.push(arguments[i__7286__auto___12835]);
      var G__12836 = i__7286__auto___12835 + 1;
      i__7286__auto___12835 = G__12836;
      continue;
    } else {
    }
    break;
  }
  var G__12833 = args12831.length;
  switch(G__12833) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12831.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__12849 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__12850 = level - 5;
        node = G__12849;
        level = G__12850;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__12854 = null;
  var G__12854__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__12854__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__12854 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12854__2.call(this, self__, k);
      case 3:
        return G__12854__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12854.cljs$core$IFn$_invoke$arity$2 = G__12854__2;
  G__12854.cljs$core$IFn$_invoke$arity$3 = G__12854__3;
  return G__12854;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args12851) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12851)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__6210__auto__ = cljs.core.some_QMARK_(self__.fseq) && cljs.core.seq(self__.fseq);
  if (or__6210__auto__) {
    return or__6210__auto__;
  } else {
    var and__6198__auto__ = cljs.core.some_QMARK_(self__.riter);
    if (and__6198__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__6198__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (cljs.core.some_QMARK_(self__.fseq)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.riter) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.indexOf = function() {
  var G__12855 = null;
  var G__12855__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__12855__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12855 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12855__1.call(this, x);
      case 2:
        return G__12855__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12855.cljs$core$IFn$_invoke$arity$1 = G__12855__1;
  G__12855.cljs$core$IFn$_invoke$arity$2 = G__12855__2;
  return G__12855;
}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf = function() {
  var G__12856 = null;
  var G__12856__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__12856__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12856 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12856__1.call(this, x);
      case 2:
        return G__12856__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12856.cljs$core$IFn$_invoke$arity$1 = G__12856__1;
  G__12856.cljs$core$IFn$_invoke$arity$2 = G__12856__2;
  return G__12856;
}();
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4423__auto__ = cljs.core.next(self__.front);
  if (temp__4423__auto__) {
    var f1 = temp__4423__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.indexOf = function() {
  var G__12857 = null;
  var G__12857__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__12857__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12857 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12857__1.call(this, x);
      case 2:
        return G__12857__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12857.cljs$core$IFn$_invoke$arity$1 = G__12857__1;
  G__12857.cljs$core$IFn$_invoke$arity$2 = G__12857__2;
  return G__12857;
}();
cljs.core.PersistentQueue.prototype.lastIndexOf = function() {
  var G__12858 = null;
  var G__12858__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count.cljs$core$IFn$_invoke$arity$1 ? self__.count.cljs$core$IFn$_invoke$arity$1(coll) : self__.count.call(null, coll));
  };
  var G__12858__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12858 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12858__1.call(this, x);
      case 2:
        return G__12858__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12858.cljs$core$IFn$_invoke$arity$1 = G__12858__1;
  G__12858.cljs$core$IFn$_invoke$arity$2 = G__12858__2;
  return G__12858;
}();
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4423__auto__ = cljs.core.next(self__.front);
    if (temp__4423__auto__) {
      var f1 = temp__4423__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__6210__auto__ = self__.front;
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__6210__auto__ = self__.rear;
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__12859 = i + incr;
        i = G__12859;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__12860 = i + 1;
      var G__12861 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__12860;
      out = G__12861;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_12866 = 0;
  while (true) {
    if (i_12866 < l) {
      var k_12867 = ks[i_12866];
      new_obj[k_12867] = obj[k_12867];
      var G__12868 = i_12866 + 1;
      i_12866 = G__12868;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__12871 = init__$1;
        var G__12872 = k;
        var G__12873 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12871, G__12872, G__12873) : f.call(null, G__12871, G__12872, G__12873);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__12874 = cljs.core.rest(keys__$1);
        var G__12875 = init__$2;
        keys__$1 = G__12874;
        init__$1 = G__12875;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__12869_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__12869_SHARP_, self__.strobj[p1__12869_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__12876 = null;
  var G__12876__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__12876__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__12876 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12876__2.call(this, self__, k);
      case 3:
        return G__12876__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12876.cljs$core$IFn$_invoke$arity$2 = G__12876__2;
  G__12876.cljs$core$IFn$_invoke$arity$3 = G__12876__3;
  return G__12876;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args12870) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12870)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__6210__auto__ = self__.i < self__.base_count;
  if (or__6210__auto__) {
    return or__6210__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k)], null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__12879 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12879, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12879, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__12882 = i + 2;
        i = G__12882;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__12883 = i + 2;
        i = G__12883;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__12884 = i + 2;
        i = G__12884;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__12885 = i + 2;
        i = G__12885;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__12886 = i + 2;
        i = G__12886;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_12887 = 0;
  while (true) {
    if (i_12887 < l) {
      narr[i_12887] = arr[i_12887];
      var G__12888 = i_12887 + 1;
      i_12887 = G__12888;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.indexOf = function() {
  var G__12889 = null;
  var G__12889__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__12889__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12889 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12889__1.call(this, x);
      case 2:
        return G__12889__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12889.cljs$core$IFn$_invoke$arity$1 = G__12889__1;
  G__12889.cljs$core$IFn$_invoke$arity$2 = G__12889__2;
  return G__12889;
}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf = function() {
  var G__12890 = null;
  var G__12890__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__12890__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12890 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12890__1.call(this, x);
      case 2:
        return G__12890__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12890.cljs$core$IFn$_invoke$arity$1 = G__12890__1;
  G__12890.cljs$core$IFn$_invoke$arity$2 = G__12890__2;
  return G__12890;
}();
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__12892 = cljs.core.seq(coll);
  var chunk__12893 = null;
  var count__12894 = 0;
  var i__12895 = 0;
  while (true) {
    if (i__12895 < count__12894) {
      var vec__12896 = chunk__12893.cljs$core$IIndexed$_nth$arity$2(null, i__12895);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12896, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12896, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__12909 = seq__12892;
      var G__12910 = chunk__12893;
      var G__12911 = count__12894;
      var G__12912 = i__12895 + 1;
      seq__12892 = G__12909;
      chunk__12893 = G__12910;
      count__12894 = G__12911;
      i__12895 = G__12912;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__12892);
      if (temp__4425__auto__) {
        var seq__12892__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__12892__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__12892__$1);
          var G__12913 = cljs.core.chunk_rest(seq__12892__$1);
          var G__12914 = c__7021__auto__;
          var G__12915 = cljs.core.count(c__7021__auto__);
          var G__12916 = 0;
          seq__12892 = G__12913;
          chunk__12893 = G__12914;
          count__12894 = G__12915;
          i__12895 = G__12916;
          continue;
        } else {
          var vec__12899 = cljs.core.first(seq__12892__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12899, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12899, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__12917 = cljs.core.next(seq__12892__$1);
          var G__12918 = null;
          var G__12919 = 0;
          var G__12920 = 0;
          seq__12892 = G__12917;
          chunk__12893 = G__12918;
          count__12894 = G__12919;
          i__12895 = G__12920;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__12902 = init__$1;
        var G__12903 = self__.arr[i];
        var G__12904 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12902, G__12903, G__12904) : f.call(null, G__12902, G__12903, G__12904);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__12921 = i + 2;
        var G__12922 = init__$2;
        i = G__12921;
        init__$1 = G__12922;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (!(other == null) ? other.cljs$lang$protocol_mask$partition0$ & 1024 || other.cljs$core$IMap$ ? true : false : false) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__12923 = i + 2;
              i = G__12923;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__12924 = s + 2;
            var G__12925 = d;
            s = G__12924;
            d = G__12925;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__12926 = s + 2;
            var G__12927 = d + 2;
            s = G__12926;
            d = G__12927;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__12908 = cljs.core.aclone(self__.arr);
        G__12908[idx + 1] = v;
        return G__12908;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__12928 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__12929 = cljs.core.next(es);
          ret = G__12928;
          es = G__12929;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__12930 = null;
  var G__12930__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__12930__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__12930 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12930__2.call(this, self__, k);
      case 3:
        return G__12930__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12930.cljs$core$IFn$_invoke$arity$2 = G__12930__2;
  G__12930.cljs$core$IFn$_invoke$arity$3 = G__12930__3;
  return G__12930;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args12891) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12891)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_12931 = 0;
    while (true) {
      if (i_12931 < arr__$1.length) {
        var k_12932 = arr__$1[i_12931];
        var v_12933 = arr__$1[i_12931 + 1];
        var idx_12934 = cljs.core.array_index_of(ret, k_12932);
        if (idx_12934 === -1) {
          ret.push(k_12932);
          ret.push(v_12933);
        } else {
        }
        var G__12935 = i_12931 + 2;
        i_12931 = G__12935;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var arr__$3 = function() {
    var cnt = arr__$2.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
  }();
  return arr__$3;
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__12938 = cljs.core.next(es);
          var G__12939 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__12938;
          tcoll__$2 = G__12939;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__12937_12940 = self__.arr;
      G__12937_12940.pop();
      G__12937_12940.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__12941 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__12942 = i + 2;
      out = G__12941;
      i = G__12942;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var args12943 = [];
  var len__7285__auto___12948 = arguments.length;
  var i__7286__auto___12949 = 0;
  while (true) {
    if (i__7286__auto___12949 < len__7285__auto___12948) {
      args12943.push(arguments[i__7286__auto___12949]);
      var G__12950 = i__7286__auto___12949 + 1;
      i__7286__auto___12949 = G__12950;
      continue;
    } else {
    }
    break;
  }
  var G__12945 = args12943.length;
  switch(G__12945) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12943.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__12946 = cljs.core.aclone(arr);
  G__12946[i] = a;
  return G__12946;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__12947 = cljs.core.aclone(arr);
  G__12947[i] = a;
  G__12947[j] = b;
  return G__12947;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var args12952 = [];
  var len__7285__auto___12955 = arguments.length;
  var i__7286__auto___12956 = 0;
  while (true) {
    if (i__7286__auto___12956 < len__7285__auto___12955) {
      args12952.push(arguments[i__7286__auto___12956]);
      var G__12957 = i__7286__auto___12956 + 1;
      i__7286__auto___12956 = G__12957;
      continue;
    } else {
    }
    break;
  }
  var G__12954 = args12952.length;
  switch(G__12954) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12952.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__12962 = init__$1;
          var G__12963 = k;
          var G__12964 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12962, G__12963, G__12964) : f.call(null, G__12962, G__12963, G__12964);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__12965 = i + 2;
        var G__12966 = init__$2;
        i = G__12965;
        init__$1 = G__12966;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = cljs.core.some_QMARK_(key) ? self__.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, node_or_val], null) : cljs.core.some_QMARK_(node_or_val) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__6210__auto__ = cljs.core.some_QMARK_(self__.next_entry);
  if (or__6210__auto__) {
    return or__6210__auto__;
  } else {
    var or__6210__auto____$1 = cljs.core.some_QMARK_(self__.next_iter);
    if (or__6210__auto____$1) {
      return or__6210__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.some_QMARK_(self__.next_entry)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.next_iter)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_12980 = 0;
        var j_12981 = 0;
        while (true) {
          if (i_12980 < 32) {
            if ((self__.bitmap >>> i_12980 & 1) === 0) {
              var G__12982 = i_12980 + 1;
              var G__12983 = j_12981;
              i_12980 = G__12982;
              j_12981 = G__12983;
              continue;
            } else {
              nodes[i_12980] = !(self__.arr[j_12981] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_12981]), self__.arr[j_12981], self__.arr[j_12981 + 1], added_leaf_QMARK_) : self__.arr[j_12981 + 1];
              var G__12984 = i_12980 + 1;
              var G__12985 = j_12981 + 2;
              i_12980 = G__12984;
              j_12981 = G__12985;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__12967 = edit__$1;
          var G__12968 = shift + 5;
          var G__12969 = key_or_nil;
          var G__12970 = val_or_node;
          var G__12971 = hash;
          var G__12972 = key;
          var G__12973 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__12967, G__12968, G__12969, G__12970, G__12971, G__12972, G__12973) : cljs.core.create_node.call(null, G__12967, G__12968, G__12969, G__12970, G__12971, G__12972, G__12973);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_12986 = 0;
      var j_12987 = 0;
      while (true) {
        if (i_12986 < 32) {
          if ((self__.bitmap >>> i_12986 & 1) === 0) {
            var G__12988 = i_12986 + 1;
            var G__12989 = j_12987;
            i_12986 = G__12988;
            j_12987 = G__12989;
            continue;
          } else {
            nodes[i_12986] = !(self__.arr[j_12987] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_12987]), self__.arr[j_12987], self__.arr[j_12987 + 1], added_leaf_QMARK_) : self__.arr[j_12987 + 1];
            var G__12990 = i_12986 + 1;
            var G__12991 = j_12987 + 2;
            i_12986 = G__12990;
            j_12987 = G__12991;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__12974 = shift + 5;
          var G__12975 = key_or_nil;
          var G__12976 = val_or_node;
          var G__12977 = hash;
          var G__12978 = key;
          var G__12979 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__12974, G__12975, G__12976, G__12977, G__12978, G__12979) : cljs.core.create_node.call(null, G__12974, G__12975, G__12976, G__12977, G__12978, G__12979);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$ = true;
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__12992 = i + 1;
        var G__12993 = j + 2;
        var G__12994 = bitmap | 1 << i;
        i = G__12992;
        j = G__12993;
        bitmap = G__12994;
        continue;
      } else {
        var G__12995 = i + 1;
        var G__12996 = j;
        var G__12997 = bitmap;
        i = G__12995;
        j = G__12996;
        bitmap = G__12997;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(cljs.core.some_QMARK_(self__.next_iter) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (cljs.core.some_QMARK_(node)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__12998 = i + 1;
          var G__12999 = init__$2;
          i = G__12998;
          init__$1 = G__12999;
          continue;
        }
      } else {
        var G__13000 = i + 1;
        var G__13001 = init__$1;
        i = G__13000;
        init__$1 = G__13001;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$ = true;
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__13002 = i + 2;
        i = G__13002;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$ = true;
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var args13003 = [];
  var len__7285__auto___13006 = arguments.length;
  var i__7286__auto___13007 = 0;
  while (true) {
    if (i__7286__auto___13007 < len__7285__auto___13006) {
      args13003.push(arguments[i__7286__auto___13007]);
      var G__13008 = i__7286__auto___13007 + 1;
      i__7286__auto___13007 = G__13008;
      continue;
    } else {
    }
    break;
  }
  var G__13005 = args13003.length;
  switch(G__13005) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13003.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.indexOf = function() {
  var G__13016 = null;
  var G__13016__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13016__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13016 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13016__1.call(this, x);
      case 2:
        return G__13016__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13016.cljs$core$IFn$_invoke$arity$1 = G__13016__1;
  G__13016.cljs$core$IFn$_invoke$arity$2 = G__13016__2;
  return G__13016;
}();
cljs.core.NodeSeq.prototype.lastIndexOf = function() {
  var G__13017 = null;
  var G__13017__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__13017__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13017 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13017__1.call(this, x);
      case 2:
        return G__13017__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13017.cljs$core$IFn$_invoke$arity$1 = G__13017__1;
  G__13017.cljs$core$IFn$_invoke$arity$2 = G__13017__2;
  return G__13017;
}();
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__13010 = self__.nodes;
    var G__13011 = self__.i + 2;
    var G__13012 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__13010, G__13011, G__13012) : cljs.core.create_inode_seq.call(null, G__13010, G__13011, G__13012);
  } else {
    var G__13013 = self__.nodes;
    var G__13014 = self__.i;
    var G__13015 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__13013, G__13014, G__13015) : cljs.core.create_inode_seq.call(null, G__13013, G__13014, G__13015);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var args13018 = [];
  var len__7285__auto___13021 = arguments.length;
  var i__7286__auto___13022 = 0;
  while (true) {
    if (i__7286__auto___13022 < len__7285__auto___13021) {
      args13018.push(arguments[i__7286__auto___13022]);
      var G__13023 = i__7286__auto___13022 + 1;
      i__7286__auto___13022 = G__13023;
      continue;
    } else {
    }
    break;
  }
  var G__13020 = args13018.length;
  switch(G__13020) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13018.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4423__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4423__auto__)) {
            var node = temp__4423__auto__;
            var temp__4423__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4423__auto____$1)) {
              var node_seq = temp__4423__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__13025 = j + 2;
              j = G__13025;
              continue;
            }
          } else {
            var G__13026 = j + 2;
            j = G__13026;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.indexOf = function() {
  var G__13031 = null;
  var G__13031__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13031__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13031 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13031__1.call(this, x);
      case 2:
        return G__13031__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13031.cljs$core$IFn$_invoke$arity$1 = G__13031__1;
  G__13031.cljs$core$IFn$_invoke$arity$2 = G__13031__2;
  return G__13031;
}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf = function() {
  var G__13032 = null;
  var G__13032__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__13032__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13032 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13032__1.call(this, x);
      case 2:
        return G__13032__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13032.cljs$core$IFn$_invoke$arity$1 = G__13032__1;
  G__13032.cljs$core$IFn$_invoke$arity$2 = G__13032__2;
  return G__13032;
}();
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__13027 = null;
  var G__13028 = self__.nodes;
  var G__13029 = self__.i;
  var G__13030 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__13027, G__13028, G__13029, G__13030) : cljs.core.create_array_node_seq.call(null, G__13027, G__13028, G__13029, G__13030);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var args13033 = [];
  var len__7285__auto___13036 = arguments.length;
  var i__7286__auto___13037 = 0;
  while (true) {
    if (i__7286__auto___13037 < len__7285__auto___13036) {
      args13033.push(arguments[i__7286__auto___13037]);
      var G__13038 = i__7286__auto___13037 + 1;
      i__7286__auto___13037 = G__13038;
      continue;
    } else {
    }
    break;
  }
  var G__13035 = args13033.length;
  switch(G__13035) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13033.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4423__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4423__auto__)) {
          var nj = temp__4423__auto__;
          var temp__4423__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4423__auto____$1)) {
            var ns = temp__4423__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__13040 = j + 1;
            j = G__13040;
            continue;
          }
        } else {
          var G__13041 = j + 1;
          j = G__13041;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.seen && self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return self__.nil_val;
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__13043 = cljs.core.seq(coll);
  var chunk__13044 = null;
  var count__13045 = 0;
  var i__13046 = 0;
  while (true) {
    if (i__13046 < count__13045) {
      var vec__13047 = chunk__13044.cljs$core$IIndexed$_nth$arity$2(null, i__13046);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13047, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13047, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__13055 = seq__13043;
      var G__13056 = chunk__13044;
      var G__13057 = count__13045;
      var G__13058 = i__13046 + 1;
      seq__13043 = G__13055;
      chunk__13044 = G__13056;
      count__13045 = G__13057;
      i__13046 = G__13058;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__13043);
      if (temp__4425__auto__) {
        var seq__13043__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__13043__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__13043__$1);
          var G__13059 = cljs.core.chunk_rest(seq__13043__$1);
          var G__13060 = c__7021__auto__;
          var G__13061 = cljs.core.count(c__7021__auto__);
          var G__13062 = 0;
          seq__13043 = G__13059;
          chunk__13044 = G__13060;
          count__13045 = G__13061;
          i__13046 = G__13062;
          continue;
        } else {
          var vec__13050 = cljs.core.first(seq__13043__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13050, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13050, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__13063 = cljs.core.next(seq__13043__$1);
          var G__13064 = null;
          var G__13065 = 0;
          var G__13066 = 0;
          seq__13043 = G__13063;
          chunk__13044 = G__13064;
          count__13045 = G__13065;
          i__13046 = G__13066;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter;
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__13067 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__13068 = cljs.core.next(es);
          ret = G__13067;
          es = G__13068;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__13069 = null;
  var G__13069__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13069__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13069 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13069__2.call(this, self__, k);
      case 3:
        return G__13069__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13069.cljs$core$IFn$_invoke$arity$2 = G__13069__2;
  G__13069.cljs$core$IFn$_invoke$arity$3 = G__13069__3;
  return G__13069;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args13042) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13042)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__13070 = i + 2;
      var G__13071 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__13070;
      ret = G__13071;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__13072 = i + 1;
      var G__13073 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__13072;
      out = G__13073;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__13075 = cljs.core.next(es);
          var G__13076 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__13075;
          tcoll__$1 = G__13076;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__13077 = ascending_QMARK_ ? t.left : t.right;
      var G__13078 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__13077;
      stack__$1 = G__13078;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.indexOf = function() {
  var G__13079 = null;
  var G__13079__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13079__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13079 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13079__1.call(this, x);
      case 2:
        return G__13079__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13079.cljs$core$IFn$_invoke$arity$1 = G__13079__1;
  G__13079.cljs$core$IFn$_invoke$arity$2 = G__13079__2;
  return G__13079;
}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf = function() {
  var G__13080 = null;
  var G__13080__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__13080__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13080 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13080__1.call(this, x);
      case 2:
        return G__13080__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13080.cljs$core$IFn$_invoke$arity$1 = G__13080__1;
  G__13080.cljs$core$IFn$_invoke$arity$2 = G__13080__2;
  return G__13080;
}();
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = function() {
      var G__13090 = init__$1;
      var G__13091 = node.key;
      var G__13092 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13090, G__13091, G__13092) : f.call(null, G__13090, G__13091, G__13092);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.lastIndexOf = function() {
  var G__13094 = null;
  var G__13094__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__13094__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13094 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13094__1.call(this, x);
      case 2:
        return G__13094__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13094.cljs$core$IFn$_invoke$arity$1 = G__13094__1;
  G__13094.cljs$core$IFn$_invoke$arity$2 = G__13094__2;
  return G__13094;
}();
cljs.core.BlackNode.prototype.indexOf = function() {
  var G__13095 = null;
  var G__13095__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13095__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13095 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13095__1.call(this, x);
      case 2:
        return G__13095__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13095.cljs$core$IFn$_invoke$arity$1 = G__13095__1;
  G__13095.cljs$core$IFn$_invoke$arity$2 = G__13095__2;
  return G__13095;
}();
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  var x__7044__auto__ = self__.key;
  return cljs.core._conj(function() {
    var x__7044__auto____$1 = self__.val;
    return cljs.core._conj(cljs.core.List.EMPTY, x__7044__auto____$1);
  }(), x__7044__auto__);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__13096 = null;
  var G__13096__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13096__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13096 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13096__2.call(this, self__, k);
      case 3:
        return G__13096__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13096.cljs$core$IFn$_invoke$arity$2 = G__13096__2;
  G__13096.cljs$core$IFn$_invoke$arity$3 = G__13096__3;
  return G__13096;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args13093) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13093)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.lastIndexOf = function() {
  var G__13098 = null;
  var G__13098__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__13098__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13098 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13098__1.call(this, x);
      case 2:
        return G__13098__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13098.cljs$core$IFn$_invoke$arity$1 = G__13098__1;
  G__13098.cljs$core$IFn$_invoke$arity$2 = G__13098__2;
  return G__13098;
}();
cljs.core.RedNode.prototype.indexOf = function() {
  var G__13099 = null;
  var G__13099__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13099__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13099 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13099__1.call(this, x);
      case 2:
        return G__13099__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13099.cljs$core$IFn$_invoke$arity$1 = G__13099__1;
  G__13099.cljs$core$IFn$_invoke$arity$2 = G__13099__2;
  return G__13099;
}();
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  var x__7044__auto__ = self__.key;
  return cljs.core._conj(function() {
    var x__7044__auto____$1 = self__.val;
    return cljs.core._conj(cljs.core.List.EMPTY, x__7044__auto____$1);
  }(), x__7044__auto__);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__13100 = null;
  var G__13100__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13100__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13100 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13100__2.call(this, self__, k);
      case 3:
        return G__13100__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13100.cljs$core$IFn$_invoke$arity$2 = G__13100__2;
  G__13100.cljs$core$IFn$_invoke$arity$3 = G__13100__3;
  return G__13100;
}();
cljs.core.RedNode.prototype.apply = function(self__, args13097) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13097)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__13113 = k;
      var G__13114 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__13113, G__13114) : comp.call(null, G__13113, G__13114);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__13133 = k;
      var G__13134 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__13133, G__13134) : comp.call(null, G__13133, G__13134);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__13144 = cljs.core.seq(coll);
  var chunk__13145 = null;
  var count__13146 = 0;
  var i__13147 = 0;
  while (true) {
    if (i__13147 < count__13146) {
      var vec__13148 = chunk__13145.cljs$core$IIndexed$_nth$arity$2(null, i__13147);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13148, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13148, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__13158 = seq__13144;
      var G__13159 = chunk__13145;
      var G__13160 = count__13146;
      var G__13161 = i__13147 + 1;
      seq__13144 = G__13158;
      chunk__13145 = G__13159;
      count__13146 = G__13160;
      i__13147 = G__13161;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__13144);
      if (temp__4425__auto__) {
        var seq__13144__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__13144__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__13144__$1);
          var G__13162 = cljs.core.chunk_rest(seq__13144__$1);
          var G__13163 = c__7021__auto__;
          var G__13164 = cljs.core.count(c__7021__auto__);
          var G__13165 = 0;
          seq__13144 = G__13162;
          chunk__13145 = G__13163;
          count__13146 = G__13164;
          i__13147 = G__13165;
          continue;
        } else {
          var vec__13151 = cljs.core.first(seq__13144__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13151, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13151, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__13166 = cljs.core.next(seq__13144__$1);
          var G__13167 = null;
          var G__13168 = 0;
          var G__13169 = 0;
          seq__13144 = G__13166;
          chunk__13145 = G__13167;
          count__13146 = G__13168;
          i__13147 = G__13169;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__13154 = k;
        var G__13155 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__13154, G__13155) : self__.comp.call(null, G__13154, G__13155);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__13170 = t.left;
          t = G__13170;
          continue;
        } else {
          var G__13171 = t.right;
          t = G__13171;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__13172 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__13173 = cljs.core.next(es);
          ret = G__13172;
          es = G__13173;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__13174 = null;
  var G__13174__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13174__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13174 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13174__2.call(this, self__, k);
      case 3:
        return G__13174__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13174.cljs$core$IFn$_invoke$arity$2 = G__13174__2;
  G__13174.cljs$core$IFn$_invoke$arity$3 = G__13174__3;
  return G__13174;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args13143) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13143)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__13156 = k;
          var G__13157 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__13156, G__13157) : self__.comp.call(null, G__13156, G__13157);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__13175 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__13176 = t.left;
              stack = G__13175;
              t = G__13176;
              continue;
            } else {
              var G__13177 = stack;
              var G__13178 = t.right;
              stack = G__13177;
              t = G__13178;
              continue;
            }
          } else {
            if (c > 0) {
              var G__13179 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__13180 = t.right;
              stack = G__13179;
              t = G__13180;
              continue;
            } else {
              var G__13181 = stack;
              var G__13182 = t.left;
              stack = G__13181;
              t = G__13182;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13184 = arguments.length;
  var i__7286__auto___13185 = 0;
  while (true) {
    if (i__7286__auto___13185 < len__7285__auto___13184) {
      args__7292__auto__.push(arguments[i__7286__auto___13185]);
      var G__13186 = i__7286__auto___13185 + 1;
      i__7286__auto___13185 = G__13186;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__13187 = cljs.core.nnext(in$);
      var G__13188 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__13187;
      out = G__13188;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq13183) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq13183));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13190 = arguments.length;
  var i__7286__auto___13191 = 0;
  while (true) {
    if (i__7286__auto___13191 < len__7285__auto___13190) {
      args__7292__auto__.push(arguments[i__7286__auto___13191]);
      var G__13192 = i__7286__auto___13191 + 1;
      i__7286__auto___13191 = G__13192;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq13189) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq13189));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13196 = arguments.length;
  var i__7286__auto___13197 = 0;
  while (true) {
    if (i__7286__auto___13197 < len__7285__auto___13196) {
      args__7292__auto__.push(arguments[i__7286__auto___13197]);
      var G__13198 = i__7286__auto___13197 + 1;
      i__7286__auto___13197 = G__13198;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__13199 = cljs.core.nnext(kvs);
      kvs = G__13199;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq13193) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq13193));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13201 = arguments.length;
  var i__7286__auto___13202 = 0;
  while (true) {
    if (i__7286__auto___13202 < len__7285__auto___13201) {
      args__7292__auto__.push(arguments[i__7286__auto___13202]);
      var G__13203 = i__7286__auto___13202 + 1;
      i__7286__auto___13202 = G__13203;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__13204 = cljs.core.nnext(in$);
      var G__13205 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__13204;
      out = G__13205;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq13200) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq13200));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13208 = arguments.length;
  var i__7286__auto___13209 = 0;
  while (true) {
    if (i__7286__auto___13209 < len__7285__auto___13208) {
      args__7292__auto__.push(arguments[i__7286__auto___13209]);
      var G__13210 = i__7286__auto___13209 + 1;
      i__7286__auto___13209 = G__13210;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 1 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7293__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__13211 = cljs.core.nnext(in$);
      var G__13212 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__13211;
      out = G__13212;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq13206) {
  var G__13207 = cljs.core.first(seq13206);
  var seq13206__$1 = cljs.core.next(seq13206);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__13207, seq13206__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.indexOf = function() {
  var G__13215 = null;
  var G__13215__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13215__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13215 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13215__1.call(this, x);
      case 2:
        return G__13215__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13215.cljs$core$IFn$_invoke$arity$1 = G__13215__1;
  G__13215.cljs$core$IFn$_invoke$arity$2 = G__13215__2;
  return G__13215;
}();
cljs.core.KeySeq.prototype.lastIndexOf = function() {
  var G__13216 = null;
  var G__13216__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__13216__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13216 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13216__1.call(this, x);
      case 2:
        return G__13216__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13216.cljs$core$IFn$_invoke$arity$1 = G__13216__1;
  G__13216.cljs$core$IFn$_invoke$arity$2 = G__13216__2;
  return G__13216;
}();
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.indexOf = function() {
  var G__13219 = null;
  var G__13219__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13219__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13219 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13219__1.call(this, x);
      case 2:
        return G__13219__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13219.cljs$core$IFn$_invoke$arity$1 = G__13219__1;
  G__13219.cljs$core$IFn$_invoke$arity$2 = G__13219__2;
  return G__13219;
}();
cljs.core.ValSeq.prototype.lastIndexOf = function() {
  var G__13220 = null;
  var G__13220__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__13220__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13220 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13220__1.call(this, x);
      case 2:
        return G__13220__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13220.cljs$core$IFn$_invoke$arity$1 = G__13220__1;
  G__13220.cljs$core$IFn$_invoke$arity$2 = G__13220__2;
  return G__13220;
}();
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13224 = arguments.length;
  var i__7286__auto___13225 = 0;
  while (true) {
    if (i__7286__auto___13225 < len__7285__auto___13224) {
      args__7292__auto__.push(arguments[i__7286__auto___13225]);
      var G__13226 = i__7286__auto___13225 + 1;
      i__7286__auto___13225 = G__13226;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__13221_SHARP_, p2__13222_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__6210__auto__ = p1__13221_SHARP_;
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__13222_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq13223) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq13223));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13231 = arguments.length;
  var i__7286__auto___13232 = 0;
  while (true) {
    if (i__7286__auto___13232 < len__7285__auto___13231) {
      args__7292__auto__.push(arguments[i__7286__auto___13232]);
      var G__13233 = i__7286__auto___13232 + 1;
      i__7286__auto___13232 = G__13233;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 1 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(1), 0, null) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7293__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__13229 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__13230 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13229, G__13230) : f.call(null, G__13229, G__13230);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__6210__auto__ = m1;
          if (cljs.core.truth_(or__6210__auto__)) {
            return or__6210__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq13227) {
  var G__13228 = cljs.core.first(seq13227);
  var seq13227__$1 = cljs.core.next(seq13227);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__13228, seq13227__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__13234 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__13235 = cljs.core.next(keys);
      ret = G__13234;
      keys = G__13235;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().tail[0];
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__13238 = cljs.core.seq(coll);
  var chunk__13239 = null;
  var count__13240 = 0;
  var i__13241 = 0;
  while (true) {
    if (i__13241 < count__13240) {
      var vec__13242 = chunk__13239.cljs$core$IIndexed$_nth$arity$2(null, i__13241);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13242, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13242, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__13248 = seq__13238;
      var G__13249 = chunk__13239;
      var G__13250 = count__13240;
      var G__13251 = i__13241 + 1;
      seq__13238 = G__13248;
      chunk__13239 = G__13249;
      count__13240 = G__13250;
      i__13241 = G__13251;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__13238);
      if (temp__4425__auto__) {
        var seq__13238__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__13238__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__13238__$1);
          var G__13252 = cljs.core.chunk_rest(seq__13238__$1);
          var G__13253 = c__7021__auto__;
          var G__13254 = cljs.core.count(c__7021__auto__);
          var G__13255 = 0;
          seq__13238 = G__13252;
          chunk__13239 = G__13253;
          count__13240 = G__13254;
          i__13241 = G__13255;
          continue;
        } else {
          var vec__13245 = cljs.core.first(seq__13238__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13245, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13245, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__13256 = cljs.core.next(seq__13238__$1);
          var G__13257 = null;
          var G__13258 = 0;
          var G__13259 = 0;
          seq__13238 = G__13256;
          chunk__13239 = G__13257;
          count__13240 = G__13258;
          i__13241 = G__13259;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__13236_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__13236_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__13260 = null;
  var G__13260__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13260__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13260 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13260__2.call(this, self__, k);
      case 3:
        return G__13260__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13260.cljs$core$IFn$_invoke$arity$2 = G__13260__2;
  G__13260.cljs$core$IFn$_invoke$arity$3 = G__13260__3;
  return G__13260;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args13237) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13237)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__13261 = i + 1;
        var G__13262 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__13261;
        out = G__13262;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__13263 = i + 1;
        var G__13264 = cljs.core._conj_BANG_(out, items[i]);
        i = G__13263;
        out = G__13264;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__13266 = null;
  var G__13266__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__13266__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__13266 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13266__2.call(this, self__, k);
      case 3:
        return G__13266__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13266.cljs$core$IFn$_invoke$arity$2 = G__13266__2;
  G__13266.cljs$core$IFn$_invoke$arity$3 = G__13266__3;
  return G__13266;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args13265) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13265)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__13269 = cljs.core.seq(coll);
  var chunk__13270 = null;
  var count__13271 = 0;
  var i__13272 = 0;
  while (true) {
    if (i__13272 < count__13271) {
      var vec__13273 = chunk__13270.cljs$core$IIndexed$_nth$arity$2(null, i__13272);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13273, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13273, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__13279 = seq__13269;
      var G__13280 = chunk__13270;
      var G__13281 = count__13271;
      var G__13282 = i__13272 + 1;
      seq__13269 = G__13279;
      chunk__13270 = G__13280;
      count__13271 = G__13281;
      i__13272 = G__13282;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__13269);
      if (temp__4425__auto__) {
        var seq__13269__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__13269__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__13269__$1);
          var G__13283 = cljs.core.chunk_rest(seq__13269__$1);
          var G__13284 = c__7021__auto__;
          var G__13285 = cljs.core.count(c__7021__auto__);
          var G__13286 = 0;
          seq__13269 = G__13283;
          chunk__13270 = G__13284;
          count__13271 = G__13285;
          i__13272 = G__13286;
          continue;
        } else {
          var vec__13276 = cljs.core.first(seq__13269__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13276, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13276, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__13287 = cljs.core.next(seq__13269__$1);
          var G__13288 = null;
          var G__13289 = 0;
          var G__13290 = 0;
          seq__13269 = G__13287;
          chunk__13270 = G__13288;
          count__13271 = G__13289;
          i__13272 = G__13290;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__13267_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__13267_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__13291 = null;
  var G__13291__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13291__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13291 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13291__2.call(this, self__, k);
      case 3:
        return G__13291__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13291.cljs$core$IFn$_invoke$arity$2 = G__13291__2;
  G__13291.cljs$core$IFn$_invoke$arity$3 = G__13291__3;
  return G__13291;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args13268) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13268)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__7119__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__7119__auto__.length) {
        var G__13292 = i + 1;
        var G__13293 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__13292;
        res = G__13293;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__13294 = cljs.core.next(in$__$1);
          var G__13295 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__13294;
          out = G__13295;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var args13296 = [];
  var len__7285__auto___13300 = arguments.length;
  var i__7286__auto___13301 = 0;
  while (true) {
    if (i__7286__auto___13301 < len__7285__auto___13300) {
      args13296.push(arguments[i__7286__auto___13301]);
      var G__13302 = i__7286__auto___13301 + 1;
      i__7286__auto___13301 = G__13302;
      continue;
    } else {
    }
    break;
  }
  var G__13299 = args13296.length;
  switch(G__13299) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args13296.slice(0), 0, null);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__7304__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq13297) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq13297));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13305 = arguments.length;
  var i__7286__auto___13306 = 0;
  while (true) {
    if (i__7286__auto___13306 < len__7285__auto___13305) {
      args__7292__auto__.push(arguments[i__7286__auto___13306]);
      var G__13307 = i__7286__auto___13306 + 1;
      i__7286__auto___13306 = G__13307;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq13304) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq13304));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13310 = arguments.length;
  var i__7286__auto___13311 = 0;
  while (true) {
    if (i__7286__auto___13311 < len__7285__auto___13310) {
      args__7292__auto__.push(arguments[i__7286__auto___13311]);
      var G__13312 = i__7286__auto___13311 + 1;
      i__7286__auto___13311 = G__13312;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 1 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7293__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq13308) {
  var G__13309 = cljs.core.first(seq13308);
  var seq13308__$1 = cljs.core.next(seq13308);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__13309, seq13308__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var args13315 = [];
  var len__7285__auto___13318 = arguments.length;
  var i__7286__auto___13319 = 0;
  while (true) {
    if (i__7286__auto___13319 < len__7285__auto___13318) {
      args13315.push(arguments[i__7286__auto___13319]);
      var G__13320 = i__7286__auto___13319 + 1;
      i__7286__auto___13319 = G__13320;
      continue;
    } else {
    }
    break;
  }
  var G__13317 = args13315.length;
  switch(G__13317) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13315.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__13313_SHARP_) {
    var temp__4423__auto__ = cljs.core.find(smap, p1__13313_SHARP_);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var e = temp__4423__auto__;
      return cljs.core.val(e);
    } else {
      return p1__13313_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4423__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__13314_SHARP_) {
      var temp__4423__auto__ = cljs.core.find(smap, p1__13314_SHARP_);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var e = temp__4423__auto__;
        return cljs.core.second(e);
      } else {
        return p1__13314_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var args13322 = [];
  var len__7285__auto___13335 = arguments.length;
  var i__7286__auto___13336 = 0;
  while (true) {
    if (i__7286__auto___13336 < len__7285__auto___13335) {
      args13322.push(arguments[i__7286__auto___13336]);
      var G__13337 = i__7286__auto___13336 + 1;
      i__7286__auto___13336 = G__13337;
      continue;
    } else {
    }
    break;
  }
  var G__13324 = args13322.length;
  switch(G__13324) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13322.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__13339 = null;
        var G__13339__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__13339__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__13339__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(seen) : cljs.core.deref.call(null, seen), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__13339 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__13339__0.call(this);
            case 1:
              return G__13339__1.call(this, result);
            case 2:
              return G__13339__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__13339.cljs$core$IFn$_invoke$arity$0 = G__13339__0;
        G__13339.cljs$core$IFn$_invoke$arity$1 = G__13339__1;
        G__13339.cljs$core$IFn$_invoke$arity$2 = G__13339__2;
        return G__13339;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__13331, seen__$1) {
        while (true) {
          var vec__13332 = p__13331;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13332, 0, null);
          var xs__$1 = vec__13332;
          var temp__4425__auto__ = cljs.core.seq(xs__$1);
          if (temp__4425__auto__) {
            var s = temp__4425__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__13340 = cljs.core.rest(s);
              var G__13341 = seen__$1;
              p__13331 = G__13340;
              seen__$1 = G__13341;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__13342 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__13343 = cljs.core.next(s__$1);
      ret = G__13342;
      s__$1 = G__13343;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__13346 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__13347 = cljs.core.next(ks);
      var G__13348 = cljs.core.next(vs);
      map = G__13346;
      ks = G__13347;
      vs = G__13348;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var args13351 = [];
  var len__7285__auto___13358 = arguments.length;
  var i__7286__auto___13359 = 0;
  while (true) {
    if (i__7286__auto___13359 < len__7285__auto___13358) {
      args13351.push(arguments[i__7286__auto___13359]);
      var G__13360 = i__7286__auto___13359 + 1;
      i__7286__auto___13359 = G__13360;
      continue;
    } else {
    }
    break;
  }
  var G__13357 = args13351.length;
  switch(G__13357) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args13351.slice(3), 0, null);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7304__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__13349_SHARP_, p2__13350_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__13349_SHARP_, p2__13350_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq13352) {
  var G__13353 = cljs.core.first(seq13352);
  var seq13352__$1 = cljs.core.next(seq13352);
  var G__13354 = cljs.core.first(seq13352__$1);
  var seq13352__$2 = cljs.core.next(seq13352__$1);
  var G__13355 = cljs.core.first(seq13352__$2);
  var seq13352__$3 = cljs.core.next(seq13352__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__13353, G__13354, G__13355, seq13352__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var args13364 = [];
  var len__7285__auto___13371 = arguments.length;
  var i__7286__auto___13372 = 0;
  while (true) {
    if (i__7286__auto___13372 < len__7285__auto___13371) {
      args13364.push(arguments[i__7286__auto___13372]);
      var G__13373 = i__7286__auto___13372 + 1;
      i__7286__auto___13372 = G__13373;
      continue;
    } else {
    }
    break;
  }
  var G__13370 = args13364.length;
  switch(G__13370) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args13364.slice(3), 0, null);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7304__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__13362_SHARP_, p2__13363_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__13362_SHARP_, p2__13363_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq13365) {
  var G__13366 = cljs.core.first(seq13365);
  var seq13365__$1 = cljs.core.next(seq13365);
  var G__13367 = cljs.core.first(seq13365__$1);
  var seq13365__$2 = cljs.core.next(seq13365__$1);
  var G__13368 = cljs.core.first(seq13365__$2);
  var seq13365__$3 = cljs.core.next(seq13365__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__13366, G__13367, G__13368, seq13365__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var args13375 = [];
  var len__7285__auto___13378 = arguments.length;
  var i__7286__auto___13379 = 0;
  while (true) {
    if (i__7286__auto___13379 < len__7285__auto___13378) {
      args13375.push(arguments[i__7286__auto___13379]);
      var G__13380 = i__7286__auto___13379 + 1;
      i__7286__auto___13379 = G__13380;
      continue;
    } else {
    }
    break;
  }
  var G__13377 = args13375.length;
  switch(G__13377) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13375.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__13382 = null;
        var G__13382__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__13382__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__13382__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__13382 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__13382__0.call(this);
            case 1:
              return G__13382__1.call(this, result);
            case 2:
              return G__13382__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__13382.cljs$core$IFn$_invoke$arity$0 = G__13382__0;
        G__13382.cljs$core$IFn$_invoke$arity$1 = G__13382__1;
        G__13382.cljs$core$IFn$_invoke$arity$2 = G__13382__2;
        return G__13382;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var args13383 = [];
  var len__7285__auto___13387 = arguments.length;
  var i__7286__auto___13388 = 0;
  while (true) {
    if (i__7286__auto___13388 < len__7285__auto___13387) {
      args13383.push(arguments[i__7286__auto___13388]);
      var G__13389 = i__7286__auto___13388 + 1;
      i__7286__auto___13388 = G__13389;
      continue;
    } else {
    }
    break;
  }
  var G__13385 = args13383.length;
  switch(G__13385) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13383.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__13391 = null;
      var G__13391__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__13391__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__13391__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__13391 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__13391__0.call(this);
          case 1:
            return G__13391__1.call(this, result);
          case 2:
            return G__13391__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13391.cljs$core$IFn$_invoke$arity$0 = G__13391__0;
      G__13391.cljs$core$IFn$_invoke$arity$1 = G__13391__1;
      G__13391.cljs$core$IFn$_invoke$arity$2 = G__13391__2;
      return G__13391;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.truth_(function() {
        var G__13386 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13386) : pred.call(null, G__13386);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__13400 = function() {
      var G__13402 = cljs.core._entry_key(sc, e);
      var G__13403 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__13402, G__13403) : comp.call(null, G__13402, G__13403);
    }();
    var G__13401 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__13400, G__13401) : test.call(null, G__13400, G__13401);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var args13404 = [];
  var len__7285__auto___13413 = arguments.length;
  var i__7286__auto___13414 = 0;
  while (true) {
    if (i__7286__auto___13414 < len__7285__auto___13413) {
      args13404.push(arguments[i__7286__auto___13414]);
      var G__13415 = i__7286__auto___13414 + 1;
      i__7286__auto___13414 = G__13415;
      continue;
    } else {
    }
    break;
  }
  var G__13406 = args13404.length;
  switch(G__13406) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13404.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__13407 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13407, 0, null);
      var s = vec__13407;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__13410 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13410, 0, null);
    var s = vec__13410;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var args13417 = [];
  var len__7285__auto___13426 = arguments.length;
  var i__7286__auto___13427 = 0;
  while (true) {
    if (i__7286__auto___13427 < len__7285__auto___13426) {
      args13417.push(arguments[i__7286__auto___13427]);
      var G__13428 = i__7286__auto___13427 + 1;
      i__7286__auto___13427 = G__13428;
      continue;
    } else {
    }
    break;
  }
  var G__13419 = args13417.length;
  switch(G__13419) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13417.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__13420 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13420, 0, null);
      var s = vec__13420;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__13423 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13423, 0, null);
    var s = vec__13423;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.indexOf = function() {
  var G__13431 = null;
  var G__13431__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13431__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__13431 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__13431__1.call(this, x);
      case 2:
        return G__13431__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13431.cljs$core$IFn$_invoke$arity$1 = G__13431__1;
  G__13431.cljs$core$IFn$_invoke$arity$2 = G__13431__2;
  return G__13431;
}();
cljs.core.Range.prototype.lastIndexOf = function() {
  var G__13432 = null;
  var G__13432__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__13432__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__13432 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__13432__1.call(this, x);
      case 2:
        return G__13432__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13432.cljs$core$IFn$_invoke$arity$1 = G__13432__1;
  G__13432.cljs$core$IFn$_invoke$arity$2 = G__13432__2;
  return G__13432;
}();
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__13430 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__13430);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(ret__$1) : cljs.core.deref.call(null, ret__$1);
      } else {
        var G__13433 = i + self__.step;
        var G__13434 = ret__$1;
        i = G__13433;
        ret = G__13434;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.step < 0) {
      if (self__.start > self__.end) {
        return rng__$1;
      } else {
        return null;
      }
    } else {
      if (self__.start === self__.end) {
        return null;
      } else {
        return rng__$1;
      }
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.range = function cljs$core$range(var_args) {
  var args13435 = [];
  var len__7285__auto___13438 = arguments.length;
  var i__7286__auto___13439 = 0;
  while (true) {
    if (i__7286__auto___13439 < len__7285__auto___13438) {
      args13435.push(arguments[i__7286__auto___13439]);
      var G__13440 = i__7286__auto___13439 + 1;
      i__7286__auto___13439 = G__13440;
      continue;
    } else {
    }
    break;
  }
  var G__13437 = args13435.length;
  switch(G__13437) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13435.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var args13442 = [];
  var len__7285__auto___13445 = arguments.length;
  var i__7286__auto___13446 = 0;
  while (true) {
    if (i__7286__auto___13446 < len__7285__auto___13445) {
      args13442.push(arguments[i__7286__auto___13446]);
      var G__13447 = i__7286__auto___13446 + 1;
      i__7286__auto___13446 = G__13447;
      continue;
    } else {
    }
    break;
  }
  var G__13444 = args13442.length;
  switch(G__13444) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13442.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__13449 = null;
        var G__13449__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__13449__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__13449__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__13449 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__13449__0.call(this);
            case 1:
              return G__13449__1.call(this, result);
            case 2:
              return G__13449__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__13449.cljs$core$IFn$_invoke$arity$0 = G__13449__0;
        G__13449.cljs$core$IFn$_invoke$arity$1 = G__13449__1;
        G__13449.cljs$core$IFn$_invoke$arity$2 = G__13449__2;
        return G__13449;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var args13451 = [];
  var len__7285__auto___13454 = arguments.length;
  var i__7286__auto___13455 = 0;
  while (true) {
    if (i__7286__auto___13455 < len__7285__auto___13454) {
      args13451.push(arguments[i__7286__auto___13455]);
      var G__13456 = i__7286__auto___13455 + 1;
      i__7286__auto___13455 = G__13456;
      continue;
    } else {
    }
    break;
  }
  var G__13453 = args13451.length;
  switch(G__13453) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13451.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__13458 = null;
        var G__13458__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__13458__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__13458__2 = function(result, input) {
          var pval = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__13458 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__13458__0.call(this);
            case 1:
              return G__13458__1.call(this, result);
            case 2:
              return G__13458__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__13458.cljs$core$IFn$_invoke$arity$0 = G__13458__0;
        G__13458.cljs$core$IFn$_invoke$arity$1 = G__13458__1;
        G__13458.cljs$core$IFn$_invoke$arity$2 = G__13458__2;
        return G__13458;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4425__auto__) {
        return function(p1__13450_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__13450_SHARP_) : f.call(null, p1__13450_SHARP_));
        };
      }(fst, fv, s, temp__4425__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var args13459 = [];
  var len__7285__auto___13464 = arguments.length;
  var i__7286__auto___13465 = 0;
  while (true) {
    if (i__7286__auto___13465 < len__7285__auto___13464) {
      args13459.push(arguments[i__7286__auto___13465]);
      var G__13466 = i__7286__auto___13465 + 1;
      i__7286__auto___13465 = G__13466;
      continue;
    } else {
    }
    break;
  }
  var G__13461 = args13459.length;
  switch(G__13461) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13459.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4423__auto__ = cljs.core.seq(coll);
    if (temp__4423__auto__) {
      var s = temp__4423__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      var x__7044__auto__ = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      return cljs.core._conj(cljs.core.List.EMPTY, x__7044__auto__);
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  if (cljs.core.reduced_QMARK_(init)) {
    var x__7044__auto__ = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init) : cljs.core.deref.call(null, init);
    return cljs.core._conj(cljs.core.List.EMPTY, x__7044__auto__);
  } else {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__13462 = init;
          var G__13463 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13462, G__13463) : f.call(null, G__13462, G__13463);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  }
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var args13478 = [];
  var len__7285__auto___13485 = arguments.length;
  var i__7286__auto___13486 = 0;
  while (true) {
    if (i__7286__auto___13486 < len__7285__auto___13485) {
      args13478.push(arguments[i__7286__auto___13486]);
      var G__13487 = i__7286__auto___13486 + 1;
      i__7286__auto___13486 = G__13487;
      continue;
    } else {
    }
    break;
  }
  var G__13484 = args13478.length;
  switch(G__13484) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args13478.slice(3), 0, null);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7304__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__13489 = null;
    var G__13489__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__13489__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__13489__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__13489__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__13489__4 = function() {
      var G__13490__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__13490 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__13491__i = 0, G__13491__a = new Array(arguments.length - 3);
          while (G__13491__i < G__13491__a.length) {
            G__13491__a[G__13491__i] = arguments[G__13491__i + 3];
            ++G__13491__i;
          }
          args = new cljs.core.IndexedSeq(G__13491__a, 0);
        }
        return G__13490__delegate.call(this, x, y, z, args);
      };
      G__13490.cljs$lang$maxFixedArity = 3;
      G__13490.cljs$lang$applyTo = function(arglist__13492) {
        var x = cljs.core.first(arglist__13492);
        arglist__13492 = cljs.core.next(arglist__13492);
        var y = cljs.core.first(arglist__13492);
        arglist__13492 = cljs.core.next(arglist__13492);
        var z = cljs.core.first(arglist__13492);
        var args = cljs.core.rest(arglist__13492);
        return G__13490__delegate(x, y, z, args);
      };
      G__13490.cljs$core$IFn$_invoke$arity$variadic = G__13490__delegate;
      return G__13490;
    }();
    G__13489 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__13489__0.call(this);
        case 1:
          return G__13489__1.call(this, x);
        case 2:
          return G__13489__2.call(this, x, y);
        case 3:
          return G__13489__3.call(this, x, y, z);
        default:
          var G__13493 = null;
          if (arguments.length > 3) {
            var G__13494__i = 0, G__13494__a = new Array(arguments.length - 3);
            while (G__13494__i < G__13494__a.length) {
              G__13494__a[G__13494__i] = arguments[G__13494__i + 3];
              ++G__13494__i;
            }
            G__13493 = new cljs.core.IndexedSeq(G__13494__a, 0);
          }
          return G__13489__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13493);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13489.cljs$lang$maxFixedArity = 3;
    G__13489.cljs$lang$applyTo = G__13489__4.cljs$lang$applyTo;
    G__13489.cljs$core$IFn$_invoke$arity$0 = G__13489__0;
    G__13489.cljs$core$IFn$_invoke$arity$1 = G__13489__1;
    G__13489.cljs$core$IFn$_invoke$arity$2 = G__13489__2;
    G__13489.cljs$core$IFn$_invoke$arity$3 = G__13489__3;
    G__13489.cljs$core$IFn$_invoke$arity$variadic = G__13489__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__13489;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__13495 = null;
    var G__13495__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__13495__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__13495__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__13495__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__13495__4 = function() {
      var G__13496__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__13496 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__13497__i = 0, G__13497__a = new Array(arguments.length - 3);
          while (G__13497__i < G__13497__a.length) {
            G__13497__a[G__13497__i] = arguments[G__13497__i + 3];
            ++G__13497__i;
          }
          args = new cljs.core.IndexedSeq(G__13497__a, 0);
        }
        return G__13496__delegate.call(this, x, y, z, args);
      };
      G__13496.cljs$lang$maxFixedArity = 3;
      G__13496.cljs$lang$applyTo = function(arglist__13498) {
        var x = cljs.core.first(arglist__13498);
        arglist__13498 = cljs.core.next(arglist__13498);
        var y = cljs.core.first(arglist__13498);
        arglist__13498 = cljs.core.next(arglist__13498);
        var z = cljs.core.first(arglist__13498);
        var args = cljs.core.rest(arglist__13498);
        return G__13496__delegate(x, y, z, args);
      };
      G__13496.cljs$core$IFn$_invoke$arity$variadic = G__13496__delegate;
      return G__13496;
    }();
    G__13495 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__13495__0.call(this);
        case 1:
          return G__13495__1.call(this, x);
        case 2:
          return G__13495__2.call(this, x, y);
        case 3:
          return G__13495__3.call(this, x, y, z);
        default:
          var G__13499 = null;
          if (arguments.length > 3) {
            var G__13500__i = 0, G__13500__a = new Array(arguments.length - 3);
            while (G__13500__i < G__13500__a.length) {
              G__13500__a[G__13500__i] = arguments[G__13500__i + 3];
              ++G__13500__i;
            }
            G__13499 = new cljs.core.IndexedSeq(G__13500__a, 0);
          }
          return G__13495__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13499);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13495.cljs$lang$maxFixedArity = 3;
    G__13495.cljs$lang$applyTo = G__13495__4.cljs$lang$applyTo;
    G__13495.cljs$core$IFn$_invoke$arity$0 = G__13495__0;
    G__13495.cljs$core$IFn$_invoke$arity$1 = G__13495__1;
    G__13495.cljs$core$IFn$_invoke$arity$2 = G__13495__2;
    G__13495.cljs$core$IFn$_invoke$arity$3 = G__13495__3;
    G__13495.cljs$core$IFn$_invoke$arity$variadic = G__13495__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__13495;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__13501 = null;
    var G__13501__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__13501__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__13501__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__13501__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__13501__4 = function() {
      var G__13502__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__13502 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__13503__i = 0, G__13503__a = new Array(arguments.length - 3);
          while (G__13503__i < G__13503__a.length) {
            G__13503__a[G__13503__i] = arguments[G__13503__i + 3];
            ++G__13503__i;
          }
          args = new cljs.core.IndexedSeq(G__13503__a, 0);
        }
        return G__13502__delegate.call(this, x, y, z, args);
      };
      G__13502.cljs$lang$maxFixedArity = 3;
      G__13502.cljs$lang$applyTo = function(arglist__13504) {
        var x = cljs.core.first(arglist__13504);
        arglist__13504 = cljs.core.next(arglist__13504);
        var y = cljs.core.first(arglist__13504);
        arglist__13504 = cljs.core.next(arglist__13504);
        var z = cljs.core.first(arglist__13504);
        var args = cljs.core.rest(arglist__13504);
        return G__13502__delegate(x, y, z, args);
      };
      G__13502.cljs$core$IFn$_invoke$arity$variadic = G__13502__delegate;
      return G__13502;
    }();
    G__13501 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__13501__0.call(this);
        case 1:
          return G__13501__1.call(this, x);
        case 2:
          return G__13501__2.call(this, x, y);
        case 3:
          return G__13501__3.call(this, x, y, z);
        default:
          var G__13505 = null;
          if (arguments.length > 3) {
            var G__13506__i = 0, G__13506__a = new Array(arguments.length - 3);
            while (G__13506__i < G__13506__a.length) {
              G__13506__a[G__13506__i] = arguments[G__13506__i + 3];
              ++G__13506__i;
            }
            G__13505 = new cljs.core.IndexedSeq(G__13506__a, 0);
          }
          return G__13501__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13505);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13501.cljs$lang$maxFixedArity = 3;
    G__13501.cljs$lang$applyTo = G__13501__4.cljs$lang$applyTo;
    G__13501.cljs$core$IFn$_invoke$arity$0 = G__13501__0;
    G__13501.cljs$core$IFn$_invoke$arity$1 = G__13501__1;
    G__13501.cljs$core$IFn$_invoke$arity$2 = G__13501__2;
    G__13501.cljs$core$IFn$_invoke$arity$3 = G__13501__3;
    G__13501.cljs$core$IFn$_invoke$arity$variadic = G__13501__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__13501;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__13507 = null;
      var G__13507__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__13468_SHARP_, p2__13469_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__13468_SHARP_, p2__13469_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__13469_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__13469_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__13507__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__13470_SHARP_, p2__13471_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__13470_SHARP_, p2__13471_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__13471_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__13471_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__13507__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__13472_SHARP_, p2__13473_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__13472_SHARP_, p2__13473_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__13473_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__13473_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__13507__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__13474_SHARP_, p2__13475_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__13474_SHARP_, p2__13475_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__13475_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__13475_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__13507__4 = function() {
        var G__13508__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__13476_SHARP_, p2__13477_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__13476_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__13477_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__13508 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13509__i = 0, G__13509__a = new Array(arguments.length - 3);
            while (G__13509__i < G__13509__a.length) {
              G__13509__a[G__13509__i] = arguments[G__13509__i + 3];
              ++G__13509__i;
            }
            args = new cljs.core.IndexedSeq(G__13509__a, 0);
          }
          return G__13508__delegate.call(this, x, y, z, args);
        };
        G__13508.cljs$lang$maxFixedArity = 3;
        G__13508.cljs$lang$applyTo = function(arglist__13510) {
          var x = cljs.core.first(arglist__13510);
          arglist__13510 = cljs.core.next(arglist__13510);
          var y = cljs.core.first(arglist__13510);
          arglist__13510 = cljs.core.next(arglist__13510);
          var z = cljs.core.first(arglist__13510);
          var args = cljs.core.rest(arglist__13510);
          return G__13508__delegate(x, y, z, args);
        };
        G__13508.cljs$core$IFn$_invoke$arity$variadic = G__13508__delegate;
        return G__13508;
      }();
      G__13507 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13507__0.call(this);
          case 1:
            return G__13507__1.call(this, x);
          case 2:
            return G__13507__2.call(this, x, y);
          case 3:
            return G__13507__3.call(this, x, y, z);
          default:
            var G__13511 = null;
            if (arguments.length > 3) {
              var G__13512__i = 0, G__13512__a = new Array(arguments.length - 3);
              while (G__13512__i < G__13512__a.length) {
                G__13512__a[G__13512__i] = arguments[G__13512__i + 3];
                ++G__13512__i;
              }
              G__13511 = new cljs.core.IndexedSeq(G__13512__a, 0);
            }
            return G__13507__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13511);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13507.cljs$lang$maxFixedArity = 3;
      G__13507.cljs$lang$applyTo = G__13507__4.cljs$lang$applyTo;
      G__13507.cljs$core$IFn$_invoke$arity$0 = G__13507__0;
      G__13507.cljs$core$IFn$_invoke$arity$1 = G__13507__1;
      G__13507.cljs$core$IFn$_invoke$arity$2 = G__13507__2;
      G__13507.cljs$core$IFn$_invoke$arity$3 = G__13507__3;
      G__13507.cljs$core$IFn$_invoke$arity$variadic = G__13507__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13507;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq13479) {
  var G__13480 = cljs.core.first(seq13479);
  var seq13479__$1 = cljs.core.next(seq13479);
  var G__13481 = cljs.core.first(seq13479__$1);
  var seq13479__$2 = cljs.core.next(seq13479__$1);
  var G__13482 = cljs.core.first(seq13479__$2);
  var seq13479__$3 = cljs.core.next(seq13479__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__13480, G__13481, G__13482, seq13479__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var args13513 = [];
  var len__7285__auto___13516 = arguments.length;
  var i__7286__auto___13517 = 0;
  while (true) {
    if (i__7286__auto___13517 < len__7285__auto___13516) {
      args13513.push(arguments[i__7286__auto___13517]);
      var G__13518 = i__7286__auto___13517 + 1;
      i__7286__auto___13517 = G__13518;
      continue;
    } else {
    }
    break;
  }
  var G__13515 = args13513.length;
  switch(G__13515) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13513.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__13520 = cljs.core.next(coll);
      coll = G__13520;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__13521 = n - 1;
      var G__13522 = cljs.core.next(coll);
      n = G__13521;
      coll = G__13522;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var args13523 = [];
  var len__7285__auto___13526 = arguments.length;
  var i__7286__auto___13527 = 0;
  while (true) {
    if (i__7286__auto___13527 < len__7285__auto___13526) {
      args13523.push(arguments[i__7286__auto___13527]);
      var G__13528 = i__7286__auto___13527 + 1;
      i__7286__auto___13527 = G__13528;
      continue;
    } else {
    }
    break;
  }
  var G__13525 = args13523.length;
  switch(G__13525) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13523.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__13533 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13533, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13533, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__6210__auto__ = flags;
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_13543 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__6210__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__6210__auto__)) {
              return or__6210__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__13544_13550 = cljs.core.first(coll);
          var G__13545_13551 = writer;
          var G__13546_13552 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__13544_13550, G__13545_13551, G__13546_13552) : print_one.call(null, G__13544_13550, G__13545_13551, G__13546_13552);
        } else {
        }
        var coll_13553__$1 = cljs.core.next(coll);
        var n_13554 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_13553__$1 && (n_13554 == null || !(n_13554 === 0))) {
            cljs.core._write(writer, sep);
            var G__13547_13555 = cljs.core.first(coll_13553__$1);
            var G__13548_13556 = writer;
            var G__13549_13557 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__13547_13555, G__13548_13556, G__13549_13557) : print_one.call(null, G__13547_13555, G__13548_13556, G__13549_13557);
            var G__13558 = cljs.core.next(coll_13553__$1);
            var G__13559 = n_13554 - 1;
            coll_13553__$1 = G__13558;
            n_13554 = G__13559;
            continue;
          } else {
            if (cljs.core.seq(coll_13553__$1) && n_13554 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__6210__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__6210__auto__)) {
                  return or__6210__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_13543;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13566 = arguments.length;
  var i__7286__auto___13567 = 0;
  while (true) {
    if (i__7286__auto___13567 < len__7285__auto___13566) {
      args__7292__auto__.push(arguments[i__7286__auto___13567]);
      var G__13568 = i__7286__auto___13567 + 1;
      i__7286__auto___13567 = G__13568;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 1 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(1), 0, null) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7293__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__13562 = cljs.core.seq(ss);
  var chunk__13563 = null;
  var count__13564 = 0;
  var i__13565 = 0;
  while (true) {
    if (i__13565 < count__13564) {
      var s = chunk__13563.cljs$core$IIndexed$_nth$arity$2(null, i__13565);
      cljs.core._write(writer, s);
      var G__13569 = seq__13562;
      var G__13570 = chunk__13563;
      var G__13571 = count__13564;
      var G__13572 = i__13565 + 1;
      seq__13562 = G__13569;
      chunk__13563 = G__13570;
      count__13564 = G__13571;
      i__13565 = G__13572;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__13562);
      if (temp__4425__auto__) {
        var seq__13562__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__13562__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__13562__$1);
          var G__13573 = cljs.core.chunk_rest(seq__13562__$1);
          var G__13574 = c__7021__auto__;
          var G__13575 = cljs.core.count(c__7021__auto__);
          var G__13576 = 0;
          seq__13562 = G__13573;
          chunk__13563 = G__13574;
          count__13564 = G__13575;
          i__13565 = G__13576;
          continue;
        } else {
          var s = cljs.core.first(seq__13562__$1);
          cljs.core._write(writer, s);
          var G__13577 = cljs.core.next(seq__13562__$1);
          var G__13578 = null;
          var G__13579 = 0;
          var G__13580 = 0;
          seq__13562 = G__13577;
          chunk__13563 = G__13578;
          count__13564 = G__13579;
          i__13565 = G__13580;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq13560) {
  var G__13561 = cljs.core.first(seq13560);
  var seq13560__$1 = cljs.core.next(seq13560);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__13561, seq13560__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj13582 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj13582;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__6198__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__6198__auto__) {
    var and__6198__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || obj.cljs$core$IMeta$ ? true : false : false;
    if (and__6198__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__6198__auto____$1;
    }
  } else {
    return and__6198__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      var G__13597_13605 = cljs.core.meta(obj);
      var G__13598_13606 = writer;
      var G__13599_13607 = opts;
      cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__13597_13605, G__13598_13606, G__13599_13607) : cljs.core.pr_writer.call(null, G__13597_13605, G__13598_13606, G__13599_13607);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
        return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
      } else {
        if (obj === true || obj === false || typeof obj === "number") {
          return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
        } else {
          if (cljs.core.object_QMARK_(obj)) {
            cljs.core._write(writer, "#js ");
            var G__13601 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
            }, cljs.core.js_keys(obj));
            var G__13602 = cljs.core.pr_writer;
            var G__13603 = writer;
            var G__13604 = opts;
            return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__13601, G__13602, G__13603, G__13604) : cljs.core.print_map.call(null, G__13601, G__13602, G__13603, G__13604);
          } else {
            if (cljs.core.array_QMARK_(obj)) {
              return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
            } else {
              if (goog.isString(obj)) {
                if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                  return cljs.core._write(writer, cljs.core.quote_string(obj));
                } else {
                  return cljs.core._write(writer, obj);
                }
              } else {
                if (goog.isFunction(obj)) {
                  var name = obj.name;
                  var name__$1 = cljs.core.truth_(function() {
                    var or__6210__auto__ = name == null;
                    if (or__6210__auto__) {
                      return or__6210__auto__;
                    } else {
                      return goog.string.isEmpty(name);
                    }
                  }()) ? "Function" : name;
                  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, ' "', [cljs.core.str(obj)].join(""), '"]'], 0));
                } else {
                  if (obj instanceof Date) {
                    var normalize = function(n, len) {
                      var ns = [cljs.core.str(n)].join("");
                      while (true) {
                        if (cljs.core.count(ns) < len) {
                          var G__13608 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                          ns = G__13608;
                          continue;
                        } else {
                          return ns;
                        }
                        break;
                      }
                    };
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                  } else {
                    if (cljs.core.regexp_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                    } else {
                      if (cljs.core.truth_(obj.constructor.cljs$lang$ctorStr)) {
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                      } else {
                        var name = obj.constructor.name;
                        var name__$1 = cljs.core.truth_(function() {
                          var or__6210__auto__ = name == null;
                          if (or__6210__auto__) {
                            return or__6210__auto__;
                          } else {
                            return goog.string.isEmpty(name);
                          }
                        }()) ? "Object" : name;
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, " ", [cljs.core.str(obj)].join(""), "]"], 0));
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var alt_impl = temp__4423__auto__;
    var G__13612 = obj;
    var G__13613 = writer;
    var G__13614 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__13612, G__13613, G__13614) : alt_impl.call(null, G__13612, G__13613, G__13614);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__13619 = cljs.core.seq(cljs.core.next(objs));
  var chunk__13620 = null;
  var count__13621 = 0;
  var i__13622 = 0;
  while (true) {
    if (i__13622 < count__13621) {
      var obj = chunk__13620.cljs$core$IIndexed$_nth$arity$2(null, i__13622);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__13623 = seq__13619;
      var G__13624 = chunk__13620;
      var G__13625 = count__13621;
      var G__13626 = i__13622 + 1;
      seq__13619 = G__13623;
      chunk__13620 = G__13624;
      count__13621 = G__13625;
      i__13622 = G__13626;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__13619);
      if (temp__4425__auto__) {
        var seq__13619__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__13619__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__13619__$1);
          var G__13627 = cljs.core.chunk_rest(seq__13619__$1);
          var G__13628 = c__7021__auto__;
          var G__13629 = cljs.core.count(c__7021__auto__);
          var G__13630 = 0;
          seq__13619 = G__13627;
          chunk__13620 = G__13628;
          count__13621 = G__13629;
          i__13622 = G__13630;
          continue;
        } else {
          var obj = cljs.core.first(seq__13619__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__13631 = cljs.core.next(seq__13619__$1);
          var G__13632 = null;
          var G__13633 = 0;
          var G__13634 = 0;
          seq__13619 = G__13631;
          chunk__13620 = G__13632;
          count__13621 = G__13633;
          i__13622 = G__13634;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var args13635 = [];
  var len__7285__auto___13638 = arguments.length;
  var i__7286__auto___13639 = 0;
  while (true) {
    if (i__7286__auto___13639 < len__7285__auto___13638) {
      args13635.push(arguments[i__7286__auto___13639]);
      var G__13640 = i__7286__auto___13639 + 1;
      i__7286__auto___13639 = G__13640;
      continue;
    } else {
    }
    break;
  }
  var G__13637 = args13635.length;
  switch(G__13637) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13635.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13643 = arguments.length;
  var i__7286__auto___13644 = 0;
  while (true) {
    if (i__7286__auto___13644 < len__7285__auto___13643) {
      args__7292__auto__.push(arguments[i__7286__auto___13644]);
      var G__13645 = i__7286__auto___13644 + 1;
      i__7286__auto___13644 = G__13645;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq13642) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq13642));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13647 = arguments.length;
  var i__7286__auto___13648 = 0;
  while (true) {
    if (i__7286__auto___13648 < len__7285__auto___13647) {
      args__7292__auto__.push(arguments[i__7286__auto___13648]);
      var G__13649 = i__7286__auto___13648 + 1;
      i__7286__auto___13648 = G__13649;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq13646) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq13646));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13651 = arguments.length;
  var i__7286__auto___13652 = 0;
  while (true) {
    if (i__7286__auto___13652 < len__7285__auto___13651) {
      args__7292__auto__.push(arguments[i__7286__auto___13652]);
      var G__13653 = i__7286__auto___13652 + 1;
      i__7286__auto___13652 = G__13653;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq13650) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq13650));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__13654__i = 0, G__13654__a = new Array(arguments.length - 0);
      while (G__13654__i < G__13654__a.length) {
        G__13654__a[G__13654__i] = arguments[G__13654__i + 0];
        ++G__13654__i;
      }
      objs = new cljs.core.IndexedSeq(G__13654__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__13655) {
    var objs = cljs.core.seq(arglist__13655);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13657 = arguments.length;
  var i__7286__auto___13658 = 0;
  while (true) {
    if (i__7286__auto___13658 < len__7285__auto___13657) {
      args__7292__auto__.push(arguments[i__7286__auto___13658]);
      var G__13659 = i__7286__auto___13658 + 1;
      i__7286__auto___13658 = G__13659;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq13656) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq13656));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13661 = arguments.length;
  var i__7286__auto___13662 = 0;
  while (true) {
    if (i__7286__auto___13662 < len__7285__auto___13661) {
      args__7292__auto__.push(arguments[i__7286__auto___13662]);
      var G__13663 = i__7286__auto___13662 + 1;
      i__7286__auto___13662 = G__13663;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq13660) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq13660));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13665 = arguments.length;
  var i__7286__auto___13666 = 0;
  while (true) {
    if (i__7286__auto___13666 < len__7285__auto___13665) {
      args__7292__auto__.push(arguments[i__7286__auto___13666]);
      var G__13667 = i__7286__auto___13666 + 1;
      i__7286__auto___13666 = G__13667;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq13664) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq13664));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13669 = arguments.length;
  var i__7286__auto___13670 = 0;
  while (true) {
    if (i__7286__auto___13670 < len__7285__auto___13669) {
      args__7292__auto__.push(arguments[i__7286__auto___13670]);
      var G__13671 = i__7286__auto___13670 + 1;
      i__7286__auto___13670 = G__13671;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq13668) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq13668));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__13678_13684 = cljs.core.key(e);
    var G__13679_13685 = w;
    var G__13680_13686 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__13678_13684, G__13679_13685, G__13680_13686) : print_one.call(null, G__13678_13684, G__13679_13685, G__13680_13686);
    cljs.core._write(w, " ");
    var G__13681 = cljs.core.val(e);
    var G__13682 = w;
    var G__13683 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__13681, G__13682, G__13683) : print_one.call(null, G__13681, G__13682, G__13683);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13690 = arguments.length;
  var i__7286__auto___13691 = 0;
  while (true) {
    if (i__7286__auto___13691 < len__7285__auto___13690) {
      args__7292__auto__.push(arguments[i__7286__auto___13691]);
      var G__13692 = i__7286__auto___13691 + 1;
      i__7286__auto___13691 = G__13692;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq13687) {
  var G__13688 = cljs.core.first(seq13687);
  var seq13687__$1 = cljs.core.next(seq13687);
  var G__13689 = cljs.core.first(seq13687__$1);
  var seq13687__$2 = cljs.core.next(seq13687__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__13688, G__13689, seq13687__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var args13693 = [];
  var len__7285__auto___13696 = arguments.length;
  var i__7286__auto___13697 = 0;
  while (true) {
    if (i__7286__auto___13697 < len__7285__auto___13696) {
      args13693.push(arguments[i__7286__auto___13697]);
      var G__13698 = i__7286__auto___13697 + 1;
      i__7286__auto___13697 = G__13698;
      continue;
    } else {
    }
    break;
  }
  var G__13695 = args13693.length;
  switch(G__13695) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13693.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(x) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(x) {
  return cljs.core._realized_QMARK_(x);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__13700_SHARP_, p2__13701_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__13700_SHARP_, p2__13701_SHARP_) : rf.call(null, p1__13700_SHARP_, p2__13701_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__13702 = null;
      var G__13702__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__13702__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__13702__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__13702 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__13702__0.call(this);
          case 1:
            return G__13702__1.call(this, result);
          case 2:
            return G__13702__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13702.cljs$core$IFn$_invoke$arity$0 = G__13702__0;
      G__13702.cljs$core$IFn$_invoke$arity$1 = G__13702__1;
      G__13702.cljs$core$IFn$_invoke$arity$2 = G__13702__2;
      return G__13702;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var args13703 = [];
  var len__7285__auto___13706 = arguments.length;
  var i__7286__auto___13707 = 0;
  while (true) {
    if (i__7286__auto___13707 < len__7285__auto___13706) {
      args13703.push(arguments[i__7286__auto___13707]);
      var G__13708 = i__7286__auto___13707 + 1;
      i__7286__auto___13707 = G__13708;
      continue;
    } else {
    }
    break;
  }
  var G__13705 = args13703.length;
  switch(G__13705) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13703.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__13710 = null;
        var G__13710__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__13710__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__13710__2 = function(result, input) {
          var prior = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__13710 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__13710__0.call(this);
            case 1:
              return G__13710__1.call(this, result);
            case 2:
              return G__13710__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__13710.cljs$core$IFn$_invoke$arity$0 = G__13710__0;
        G__13710.cljs$core$IFn$_invoke$arity$1 = G__13710__1;
        G__13710.cljs$core$IFn$_invoke$arity$2 = G__13710__2;
        return G__13710;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var args13711 = [];
  var len__7285__auto___13714 = arguments.length;
  var i__7286__auto___13715 = 0;
  while (true) {
    if (i__7286__auto___13715 < len__7285__auto___13714) {
      args13711.push(arguments[i__7286__auto___13715]);
      var G__13716 = i__7286__auto___13715 + 1;
      i__7286__auto___13715 = G__13716;
      continue;
    } else {
    }
    break;
  }
  var G__13713 = args13711.length;
  switch(G__13713) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13711.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.indexOf = function() {
  var G__13718 = null;
  var G__13718__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, 0);
  };
  var G__13718__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__13718 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13718__1.call(this, x);
      case 2:
        return G__13718__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13718.cljs$core$IFn$_invoke$arity$1 = G__13718__1;
  G__13718.cljs$core$IFn$_invoke$arity$2 = G__13718__2;
  return G__13718;
}();
cljs.core.Eduction.prototype.lastIndexOf = function() {
  var G__13719 = null;
  var G__13719__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, cljs.core.count(coll__$1));
  };
  var G__13719__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__13719 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13719__1.call(this, x);
      case 2:
        return G__13719__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13719.cljs$core$IFn$_invoke$arity$1 = G__13719__1;
  G__13719.cljs$core$IFn$_invoke$arity$2 = G__13719__2;
  return G__13719;
}();
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7216__auto__ = this;
  return cljs.core.es6_iterator(this__7216__auto__);
};
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13721 = arguments.length;
  var i__7286__auto___13722 = 0;
  while (true) {
    if (i__7286__auto___13722 < len__7285__auto___13721) {
      args__7292__auto__.push(arguments[i__7286__auto___13722]);
      var G__13723 = i__7286__auto___13722 + 1;
      i__7286__auto___13722 = G__13723;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq13720) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq13720));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__13725_SHARP_, p2__13724_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__13724_SHARP_) : proc.call(null, p2__13724_SHARP_);
  }, null, coll);
  return null;
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto__.call(null, x);
    } else {
      var m__6874__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._key__GT_js[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto__.call(null, x);
    } else {
      var m__6874__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (!(k == null) ? false || k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (!(x == null) ? false || x.cljs$core$IEncodeJS$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x)) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = {};
            var seq__13748_13762 = cljs.core.seq(x);
            var chunk__13749_13763 = null;
            var count__13750_13764 = 0;
            var i__13751_13765 = 0;
            while (true) {
              if (i__13751_13765 < count__13750_13764) {
                var vec__13752_13766 = chunk__13749_13763.cljs$core$IIndexed$_nth$arity$2(null, i__13751_13765);
                var k_13767 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13752_13766, 0, null);
                var v_13768 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13752_13766, 1, null);
                m[cljs.core.key__GT_js(k_13767)] = cljs$core$clj__GT_js(v_13768);
                var G__13769 = seq__13748_13762;
                var G__13770 = chunk__13749_13763;
                var G__13771 = count__13750_13764;
                var G__13772 = i__13751_13765 + 1;
                seq__13748_13762 = G__13769;
                chunk__13749_13763 = G__13770;
                count__13750_13764 = G__13771;
                i__13751_13765 = G__13772;
                continue;
              } else {
                var temp__4425__auto___13773 = cljs.core.seq(seq__13748_13762);
                if (temp__4425__auto___13773) {
                  var seq__13748_13774__$1 = temp__4425__auto___13773;
                  if (cljs.core.chunked_seq_QMARK_(seq__13748_13774__$1)) {
                    var c__7021__auto___13775 = cljs.core.chunk_first(seq__13748_13774__$1);
                    var G__13776 = cljs.core.chunk_rest(seq__13748_13774__$1);
                    var G__13777 = c__7021__auto___13775;
                    var G__13778 = cljs.core.count(c__7021__auto___13775);
                    var G__13779 = 0;
                    seq__13748_13762 = G__13776;
                    chunk__13749_13763 = G__13777;
                    count__13750_13764 = G__13778;
                    i__13751_13765 = G__13779;
                    continue;
                  } else {
                    var vec__13755_13780 = cljs.core.first(seq__13748_13774__$1);
                    var k_13781 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13755_13780, 0, null);
                    var v_13782 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13755_13780, 1, null);
                    m[cljs.core.key__GT_js(k_13781)] = cljs$core$clj__GT_js(v_13782);
                    var G__13783 = cljs.core.next(seq__13748_13774__$1);
                    var G__13784 = null;
                    var G__13785 = 0;
                    var G__13786 = 0;
                    seq__13748_13762 = G__13783;
                    chunk__13749_13763 = G__13784;
                    count__13750_13764 = G__13785;
                    i__13751_13765 = G__13786;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__13758_13787 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__13759_13788 = null;
              var count__13760_13789 = 0;
              var i__13761_13790 = 0;
              while (true) {
                if (i__13761_13790 < count__13760_13789) {
                  var x_13791__$1 = chunk__13759_13788.cljs$core$IIndexed$_nth$arity$2(null, i__13761_13790);
                  arr.push(x_13791__$1);
                  var G__13792 = seq__13758_13787;
                  var G__13793 = chunk__13759_13788;
                  var G__13794 = count__13760_13789;
                  var G__13795 = i__13761_13790 + 1;
                  seq__13758_13787 = G__13792;
                  chunk__13759_13788 = G__13793;
                  count__13760_13789 = G__13794;
                  i__13761_13790 = G__13795;
                  continue;
                } else {
                  var temp__4425__auto___13796 = cljs.core.seq(seq__13758_13787);
                  if (temp__4425__auto___13796) {
                    var seq__13758_13797__$1 = temp__4425__auto___13796;
                    if (cljs.core.chunked_seq_QMARK_(seq__13758_13797__$1)) {
                      var c__7021__auto___13798 = cljs.core.chunk_first(seq__13758_13797__$1);
                      var G__13799 = cljs.core.chunk_rest(seq__13758_13797__$1);
                      var G__13800 = c__7021__auto___13798;
                      var G__13801 = cljs.core.count(c__7021__auto___13798);
                      var G__13802 = 0;
                      seq__13758_13787 = G__13799;
                      chunk__13759_13788 = G__13800;
                      count__13760_13789 = G__13801;
                      i__13761_13790 = G__13802;
                      continue;
                    } else {
                      var x_13803__$1 = cljs.core.first(seq__13758_13797__$1);
                      arr.push(x_13803__$1);
                      var G__13804 = cljs.core.next(seq__13758_13797__$1);
                      var G__13805 = null;
                      var G__13806 = 0;
                      var G__13807 = 0;
                      seq__13758_13787 = G__13804;
                      chunk__13759_13788 = G__13805;
                      count__13760_13789 = G__13806;
                      i__13761_13790 = G__13807;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__6874__auto__.call(null, x, options);
    } else {
      var m__6874__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__6874__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var args13808 = [];
  var len__7285__auto___13833 = arguments.length;
  var i__7286__auto___13834 = 0;
  while (true) {
    if (i__7286__auto___13834 < len__7285__auto___13833) {
      args13808.push(arguments[i__7286__auto___13834]);
      var G__13835 = i__7286__auto___13834 + 1;
      i__7286__auto___13834 = G__13835;
      continue;
    } else {
    }
    break;
  }
  var G__13812 = args13808.length;
  switch(G__13812) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args13808.slice(1), 0, null);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7304__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__13813 = opts;
  var map__13813__$1 = (!(map__13813 == null) ? map__13813.cljs$lang$protocol_mask$partition0$ & 64 || map__13813.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__13813) : map__13813;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13813__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__13813, map__13813__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__6990__auto__ = function(map__13813, map__13813__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__13827(s__13828) {
                      return new cljs.core.LazySeq(null, function(map__13813, map__13813__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__13828__$1 = s__13828;
                          while (true) {
                            var temp__4425__auto__ = cljs.core.seq(s__13828__$1);
                            if (temp__4425__auto__) {
                              var s__13828__$2 = temp__4425__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__13828__$2)) {
                                var c__6988__auto__ = cljs.core.chunk_first(s__13828__$2);
                                var size__6989__auto__ = cljs.core.count(c__6988__auto__);
                                var b__13830 = cljs.core.chunk_buffer(size__6989__auto__);
                                if (function() {
                                  var i__13829 = 0;
                                  while (true) {
                                    if (i__13829 < size__6989__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__6988__auto__, i__13829);
                                      cljs.core.chunk_append(b__13830, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null));
                                      var G__13837 = i__13829 + 1;
                                      i__13829 = G__13837;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__13830), cljs$core$thisfn_$_iter__13827(cljs.core.chunk_rest(s__13828__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__13830), null);
                                }
                              } else {
                                var k = cljs.core.first(s__13828__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__13827(cljs.core.rest(s__13828__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__13813, map__13813__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__13813, map__13813__$1, keywordize_keys, keyfn);
                  return iter__6990__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__13813, map__13813__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq13809) {
  var G__13810 = cljs.core.first(seq13809);
  var seq13809__$1 = cljs.core.next(seq13809);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__13810, seq13809__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__13839 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__13839) : cljs.core.atom.call(null, G__13839);
  }();
  return function(mem) {
    return function() {
      var G__13840__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mem) : cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__13840 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__13841__i = 0, G__13841__a = new Array(arguments.length - 0);
          while (G__13841__i < G__13841__a.length) {
            G__13841__a[G__13841__i] = arguments[G__13841__i + 0];
            ++G__13841__i;
          }
          args = new cljs.core.IndexedSeq(G__13841__a, 0);
        }
        return G__13840__delegate.call(this, args);
      };
      G__13840.cljs$lang$maxFixedArity = 0;
      G__13840.cljs$lang$applyTo = function(arglist__13842) {
        var args = cljs.core.seq(arglist__13842);
        return G__13840__delegate(args);
      };
      G__13840.cljs$core$IFn$_invoke$arity$variadic = G__13840__delegate;
      return G__13840;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var args13843 = [];
  var len__7285__auto___13848 = arguments.length;
  var i__7286__auto___13849 = 0;
  while (true) {
    if (i__7286__auto___13849 < len__7285__auto___13848) {
      args13843.push(arguments[i__7286__auto___13849]);
      var G__13850 = i__7286__auto___13849 + 1;
      i__7286__auto___13849 = G__13850;
      continue;
    } else {
    }
    break;
  }
  var G__13847 = args13843.length;
  switch(G__13847) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args13843.slice(1), 0, null);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7304__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__13852 = ret;
      f = G__13852;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq13844) {
  var G__13845 = cljs.core.first(seq13844);
  var seq13844__$1 = cljs.core.next(seq13844);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__13845, seq13844__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var args13853 = [];
  var len__7285__auto___13856 = arguments.length;
  var i__7286__auto___13857 = 0;
  while (true) {
    if (i__7286__auto___13857 < len__7285__auto___13856) {
      args13853.push(arguments[i__7286__auto___13857]);
      var G__13858 = i__7286__auto___13857 + 1;
      i__7286__auto___13857 = G__13858;
      continue;
    } else {
    }
    break;
  }
  var G__13855 = args13853.length;
  switch(G__13855) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13853.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__13861 = Math.random() * n;
  return Math.floor(G__13861);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__13863 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__13863) : cljs.core.atom.call(null, G__13863);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13866 = arguments.length;
  var i__7286__auto___13867 = 0;
  while (true) {
    if (i__7286__auto___13867 < len__7285__auto___13866) {
      args__7292__auto__.push(arguments[i__7286__auto___13867]);
      var G__13868 = i__7286__auto___13867 + 1;
      i__7286__auto___13867 = G__13868;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 1 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(1), 0, null) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7293__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq13864) {
  var G__13865 = cljs.core.first(seq13864);
  var seq13864__$1 = cljs.core.next(seq13864);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__13865, seq13864__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var args13869 = [];
  var len__7285__auto___13873 = arguments.length;
  var i__7286__auto___13874 = 0;
  while (true) {
    if (i__7286__auto___13874 < len__7285__auto___13873) {
      args13869.push(arguments[i__7286__auto___13874]);
      var G__13875 = i__7286__auto___13874 + 1;
      i__7286__auto___13874 = G__13875;
      continue;
    } else {
    }
    break;
  }
  var G__13871 = args13869.length;
  switch(G__13871) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13869.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__13872 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13872) : cljs.core.deref.call(null, G__13872);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__6210__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__6210__auto__) {
    return or__6210__auto__;
  } else {
    var or__6210__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__6210__auto____$1) {
      return or__6210__auto____$1;
    } else {
      var and__6198__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__6198__auto__) {
        var and__6198__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__6198__auto____$1) {
          var and__6198__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__6198__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__13877 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__13878 = i + 1;
                ret = G__13877;
                i = G__13878;
                continue;
              }
              break;
            }
          } else {
            return and__6198__auto____$2;
          }
        } else {
          return and__6198__auto____$1;
        }
      } else {
        return and__6198__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var args13879 = [];
  var len__7285__auto___13883 = arguments.length;
  var i__7286__auto___13884 = 0;
  while (true) {
    if (i__7286__auto___13884 < len__7285__auto___13883) {
      args13879.push(arguments[i__7286__auto___13884]);
      var G__13885 = i__7286__auto___13884 + 1;
      i__7286__auto___13884 = G__13885;
      continue;
    } else {
    }
    break;
  }
  var G__13881 = args13879.length;
  switch(G__13881) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13879.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__13882 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13882) : cljs.core.deref.call(null, G__13882);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var args13887 = [];
  var len__7285__auto___13891 = arguments.length;
  var i__7286__auto___13892 = 0;
  while (true) {
    if (i__7286__auto___13892 < len__7285__auto___13891) {
      args13887.push(arguments[i__7286__auto___13892]);
      var G__13893 = i__7286__auto___13892 + 1;
      i__7286__auto___13892 = G__13893;
      continue;
    } else {
    }
    break;
  }
  var G__13889 = args13887.length;
  switch(G__13889) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13887.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__13890 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13890) : cljs.core.deref.call(null, G__13890);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var args13895 = [];
  var len__7285__auto___13899 = arguments.length;
  var i__7286__auto___13900 = 0;
  while (true) {
    if (i__7286__auto___13900 < len__7285__auto___13899) {
      args13895.push(arguments[i__7286__auto___13900]);
      var G__13901 = i__7286__auto___13900 + 1;
      i__7286__auto___13900 = G__13901;
      continue;
    } else {
    }
    break;
  }
  var G__13897 = args13895.length;
  switch(G__13897) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13895.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__13898 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13898) : cljs.core.deref.call(null, G__13898);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var args13903 = [];
  var len__7285__auto___13906 = arguments.length;
  var i__7286__auto___13907 = 0;
  while (true) {
    if (i__7286__auto___13907 < len__7285__auto___13906) {
      args13903.push(arguments[i__7286__auto___13907]);
      var G__13908 = i__7286__auto___13907 + 1;
      i__7286__auto___13907 = G__13908;
      continue;
    } else {
    }
    break;
  }
  var G__13905 = args13903.length;
  switch(G__13905) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13903.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error("Assert failed: (namespace parent)");
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error("Assert failed: (not\x3d tag parent)");
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__6210__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var args13913 = [];
  var len__7285__auto___13916 = arguments.length;
  var i__7286__auto___13917 = 0;
  while (true) {
    if (i__7286__auto___13917 < len__7285__auto___13916) {
      args13913.push(arguments[i__7286__auto___13917]);
      var G__13918 = i__7286__auto___13917 + 1;
      i__7286__auto___13917 = G__13918;
      continue;
    } else {
    }
    break;
  }
  var G__13915 = args13913.length;
  switch(G__13915) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13913.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__13910_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__13910_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__13910_SHARP_), cljs.core.second(p1__13910_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__13911_SHARP_, p2__13912_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__13911_SHARP_, p2__13912_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(prefer_table) : cljs.core.deref.call(null, prefer_table)).call(null, x);
  var or__6210__auto__ = cljs.core.truth_(function() {
    var and__6198__auto__ = xprefs;
    if (cljs.core.truth_(and__6198__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__6198__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    var or__6210__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__13932 = cljs.core.rest(ps);
          ps = G__13932;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__6210__auto____$1)) {
      return or__6210__auto____$1;
    } else {
      var or__6210__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__13933 = cljs.core.rest(ps);
            ps = G__13933;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__6210__auto____$2)) {
        return or__6210__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__6210__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__13938) {
    var vec__13939 = p__13938;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13939, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13939, 1, null);
    var e = vec__13939;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__6210__auto__ = be == null;
        if (or__6210__auto__) {
          return or__6210__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cached_hierarchy) : cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._reset[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto__.call(null, mf);
    } else {
      var m__6874__auto____$1 = cljs.core._reset["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._add_method[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__6874__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__6874__auto____$1 = cljs.core._add_method["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__6874__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._remove_method[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__6874__auto__.call(null, mf, dispatch_val);
    } else {
      var m__6874__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__6874__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._prefer_method[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__6874__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__6874__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__6874__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._get_method[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__6874__auto__.call(null, mf, dispatch_val);
    } else {
      var m__6874__auto____$1 = cljs.core._get_method["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__6874__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._methods[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto__.call(null, mf);
    } else {
      var m__6874__auto____$1 = cljs.core._methods["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._prefers[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto__.call(null, mf);
    } else {
      var m__6874__auto____$1 = cljs.core._prefers["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto__.call(null, mf);
    } else {
      var m__6874__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto__.call(null, mf);
    } else {
      var m__6874__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__13943 = null;
  var G__13943__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__13943__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__13943__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__13943__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__13943__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__13943__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__13943__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__13943__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__13943__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__13943__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__13943__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__13943__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__13943__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__13943__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__13943__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__13943__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__13943__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__13943__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__13943__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__13943__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__13943__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__13943__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__13943 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__13943__1.call(this, self__);
      case 2:
        return G__13943__2.call(this, self__, a);
      case 3:
        return G__13943__3.call(this, self__, a, b);
      case 4:
        return G__13943__4.call(this, self__, a, b, c);
      case 5:
        return G__13943__5.call(this, self__, a, b, c, d);
      case 6:
        return G__13943__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__13943__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__13943__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__13943__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__13943__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__13943__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__13943__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__13943__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__13943__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__13943__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__13943__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__13943__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__13943__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__13943__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__13943__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__13943__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__13943__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13943.cljs$core$IFn$_invoke$arity$1 = G__13943__1;
  G__13943.cljs$core$IFn$_invoke$arity$2 = G__13943__2;
  G__13943.cljs$core$IFn$_invoke$arity$3 = G__13943__3;
  G__13943.cljs$core$IFn$_invoke$arity$4 = G__13943__4;
  G__13943.cljs$core$IFn$_invoke$arity$5 = G__13943__5;
  G__13943.cljs$core$IFn$_invoke$arity$6 = G__13943__6;
  G__13943.cljs$core$IFn$_invoke$arity$7 = G__13943__7;
  G__13943.cljs$core$IFn$_invoke$arity$8 = G__13943__8;
  G__13943.cljs$core$IFn$_invoke$arity$9 = G__13943__9;
  G__13943.cljs$core$IFn$_invoke$arity$10 = G__13943__10;
  G__13943.cljs$core$IFn$_invoke$arity$11 = G__13943__11;
  G__13943.cljs$core$IFn$_invoke$arity$12 = G__13943__12;
  G__13943.cljs$core$IFn$_invoke$arity$13 = G__13943__13;
  G__13943.cljs$core$IFn$_invoke$arity$14 = G__13943__14;
  G__13943.cljs$core$IFn$_invoke$arity$15 = G__13943__15;
  G__13943.cljs$core$IFn$_invoke$arity$16 = G__13943__16;
  G__13943.cljs$core$IFn$_invoke$arity$17 = G__13943__17;
  G__13943.cljs$core$IFn$_invoke$arity$18 = G__13943__18;
  G__13943.cljs$core$IFn$_invoke$arity$19 = G__13943__19;
  G__13943.cljs$core$IFn$_invoke$arity$20 = G__13943__20;
  G__13943.cljs$core$IFn$_invoke$arity$21 = G__13943__21;
  G__13943.cljs$core$IFn$_invoke$arity$22 = G__13943__22;
  return G__13943;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args13942) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13942)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.prefer_table) : cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.cached_hierarchy) : cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.hierarchy) : cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4423__auto__ = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_cache) : cljs.core.deref.call(null, self__.method_cache)).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var target_fn = temp__4423__auto__;
    return target_fn;
  } else {
    var temp__4423__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var target_fn = temp__4423__auto____$1;
      return target_fn;
    } else {
      return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table)).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__13944 = self__.uuid;
  var G__13945 = other.uuid;
  return goog.array.defaultCompare(G__13944, G__13945);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var args13946 = [];
  var len__7285__auto___13949 = arguments.length;
  var i__7286__auto___13950 = 0;
  while (true) {
    if (i__7286__auto___13950 < len__7285__auto___13949) {
      args13946.push(arguments[i__7286__auto___13950]);
      var G__13951 = i__7286__auto___13950 + 1;
      i__7286__auto___13950 = G__13951;
      continue;
    } else {
    }
    break;
  }
  var G__13948 = args13946.length;
  switch(G__13948) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13946.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 22, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "finally", "finally", -1065347064, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, 
  "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, 
  null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "var", "var", 870848730, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "catch", "catch", -1616370245, null), null, new cljs.core.Symbol(null, 
  "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__13953 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__13953) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error("Assert failed: (symbol? tag)");
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["abstract", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", 
"transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__13955_SHARP_, p2__13956_SHARP_) {
      goog.object.set(p1__13955_SHARP_, p2__13956_SHARP_, true);
      return p1__13955_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__13959 = cljs.core.next(ks__$1);
          var G__13960 = [cljs.core.str(function() {
            var G__13958 = ret;
            var G__13958__$1 = !(ret === "") ? [cljs.core.str(G__13958), cljs.core.str("|")].join("") : G__13958;
            return G__13958__$1;
          }()), cljs.core.str(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__13959;
          ret = G__13960;
          continue;
        } else {
          return [cljs.core.str(ret), cljs.core.str("|\\$")].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_13961 = 0;
  while (true) {
    if (i_13961 < name.length) {
      var c_13962 = name.charAt(i_13961);
      var sub_13963 = goog.object.get(cljs.core.CHAR_MAP, c_13962);
      if (!(sub_13963 == null)) {
        sb.append(sub_13963);
      } else {
        sb.append(c_13962);
      }
      var G__13964 = i_13961 + 1;
      i_13961 = G__13964;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str([cljs.core.str(name)].join(""));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str(name_SINGLEQUOTE_), cljs.core.str("$")].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return [cljs.core.str(name_SINGLEQUOTE___$1)].join("");
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4423__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var match = temp__4423__auto__;
      var vec__13968 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13968, 0, null);
      var G__13971 = [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__13972 = r.lastIndex;
      ret = G__13971;
      last_match_end = G__13972;
      continue;
    } else {
      return [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  return (name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
    var name_SINGLEQUOTE_ = [cljs.core.str(name)].join("");
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str([cljs.core.str(name)].join(""));
    }
  }());
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge([cljs.core.str(sym)].join(""));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(self__.name)].join(""), [cljs.core.str(sym)].join(""));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(self__.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__13977 = function() {
          var G__13975 = ctxt;
          var G__13976 = cljs.core.first(xs);
          return goog.object.get(G__13975, G__13976);
        }();
        var G__13978 = cljs.core.next(xs);
        ctxt = G__13977;
        xs = G__13978;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge([cljs.core.str(ns)].join(""));
  var segs = munged_ns.split(".");
  var G__13982 = cljs.core._STAR_target_STAR_;
  switch(G__13982) {
    case "nodejs":
      if (COMPILED) {
        return cljs.core.find_ns_obj_STAR_(function() {
          try {
            var G__13984 = cljs.core.first(segs);
            return eval(G__13984);
          } catch (e13983) {
            if (e13983 instanceof ReferenceError) {
              var e = e13983;
              return null;
            } else {
              throw e13983;
            }
          }
        }(), cljs.core.next(segs));
      } else {
        return cljs.core.find_ns_obj_STAR_(global, segs);
      }
      break;
    case "default":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error([cljs.core.str("find-ns-obj not supported for target "), cljs.core.str(cljs.core._STAR_target_STAR_)].join(""));;
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(sym)].join(""), [cljs.core.str(var_sym)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var args13986 = [];
  var len__7285__auto___13989 = arguments.length;
  var i__7286__auto___13990 = 0;
  while (true) {
    if (i__7286__auto___13990 < len__7285__auto___13989) {
      args13986.push(arguments[i__7286__auto___13990]);
      var G__13991 = i__7286__auto___13990 + 1;
      i__7286__auto___13990 = G__13991;
      continue;
    } else {
    }
    break;
  }
  var G__13988 = args13986.length;
  switch(G__13988) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13986.length)].join(""));;
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__13994 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__13994) : cljs.core.atom.call(null, G__13994);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__13996 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__13996) : cljs.core.atom.call(null, G__13996);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_str = [cljs.core.str(ns)].join("");
    var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_str), cljs.core.str("$macros")].join("")) : ns;
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function clojure$string$replace_all(s, re, replacement) {
  return s.replace(new RegExp(re.source, "g"), replacement);
};
clojure.string.replace_with = function clojure$string$replace_with(f) {
  return function() {
    var G__13999__delegate = function(args) {
      var matches = cljs.core.drop_last.call(null, 2, args);
      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, matches), 1)) {
        return f.call(null, cljs.core.first.call(null, matches));
      } else {
        return f.call(null, cljs.core.vec.call(null, matches));
      }
    };
    var G__13999 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__14000__i = 0, G__14000__a = new Array(arguments.length - 0);
        while (G__14000__i < G__14000__a.length) {
          G__14000__a[G__14000__i] = arguments[G__14000__i + 0];
          ++G__14000__i;
        }
        args = new cljs.core.IndexedSeq(G__14000__a, 0);
      }
      return G__13999__delegate.call(this, args);
    };
    G__13999.cljs$lang$maxFixedArity = 0;
    G__13999.cljs$lang$applyTo = function(arglist__14001) {
      var args = cljs.core.seq(arglist__14001);
      return G__13999__delegate(args);
    };
    G__13999.cljs$core$IFn$_invoke$arity$variadic = G__13999__delegate;
    return G__13999;
  }();
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      if (typeof replacement === "string") {
        return clojure.string.replace_all.call(null, s, match, replacement);
      } else {
        return clojure.string.replace_all.call(null, s, match, clojure.string.replace_with.call(null, replacement));
      }
    } else {
      throw [cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join(var_args) {
  var args14002 = [];
  var len__7285__auto___14005 = arguments.length;
  var i__7286__auto___14006 = 0;
  while (true) {
    if (i__7286__auto___14006 < len__7285__auto___14005) {
      args14002.push(arguments[i__7286__auto___14006]);
      var G__14007 = i__7286__auto___14006 + 1;
      i__7286__auto___14006 = G__14007;
      continue;
    } else {
    }
    break;
  }
  var G__14004 = args14002.length;
  switch(G__14004) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14002.length)].join(""));;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__14009 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var G__14010 = cljs.core.next.call(null, coll__$1);
      sb = G__14009;
      coll__$1 = G__14010;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__14011 = sb;
      var G__14012 = coll__$2;
      sb = G__14011;
      coll__$1 = G__14012;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return [cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek.call(null, v__$1)) {
      var G__14013 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__14013;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit && 1 < cljs.core.count.call(null, v)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__14017 = cljs.core._EQ__EQ_;
    var expr__14018 = limit;
    if (cljs.core.truth_(pred__14017.call(null, 1, expr__14018))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__14017.call(null, 2, expr__14018))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split(var_args) {
  var args14020 = [];
  var len__7285__auto___14023 = arguments.length;
  var i__7286__auto___14024 = 0;
  while (true) {
    if (i__7286__auto___14024 < len__7285__auto___14023) {
      args14020.push(arguments[i__7286__auto___14024]);
      var G__14025 = i__7286__auto___14024 + 1;
      i__7286__auto___14024 = G__14025;
      continue;
    } else {
    }
    break;
  }
  var G__14022 = args14020.length;
  switch(G__14022) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14020.length)].join(""));;
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, "/(?:)/" === [cljs.core.str(re)].join("") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var m = cljs.core.re_find.call(null, re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__14027 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__14028 = limit__$1 - 1;
          var G__14029 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__14027;
          limit__$1 = G__14028;
          parts = G__14029;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__14030 = index - 1;
        index = G__14030;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.call(null, cmap, ch);
      if (!(replacement == null)) {
        buffer.append([cljs.core.str(replacement)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__14031 = index + 1;
      index = G__14031;
      continue;
    }
    break;
  }
};
clojure.string.index_of = function clojure$string$index_of(var_args) {
  var args14032 = [];
  var len__7285__auto___14035 = arguments.length;
  var i__7286__auto___14036 = 0;
  while (true) {
    if (i__7286__auto___14036 < len__7285__auto___14035) {
      args14032.push(arguments[i__7286__auto___14036]);
      var G__14037 = i__7286__auto___14036 + 1;
      i__7286__auto___14036 = G__14037;
      continue;
    } else {
    }
    break;
  }
  var G__14034 = args14032.length;
  switch(G__14034) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14032.length)].join(""));;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.indexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.indexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function clojure$string$last_index_of(var_args) {
  var args14039 = [];
  var len__7285__auto___14042 = arguments.length;
  var i__7286__auto___14043 = 0;
  while (true) {
    if (i__7286__auto___14043 < len__7285__auto___14042) {
      args14039.push(arguments[i__7286__auto___14043]);
      var G__14044 = i__7286__auto___14043 + 1;
      i__7286__auto___14043 = G__14044;
      continue;
    } else {
    }
    break;
  }
  var G__14041 = args14039.length;
  switch(G__14041) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14039.length)].join(""));;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.lastIndexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.lastIndexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function clojure$string$starts_with_QMARK_(s, substr) {
  return goog.string.startsWith(s, substr);
};
clojure.string.ends_with_QMARK_ = function clojure$string$ends_with_QMARK_(s, substr) {
  return goog.string.endsWith(s, substr);
};
clojure.string.includes_QMARK_ = function clojure$string$includes_QMARK_(s, substr) {
  return goog.string.contains(s, substr);
};
goog.provide("tiltontec.util.base");
goog.require("cljs.core");
goog.require("clojure.string");
cljs.core.enable_console_print_BANG_.call(null);
tiltontec.util.base._STAR_trx_QMARK__STAR_ = true;
tiltontec.util.base._STAR_trc_ensure_STAR_ = null;
tiltontec.util.base._STAR_trx_path_id_STAR_ = null;
tiltontec.util.base._STAR_trxdepth_STAR_ = 0;
tiltontec.util.base.last_trc = cljs.core.atom.call(null, 0);
tiltontec.util.base.call_trc$ = function tiltontec$util$base$call_trc$(s, bits) {
  return [cljs.core.str(s), cljs.core.str(": "), cljs.core.str([cljs.core.str(bits)].join(""))].join("");
};
tiltontec.util.base.call_trc = function tiltontec$util$base$call_trc(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___11511 = arguments.length;
  var i__7286__auto___11512 = 0;
  while (true) {
    if (i__7286__auto___11512 < len__7285__auto___11511) {
      args__7292__auto__.push(arguments[i__7286__auto___11512]);
      var G__11513 = i__7286__auto___11512 + 1;
      i__7286__auto___11512 = G__11513;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 1 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(1), 0, null) : null;
  return tiltontec.util.base.call_trc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7293__auto__);
};
tiltontec.util.base.call_trc.cljs$core$IFn$_invoke$arity$variadic = function(s, os) {
  if (cljs.core.truth_(tiltontec.util.base._STAR_trx_QMARK__STAR_)) {
    if (cljs.core.truth_(s)) {
      var path = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, tiltontec.util.base._STAR_trxdepth_STAR_, "."));
      return cljs.core.println.call(null, path, tiltontec.util.base.call_trc$.call(null, s, os));
    } else {
      return null;
    }
  } else {
    return null;
  }
};
tiltontec.util.base.call_trc.cljs$lang$maxFixedArity = 1;
tiltontec.util.base.call_trc.cljs$lang$applyTo = function(seq11509) {
  var G__11510 = cljs.core.first.call(null, seq11509);
  var seq11509__$1 = cljs.core.next.call(null, seq11509);
  return tiltontec.util.base.call_trc.cljs$core$IFn$_invoke$arity$variadic(G__11510, seq11509__$1);
};
tiltontec.util.base.trx = function tiltontec$util$base$trx(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___11518 = arguments.length;
  var i__7286__auto___11519 = 0;
  while (true) {
    if (i__7286__auto___11519 < len__7285__auto___11518) {
      args__7292__auto__.push(arguments[i__7286__auto___11519]);
      var G__11520 = i__7286__auto___11519 + 1;
      i__7286__auto___11519 = G__11520;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 3 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(3), 0, null) : null;
  return tiltontec.util.base.trx.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7293__auto__);
};
tiltontec.util.base.trx.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, label, vals) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.util.base", "call-trc", "tiltontec.util.base/call-trc", 242817092, null)), function() {
    var x__7044__auto__ = !(label == null) ? [cljs.core.str(label)].join("") : null;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), vals)));
};
tiltontec.util.base.trx.cljs$lang$maxFixedArity = 3;
tiltontec.util.base.trx.cljs$lang$applyTo = function(seq11514) {
  var G__11515 = cljs.core.first.call(null, seq11514);
  var seq11514__$1 = cljs.core.next.call(null, seq11514);
  var G__11516 = cljs.core.first.call(null, seq11514__$1);
  var seq11514__$2 = cljs.core.next.call(null, seq11514__$1);
  var G__11517 = cljs.core.first.call(null, seq11514__$2);
  var seq11514__$3 = cljs.core.next.call(null, seq11514__$2);
  return tiltontec.util.base.trx.cljs$core$IFn$_invoke$arity$variadic(G__11515, G__11516, G__11517, seq11514__$3);
};
tiltontec.util.base.trx.cljs$lang$macro = true;
tiltontec.util.base.call_wtrx = function tiltontec$util$base$call_wtrx(fn, lo, hi, trxargs) {
  var _STAR_trxdepth_STAR_11522 = tiltontec.util.base._STAR_trxdepth_STAR_;
  tiltontec.util.base._STAR_trxdepth_STAR_ = tiltontec.util.base._STAR_trxdepth_STAR_ + 1;
  try {
    if (lo <= tiltontec.util.base._STAR_trxdepth_STAR_ && tiltontec.util.base._STAR_trxdepth_STAR_ <= hi) {
      cljs.core.apply.call(null, tiltontec.util.base.call_trc, trxargs);
    } else {
      if (tiltontec.util.base._STAR_trxdepth_STAR_ > hi) {
        throw new Error([cljs.core.str("wtrx exceeded max depth "), cljs.core.str(hi), cljs.core.str(":"), cljs.core.str(cljs.core.apply.call(null, tiltontec.util.base.call_trc$, cljs.core.first.call(null, trxargs), cljs.core.rest.call(null, trxargs)))].join(""));
      } else {
      }
    }
    return fn.call(null);
  } finally {
    tiltontec.util.base._STAR_trxdepth_STAR_ = _STAR_trxdepth_STAR_11522;
  }
};
tiltontec.util.base.wtrx = function tiltontec$util$base$wtrx(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___11531 = arguments.length;
  var i__7286__auto___11532 = 0;
  while (true) {
    if (i__7286__auto___11532 < len__7285__auto___11531) {
      args__7292__auto__.push(arguments[i__7286__auto___11532]);
      var G__11533 = i__7286__auto___11532 + 1;
      i__7286__auto___11532 = G__11533;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 3 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(3), 0, null) : null;
  return tiltontec.util.base.wtrx.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7293__auto__);
};
tiltontec.util.base.wtrx.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__11527, body) {
  var vec__11528 = p__11527;
  var seq__11529 = cljs.core.seq.call(null, vec__11528);
  var first__11530 = cljs.core.first.call(null, seq__11529);
  var seq__11529__$1 = cljs.core.next.call(null, seq__11529);
  var lo = first__11530;
  var first__11530__$1 = cljs.core.first.call(null, seq__11529__$1);
  var seq__11529__$2 = cljs.core.next.call(null, seq__11529__$1);
  var hi = first__11530__$1;
  var trxargs = seq__11529__$2;
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.util.base", "call-wtrx", "tiltontec.util.base/call-wtrx", -151750095, null)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
      var x__7044__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null))));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), body)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), function() {
    var x__7044__auto__ = lo;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), function() {
    var x__7044__auto__ = hi;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "list", "cljs.core/list", -1331406371, null)), trxargs)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.util.base.wtrx.cljs$lang$maxFixedArity = 3;
tiltontec.util.base.wtrx.cljs$lang$applyTo = function(seq11523) {
  var G__11524 = cljs.core.first.call(null, seq11523);
  var seq11523__$1 = cljs.core.next.call(null, seq11523);
  var G__11525 = cljs.core.first.call(null, seq11523__$1);
  var seq11523__$2 = cljs.core.next.call(null, seq11523__$1);
  var G__11526 = cljs.core.first.call(null, seq11523__$2);
  var seq11523__$3 = cljs.core.next.call(null, seq11523__$2);
  return tiltontec.util.base.wtrx.cljs$core$IFn$_invoke$arity$variadic(G__11524, G__11525, G__11526, seq11523__$3);
};
tiltontec.util.base.wtrx.cljs$lang$macro = true;
tiltontec.util.base.prog1 = function tiltontec$util$base$prog1(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___11538 = arguments.length;
  var i__7286__auto___11539 = 0;
  while (true) {
    if (i__7286__auto___11539 < len__7285__auto___11538) {
      args__7292__auto__.push(arguments[i__7286__auto___11539]);
      var G__11540 = i__7286__auto___11539 + 1;
      i__7286__auto___11539 = G__11540;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return tiltontec.util.base.prog1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
tiltontec.util.base.prog1.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null)), function() {
    var x__7044__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "result__11534__auto__", "result__11534__auto__", -513942350, null)), function() {
      var x__7044__auto__ = cljs.core.first.call(null, body);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }()))));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), cljs.core.rest.call(null, body), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "result__11534__auto__", "result__11534__auto__", -513942350, null)))));
};
tiltontec.util.base.prog1.cljs$lang$maxFixedArity = 2;
tiltontec.util.base.prog1.cljs$lang$applyTo = function(seq11535) {
  var G__11536 = cljs.core.first.call(null, seq11535);
  var seq11535__$1 = cljs.core.next.call(null, seq11535);
  var G__11537 = cljs.core.first.call(null, seq11535__$1);
  var seq11535__$2 = cljs.core.next.call(null, seq11535__$1);
  return tiltontec.util.base.prog1.cljs$core$IFn$_invoke$arity$variadic(G__11536, G__11537, seq11535__$2);
};
tiltontec.util.base.prog1.cljs$lang$macro = true;
tiltontec.util.base.b_when = function tiltontec$util$base$b_when(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___11546 = arguments.length;
  var i__7286__auto___11547 = 0;
  while (true) {
    if (i__7286__auto___11547 < len__7285__auto___11546) {
      args__7292__auto__.push(arguments[i__7286__auto___11547]);
      var G__11548 = i__7286__auto___11547 + 1;
      i__7286__auto___11547 = G__11548;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 4 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(4), 0, null) : null;
  return tiltontec.util.base.b_when.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7293__auto__);
};
tiltontec.util.base.b_when.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, var$, form, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "when-let", "cljs.core/when-let", -2049838349, null)), function() {
    var x__7044__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
      var x__7044__auto__ = var$;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), function() {
      var x__7044__auto__ = form;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }()))));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), body)));
};
tiltontec.util.base.b_when.cljs$lang$maxFixedArity = 4;
tiltontec.util.base.b_when.cljs$lang$applyTo = function(seq11541) {
  var G__11542 = cljs.core.first.call(null, seq11541);
  var seq11541__$1 = cljs.core.next.call(null, seq11541);
  var G__11543 = cljs.core.first.call(null, seq11541__$1);
  var seq11541__$2 = cljs.core.next.call(null, seq11541__$1);
  var G__11544 = cljs.core.first.call(null, seq11541__$2);
  var seq11541__$3 = cljs.core.next.call(null, seq11541__$2);
  var G__11545 = cljs.core.first.call(null, seq11541__$3);
  var seq11541__$4 = cljs.core.next.call(null, seq11541__$3);
  return tiltontec.util.base.b_when.cljs$core$IFn$_invoke$arity$variadic(G__11542, G__11543, G__11544, G__11545, seq11541__$4);
};
tiltontec.util.base.b_when.cljs$lang$macro = true;
tiltontec.util.base.unless = function tiltontec$util$base$unless(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___11553 = arguments.length;
  var i__7286__auto___11554 = 0;
  while (true) {
    if (i__7286__auto___11554 < len__7285__auto___11553) {
      args__7292__auto__.push(arguments[i__7286__auto___11554]);
      var G__11555 = i__7286__auto___11554 + 1;
      i__7286__auto___11554 = G__11555;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 3 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(3), 0, null) : null;
  return tiltontec.util.base.unless.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7293__auto__);
};
tiltontec.util.base.unless.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, form, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "when-not", "cljs.core/when-not", -556141047, null)), function() {
    var x__7044__auto__ = form;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), body)));
};
tiltontec.util.base.unless.cljs$lang$maxFixedArity = 3;
tiltontec.util.base.unless.cljs$lang$applyTo = function(seq11549) {
  var G__11550 = cljs.core.first.call(null, seq11549);
  var seq11549__$1 = cljs.core.next.call(null, seq11549);
  var G__11551 = cljs.core.first.call(null, seq11549__$1);
  var seq11549__$2 = cljs.core.next.call(null, seq11549__$1);
  var G__11552 = cljs.core.first.call(null, seq11549__$2);
  var seq11549__$3 = cljs.core.next.call(null, seq11549__$2);
  return tiltontec.util.base.unless.cljs$core$IFn$_invoke$arity$variadic(G__11550, G__11551, G__11552, seq11549__$3);
};
tiltontec.util.base.unless.cljs$lang$macro = true;
tiltontec.util.base.def_rmap_slots = function tiltontec$util$base$def_rmap_slots(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___11560 = arguments.length;
  var i__7286__auto___11561 = 0;
  while (true) {
    if (i__7286__auto___11561 < len__7285__auto___11560) {
      args__7292__auto__.push(arguments[i__7286__auto___11561]);
      var G__11562 = i__7286__auto___11561 + 1;
      i__7286__auto___11561 = G__11562;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 3 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(3), 0, null) : null;
  return tiltontec.util.base.def_rmap_slots.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7293__auto__);
};
tiltontec.util.base.def_rmap_slots.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, reader_prefix, slots) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "do", "do", 1686842252, null)), cljs.core.map.call(null, function(slot_SHARP_) {
    return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "defn", "cljs.core/defn", -1606493717, null)), function() {
      var x__7044__auto__ = cljs.core.symbol.call(null, [cljs.core.str(function() {
        var or__6210__auto__ = reader_prefix;
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          return "";
        }
      }()), cljs.core.str(slot_SHARP_)].join(""));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), function() {
      var x__7044__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), function() {
      var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
        var x__7044__auto__ = cljs.core.keyword.call(null, slot_SHARP_);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), function() {
        var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "ref", "ref", -1364538802, null)))));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }())));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
  }, slots))));
};
tiltontec.util.base.def_rmap_slots.cljs$lang$maxFixedArity = 3;
tiltontec.util.base.def_rmap_slots.cljs$lang$applyTo = function(seq11556) {
  var G__11557 = cljs.core.first.call(null, seq11556);
  var seq11556__$1 = cljs.core.next.call(null, seq11556);
  var G__11558 = cljs.core.first.call(null, seq11556__$1);
  var seq11556__$2 = cljs.core.next.call(null, seq11556__$1);
  var G__11559 = cljs.core.first.call(null, seq11556__$2);
  var seq11556__$3 = cljs.core.next.call(null, seq11556__$2);
  return tiltontec.util.base.def_rmap_slots.cljs$core$IFn$_invoke$arity$variadic(G__11557, G__11558, G__11559, seq11556__$3);
};
tiltontec.util.base.def_rmap_slots.cljs$lang$macro = true;
tiltontec.util.base.def_rmap_meta_slots = function tiltontec$util$base$def_rmap_meta_slots(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___11567 = arguments.length;
  var i__7286__auto___11568 = 0;
  while (true) {
    if (i__7286__auto___11568 < len__7285__auto___11567) {
      args__7292__auto__.push(arguments[i__7286__auto___11568]);
      var G__11569 = i__7286__auto___11568 + 1;
      i__7286__auto___11568 = G__11569;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 3 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(3), 0, null) : null;
  return tiltontec.util.base.def_rmap_meta_slots.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7293__auto__);
};
tiltontec.util.base.def_rmap_meta_slots.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, reader_prefix, slots) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "do", "do", 1686842252, null)), cljs.core.map.call(null, function(slot_SHARP_) {
    return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "defn", "cljs.core/defn", -1606493717, null)), function() {
      var x__7044__auto__ = cljs.core.symbol.call(null, [cljs.core.str(function() {
        var or__6210__auto__ = reader_prefix;
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          return "";
        }
      }()), cljs.core.str(slot_SHARP_)].join(""));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), function() {
      var x__7044__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), function() {
      var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
        var x__7044__auto__ = cljs.core.keyword.call(null, slot_SHARP_);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), function() {
        var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "meta", "cljs.core/meta", -748218346, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "ref", "ref", -1364538802, null)))));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }())));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
  }, slots))));
};
tiltontec.util.base.def_rmap_meta_slots.cljs$lang$maxFixedArity = 3;
tiltontec.util.base.def_rmap_meta_slots.cljs$lang$applyTo = function(seq11563) {
  var G__11564 = cljs.core.first.call(null, seq11563);
  var seq11563__$1 = cljs.core.next.call(null, seq11563);
  var G__11565 = cljs.core.first.call(null, seq11563__$1);
  var seq11563__$2 = cljs.core.next.call(null, seq11563__$1);
  var G__11566 = cljs.core.first.call(null, seq11563__$2);
  var seq11563__$3 = cljs.core.next.call(null, seq11563__$2);
  return tiltontec.util.base.def_rmap_meta_slots.cljs$core$IFn$_invoke$arity$variadic(G__11564, G__11565, G__11566, seq11563__$3);
};
tiltontec.util.base.def_rmap_meta_slots.cljs$lang$macro = true;
goog.provide("tiltontec.util.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("tiltontec.util.base");
cljs.core._STAR_print_level_STAR_ = 2;
tiltontec.util.core.type_of = function tiltontec$util$core$type_of(x) {
  return cljs.core.type.call(null, x);
};
tiltontec.util.core.set_ify = function tiltontec$util$core$set_ify(x) {
  if (x == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (cljs.core.sequential_QMARK_.call(null, x)) {
      return cljs.core.set.call(null, x);
    } else {
      return cljs.core.PersistentHashSet.fromArray([x], true);
    }
  }
};
tiltontec.util.core.cl_find = function tiltontec$util$core$cl_find(sought, coll) {
  if (sought == null) {
    return null;
  } else {
    return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([sought], true), coll);
  }
};
tiltontec.util.core.ia_ref = function tiltontec$util$core$ia_ref(x) {
  return cljs.core.atom.call(null, x);
};
tiltontec.util.core.any_ref_QMARK_ = function tiltontec$util$core$any_ref_QMARK_(x) {
  return x instanceof cljs.core.Atom;
};
tiltontec.util.core.rmap_setf = function tiltontec$util$core$rmap_setf(p__11572, new_value) {
  var vec__11576 = p__11572;
  var slot = cljs.core.nth.call(null, vec__11576, 0, null);
  var ref = cljs.core.nth.call(null, vec__11576, 1, null);
  if (cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, ref))) {
  } else {
    throw new Error("Assert failed: (any-ref? ref)");
  }
  if (cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, ref))) {
  } else {
    throw new Error("Assert failed: (map? (clojure.core/deref ref))");
  }
  cljs.core.swap_BANG_.call(null, ref, cljs.core.assoc, slot, new_value);
  return new_value;
};
tiltontec.util.core.rmap_meta_setf = function tiltontec$util$core$rmap_meta_setf(p__11579, new_value) {
  var vec__11583 = p__11579;
  var slot = cljs.core.nth.call(null, vec__11583, 0, null);
  var ref = cljs.core.nth.call(null, vec__11583, 1, null);
  if (cljs.core.truth_(cljs.core.meta.call(null, ref))) {
  } else {
    throw new Error("Assert failed: (meta ref)");
  }
  cljs.core.alter_meta_BANG_.call(null, ref, cljs.core.assoc, slot, new_value);
  return new_value;
};
if (typeof tiltontec.util.core.err !== "undefined") {
} else {
  tiltontec.util.core.err = function() {
    var method_table__7135__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__7136__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__7137__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__7138__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__7139__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.util.core", "err"), function(method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__, hierarchy__7139__auto__) {
      return function() {
        var G__11586__delegate = function(a1, args) {
          return cljs.core.fn_QMARK_.call(null, a1);
        };
        var G__11586 = function(a1, var_args) {
          var args = null;
          if (arguments.length > 1) {
            var G__11587__i = 0, G__11587__a = new Array(arguments.length - 1);
            while (G__11587__i < G__11587__a.length) {
              G__11587__a[G__11587__i] = arguments[G__11587__i + 1];
              ++G__11587__i;
            }
            args = new cljs.core.IndexedSeq(G__11587__a, 0);
          }
          return G__11586__delegate.call(this, a1, args);
        };
        G__11586.cljs$lang$maxFixedArity = 1;
        G__11586.cljs$lang$applyTo = function(arglist__11588) {
          var a1 = cljs.core.first(arglist__11588);
          var args = cljs.core.rest(arglist__11588);
          return G__11586__delegate(a1, args);
        };
        G__11586.cljs$core$IFn$_invoke$arity$variadic = G__11586__delegate;
        return G__11586;
      }();
    }(method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__, hierarchy__7139__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__7139__auto__, method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.util.core.err, true, function() {
  var G__11589__delegate = function(fn, mas) {
    return tiltontec.util.core.err.call(null, cljs.core.apply.call(null, fn, mas));
  };
  var G__11589 = function(fn, var_args) {
    var mas = null;
    if (arguments.length > 1) {
      var G__11590__i = 0, G__11590__a = new Array(arguments.length - 1);
      while (G__11590__i < G__11590__a.length) {
        G__11590__a[G__11590__i] = arguments[G__11590__i + 1];
        ++G__11590__i;
      }
      mas = new cljs.core.IndexedSeq(G__11590__a, 0);
    }
    return G__11589__delegate.call(this, fn, mas);
  };
  G__11589.cljs$lang$maxFixedArity = 1;
  G__11589.cljs$lang$applyTo = function(arglist__11591) {
    var fn = cljs.core.first(arglist__11591);
    var mas = cljs.core.rest(arglist__11591);
    return G__11589__delegate(fn, mas);
  };
  G__11589.cljs$core$IFn$_invoke$arity$variadic = G__11589__delegate;
  return G__11589;
}());
cljs.core._add_method.call(null, tiltontec.util.core.err, new cljs.core.Keyword(null, "default", "default", -1987822328), function() {
  var G__11592__delegate = function(bits) {
    throw new Error(clojure.string.join.call(null, " ", cljs.core.cons.call(null, "jz/err\x3e", bits)));
  };
  var G__11592 = function(var_args) {
    var bits = null;
    if (arguments.length > 0) {
      var G__11593__i = 0, G__11593__a = new Array(arguments.length - 0);
      while (G__11593__i < G__11593__a.length) {
        G__11593__a[G__11593__i] = arguments[G__11593__i + 0];
        ++G__11593__i;
      }
      bits = new cljs.core.IndexedSeq(G__11593__a, 0);
    }
    return G__11592__delegate.call(this, bits);
  };
  G__11592.cljs$lang$maxFixedArity = 0;
  G__11592.cljs$lang$applyTo = function(arglist__11594) {
    var bits = cljs.core.seq(arglist__11594);
    return G__11592__delegate(bits);
  };
  G__11592.cljs$core$IFn$_invoke$arity$variadic = G__11592__delegate;
  return G__11592;
}());
tiltontec.util.core.flz = function tiltontec$util$core$flz(x) {
  if (cljs.core.isa_QMARK_.call(null, cljs.core.type.call(null, x), cljs.core.LazySeq)) {
    return cljs.core.vec.call(null, cljs.core.doall.call(null, x));
  } else {
    return x;
  }
};
tiltontec.util.core.wtrx_test = function tiltontec$util$core$wtrx_test(n) {
  return tiltontec.util.base.call_wtrx.call(null, function() {
    if (n > 0) {
      return tiltontec$util$core$wtrx_test.call(null, n - 1);
    } else {
      return null;
    }
  }, 0, 10, cljs.core._conj.call(null, function() {
    var x__7044__auto__ = n;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), "test"));
};
tiltontec.util.core.slot_users = function tiltontec$util$core$slot_users(me, slot) {
  return cljs.core.set.call(null, cljs.core.map.call(null, new cljs.core.Keyword(null, "slotq", "slotq", 1456717980), cljs.core.map.call(null, cljs.core.deref, (new cljs.core.Keyword(null, "callers", "callers", -1991542784)).cljs$core$IFn$_invoke$arity$2(cljs.core.deref.call(null, slot.call(null, cljs.core.deref.call(null, me))), cljs.core.PersistentHashSet.EMPTY))));
};
tiltontec.util.core.slot_useds = function tiltontec$util$core$slot_useds(me, slot) {
  return cljs.core.set.call(null, cljs.core.map.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), cljs.core.map.call(null, cljs.core.deref, (new cljs.core.Keyword(null, "useds", "useds", 621350967)).cljs$core$IFn$_invoke$arity$2(cljs.core.deref.call(null, slot.call(null, cljs.core.deref.call(null, me))), cljs.core.PersistentHashSet.EMPTY))));
};
tiltontec.util.core.make_fifo_queue = function tiltontec$util$core$make_fifo_queue() {
  return cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
};
tiltontec.util.core.fifo_data = function tiltontec$util$core$fifo_data(q) {
  return cljs.core.deref.call(null, q);
};
tiltontec.util.core.fifo_clear = function tiltontec$util$core$fifo_clear(q) {
  return cljs.core.swap_BANG_.call(null, q, cljs.core.empty);
};
tiltontec.util.core.fifo_empty_QMARK_ = function tiltontec$util$core$fifo_empty_QMARK_(q) {
  return cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, q));
};
tiltontec.util.core.fifo_peek = function tiltontec$util$core$fifo_peek(q) {
  return cljs.core.first.call(null, cljs.core.deref.call(null, q));
};
tiltontec.util.core.fifo_add = function tiltontec$util$core$fifo_add(q, new$) {
  return cljs.core.swap_BANG_.call(null, q, cljs.core.conj, new$);
};
tiltontec.util.core.fifo_pop = function tiltontec$util$core$fifo_pop(q) {
  if (cljs.core.truth_(tiltontec.util.core.fifo_empty_QMARK_.call(null, q))) {
    return null;
  } else {
    var result__8295__auto__ = cljs.core.first.call(null, cljs.core.deref.call(null, q));
    cljs.core.swap_BANG_.call(null, q, cljs.core.subvec, 1);
    return result__8295__auto__;
  }
};
tiltontec.util.core.ensure_vec = function tiltontec$util$core$ensure_vec(x) {
  if (cljs.core.coll_QMARK_.call(null, x)) {
    return cljs.core.vec.call(null, x);
  } else {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null);
  }
};
tiltontec.util.core.pln = function tiltontec$util$core$pln(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___11596 = arguments.length;
  var i__7286__auto___11597 = 0;
  while (true) {
    if (i__7286__auto___11597 < len__7285__auto___11596) {
      args__7292__auto__.push(arguments[i__7286__auto___11597]);
      var G__11598 = i__7286__auto___11597 + 1;
      i__7286__auto___11597 = G__11598;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return tiltontec.util.core.pln.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
tiltontec.util.core.pln.cljs$core$IFn$_invoke$arity$variadic = function(r) {
  if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([cljs.core.first.call(null, r)], true), cljs.core.PersistentVector.EMPTY))) {
    return cljs.core.println.call(null, cljs.core.pr_str.call(null, r));
  } else {
    return null;
  }
};
tiltontec.util.core.pln.cljs$lang$maxFixedArity = 0;
tiltontec.util.core.pln.cljs$lang$applyTo = function(seq11595) {
  return tiltontec.util.core.pln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq11595));
};
goog.provide("cljs.pprint");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.pprint.print = function cljs$pprint$print(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___14232 = arguments.length;
  var i__7286__auto___14233 = 0;
  while (true) {
    if (i__7286__auto___14233 < len__7285__auto___14232) {
      args__7292__auto__.push(arguments[i__7286__auto___14233]);
      var G__14234 = i__7286__auto___14233 + 1;
      i__7286__auto___14233 = G__14234;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.print_str, more));
};
cljs.pprint.print.cljs$lang$maxFixedArity = 0;
cljs.pprint.print.cljs$lang$applyTo = function(seq14231) {
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq14231));
};
cljs.pprint.println = function cljs$pprint$println(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___14236 = arguments.length;
  var i__7286__auto___14237 = 0;
  while (true) {
    if (i__7286__auto___14237 < len__7285__auto___14236) {
      args__7292__auto__.push(arguments[i__7286__auto___14237]);
      var G__14238 = i__7286__auto___14237 + 1;
      i__7286__auto___14237 = G__14238;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.print, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.println.cljs$lang$maxFixedArity = 0;
cljs.pprint.println.cljs$lang$applyTo = function(seq14235) {
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq14235));
};
cljs.pprint.print_char = function cljs$pprint$print_char(c) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, function() {
    var pred__14242 = cljs.core._EQ_;
    var expr__14243 = c;
    if (cljs.core.truth_(pred__14242.call(null, "\b", expr__14243))) {
      return "\\backspace";
    } else {
      if (cljs.core.truth_(pred__14242.call(null, "\t", expr__14243))) {
        return "\\tab";
      } else {
        if (cljs.core.truth_(pred__14242.call(null, "\n", expr__14243))) {
          return "\\newline";
        } else {
          if (cljs.core.truth_(pred__14242.call(null, "\f", expr__14243))) {
            return "\\formfeed";
          } else {
            if (cljs.core.truth_(pred__14242.call(null, "\r", expr__14243))) {
              return "\\return";
            } else {
              if (cljs.core.truth_(pred__14242.call(null, '"', expr__14243))) {
                return '\\"';
              } else {
                if (cljs.core.truth_(pred__14242.call(null, "\\", expr__14243))) {
                  return "\\\\";
                } else {
                  return [cljs.core.str("\\"), cljs.core.str(c)].join("");
                }
              }
            }
          }
        }
      }
    }
  }());
};
cljs.pprint.pr = function cljs$pprint$pr(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___14246 = arguments.length;
  var i__7286__auto___14247 = 0;
  while (true) {
    if (i__7286__auto___14247 < len__7285__auto___14246) {
      args__7292__auto__.push(arguments[i__7286__auto___14247]);
      var G__14248 = i__7286__auto___14247 + 1;
      i__7286__auto___14247 = G__14248;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.pr_str, more));
};
cljs.pprint.pr.cljs$lang$maxFixedArity = 0;
cljs.pprint.pr.cljs$lang$applyTo = function(seq14245) {
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq14245));
};
cljs.pprint.prn = function cljs$pprint$prn(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___14250 = arguments.length;
  var i__7286__auto___14251 = 0;
  while (true) {
    if (i__7286__auto___14251 < len__7285__auto___14250) {
      args__7292__auto__.push(arguments[i__7286__auto___14251]);
      var G__14252 = i__7286__auto___14251 + 1;
      i__7286__auto___14251 = G__14252;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.pr, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.prn.cljs$lang$maxFixedArity = 0;
cljs.pprint.prn.cljs$lang$applyTo = function(seq14249) {
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq14249));
};
cljs.pprint.float_QMARK_ = function cljs$pprint$float_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && !(parseFloat(n) === parseInt(n, 10));
};
cljs.pprint.char_code = function cljs$pprint$char_code(c) {
  if (typeof c === "number") {
    return c;
  } else {
    if (typeof c === "string" && c.length === 1) {
      return c.charCodeAt(0);
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.pprint.map_passing_context = function cljs$pprint$map_passing_context(func, initial_context, lis) {
  var context = initial_context;
  var lis__$1 = lis;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, lis__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var this$ = cljs.core.first.call(null, lis__$1);
      var remainder = cljs.core.next.call(null, lis__$1);
      var vec__14256 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, context], null));
      var result = cljs.core.nth.call(null, vec__14256, 0, null);
      var new_context = cljs.core.nth.call(null, vec__14256, 1, null);
      var G__14259 = new_context;
      var G__14260 = remainder;
      var G__14261 = cljs.core.conj.call(null, acc, result);
      context = G__14259;
      lis__$1 = G__14260;
      acc = G__14261;
      continue;
    }
    break;
  }
};
cljs.pprint.consume = function cljs$pprint$consume(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__14265 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__14265, 0, null);
    var new_context = cljs.core.nth.call(null, vec__14265, 1, null);
    if (cljs.core.not.call(null, result)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, new_context], null);
    } else {
      var G__14268 = new_context;
      var G__14269 = cljs.core.conj.call(null, acc, result);
      context = G__14268;
      acc = G__14269;
      continue;
    }
    break;
  }
};
cljs.pprint.consume_while = function cljs$pprint$consume_while(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__14273 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__14273, 0, null);
    var continue$ = cljs.core.nth.call(null, vec__14273, 1, null);
    var new_context = cljs.core.nth.call(null, vec__14273, 2, null);
    if (cljs.core.not.call(null, continue$)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var G__14276 = new_context;
      var G__14277 = cljs.core.conj.call(null, acc, result);
      context = G__14276;
      acc = G__14277;
      continue;
    }
    break;
  }
};
cljs.pprint.unzip_map = function cljs$pprint$unzip_map(m) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__6990__auto__ = function cljs$pprint$unzip_map_$_iter__14334(s__14335) {
      return new cljs.core.LazySeq(null, function() {
        var s__14335__$1 = s__14335;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__14335__$1);
          if (temp__4425__auto__) {
            var s__14335__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__14335__$2)) {
              var c__6988__auto__ = cljs.core.chunk_first.call(null, s__14335__$2);
              var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
              var b__14337 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
              if (function() {
                var i__14336 = 0;
                while (true) {
                  if (i__14336 < size__6989__auto__) {
                    var vec__14350 = cljs.core._nth.call(null, c__6988__auto__, i__14336);
                    var k = cljs.core.nth.call(null, vec__14350, 0, null);
                    var vec__14353 = cljs.core.nth.call(null, vec__14350, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__14353, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__14353, 1, null);
                    cljs.core.chunk_append.call(null, b__14337, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null));
                    var G__14390 = i__14336 + 1;
                    i__14336 = G__14390;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14337), cljs$pprint$unzip_map_$_iter__14334.call(null, cljs.core.chunk_rest.call(null, s__14335__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14337), null);
              }
            } else {
              var vec__14356 = cljs.core.first.call(null, s__14335__$2);
              var k = cljs.core.nth.call(null, vec__14356, 0, null);
              var vec__14359 = cljs.core.nth.call(null, vec__14356, 1, null);
              var v1 = cljs.core.nth.call(null, vec__14359, 0, null);
              var v2 = cljs.core.nth.call(null, vec__14359, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null), cljs$pprint$unzip_map_$_iter__14334.call(null, cljs.core.rest.call(null, s__14335__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6990__auto__.call(null, m);
  }()), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__6990__auto__ = function cljs$pprint$unzip_map_$_iter__14362(s__14363) {
      return new cljs.core.LazySeq(null, function() {
        var s__14363__$1 = s__14363;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__14363__$1);
          if (temp__4425__auto__) {
            var s__14363__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__14363__$2)) {
              var c__6988__auto__ = cljs.core.chunk_first.call(null, s__14363__$2);
              var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
              var b__14365 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
              if (function() {
                var i__14364 = 0;
                while (true) {
                  if (i__14364 < size__6989__auto__) {
                    var vec__14378 = cljs.core._nth.call(null, c__6988__auto__, i__14364);
                    var k = cljs.core.nth.call(null, vec__14378, 0, null);
                    var vec__14381 = cljs.core.nth.call(null, vec__14378, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__14381, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__14381, 1, null);
                    cljs.core.chunk_append.call(null, b__14365, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null));
                    var G__14391 = i__14364 + 1;
                    i__14364 = G__14391;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14365), cljs$pprint$unzip_map_$_iter__14362.call(null, cljs.core.chunk_rest.call(null, s__14363__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14365), null);
              }
            } else {
              var vec__14384 = cljs.core.first.call(null, s__14363__$2);
              var k = cljs.core.nth.call(null, vec__14384, 0, null);
              var vec__14387 = cljs.core.nth.call(null, vec__14384, 1, null);
              var v1 = cljs.core.nth.call(null, vec__14387, 0, null);
              var v2 = cljs.core.nth.call(null, vec__14387, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null), cljs$pprint$unzip_map_$_iter__14362.call(null, cljs.core.rest.call(null, s__14363__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6990__auto__.call(null, m);
  }())], null);
};
cljs.pprint.tuple_map = function cljs$pprint$tuple_map(m, v1) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__6990__auto__ = function cljs$pprint$tuple_map_$_iter__14408(s__14409) {
      return new cljs.core.LazySeq(null, function() {
        var s__14409__$1 = s__14409;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__14409__$1);
          if (temp__4425__auto__) {
            var s__14409__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__14409__$2)) {
              var c__6988__auto__ = cljs.core.chunk_first.call(null, s__14409__$2);
              var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
              var b__14411 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
              if (function() {
                var i__14410 = 0;
                while (true) {
                  if (i__14410 < size__6989__auto__) {
                    var vec__14418 = cljs.core._nth.call(null, c__6988__auto__, i__14410);
                    var k = cljs.core.nth.call(null, vec__14418, 0, null);
                    var v = cljs.core.nth.call(null, vec__14418, 1, null);
                    cljs.core.chunk_append.call(null, b__14411, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null));
                    var G__14424 = i__14410 + 1;
                    i__14410 = G__14424;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14411), cljs$pprint$tuple_map_$_iter__14408.call(null, cljs.core.chunk_rest.call(null, s__14409__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14411), null);
              }
            } else {
              var vec__14421 = cljs.core.first.call(null, s__14409__$2);
              var k = cljs.core.nth.call(null, vec__14421, 0, null);
              var v = cljs.core.nth.call(null, vec__14421, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null), cljs$pprint$tuple_map_$_iter__14408.call(null, cljs.core.rest.call(null, s__14409__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6990__auto__.call(null, m);
  }());
};
cljs.pprint.rtrim = function cljs$pprint$rtrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1), c)) {
    var n = len - 1;
    while (true) {
      if (n < 0) {
        return "";
      } else {
        if (!cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
          return cljs.core.subs.call(null, s, 0, n + 1);
        } else {
          var G__14425 = n - 1;
          n = G__14425;
          continue;
        }
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.ltrim = function cljs$pprint$ltrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, 0), c)) {
    var n = 0;
    while (true) {
      if (cljs.core._EQ_.call(null, n, len) || !cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
        return cljs.core.subs.call(null, s, n);
      } else {
        var G__14426 = n + 1;
        n = G__14426;
        continue;
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.prefix_count = function cljs$pprint$prefix_count(aseq, val) {
  var test = cljs.core.coll_QMARK_.call(null, val) ? cljs.core.set.call(null, val) : cljs.core.PersistentHashSet.fromArray([val], true);
  var pos = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, pos, cljs.core.count.call(null, aseq)) || cljs.core.not.call(null, test.call(null, cljs.core.nth.call(null, aseq, pos)))) {
      return pos;
    } else {
      var G__14427 = pos + 1;
      pos = G__14427;
      continue;
    }
    break;
  }
};
cljs.pprint.IPrettyFlush = function() {
};
cljs.pprint._ppflush = function cljs$pprint$_ppflush(pp) {
  if (!(pp == null) && !(pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1 == null)) {
    return pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1(pp);
  } else {
    var x__6873__auto__ = pp == null ? null : pp;
    var m__6874__auto__ = cljs.pprint._ppflush[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, pp);
    } else {
      var m__6874__auto____$1 = cljs.pprint._ppflush["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, pp);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPrettyFlush.-ppflush", pp);
      }
    }
  }
};
cljs.pprint._STAR_default_page_width_STAR_ = 72;
cljs.pprint.get_field = function cljs$pprint$get_field(this$, sym) {
  return sym.call(null, cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint.set_field = function cljs$pprint$set_field(this$, sym, new_val) {
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, sym, new_val);
};
cljs.pprint.get_column = function cljs$pprint$get_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599));
};
cljs.pprint.get_line = function cljs$pprint$get_line(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235));
};
cljs.pprint.get_max_column = function cljs$pprint$get_max_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548));
};
cljs.pprint.set_max_column = function cljs$pprint$set_max_column(this$, new_max) {
  cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548), new_max);
  return null;
};
cljs.pprint.get_writer = function cljs$pprint$get_writer(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322));
};
cljs.pprint.c_write_char = function cljs$pprint$c_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, c, "\n")) {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0);
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235)) + 1);
  } else {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + 1);
  }
  return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322)), c);
};
cljs.pprint.column_writer = function cljs$pprint$column_writer(var_args) {
  var args14429 = [];
  var len__7285__auto___14438 = arguments.length;
  var i__7286__auto___14439 = 0;
  while (true) {
    if (i__7286__auto___14439 < len__7285__auto___14438) {
      args14429.push(arguments[i__7286__auto___14439]);
      var G__14440 = i__7286__auto___14439 + 1;
      i__7286__auto___14439 = G__14440;
      continue;
    } else {
    }
    break;
  }
  var G__14431 = args14429.length;
  switch(G__14431) {
    case 1:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14429.length)].join(""));;
  }
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1 = function(writer) {
  return cljs.pprint.column_writer.call(null, writer, cljs.pprint._STAR_default_page_width_STAR_);
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2 = function(writer, max_columns) {
  var fields = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "max", "max", 61366548), max_columns, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0, new cljs.core.Keyword(null, "line", "line", 212345235), 0, new cljs.core.Keyword(null, "base", "base", 185279322), writer], null));
  if (typeof cljs.pprint.t_cljs$pprint14432 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint14432 = function(writer, max_columns, fields, meta14433) {
      this.writer = writer;
      this.max_columns = max_columns;
      this.fields = fields;
      this.meta14433 = meta14433;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint14432.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(fields) {
      return function(_14434, meta14433__$1) {
        var self__ = this;
        var _14434__$1 = this;
        return new cljs.pprint.t_cljs$pprint14432(self__.writer, self__.max_columns, self__.fields, meta14433__$1);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint14432.prototype.cljs$core$IMeta$_meta$arity$1 = function(fields) {
      return function(_14434) {
        var self__ = this;
        var _14434__$1 = this;
        return self__.meta14433;
      };
    }(fields);
    cljs.pprint.t_cljs$pprint14432.prototype.cljs$core$IDeref$_deref$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(fields);
    cljs.pprint.t_cljs$pprint14432.prototype.cljs$core$IWriter$_flush$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint14432.prototype.cljs$core$IWriter$_write$arity$2 = function(fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__14435 = cljs.core._EQ_;
        var expr__14436 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__14435.call(null, String, expr__14436))) {
          var s = x;
          var nl = s.lastIndexOf("\n");
          if (nl < 0) {
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + cljs.core.count.call(null, s));
          } else {
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.core.count.call(null, s) - nl - 1);
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235)) + cljs.core.count.call(null, cljs.core.filter.call(null, function(s, nl, pred__14435, expr__14436, this$__$1, fields) {
              return function(p1__14428_SHARP_) {
                return cljs.core._EQ_.call(null, p1__14428_SHARP_, "\n");
              };
            }(s, nl, pred__14435, expr__14436, this$__$1, fields), s)));
          }
          return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "base", "base", 185279322)), s);
        } else {
          if (cljs.core.truth_(pred__14435.call(null, Number, expr__14436))) {
            return cljs.pprint.c_write_char.call(null, this$__$1, x);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__14436)].join(""));
          }
        }
      };
    }(fields);
    cljs.pprint.t_cljs$pprint14432.getBasis = function(fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta14433", "meta14433", 592303566, null)], null);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint14432.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint14432.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint14432";
    cljs.pprint.t_cljs$pprint14432.cljs$lang$ctorPrWriter = function(fields) {
      return function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
        return cljs.core._write.call(null, writer__6817__auto__, "cljs.pprint/t_cljs$pprint14432");
      };
    }(fields);
    cljs.pprint.__GT_t_cljs$pprint14432 = function(fields) {
      return function cljs$pprint$__GT_t_cljs$pprint14432(writer__$1, max_columns__$1, fields__$1, meta14433) {
        return new cljs.pprint.t_cljs$pprint14432(writer__$1, max_columns__$1, fields__$1, meta14433);
      };
    }(fields);
  }
  return new cljs.pprint.t_cljs$pprint14432(writer, max_columns, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.column_writer.cljs$lang$maxFixedArity = 2;
cljs.pprint.logical_block = function(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, __meta, __extmap, __hash) {
  this.parent = parent;
  this.section = section;
  this.start_col = start_col;
  this.indent = indent;
  this.done_nl = done_nl;
  this.intra_block_nl = intra_block_nl;
  this.prefix = prefix;
  this.per_line_prefix = per_line_prefix;
  this.suffix = suffix;
  this.logical_block_callback = logical_block_callback;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k14443, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__14445 = k14443 instanceof cljs.core.Keyword ? k14443.fqn : null;
  switch(G__14445) {
    case "suffix":
      return self__.suffix;
      break;
    case "indent":
      return self__.indent;
      break;
    case "parent":
      return self__.parent;
      break;
    case "section":
      return self__.section;
      break;
    case "done-nl":
      return self__.done_nl;
      break;
    case "start-col":
      return self__.start_col;
      break;
    case "prefix":
      return self__.prefix;
      break;
    case "per-line-prefix":
      return self__.per_line_prefix;
      break;
    case "logical-block-callback":
      return self__.logical_block_callback;
      break;
    case "intra-block-nl":
      return self__.intra_block_nl;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k14443, else__6835__auto__);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#cljs.pprint.logical-block{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), 
  self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IIterable$ = true;
cljs.pprint.logical_block.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__14442) {
  var self__ = this;
  var G__14442__$1 = this;
  return new cljs.core.RecordIter(0, G__14442__$1, 10, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 
  1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.logical_block.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 10 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), null, new cljs.core.Keyword(null, "indent", "indent", -148200125), null, new cljs.core.Keyword(null, "parent", "parent", -878878779), null, new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), null, new cljs.core.Keyword(null, "start-col", 
  "start-col", 668080143), null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__14442) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__14446 = cljs.core.keyword_identical_QMARK_;
  var expr__14447 = k__6840__auto__;
  if (cljs.core.truth_(pred__14446.call(null, new cljs.core.Keyword(null, "parent", "parent", -878878779), expr__14447))) {
    return new cljs.pprint.logical_block(G__14442, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__14446.call(null, new cljs.core.Keyword(null, "section", "section", -300141526), expr__14447))) {
      return new cljs.pprint.logical_block(self__.parent, G__14442, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__14446.call(null, new cljs.core.Keyword(null, "start-col", "start-col", 668080143), expr__14447))) {
        return new cljs.pprint.logical_block(self__.parent, self__.section, G__14442, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__14446.call(null, new cljs.core.Keyword(null, "indent", "indent", -148200125), expr__14447))) {
          return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, G__14442, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__14446.call(null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), expr__14447))) {
            return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, G__14442, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__14446.call(null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), expr__14447))) {
              return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, G__14442, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__14446.call(null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), expr__14447))) {
                return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, G__14442, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__14446.call(null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), expr__14447))) {
                  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, G__14442, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                } else {
                  if (cljs.core.truth_(pred__14446.call(null, new cljs.core.Keyword(null, "suffix", "suffix", 367373057), expr__14447))) {
                    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, G__14442, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                  } else {
                    if (cljs.core.truth_(pred__14446.call(null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), expr__14447))) {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, G__14442, self__.__meta, self__.__extmap, null);
                    } else {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__14442), null);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.pprint.logical_block.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__14442) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, G__14442, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
cljs.pprint.logical_block.getBasis = function() {
  return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.Symbol(null, "section", "section", 1340390001, null), new cljs.core.Symbol(null, "start-col", "start-col", -1986355626, null), new cljs.core.Symbol(null, "indent", "indent", 1492331402, null), new cljs.core.Symbol(null, "done-nl", "done-nl", 1259507187, null), new cljs.core.Symbol(null, "intra-block-nl", "intra-block-nl", -845608894, 
  null), new cljs.core.Symbol(null, "prefix", "prefix", 1374623062, null), new cljs.core.Symbol(null, "per-line-prefix", "per-line-prefix", -1807493956, null), new cljs.core.Symbol(null, "suffix", "suffix", 2007904584, null), new cljs.core.Symbol(null, "logical-block-callback", "logical-block-callback", -1041744575, null)], null);
};
cljs.pprint.logical_block.cljs$lang$type = true;
cljs.pprint.logical_block.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/logical-block");
};
cljs.pprint.logical_block.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "cljs.pprint/logical-block");
};
cljs.pprint.__GT_logical_block = function cljs$pprint$__GT_logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback) {
  return new cljs.pprint.logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, null, null, null);
};
cljs.pprint.map__GT_logical_block = function cljs$pprint$map__GT_logical_block(G__14444) {
  return new cljs.pprint.logical_block((new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(G__14444), (new cljs.core.Keyword(null, "section", "section", -300141526)).cljs$core$IFn$_invoke$arity$1(G__14444), (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(G__14444), (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(G__14444), (new cljs.core.Keyword(null, "done-nl", "done-nl", 
  -381024340)).cljs$core$IFn$_invoke$arity$1(G__14444), (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(G__14444), (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(G__14444), (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(G__14444), (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(G__14444), (new cljs.core.Keyword(null, 
  "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(G__14444), null, cljs.core.dissoc.call(null, G__14444, new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", 
  "intra-block-nl", 1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)), null);
};
cljs.pprint.ancestor_QMARK_ = function cljs$pprint$ancestor_QMARK_(parent, child) {
  var child__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child);
  while (true) {
    if (child__$1 == null) {
      return false;
    } else {
      if (parent === child__$1) {
        return true;
      } else {
        var G__14450 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child__$1);
        child__$1 = G__14450;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.buffer_length = function cljs$pprint$buffer_length(l) {
  var l__$1 = cljs.core.seq.call(null, l);
  if (l__$1) {
    return (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(cljs.core.last.call(null, l__$1)) - (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, l__$1));
  } else {
    return 0;
  }
};
cljs.pprint.buffer_blob = function(type_tag, data, trailing_white_space, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.data = data;
  this.trailing_white_space = trailing_white_space;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k14452, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__14454 = k14452 instanceof cljs.core.Keyword ? k14452.fqn : null;
  switch(G__14454) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "data":
      return self__.data;
      break;
    case "trailing-white-space":
      return self__.trailing_white_space;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k14452, else__6835__auto__);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#cljs.pprint.buffer-blob{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$ = true;
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__14451) {
  var self__ = this;
  var G__14451__$1 = this;
  return new cljs.core.RecordIter(0, G__14451__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null, new cljs.core.Keyword(null, "data", "data", -232669377), null], null), 
  null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__14451) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__14455 = cljs.core.keyword_identical_QMARK_;
  var expr__14456 = k__6840__auto__;
  if (cljs.core.truth_(pred__14455.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__14456))) {
    return new cljs.pprint.buffer_blob(G__14451, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__14455.call(null, new cljs.core.Keyword(null, "data", "data", -232669377), expr__14456))) {
      return new cljs.pprint.buffer_blob(self__.type_tag, G__14451, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__14455.call(null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), expr__14456))) {
        return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, G__14451, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__14455.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__14456))) {
          return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, G__14451, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__14455.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__14456))) {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, G__14451, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__14451), null);
          }
        }
      }
    }
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], 
  null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__14451) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, G__14451, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
cljs.pprint.buffer_blob.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "trailing-white-space", "trailing-white-space", -1158428773, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.buffer_blob.cljs$lang$type = true;
cljs.pprint.buffer_blob.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/buffer-blob");
};
cljs.pprint.buffer_blob.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "cljs.pprint/buffer-blob");
};
cljs.pprint.__GT_buffer_blob = function cljs$pprint$__GT_buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_buffer_blob = function cljs$pprint$map__GT_buffer_blob(G__14453) {
  return new cljs.pprint.buffer_blob((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__14453), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(G__14453), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(G__14453), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__14453), (new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__14453), null, cljs.core.dissoc.call(null, G__14453, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_buffer_blob = function cljs$pprint$make_buffer_blob(data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.buffer_blob_QMARK_ = function cljs$pprint$buffer_blob_QMARK_(x__14165__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__14165__auto__), new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173));
};
cljs.pprint.nl_t = function(type_tag, type, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.type = type;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k14460, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__14462 = k14460 instanceof cljs.core.Keyword ? k14460.fqn : null;
  switch(G__14462) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "type":
      return self__.type;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k14460, else__6835__auto__);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#cljs.pprint.nl-t{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.nl_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__14459) {
  var self__ = this;
  var G__14459__$1 = this;
  return new cljs.core.RecordIter(0, G__14459__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.nl_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "type", "type", 1174270348), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__14459) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__14463 = cljs.core.keyword_identical_QMARK_;
  var expr__14464 = k__6840__auto__;
  if (cljs.core.truth_(pred__14463.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__14464))) {
    return new cljs.pprint.nl_t(G__14459, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__14463.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), expr__14464))) {
      return new cljs.pprint.nl_t(self__.type_tag, G__14459, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__14463.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__14464))) {
        return new cljs.pprint.nl_t(self__.type_tag, self__.type, G__14459, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__14463.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__14464))) {
          return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, G__14459, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__14463.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__14464))) {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, G__14459, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__14459), null);
          }
        }
      }
    }
  }
};
cljs.pprint.nl_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), 
  self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__14459) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, G__14459, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
cljs.pprint.nl_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.nl_t.cljs$lang$type = true;
cljs.pprint.nl_t.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/nl-t");
};
cljs.pprint.nl_t.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "cljs.pprint/nl-t");
};
cljs.pprint.__GT_nl_t = function cljs$pprint$__GT_nl_t(type_tag, type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(type_tag, type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_nl_t = function cljs$pprint$map__GT_nl_t(G__14461) {
  return new cljs.pprint.nl_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__14461), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(G__14461), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__14461), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__14461), (new cljs.core.Keyword(null, "end-pos", 
  "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__14461), null, cljs.core.dissoc.call(null, G__14461, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_nl_t = function cljs$pprint$make_nl_t(type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.nl_t_QMARK_ = function cljs$pprint$nl_t_QMARK_(x__14165__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__14165__auto__), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114));
};
cljs.pprint.start_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k14468, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__14470 = k14468 instanceof cljs.core.Keyword ? k14468.fqn : null;
  switch(G__14470) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k14468, else__6835__auto__);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#cljs.pprint.start-block-t{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__14467) {
  var self__ = this;
  var G__14467__$1 = this;
  return new cljs.core.RecordIter(0, G__14467__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.start_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__14467) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__14471 = cljs.core.keyword_identical_QMARK_;
  var expr__14472 = k__6840__auto__;
  if (cljs.core.truth_(pred__14471.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__14472))) {
    return new cljs.pprint.start_block_t(G__14467, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__14471.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__14472))) {
      return new cljs.pprint.start_block_t(self__.type_tag, G__14467, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__14471.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__14472))) {
        return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, G__14467, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__14471.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__14472))) {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__14467, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__14467), null);
        }
      }
    }
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__14467) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__14467, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
cljs.pprint.start_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.start_block_t.cljs$lang$type = true;
cljs.pprint.start_block_t.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/start-block-t");
};
cljs.pprint.start_block_t.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "cljs.pprint/start-block-t");
};
cljs.pprint.__GT_start_block_t = function cljs$pprint$__GT_start_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_start_block_t = function cljs$pprint$map__GT_start_block_t(G__14469) {
  return new cljs.pprint.start_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__14469), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__14469), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__14469), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__14469), null, cljs.core.dissoc.call(null, 
  G__14469, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_start_block_t = function cljs$pprint$make_start_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.start_block_t_QMARK_ = function cljs$pprint$start_block_t_QMARK_(x__14165__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__14165__auto__), new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594));
};
cljs.pprint.end_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k14476, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__14478 = k14476 instanceof cljs.core.Keyword ? k14476.fqn : null;
  switch(G__14478) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k14476, else__6835__auto__);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#cljs.pprint.end-block-t{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__14475) {
  var self__ = this;
  var G__14475__$1 = this;
  return new cljs.core.RecordIter(0, G__14475__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.end_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__14475) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__14479 = cljs.core.keyword_identical_QMARK_;
  var expr__14480 = k__6840__auto__;
  if (cljs.core.truth_(pred__14479.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__14480))) {
    return new cljs.pprint.end_block_t(G__14475, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__14479.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__14480))) {
      return new cljs.pprint.end_block_t(self__.type_tag, G__14475, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__14479.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__14480))) {
        return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, G__14475, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__14479.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__14480))) {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__14475, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__14475), null);
        }
      }
    }
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__14475) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__14475, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
cljs.pprint.end_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.end_block_t.cljs$lang$type = true;
cljs.pprint.end_block_t.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/end-block-t");
};
cljs.pprint.end_block_t.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "cljs.pprint/end-block-t");
};
cljs.pprint.__GT_end_block_t = function cljs$pprint$__GT_end_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_end_block_t = function cljs$pprint$map__GT_end_block_t(G__14477) {
  return new cljs.pprint.end_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__14477), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__14477), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__14477), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__14477), null, cljs.core.dissoc.call(null, 
  G__14477, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_end_block_t = function cljs$pprint$make_end_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.end_block_t_QMARK_ = function cljs$pprint$end_block_t_QMARK_(x__14165__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__14165__auto__), new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735));
};
cljs.pprint.indent_t = function(type_tag, logical_block, relative_to, offset, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.relative_to = relative_to;
  this.offset = offset;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k14484, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__14486 = k14484 instanceof cljs.core.Keyword ? k14484.fqn : null;
  switch(G__14486) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "relative-to":
      return self__.relative_to;
      break;
    case "offset":
      return self__.offset;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k14484, else__6835__auto__);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#cljs.pprint.indent-t{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.indent_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__14483) {
  var self__ = this;
  var G__14483__$1 = this;
  return new cljs.core.RecordIter(0, G__14483__$1, 6, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.indent_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 6 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__14483) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__14487 = cljs.core.keyword_identical_QMARK_;
  var expr__14488 = k__6840__auto__;
  if (cljs.core.truth_(pred__14487.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__14488))) {
    return new cljs.pprint.indent_t(G__14483, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__14487.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__14488))) {
      return new cljs.pprint.indent_t(self__.type_tag, G__14483, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__14487.call(null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), expr__14488))) {
        return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, G__14483, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__14487.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__14488))) {
          return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, G__14483, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__14487.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__14488))) {
            return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, G__14483, self__.end_pos, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__14487.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__14488))) {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, G__14483, self__.__meta, self__.__extmap, null);
            } else {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__14483), null);
            }
          }
        }
      }
    }
  }
};
cljs.pprint.indent_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__14483) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, G__14483, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
cljs.pprint.indent_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "relative-to", "relative-to", 1170431476, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", 
  -3352399, null)], null);
};
cljs.pprint.indent_t.cljs$lang$type = true;
cljs.pprint.indent_t.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/indent-t");
};
cljs.pprint.indent_t.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "cljs.pprint/indent-t");
};
cljs.pprint.__GT_indent_t = function cljs$pprint$__GT_indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_indent_t = function cljs$pprint$map__GT_indent_t(G__14485) {
  return new cljs.pprint.indent_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__14485), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__14485), (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(G__14485), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__14485), (new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__14485), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__14485), null, cljs.core.dissoc.call(null, G__14485, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), 
  new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_indent_t = function cljs$pprint$make_indent_t(logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.indent_t_QMARK_ = function cljs$pprint$indent_t_QMARK_(x__14165__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__14165__auto__), new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969));
};
cljs.pprint.pp_newline = function cljs$pprint$pp_newline() {
  return "\n";
};
if (typeof cljs.pprint.write_token !== "undefined") {
} else {
  cljs.pprint.write_token = function() {
    var method_table__7135__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__7136__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__7137__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__7138__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__7139__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "write-token"), function(method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__, hierarchy__7139__auto__) {
      return function(p1__14492_SHARP_, p2__14491_SHARP_) {
        return (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(p2__14491_SHARP_);
      };
    }(method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__, hierarchy__7139__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__7139__auto__, method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), function(this$, token) {
  var temp__4425__auto___14493 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4425__auto___14493)) {
    var cb_14494 = temp__4425__auto___14493;
    cb_14494.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
  } else {
  }
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  var temp__4425__auto___14495 = (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(temp__4425__auto___14495)) {
    var prefix_14496 = temp__4425__auto___14495;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix_14496);
  } else {
  }
  var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), function(this$, token) {
  var temp__4425__auto___14497 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4425__auto___14497)) {
    var cb_14498 = temp__4425__auto___14497;
    cb_14498.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
  } else {
  }
  var temp__4425__auto__ = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token));
  if (cljs.core.truth_(temp__4425__auto__)) {
    var suffix = temp__4425__auto__;
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), function(this$, token) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(token) + function() {
    var pred__14499 = cljs.core._EQ_;
    var expr__14500 = (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(token);
    if (cljs.core.truth_(pred__14499.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__14500))) {
      return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
    } else {
      if (cljs.core.truth_(pred__14499.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__14500))) {
        return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__14500)].join(""));
      }
    }
  }());
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), function(this$, token) {
  return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(token));
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), function(this$, token) {
  if (cljs.core.truth_(function() {
    var or__6210__auto__ = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336));
    if (or__6210__auto__) {
      return or__6210__auto__;
    } else {
      var and__6198__auto__ = !cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "fill", "fill", 883462889));
      if (and__6198__auto__) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token)));
      } else {
        return and__6198__auto__;
      }
    }
  }())) {
    cljs.pprint.emit_nl.call(null, this$, token);
  } else {
    var temp__4423__auto___14502 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4423__auto___14502)) {
      var tws_14503 = temp__4423__auto___14502;
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_14503);
    } else {
    }
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
});
cljs.pprint.write_tokens = function cljs$pprint$write_tokens(this$, tokens, force_trailing_whitespace) {
  var seq__14508 = cljs.core.seq.call(null, tokens);
  var chunk__14509 = null;
  var count__14510 = 0;
  var i__14511 = 0;
  while (true) {
    if (i__14511 < count__14510) {
      var token = cljs.core._nth.call(null, chunk__14509, i__14511);
      if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
        var temp__4423__auto___14512 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
        if (cljs.core.truth_(temp__4423__auto___14512)) {
          var tws_14513 = temp__4423__auto___14512;
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_14513);
        } else {
        }
      } else {
      }
      cljs.pprint.write_token.call(null, this$, token);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
      var tws_14514 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      if (cljs.core.truth_(function() {
        var and__6198__auto__ = force_trailing_whitespace;
        if (cljs.core.truth_(and__6198__auto__)) {
          return tws_14514;
        } else {
          return and__6198__auto__;
        }
      }())) {
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_14514);
        cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
      } else {
      }
      var G__14515 = seq__14508;
      var G__14516 = chunk__14509;
      var G__14517 = count__14510;
      var G__14518 = i__14511 + 1;
      seq__14508 = G__14515;
      chunk__14509 = G__14516;
      count__14510 = G__14517;
      i__14511 = G__14518;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__14508);
      if (temp__4425__auto__) {
        var seq__14508__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__14508__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first.call(null, seq__14508__$1);
          var G__14519 = cljs.core.chunk_rest.call(null, seq__14508__$1);
          var G__14520 = c__7021__auto__;
          var G__14521 = cljs.core.count.call(null, c__7021__auto__);
          var G__14522 = 0;
          seq__14508 = G__14519;
          chunk__14509 = G__14520;
          count__14510 = G__14521;
          i__14511 = G__14522;
          continue;
        } else {
          var token = cljs.core.first.call(null, seq__14508__$1);
          if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
            var temp__4423__auto___14523 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
            if (cljs.core.truth_(temp__4423__auto___14523)) {
              var tws_14524 = temp__4423__auto___14523;
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_14524);
            } else {
            }
          } else {
          }
          cljs.pprint.write_token.call(null, this$, token);
          cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
          var tws_14525 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
          if (cljs.core.truth_(function() {
            var and__6198__auto__ = force_trailing_whitespace;
            if (cljs.core.truth_(and__6198__auto__)) {
              return tws_14525;
            } else {
              return and__6198__auto__;
            }
          }())) {
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_14525);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
          } else {
          }
          var G__14526 = cljs.core.next.call(null, seq__14508__$1);
          var G__14527 = null;
          var G__14528 = 0;
          var G__14529 = 0;
          seq__14508 = G__14526;
          chunk__14509 = G__14527;
          count__14510 = G__14528;
          i__14511 = G__14529;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.pprint.tokens_fit_QMARK_ = function cljs$pprint$tokens_fit_QMARK_(this$, tokens) {
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  return maxcol == null || cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))) + cljs.pprint.buffer_length.call(null, tokens) < maxcol;
};
cljs.pprint.linear_nl_QMARK_ = function cljs$pprint$linear_nl_QMARK_(this$, lb, section) {
  var or__6210__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    return cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, section));
  }
};
cljs.pprint.miser_nl_QMARK_ = function cljs$pprint$miser_nl_QMARK_(this$, lb, section) {
  var miser_width = cljs.pprint.get_miser_width.call(null, this$);
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  var and__6198__auto__ = miser_width;
  if (cljs.core.truth_(and__6198__auto__)) {
    var and__6198__auto____$1 = maxcol;
    if (cljs.core.truth_(and__6198__auto____$1)) {
      var and__6198__auto____$2 = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb)) >= maxcol - miser_width;
      if (and__6198__auto____$2) {
        return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
      } else {
        return and__6198__auto____$2;
      }
    } else {
      return and__6198__auto____$1;
    }
  } else {
    return and__6198__auto__;
  }
};
if (typeof cljs.pprint.emit_nl_QMARK_ !== "undefined") {
} else {
  cljs.pprint.emit_nl_QMARK_ = function() {
    var method_table__7135__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__7136__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__7137__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__7138__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__7139__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "emit-nl?"), function(method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__, hierarchy__7139__auto__) {
      return function(t, _, ___$1, ___$2) {
        return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(t);
      };
    }(method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__, hierarchy__7139__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__7139__auto__, method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "linear", "linear", 872268697), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "miser", "miser", -556060186), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "fill", "fill", 883462889), function(newl, this$, section, subsection) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  var or__6210__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    var or__6210__auto____$1 = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, subsection));
    if (or__6210__auto____$1) {
      return or__6210__auto____$1;
    } else {
      return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
    }
  }
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), function(_, ___$1, ___$2, ___$3) {
  return true;
});
cljs.pprint.get_section = function cljs$pprint$get_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(nl, lb) {
    return function(p1__14530_SHARP_) {
      return cljs.core.not.call(null, function() {
        var and__6198__auto__ = cljs.pprint.nl_t_QMARK_.call(null, p1__14530_SHARP_);
        if (cljs.core.truth_(and__6198__auto__)) {
          return cljs.pprint.ancestor_QMARK_.call(null, (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__14530_SHARP_), lb);
        } else {
          return and__6198__auto__;
        }
      }());
    };
  }(nl, lb), cljs.core.next.call(null, buffer)));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [section, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, section) + 1, buffer))], null);
};
cljs.pprint.get_sub_section = function cljs$pprint$get_sub_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(nl, lb) {
    return function(p1__14531_SHARP_) {
      var nl_lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__14531_SHARP_);
      return cljs.core.not.call(null, function() {
        var and__6198__auto__ = cljs.pprint.nl_t_QMARK_.call(null, p1__14531_SHARP_);
        if (cljs.core.truth_(and__6198__auto__)) {
          var or__6210__auto__ = cljs.core._EQ_.call(null, nl_lb, lb);
          if (or__6210__auto__) {
            return or__6210__auto__;
          } else {
            return cljs.pprint.ancestor_QMARK_.call(null, nl_lb, lb);
          }
        } else {
          return and__6198__auto__;
        }
      }());
    };
  }(nl, lb), cljs.core.next.call(null, buffer)));
  return section;
};
cljs.pprint.update_nl_state = function cljs$pprint$update_nl_state(lb) {
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb), true);
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb), true);
  var lb__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb);
  while (true) {
    if (cljs.core.truth_(lb__$1)) {
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      var G__14532 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb__$1);
      lb__$1 = G__14532;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.emit_nl = function cljs$pprint$emit_nl(this$, nl) {
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(prefix)) {
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
  } else {
  }
  var istr_14533 = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb)) - cljs.core.count.call(null, prefix), " "));
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), istr_14533);
  return cljs.pprint.update_nl_state.call(null, lb);
};
cljs.pprint.split_at_newline = function cljs$pprint$split_at_newline(tokens) {
  var pre = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(p1__14534_SHARP_) {
    return cljs.core.not.call(null, cljs.pprint.nl_t_QMARK_.call(null, p1__14534_SHARP_));
  }, tokens));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pre, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, pre), tokens))], null);
};
cljs.pprint.write_token_string = function cljs$pprint$write_token_string(this$, tokens) {
  var vec__14541 = cljs.pprint.split_at_newline.call(null, tokens);
  var a = cljs.core.nth.call(null, vec__14541, 0, null);
  var b = cljs.core.nth.call(null, vec__14541, 1, null);
  if (cljs.core.truth_(a)) {
    cljs.pprint.write_tokens.call(null, this$, a, false);
  } else {
  }
  if (cljs.core.truth_(b)) {
    var vec__14544 = cljs.pprint.get_section.call(null, b);
    var section = cljs.core.nth.call(null, vec__14544, 0, null);
    var remainder = cljs.core.nth.call(null, vec__14544, 1, null);
    var newl = cljs.core.first.call(null, b);
    var do_nl = cljs.pprint.emit_nl_QMARK_.call(null, newl, this$, section, cljs.pprint.get_sub_section.call(null, b));
    var result = cljs.core.truth_(do_nl) ? function() {
      cljs.pprint.emit_nl.call(null, this$, newl);
      return cljs.core.next.call(null, b);
    }() : b;
    var long_section = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, result));
    var result__$1 = long_section ? function() {
      var rem2 = cljs$pprint$write_token_string.call(null, this$, section);
      if (cljs.core._EQ_.call(null, rem2, section)) {
        cljs.pprint.write_tokens.call(null, this$, section, false);
        return remainder;
      } else {
        return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.concat.call(null, rem2, remainder));
      }
    }() : result;
    return result__$1;
  } else {
    return null;
  }
};
cljs.pprint.write_line = function cljs$pprint$write_line(this$) {
  var buffer = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  while (true) {
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, buffer));
    if (cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, buffer))) {
      var new_buffer = cljs.pprint.write_token_string.call(null, this$, buffer);
      if (!(buffer === new_buffer)) {
        var G__14547 = new_buffer;
        buffer = G__14547;
        continue;
      } else {
        return null;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.add_to_buffer = function cljs$pprint$add_to_buffer(this$, token) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), token));
  if (cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))))) {
    return cljs.pprint.write_line.call(null, this$);
  } else {
    return null;
  }
};
cljs.pprint.write_buffered_output = function cljs$pprint$write_buffered_output(this$) {
  cljs.pprint.write_line.call(null, this$);
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var buf = temp__4423__auto__;
    cljs.pprint.write_tokens.call(null, this$, buf, true);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
  } else {
    return null;
  }
};
cljs.pprint.write_white_space = function cljs$pprint$write_white_space(this$) {
  var temp__4425__auto__ = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4425__auto__)) {
    var tws = temp__4425__auto__;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  } else {
    return null;
  }
};
cljs.pprint.write_initial_lines = function cljs$pprint$write_initial_lines(this$, s) {
  var lines = clojure.string.split.call(null, s, "\n", -1);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, lines), 1)) {
    return s;
  } else {
    var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))));
    var l = cljs.core.first.call(null, lines);
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))))) {
      var oldpos_14556 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos_14557 = oldpos_14556 + cljs.core.count.call(null, l);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_14557);
      cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, l, null, oldpos_14556, newpos_14557));
      cljs.pprint.write_buffered_output.call(null, this$);
    } else {
      cljs.pprint.write_white_space.call(null, this$);
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l);
    }
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), "\n");
    var seq__14552_14558 = cljs.core.seq.call(null, cljs.core.next.call(null, cljs.core.butlast.call(null, lines)));
    var chunk__14553_14559 = null;
    var count__14554_14560 = 0;
    var i__14555_14561 = 0;
    while (true) {
      if (i__14555_14561 < count__14554_14560) {
        var l_14562__$1 = cljs.core._nth.call(null, chunk__14553_14559, i__14555_14561);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_14562__$1);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
        if (cljs.core.truth_(prefix)) {
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
        } else {
        }
        var G__14563 = seq__14552_14558;
        var G__14564 = chunk__14553_14559;
        var G__14565 = count__14554_14560;
        var G__14566 = i__14555_14561 + 1;
        seq__14552_14558 = G__14563;
        chunk__14553_14559 = G__14564;
        count__14554_14560 = G__14565;
        i__14555_14561 = G__14566;
        continue;
      } else {
        var temp__4425__auto___14567 = cljs.core.seq.call(null, seq__14552_14558);
        if (temp__4425__auto___14567) {
          var seq__14552_14568__$1 = temp__4425__auto___14567;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__14552_14568__$1)) {
            var c__7021__auto___14569 = cljs.core.chunk_first.call(null, seq__14552_14568__$1);
            var G__14570 = cljs.core.chunk_rest.call(null, seq__14552_14568__$1);
            var G__14571 = c__7021__auto___14569;
            var G__14572 = cljs.core.count.call(null, c__7021__auto___14569);
            var G__14573 = 0;
            seq__14552_14558 = G__14570;
            chunk__14553_14559 = G__14571;
            count__14554_14560 = G__14572;
            i__14555_14561 = G__14573;
            continue;
          } else {
            var l_14574__$1 = cljs.core.first.call(null, seq__14552_14568__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_14574__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
            if (cljs.core.truth_(prefix)) {
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
            } else {
            }
            var G__14575 = cljs.core.next.call(null, seq__14552_14568__$1);
            var G__14576 = null;
            var G__14577 = 0;
            var G__14578 = 0;
            seq__14552_14558 = G__14575;
            chunk__14553_14559 = G__14576;
            count__14554_14560 = G__14577;
            i__14555_14561 = G__14578;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), new cljs.core.Keyword(null, "writing", "writing", -1486865108));
    return cljs.core.last.call(null, lines);
  }
};
cljs.pprint.p_write_char = function cljs$pprint$p_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), c);
  } else {
    if (cljs.core._EQ_.call(null, c, "\n")) {
      return cljs.pprint.write_initial_lines.call(null, this$, "\n");
    } else {
      var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos = oldpos + 1;
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
      return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, cljs.core.char$.call(null, c), null, oldpos, newpos));
    }
  }
};
cljs.pprint.pretty_writer = function cljs$pprint$pretty_writer(writer, max_columns, miser_width) {
  var lb = new cljs.pprint.logical_block(null, null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), null, null, null, null, null, null, null);
  var fields = cljs.core.atom.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "buffer-block", "buffer-block", -10937307), new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267), new cljs.core.Keyword(null, "sections", "sections", -886710106), new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.Keyword(null, "buffer-level", "buffer-level", 928864731), new cljs.core.Keyword(null, "buffer", "buffer", 617295198)], [lb, miser_width, lb, true, null, new cljs.core.Keyword(null, "writing", "writing", -1486865108), 0, null, cljs.pprint.column_writer.call(null, writer, max_columns), 1, cljs.core.PersistentVector.EMPTY]));
  if (typeof cljs.pprint.t_cljs$pprint14585 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint14585 = function(pretty_writer, writer, max_columns, miser_width, lb, fields, meta14586) {
      this.pretty_writer = pretty_writer;
      this.writer = writer;
      this.max_columns = max_columns;
      this.miser_width = miser_width;
      this.lb = lb;
      this.fields = fields;
      this.meta14586 = meta14586;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint14585.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(lb, fields) {
      return function(_14587, meta14586__$1) {
        var self__ = this;
        var _14587__$1 = this;
        return new cljs.pprint.t_cljs$pprint14585(self__.pretty_writer, self__.writer, self__.max_columns, self__.miser_width, self__.lb, self__.fields, meta14586__$1);
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint14585.prototype.cljs$core$IMeta$_meta$arity$1 = function(lb, fields) {
      return function(_14587) {
        var self__ = this;
        var _14587__$1 = this;
        return self__.meta14586;
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint14585.prototype.cljs$core$IDeref$_deref$arity$1 = function(lb, fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint14585.prototype.cljs$core$IWriter$_write$arity$2 = function(lb, fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__14588 = cljs.core._EQ_;
        var expr__14589 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__14588.call(null, String, expr__14589))) {
          var s0 = cljs.pprint.write_initial_lines.call(null, this$__$1, x);
          var s = clojure.string.replace_first.call(null, s0, /\s+$/, "");
          var white_space = cljs.core.subs.call(null, s0, cljs.core.count.call(null, s));
          var mode = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
          if (cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
            cljs.pprint.write_white_space.call(null, this$__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), s);
            return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), white_space);
          } else {
            var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
            var newpos = oldpos + cljs.core.count.call(null, s0);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
            return cljs.pprint.add_to_buffer.call(null, this$__$1, cljs.pprint.make_buffer_blob.call(null, s, white_space, oldpos, newpos));
          }
        } else {
          if (cljs.core.truth_(pred__14588.call(null, Number, expr__14589))) {
            return cljs.pprint.p_write_char.call(null, this$__$1, x);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__14589)].join(""));
          }
        }
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint14585.prototype.cljs$core$IWriter$_flush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        cljs.pprint._ppflush.call(null, this$__$1);
        return cljs.core._flush.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))));
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint14585.prototype.cljs$pprint$IPrettyFlush$ = true;
    cljs.pprint.t_cljs$pprint14585.prototype.cljs$pprint$IPrettyFlush$_ppflush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), new cljs.core.Keyword(null, "buffering", "buffering", -876713613))) {
          cljs.pprint.write_tokens.call(null, this$__$1, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), true);
          return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
        } else {
          return cljs.pprint.write_white_space.call(null, this$__$1);
        }
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint14585.getBasis = function(lb, fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "pretty-writer", "pretty-writer", 417697260, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null)], null)))], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null), 
        new cljs.core.Symbol(null, "lb", "lb", 950310490, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta14586", "meta14586", 1551660732, null)], null);
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint14585.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint14585.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint14585";
    cljs.pprint.t_cljs$pprint14585.cljs$lang$ctorPrWriter = function(lb, fields) {
      return function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
        return cljs.core._write.call(null, writer__6817__auto__, "cljs.pprint/t_cljs$pprint14585");
      };
    }(lb, fields);
    cljs.pprint.__GT_t_cljs$pprint14585 = function(lb, fields) {
      return function cljs$pprint$pretty_writer_$___GT_t_cljs$pprint14585(pretty_writer__$1, writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta14586) {
        return new cljs.pprint.t_cljs$pprint14585(pretty_writer__$1, writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta14586);
      };
    }(lb, fields);
  }
  return new cljs.pprint.t_cljs$pprint14585(cljs$pprint$pretty_writer, writer, max_columns, miser_width, lb, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.start_block = function cljs$pprint$start_block(this$, prefix, per_line_prefix, suffix) {
  var lb = new cljs.pprint.logical_block((new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), prefix, per_line_prefix, suffix, null, null, null, null);
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    var temp__4425__auto___14591 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4425__auto___14591)) {
      var cb_14592 = temp__4425__auto___14591;
      cb_14592.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
    } else {
    }
    if (cljs.core.truth_(prefix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
    } else {
    }
    var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
    cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
  } else {
    var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos = oldpos + (cljs.core.truth_(prefix) ? cljs.core.count.call(null, prefix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_start_block_t.call(null, lb, oldpos, newpos));
  }
};
cljs.pprint.end_block = function cljs$pprint$end_block(this$) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  var suffix = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    if (cljs.core.truth_(suffix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
    } else {
    }
    var temp__4425__auto___14593 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4425__auto___14593)) {
      var cb_14594 = temp__4425__auto___14593;
      cb_14594.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
    } else {
    }
  } else {
    var oldpos_14595 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos_14596 = oldpos_14595 + (cljs.core.truth_(suffix) ? cljs.core.count.call(null, suffix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_14596);
    cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_end_block_t.call(null, lb, oldpos_14595, newpos_14596));
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb));
};
cljs.pprint.nl = function cljs$pprint$nl(this$, type) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "buffering", "buffering", -876713613));
  var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_nl_t.call(null, type, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), pos, pos));
};
cljs.pprint.indent = function cljs$pprint$indent(this$, relative_to, offset) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), offset + function() {
      var pred__14600 = cljs.core._EQ_;
      var expr__14601 = relative_to;
      if (cljs.core.truth_(pred__14600.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__14601))) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
      } else {
        if (cljs.core.truth_(pred__14600.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__14601))) {
          return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__14601)].join(""));
        }
      }
    }());
  } else {
    var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_indent_t.call(null, lb, relative_to, offset, pos, pos));
  }
};
cljs.pprint.get_miser_width = function cljs$pprint$get_miser_width(this$) {
  return (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint._STAR_print_pretty_STAR_ = true;
if (typeof cljs.pprint._STAR_print_pprint_dispatch_STAR_ !== "undefined") {
} else {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = null;
}
cljs.pprint._STAR_print_right_margin_STAR_ = 72;
cljs.pprint._STAR_print_miser_width_STAR_ = 40;
cljs.pprint._STAR_print_lines_STAR_ = null;
cljs.pprint._STAR_print_circle_STAR_ = null;
cljs.pprint._STAR_print_shared_STAR_ = null;
cljs.pprint._STAR_print_suppress_namespaces_STAR_ = null;
cljs.pprint._STAR_print_radix_STAR_ = null;
cljs.pprint._STAR_print_base_STAR_ = 10;
cljs.pprint._STAR_current_level_STAR_ = 0;
cljs.pprint._STAR_current_length_STAR_ = null;
cljs.pprint.write_option_table = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306), new cljs.core.Keyword(null, "circle", "circle", 1903212362), new cljs.core.Keyword(null, "lines", "lines", -700165781), new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956), new cljs.core.Keyword(null, "radix", "radix", 857016463), new cljs.core.Keyword(null, 
"level", "level", 1290497552), new cljs.core.Keyword(null, "readably", "readably", 1129599760), new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009), new cljs.core.Keyword(null, "length", "length", 588987862), new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), new cljs.core.Keyword(null, "base", "base", 185279322)], [new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_miser_width_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-miser-width*", "cljs.pprint/*print-miser-width*", 1588913450, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-miser-width*", "*print-miser-width*", 
1206624211, null), "/home/kenneth/rube/target/cljsbuild-compiler-3/cljs/pprint.cljs", 21, 1, true, 632, 637, cljs.core.List.EMPTY, "The column at which to enter miser style. Depending on the dispatch table,\nmiser style add newlines in more places to try to keep lines short allowing for further\nlevels of nesting.", cljs.core.truth_(cljs.pprint._STAR_print_miser_width_STAR_) ? cljs.pprint._STAR_print_miser_width_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_right_margin_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-right-margin*", "cljs.pprint/*print-right-margin*", -56183119, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-right-margin*", "*print-right-margin*", 
-437272454, null), "/home/kenneth/rube/target/cljsbuild-compiler-3/cljs/pprint.cljs", 22, 1, true, 625, 630, cljs.core.List.EMPTY, "Pretty printing will try to avoid anything going beyond this column.\nSet it to nil to have pprint let the line be arbitrarily long. This will ignore all\nnon-mandatory newlines.", cljs.core.truth_(cljs.pprint._STAR_print_right_margin_STAR_) ? cljs.pprint._STAR_print_right_margin_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_circle_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-circle*", "cljs.pprint/*print-circle*", 1606185849, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-circle*", "*print-circle*", 
1148404994, null), "/home/kenneth/rube/target/cljsbuild-compiler-3/cljs/pprint.cljs", 15, 1, true, 646, 649, cljs.core.List.EMPTY, "Mark circular structures (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_circle_STAR_) ? cljs.pprint._STAR_print_circle_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_lines_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-lines*", "cljs.pprint/*print-lines*", 534683484, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-lines*", "*print-lines*", 
75920659, null), "/home/kenneth/rube/target/cljsbuild-compiler-3/cljs/pprint.cljs", 14, 1, true, 640, 643, cljs.core.List.EMPTY, "Maximum number of lines to print in a pretty print instance (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_lines_STAR_) ? cljs.pprint._STAR_print_lines_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_suppress_namespaces_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-suppress-namespaces*", "cljs.pprint/*print-suppress-namespaces*", 1649488204, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", 
"column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-suppress-namespaces*", 
"*print-suppress-namespaces*", 1795828355, null), "/home/kenneth/rube/target/cljsbuild-compiler-3/cljs/pprint.cljs", 28, 1, true, 657, 661, cljs.core.List.EMPTY, "Don't print namespaces with symbols. This is particularly useful when\npretty printing the results of macro expansions", cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_) ? cljs.pprint._STAR_print_suppress_namespaces_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_radix_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-radix*", "cljs.pprint/*print-radix*", 1558253641, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-radix*", "*print-radix*", 1168517744, null), "/home/kenneth/rube/target/cljsbuild-compiler-3/cljs/pprint.cljs", 
14, 1, true, 665, 670, cljs.core.List.EMPTY, "Print a radix specifier in front of integers and rationals. If *print-base* is 2, 8,\nor 16, then the radix specifier used is #b, #o, or #x, respectively. Otherwise the\nradix specifier is in the form #XXr where XX is the decimal value of *print-base* ", cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? cljs.pprint._STAR_print_radix_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_level_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-level*", "cljs.core/*print-level*", 65848482, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "jsdoc", "jsdoc", 1745183516), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-level*", "*print-level*", -634488505, null), "cljs/core.cljs", 16, 
1, true, 117, 128, cljs.core.List.EMPTY, "*print-level* controls how many levels deep the printer will\n  print nested objects. If it is bound to logical false, there is no\n  limit. Otherwise, it must be bound to an integer indicating the maximum\n  level to print. Each argument to print is at level 0; if an argument is a\n  collection, its items are at level 1; and so on. If an object is a\n  collection and is at a level greater than or equal to the value bound to\n  *print-level*, the printer prints '#' to represent it. The root binding\n  is nil indicating no limit.", 
new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["@type {null|number}"], null), cljs.core.truth_(cljs.core._STAR_print_level_STAR_) ? cljs.core._STAR_print_level_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_readably_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-readably*", "cljs.core/*print-readably*", -354670250, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-readably*", "*print-readably*", -761361221, null), "cljs/core.cljs", 19, 1, true, 81, 87, cljs.core.List.EMPTY, 
"When set to logical false, strings and characters will be printed with\n  non-alphanumeric characters converted to the appropriate escape sequences.\n\n  Defaults to true", cljs.core.truth_(cljs.core._STAR_print_readably_STAR_) ? cljs.core._STAR_print_readably_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pprint_dispatch_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pprint-dispatch*", "cljs.pprint/*print-pprint-dispatch*", -1820734013, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pprint-dispatch*", 
"*print-pprint-dispatch*", -1709114492, null), "/home/kenneth/rube/target/cljsbuild-compiler-3/cljs/pprint.cljs", 25, 1, true, 619, 623, cljs.core.List.EMPTY, "The pretty print dispatch function. Use with-pprint-dispatch or\nset-pprint-dispatch to modify.", cljs.core.truth_(cljs.pprint._STAR_print_pprint_dispatch_STAR_) ? cljs.pprint._STAR_print_pprint_dispatch_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_length_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-length*", "cljs.core/*print-length*", -20766927, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "jsdoc", "jsdoc", 1745183516), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-length*", "*print-length*", -687693654, null), "cljs/core.cljs", 
17, 1, true, 105, 115, cljs.core.List.EMPTY, "*print-length* controls how many items of each collection the\n  printer will print. If it is bound to logical false, there is no\n  limit. Otherwise, it must be bound to an integer indicating the maximum\n  number of items of each collection to print. If a collection contains\n  more items, the printer will print items up to the limit followed by\n  '...' to represent the remaining items. The root binding is nil\n  indicating no limit.", new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["@type {null|number}"], null), cljs.core.truth_(cljs.core._STAR_print_length_STAR_) ? cljs.core._STAR_print_length_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pretty_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pretty*", "cljs.pprint/*print-pretty*", -762636861, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pretty*", "*print-pretty*", 726795140, null), "/home/kenneth/rube/target/cljsbuild-compiler-3/cljs/pprint.cljs", 
16, 1, true, 615, 617, cljs.core.List.EMPTY, "Bind to true if you want write to use pretty printing", cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_) ? cljs.pprint._STAR_print_pretty_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_base_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-base*", "cljs.pprint/*print-base*", 1887526790, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-base*", "*print-base*", 2037937791, null), "/home/kenneth/rube/target/cljsbuild-compiler-3/cljs/pprint.cljs", 
13, 1, true, 672, 675, cljs.core.List.EMPTY, "The base to use for printing integers and rationals.", cljs.core.truth_(cljs.pprint._STAR_print_base_STAR_) ? cljs.pprint._STAR_print_base_STAR_.cljs$lang$test : null]))]);
cljs.pprint.table_ize = function cljs$pprint$table_ize(t, m) {
  return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p1__14603_SHARP_) {
    var temp__4425__auto__ = cljs.core.get.call(null, t, cljs.core.key.call(null, p1__14603_SHARP_));
    if (cljs.core.truth_(temp__4425__auto__)) {
      var v = temp__4425__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, cljs.core.val.call(null, p1__14603_SHARP_)], null);
    } else {
      return null;
    }
  }, m));
};
cljs.pprint.pretty_writer_QMARK_ = function cljs$pprint$pretty_writer_QMARK_(x) {
  var and__6198__auto__ = !(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 32768 || x.cljs$core$IDeref$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x);
  if (and__6198__auto__) {
    return (new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, x)));
  } else {
    return and__6198__auto__;
  }
};
cljs.pprint.make_pretty_writer = function cljs$pprint$make_pretty_writer(base_writer, right_margin, miser_width) {
  return cljs.pprint.pretty_writer.call(null, base_writer, right_margin, miser_width);
};
cljs.pprint.write_out = function cljs$pprint$write_out(object) {
  var length_reached = function() {
    var and__6198__auto__ = cljs.pprint._STAR_current_length_STAR_;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = cljs.core._STAR_print_length_STAR_;
      if (cljs.core.truth_(and__6198__auto____$1)) {
        return cljs.pprint._STAR_current_length_STAR_ >= cljs.core._STAR_print_length_STAR_;
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }();
  if (cljs.core.not.call(null, cljs.pprint._STAR_print_pretty_STAR_)) {
    cljs.pprint.pr.call(null, object);
  } else {
    if (cljs.core.truth_(length_reached)) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
    } else {
      if (cljs.core.truth_(cljs.pprint._STAR_current_length_STAR_)) {
        cljs.pprint._STAR_current_length_STAR_ = cljs.pprint._STAR_current_length_STAR_ + 1;
      } else {
      }
      cljs.pprint._STAR_print_pprint_dispatch_STAR_.call(null, object);
    }
  }
  return length_reached;
};
cljs.pprint.write = function cljs$pprint$write(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___14624 = arguments.length;
  var i__7286__auto___14625 = 0;
  while (true) {
    if (i__7286__auto___14625 < len__7285__auto___14624) {
      args__7292__auto__.push(arguments[i__7286__auto___14625]);
      var G__14626 = i__7286__auto___14625 + 1;
      i__7286__auto___14625 = G__14626;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 1 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(1), 0, null) : null;
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7293__auto__);
};
cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic = function(object, kw_args) {
  var options = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "stream", "stream", 1534941648), true], null), cljs.core.apply.call(null, cljs.core.hash_map, kw_args));
  var _STAR_print_base_STAR_14610 = cljs.pprint._STAR_print_base_STAR_;
  var _STAR_print_circle_STAR_14611 = cljs.pprint._STAR_print_circle_STAR_;
  var _STAR_print_length_STAR_14612 = cljs.core._STAR_print_length_STAR_;
  var _STAR_print_level_STAR_14613 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_lines_STAR_14614 = cljs.pprint._STAR_print_lines_STAR_;
  var _STAR_print_miser_width_STAR_14615 = cljs.pprint._STAR_print_miser_width_STAR_;
  var _STAR_print_pprint_dispatch_STAR_14616 = cljs.pprint._STAR_print_pprint_dispatch_STAR_;
  var _STAR_print_pretty_STAR_14617 = cljs.pprint._STAR_print_pretty_STAR_;
  var _STAR_print_radix_STAR_14618 = cljs.pprint._STAR_print_radix_STAR_;
  var _STAR_print_readably_STAR_14619 = cljs.core._STAR_print_readably_STAR_;
  var _STAR_print_right_margin_STAR_14620 = cljs.pprint._STAR_print_right_margin_STAR_;
  var _STAR_print_suppress_namespaces_STAR_14621 = cljs.pprint._STAR_print_suppress_namespaces_STAR_;
  cljs.pprint._STAR_print_base_STAR_ = (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_base_STAR_);
  cljs.pprint._STAR_print_circle_STAR_ = (new cljs.core.Keyword(null, "circle", "circle", 1903212362)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_circle_STAR_);
  cljs.core._STAR_print_length_STAR_ = (new cljs.core.Keyword(null, "length", "length", 588987862)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_length_STAR_);
  cljs.core._STAR_print_level_STAR_ = (new cljs.core.Keyword(null, "level", "level", 1290497552)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_level_STAR_);
  cljs.pprint._STAR_print_lines_STAR_ = (new cljs.core.Keyword(null, "lines", "lines", -700165781)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_lines_STAR_);
  cljs.pprint._STAR_print_miser_width_STAR_ = (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_miser_width_STAR_);
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = (new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pprint_dispatch_STAR_);
  cljs.pprint._STAR_print_pretty_STAR_ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pretty_STAR_);
  cljs.pprint._STAR_print_radix_STAR_ = (new cljs.core.Keyword(null, "radix", "radix", 857016463)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_radix_STAR_);
  cljs.core._STAR_print_readably_STAR_ = (new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_readably_STAR_);
  cljs.pprint._STAR_print_right_margin_STAR_ = (new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_right_margin_STAR_);
  cljs.pprint._STAR_print_suppress_namespaces_STAR_ = (new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_suppress_namespaces_STAR_);
  try {
    try {
      var sb = new goog.string.StringBuffer;
      var optval = cljs.core.contains_QMARK_.call(null, options, new cljs.core.Keyword(null, "stream", "stream", 1534941648)) ? (new cljs.core.Keyword(null, "stream", "stream", 1534941648)).cljs$core$IFn$_invoke$arity$1(options) : true;
      var base_writer = optval === true || optval == null ? new cljs.core.StringBufferWriter(sb) : optval;
      if (cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_)) {
        var base_writer__14148__auto___14627 = base_writer;
        var new_writer__14149__auto___14628 = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__14148__auto___14627));
        var _STAR_out_STAR_14622_14629 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = new_writer__14149__auto___14628 ? cljs.pprint.make_pretty_writer.call(null, base_writer__14148__auto___14627, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__14148__auto___14627;
        try {
          cljs.pprint.write_out.call(null, object);
          cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_14622_14629;
        }
      } else {
        var _STAR_out_STAR_14623_14630 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = base_writer;
        try {
          cljs.pprint.pr.call(null, object);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_14623_14630;
        }
      }
      if (optval === true) {
        cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
      } else {
      }
      if (optval == null) {
        return [cljs.core.str(sb)].join("");
      } else {
        return null;
      }
    } finally {
    }
  } finally {
    cljs.pprint._STAR_print_suppress_namespaces_STAR_ = _STAR_print_suppress_namespaces_STAR_14621;
    cljs.pprint._STAR_print_right_margin_STAR_ = _STAR_print_right_margin_STAR_14620;
    cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR_14619;
    cljs.pprint._STAR_print_radix_STAR_ = _STAR_print_radix_STAR_14618;
    cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR_14617;
    cljs.pprint._STAR_print_pprint_dispatch_STAR_ = _STAR_print_pprint_dispatch_STAR_14616;
    cljs.pprint._STAR_print_miser_width_STAR_ = _STAR_print_miser_width_STAR_14615;
    cljs.pprint._STAR_print_lines_STAR_ = _STAR_print_lines_STAR_14614;
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_14613;
    cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR_14612;
    cljs.pprint._STAR_print_circle_STAR_ = _STAR_print_circle_STAR_14611;
    cljs.pprint._STAR_print_base_STAR_ = _STAR_print_base_STAR_14610;
  }
};
cljs.pprint.write.cljs$lang$maxFixedArity = 1;
cljs.pprint.write.cljs$lang$applyTo = function(seq14608) {
  var G__14609 = cljs.core.first.call(null, seq14608);
  var seq14608__$1 = cljs.core.next.call(null, seq14608);
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(G__14609, seq14608__$1);
};
cljs.pprint.pprint = function cljs$pprint$pprint(var_args) {
  var args14631 = [];
  var len__7285__auto___14637 = arguments.length;
  var i__7286__auto___14638 = 0;
  while (true) {
    if (i__7286__auto___14638 < len__7285__auto___14637) {
      args14631.push(arguments[i__7286__auto___14638]);
      var G__14639 = i__7286__auto___14638 + 1;
      i__7286__auto___14638 = G__14639;
      continue;
    } else {
    }
    break;
  }
  var G__14633 = args14631.length;
  switch(G__14633) {
    case 1:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14631.length)].join(""));;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1 = function(object) {
  var sb = new goog.string.StringBuffer;
  var _STAR_out_STAR_14634 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(sb);
  try {
    cljs.pprint.pprint.call(null, object, cljs.core._STAR_out_STAR_);
    return cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_14634;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2 = function(object, writer) {
  var base_writer__14148__auto__ = writer;
  var new_writer__14149__auto__ = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__14148__auto__));
  var _STAR_out_STAR_14635 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new_writer__14149__auto__ ? cljs.pprint.make_pretty_writer.call(null, base_writer__14148__auto__, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__14148__auto__;
  try {
    var _STAR_print_pretty_STAR_14636_14641 = cljs.pprint._STAR_print_pretty_STAR_;
    cljs.pprint._STAR_print_pretty_STAR_ = true;
    try {
      cljs.pprint.write_out.call(null, object);
    } finally {
      cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR_14636_14641;
    }
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, cljs.core._STAR_out_STAR_))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
    } else {
    }
    return cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_14635;
  }
};
cljs.pprint.pprint.cljs$lang$maxFixedArity = 2;
cljs.pprint.set_pprint_dispatch = function cljs$pprint$set_pprint_dispatch(function$) {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = function$;
  return null;
};
cljs.pprint.check_enumerated_arg = function cljs$pprint$check_enumerated_arg(arg, choices) {
  if (cljs.core.not.call(null, choices.call(null, arg))) {
    throw new Error([cljs.core.str("Bad argument: "), cljs.core.str(arg), cljs.core.str(". It must be one of "), cljs.core.str(choices)].join(""));
  } else {
    return null;
  }
};
cljs.pprint.level_exceeded = function cljs$pprint$level_exceeded() {
  var and__6198__auto__ = cljs.core._STAR_print_level_STAR_;
  if (cljs.core.truth_(and__6198__auto__)) {
    return cljs.pprint._STAR_current_level_STAR_ >= cljs.core._STAR_print_level_STAR_;
  } else {
    return and__6198__auto__;
  }
};
cljs.pprint.pprint_newline = function cljs$pprint$pprint_newline(kind) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), null, new cljs.core.Keyword(null, "miser", "miser", -556060186), null, new cljs.core.Keyword(null, "fill", "fill", 883462889), null, new cljs.core.Keyword(null, "linear", "linear", 872268697), null], null), null));
  return cljs.pprint.nl.call(null, cljs.core._STAR_out_STAR_, kind);
};
cljs.pprint.pprint_indent = function cljs$pprint$pprint_indent(relative_to, n) {
  cljs.pprint.check_enumerated_arg.call(null, relative_to, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "block", "block", 664686210), null, new cljs.core.Keyword(null, "current", "current", -1088038603), null], null), null));
  return cljs.pprint.indent.call(null, cljs.core._STAR_out_STAR_, relative_to, n);
};
cljs.pprint.pprint_tab = function cljs$pprint$pprint_tab(kind, colnum, colinc) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "line", "line", 212345235), null, new cljs.core.Keyword(null, "line-relative", "line-relative", 1149548219), null, new cljs.core.Keyword(null, "section-relative", "section-relative", -658298724), null], null), null));
  throw new Error("pprint-tab is not yet implemented");
};
cljs.pprint.cl_format = function cljs$pprint$cl_format(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___14645 = arguments.length;
  var i__7286__auto___14646 = 0;
  while (true) {
    if (i__7286__auto___14646 < len__7285__auto___14645) {
      args__7292__auto__.push(arguments[i__7286__auto___14646]);
      var G__14647 = i__7286__auto___14646 + 1;
      i__7286__auto___14646 = G__14647;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic = function(writer, format_in, args) {
  var compiled_format = typeof format_in === "string" ? cljs.pprint.compile_format.call(null, format_in) : format_in;
  var navigator = cljs.pprint.init_navigator.call(null, args);
  return cljs.pprint.execute_format.call(null, writer, compiled_format, navigator);
};
cljs.pprint.cl_format.cljs$lang$maxFixedArity = 2;
cljs.pprint.cl_format.cljs$lang$applyTo = function(seq14642) {
  var G__14643 = cljs.core.first.call(null, seq14642);
  var seq14642__$1 = cljs.core.next.call(null, seq14642);
  var G__14644 = cljs.core.first.call(null, seq14642__$1);
  var seq14642__$2 = cljs.core.next.call(null, seq14642__$1);
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(G__14643, G__14644, seq14642__$2);
};
cljs.pprint._STAR_format_str_STAR_ = null;
cljs.pprint.format_error = function cljs$pprint$format_error(message, offset) {
  var full_message = [cljs.core.str(message), cljs.core.str("\n"), cljs.core.str(cljs.pprint._STAR_format_str_STAR_), cljs.core.str("\n"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, offset, " "))), cljs.core.str("^"), cljs.core.str("\n")].join("");
  throw Error(full_message);
};
cljs.pprint.arg_navigator = function(seq, rest, pos, __meta, __extmap, __hash) {
  this.seq = seq;
  this.rest = rest;
  this.pos = pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k14649, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__14651 = k14649 instanceof cljs.core.Keyword ? k14649.fqn : null;
  switch(G__14651) {
    case "seq":
      return self__.seq;
      break;
    case "rest":
      return self__.rest;
      break;
    case "pos":
      return self__.pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k14649, else__6835__auto__);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#cljs.pprint.arg-navigator{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$ = true;
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__14648) {
  var self__ = this;
  var G__14648__$1 = this;
  return new cljs.core.RecordIter(0, G__14648__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "pos", "pos", -864607220), null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__14648) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__14652 = cljs.core.keyword_identical_QMARK_;
  var expr__14653 = k__6840__auto__;
  if (cljs.core.truth_(pred__14652.call(null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), expr__14653))) {
    return new cljs.pprint.arg_navigator(G__14648, self__.rest, self__.pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__14652.call(null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), expr__14653))) {
      return new cljs.pprint.arg_navigator(self__.seq, G__14648, self__.pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__14652.call(null, new cljs.core.Keyword(null, "pos", "pos", -864607220), expr__14653))) {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, G__14648, self__.__meta, self__.__extmap, null);
      } else {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__14648), null);
      }
    }
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__14648) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, G__14648, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
cljs.pprint.arg_navigator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "pos", "pos", 775924307, null)], null);
};
cljs.pprint.arg_navigator.cljs$lang$type = true;
cljs.pprint.arg_navigator.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/arg-navigator");
};
cljs.pprint.arg_navigator.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "cljs.pprint/arg-navigator");
};
cljs.pprint.__GT_arg_navigator = function cljs$pprint$__GT_arg_navigator(seq, rest, pos) {
  return new cljs.pprint.arg_navigator(seq, rest, pos, null, null, null);
};
cljs.pprint.map__GT_arg_navigator = function cljs$pprint$map__GT_arg_navigator(G__14650) {
  return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(G__14650), (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(G__14650), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(G__14650), null, cljs.core.dissoc.call(null, G__14650, new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220)), null);
};
cljs.pprint.init_navigator = function cljs$pprint$init_navigator(s) {
  var s__$1 = cljs.core.seq.call(null, s);
  return new cljs.pprint.arg_navigator(s__$1, s__$1, 0, null, null, null);
};
cljs.pprint.next_arg = function cljs$pprint$next_arg(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    throw Error("Not enough arguments for format definition");
  }
};
cljs.pprint.next_arg_or_nil = function cljs$pprint$next_arg_or_nil(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, navigator], null);
  }
};
cljs.pprint.get_format_arg = function cljs$pprint$get_format_arg(navigator) {
  var vec__14659 = cljs.pprint.next_arg.call(null, navigator);
  var raw_format = cljs.core.nth.call(null, vec__14659, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__14659, 1, null);
  var compiled_format = typeof raw_format === "string" ? cljs.pprint.compile_format.call(null, raw_format) : raw_format;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [compiled_format, navigator__$1], null);
};
cljs.pprint.absolute_reposition = function cljs$pprint$absolute_reposition(navigator, position) {
  if (position >= (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator)) {
    return cljs.pprint.relative_reposition.call(null, navigator, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) - position);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator)), position, null, null, null);
  }
};
cljs.pprint.relative_reposition = function cljs$pprint$relative_reposition(navigator, position) {
  var newpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + position;
  if (position < 0) {
    return cljs.pprint.absolute_reposition.call(null, navigator, newpos);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), newpos, null, null, null);
  }
};
cljs.pprint.compiled_directive = function(func, def, params, offset, __meta, __extmap, __hash) {
  this.func = func;
  this.def = def;
  this.params = params;
  this.offset = offset;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k14663, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__14665 = k14663 instanceof cljs.core.Keyword ? k14663.fqn : null;
  switch(G__14665) {
    case "func":
      return self__.func;
      break;
    case "def":
      return self__.def;
      break;
    case "params":
      return self__.params;
      break;
    case "offset":
      return self__.offset;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k14663, else__6835__auto__);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#cljs.pprint.compiled-directive{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$ = true;
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__14662) {
  var self__ = this;
  var G__14662__$1 = this;
  return new cljs.core.RecordIter(0, G__14662__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "func", "func", -238706040), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "def", "def", -1043430536), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__14662) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__14666 = cljs.core.keyword_identical_QMARK_;
  var expr__14667 = k__6840__auto__;
  if (cljs.core.truth_(pred__14666.call(null, new cljs.core.Keyword(null, "func", "func", -238706040), expr__14667))) {
    return new cljs.pprint.compiled_directive(G__14662, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__14666.call(null, new cljs.core.Keyword(null, "def", "def", -1043430536), expr__14667))) {
      return new cljs.pprint.compiled_directive(self__.func, G__14662, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__14666.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), expr__14667))) {
        return new cljs.pprint.compiled_directive(self__.func, self__.def, G__14662, self__.offset, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__14666.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__14667))) {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, G__14662, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__14662), null);
        }
      }
    }
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__14662) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, G__14662, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
cljs.pprint.compiled_directive.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "func", "func", 1401825487, null), new cljs.core.Symbol(null, "def", "def", 597100991, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null)], null);
};
cljs.pprint.compiled_directive.cljs$lang$type = true;
cljs.pprint.compiled_directive.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/compiled-directive");
};
cljs.pprint.compiled_directive.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "cljs.pprint/compiled-directive");
};
cljs.pprint.__GT_compiled_directive = function cljs$pprint$__GT_compiled_directive(func, def, params, offset) {
  return new cljs.pprint.compiled_directive(func, def, params, offset, null, null, null);
};
cljs.pprint.map__GT_compiled_directive = function cljs$pprint$map__GT_compiled_directive(G__14664) {
  return new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(G__14664), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(G__14664), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(G__14664), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__14664), null, cljs.core.dissoc.call(null, G__14664, new cljs.core.Keyword(null, 
  "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)), null);
};
cljs.pprint.realize_parameter = function cljs$pprint$realize_parameter(p__14670, navigator) {
  var vec__14680 = p__14670;
  var param = cljs.core.nth.call(null, vec__14680, 0, null);
  var vec__14683 = cljs.core.nth.call(null, vec__14680, 1, null);
  var raw_val = cljs.core.nth.call(null, vec__14683, 0, null);
  var offset = cljs.core.nth.call(null, vec__14683, 1, null);
  var vec__14686 = cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), param) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [raw_val, navigator], null) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", 
  -758446196)) ? cljs.pprint.next_arg.call(null, navigator) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), navigator], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [raw_val, navigator], null);
  var real_param = cljs.core.nth.call(null, vec__14686, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__14686, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [real_param, offset], null)], null), new_navigator], null);
};
cljs.pprint.realize_parameter_list = function cljs$pprint$realize_parameter_list(parameter_map, navigator) {
  var vec__14692 = cljs.pprint.map_passing_context.call(null, cljs.pprint.realize_parameter, navigator, parameter_map);
  var pairs = cljs.core.nth.call(null, vec__14692, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__14692, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, pairs), new_navigator], null);
};
cljs.pprint.special_radix_markers = new cljs.core.PersistentArrayMap(null, 3, [2, "#b", 8, "#o", 16, "#x"], null);
cljs.pprint.format_simple_number = function cljs$pprint$format_simple_number(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    if (cljs.core._EQ_.call(null, cljs.pprint._STAR_print_base_STAR_, 10)) {
      return [cljs.core.str(n), cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? "." : null)].join("");
    } else {
      return [cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? function() {
        var or__6210__auto__ = cljs.core.get.call(null, cljs.pprint.special_radix_markers, cljs.pprint._STAR_print_base_STAR_);
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          return [cljs.core.str("#"), cljs.core.str(cljs.pprint._STAR_print_base_STAR_), cljs.core.str("r")].join("");
        }
      }() : null), cljs.core.str(cljs.pprint.opt_base_str.call(null, cljs.pprint._STAR_print_base_STAR_, n))].join("");
    }
  } else {
    return null;
  }
};
cljs.pprint.format_ascii = function cljs$pprint$format_ascii(print_func, params, arg_navigator, offsets) {
  var vec__14698 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__14698, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__14698, 1, null);
  var base_output = function() {
    var or__6210__auto__ = cljs.pprint.format_simple_number.call(null, arg);
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return print_func.call(null, arg);
    }
  }();
  var base_width = base_output.length;
  var min_width = base_width + (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var width = min_width >= (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? min_width : min_width + (cljs.core.quot.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - min_width - 1, (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params)) + 1) * (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var chars = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, width - base_width, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    cljs.pprint.print.call(null, [cljs.core.str(chars), cljs.core.str(base_output)].join(""));
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(base_output), cljs.core.str(chars)].join(""));
  }
  return arg_navigator__$1;
};
cljs.pprint.integral_QMARK_ = function cljs$pprint$integral_QMARK_(x) {
  if (cljs.core.integer_QMARK_.call(null, x)) {
    return true;
  } else {
    if (cljs.pprint.float_QMARK_.call(null, x)) {
      return cljs.core._EQ_.call(null, x, Math.floor(x));
    } else {
      return false;
    }
  }
};
cljs.pprint.remainders = function cljs$pprint$remainders(base, val) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(p1__14701_SHARP_) {
    if (p1__14701_SHARP_ > 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rem.call(null, p1__14701_SHARP_, base), cljs.core.quot.call(null, p1__14701_SHARP_, base)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    }
  }, val)));
};
cljs.pprint.base_str = function cljs$pprint$base_str(base, val) {
  if (val === 0) {
    return "0";
  } else {
    var xlated_val = val;
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(xlated_val) {
      return function(p1__14702_SHARP_) {
        if (p1__14702_SHARP_ < 10) {
          return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "0") + p1__14702_SHARP_);
        } else {
          return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "a") + (p1__14702_SHARP_ - 10));
        }
      };
    }(xlated_val), cljs.pprint.remainders.call(null, base, val)));
  }
};
cljs.pprint.javascript_base_formats = new cljs.core.PersistentArrayMap(null, 3, [8, "%o", 10, "%d", 16, "%x"], null);
cljs.pprint.opt_base_str = function cljs$pprint$opt_base_str(base, val) {
  return cljs.pprint.base_str.call(null, base, val);
};
cljs.pprint.group_by_STAR_ = function cljs$pprint$group_by_STAR_(unit, lis) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(x) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.reverse.call(null, cljs.core.take.call(null, unit, x))), cljs.core.seq.call(null, cljs.core.drop.call(null, unit, x))], null);
  }, cljs.core.reverse.call(null, lis))));
};
cljs.pprint.format_integer = function cljs$pprint$format_integer(base, params, arg_navigator, offsets) {
  var vec__14707 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__14707, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__14707, 1, null);
  if (cljs.core.truth_(cljs.pprint.integral_QMARK_.call(null, arg))) {
    var neg_14710 = arg < 0;
    var pos_arg_14711 = neg_14710 ? -arg : arg;
    var raw_str_14712 = cljs.pprint.opt_base_str.call(null, base, pos_arg_14711);
    var group_str_14713 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? function() {
      var groups = cljs.core.map.call(null, function(neg_14710, pos_arg_14711, raw_str_14712, vec__14707, arg, arg_navigator__$1) {
        return function(p1__14703_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.str, p1__14703_SHARP_);
        };
      }(neg_14710, pos_arg_14711, raw_str_14712, vec__14707, arg, arg_navigator__$1), cljs.pprint.group_by_STAR_.call(null, (new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083)).cljs$core$IFn$_invoke$arity$1(params), raw_str_14712));
      var commas = cljs.core.repeat.call(null, cljs.core.count.call(null, groups), (new cljs.core.Keyword(null, "commachar", "commachar", 652859327)).cljs$core$IFn$_invoke$arity$1(params));
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.next.call(null, cljs.core.interleave.call(null, commas, groups)));
    }() : raw_str_14712;
    var signed_str_14714 = neg_14710 ? [cljs.core.str("-"), cljs.core.str(group_str_14713)].join("") : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? [cljs.core.str("+"), cljs.core.str(group_str_14713)].join("") : group_str_14713;
    var padded_str_14715 = signed_str_14714.length < (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - signed_str_14714.length, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(signed_str_14714)].join("") : 
    signed_str_14714;
    cljs.pprint.print.call(null, padded_str_14715);
  } else {
    cljs.pprint.format_ascii.call(null, cljs.core.print_str, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), 1, new cljs.core.Keyword(null, "minpad", "minpad", 323570901), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), null);
  }
  return arg_navigator__$1;
};
cljs.pprint.english_cardinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"], null);
cljs.pprint.english_ordinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zeroth", "first", "second", "third", "fourth", "fifth", "sixth", "seventh", "eighth", "ninth", "tenth", "eleventh", "twelfth", "thirteenth", "fourteenth", "fifteenth", "sixteenth", "seventeenth", "eighteenth", "nineteenth"], null);
cljs.pprint.english_cardinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"], null);
cljs.pprint.english_ordinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twentieth", "thirtieth", "fortieth", "fiftieth", "sixtieth", "seventieth", "eightieth", "ninetieth"], null);
cljs.pprint.english_scale_numbers = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "thousand", "million", "billion", "trillion", "quadrillion", "quintillion", "sextillion", "septillion", "octillion", "nonillion", "decillion", "undecillion", "duodecillion", "tredecillion", "quattuordecillion", "quindecillion", "sexdecillion", "septendecillion", "octodecillion", "novemdecillion", "vigintillion"], null);
cljs.pprint.format_simple_cardinal = function cljs$pprint$format_simple_cardinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [cljs.core.str(hundreds > 0 ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(hundreds > 0 && tens > 0 ? " " : null), cljs.core.str(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    return [cljs.core.str(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), cljs.core.str(ten_digit > 0 && unit_digit > 0 ? "-" : null), cljs.core.str(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, unit_digit) : null)].join("");
  }() : null)].join("");
};
cljs.pprint.add_english_scales = function cljs$pprint$add_english_scales(parts, offset) {
  var cnt = cljs.core.count.call(null, parts);
  var acc = cljs.core.PersistentVector.EMPTY;
  var pos = cnt - 1;
  var this$ = cljs.core.first.call(null, parts);
  var remainder = cljs.core.next.call(null, parts);
  while (true) {
    if (remainder == null) {
      return [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, ", ", acc))), cljs.core.str(!cljs.core.empty_QMARK_.call(null, this$) && !cljs.core.empty_QMARK_.call(null, acc) ? ", " : null), cljs.core.str(this$), cljs.core.str(!cljs.core.empty_QMARK_.call(null, this$) && pos + offset > 0 ? [cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join("") : null)].join("");
    } else {
      var G__14716 = cljs.core.empty_QMARK_.call(null, this$) ? acc : cljs.core.conj.call(null, acc, [cljs.core.str(this$), cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join(""));
      var G__14717 = pos - 1;
      var G__14718 = cljs.core.first.call(null, remainder);
      var G__14719 = cljs.core.next.call(null, remainder);
      acc = G__14716;
      pos = G__14717;
      this$ = G__14718;
      remainder = G__14719;
      continue;
    }
    break;
  }
};
cljs.pprint.format_cardinal_english = function cljs$pprint$format_cardinal_english(params, navigator, offsets) {
  var vec__14723 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__14723, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__14723, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zero");
  } else {
    var abs_arg_14726 = arg < 0 ? -arg : arg;
    var parts_14727 = cljs.pprint.remainders.call(null, 1E3, abs_arg_14726);
    if (cljs.core.count.call(null, parts_14727) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_14728 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, parts_14727);
      var full_str_14729 = cljs.pprint.add_english_scales.call(null, parts_strs_14728, 0);
      cljs.pprint.print.call(null, [cljs.core.str(arg < 0 ? "minus " : null), cljs.core.str(full_str_14729)].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
    }
  }
  return navigator__$1;
};
cljs.pprint.format_simple_ordinal = function cljs$pprint$format_simple_ordinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [cljs.core.str(hundreds > 0 ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(hundreds > 0 && tens > 0 ? " " : null), cljs.core.str(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    if (ten_digit > 0 && !(unit_digit > 0)) {
      return cljs.core.nth.call(null, cljs.pprint.english_ordinal_tens, ten_digit);
    } else {
      return [cljs.core.str(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), cljs.core.str(ten_digit > 0 && unit_digit > 0 ? "-" : null), cljs.core.str(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, unit_digit) : null)].join("");
    }
  }() : hundreds > 0 ? "th" : null)].join("");
};
cljs.pprint.format_ordinal_english = function cljs$pprint$format_ordinal_english(params, navigator, offsets) {
  var vec__14733 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__14733, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__14733, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zeroth");
  } else {
    var abs_arg_14736 = arg < 0 ? -arg : arg;
    var parts_14737 = cljs.pprint.remainders.call(null, 1E3, abs_arg_14736);
    if (cljs.core.count.call(null, parts_14737) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_14738 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, cljs.core.drop_last.call(null, parts_14737));
      var head_str_14739 = cljs.pprint.add_english_scales.call(null, parts_strs_14738, 1);
      var tail_str_14740 = cljs.pprint.format_simple_ordinal.call(null, cljs.core.last.call(null, parts_14737));
      cljs.pprint.print.call(null, [cljs.core.str(arg < 0 ? "minus " : null), cljs.core.str(!cljs.core.empty_QMARK_.call(null, head_str_14739) && !cljs.core.empty_QMARK_.call(null, tail_str_14740) ? [cljs.core.str(head_str_14739), cljs.core.str(", "), cljs.core.str(tail_str_14740)].join("") : !cljs.core.empty_QMARK_.call(null, head_str_14739) ? [cljs.core.str(head_str_14739), cljs.core.str("th")].join("") : tail_str_14740)].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
      var low_two_digits_14741 = cljs.core.rem.call(null, arg, 100);
      var not_teens_14742 = 11 < low_two_digits_14741 || 19 > low_two_digits_14741;
      var low_digit_14743 = cljs.core.rem.call(null, low_two_digits_14741, 10);
      cljs.pprint.print.call(null, low_digit_14743 === 1 && not_teens_14742 ? "st" : low_digit_14743 === 2 && not_teens_14742 ? "nd" : low_digit_14743 === 3 && not_teens_14742 ? "rd" : "th");
    }
  }
  return navigator__$1;
};
cljs.pprint.old_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IIII", "V", "VI", "VII", "VIII", "VIIII"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XXXX", "L", "LX", "LXX", "LXXX", "LXXXX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", 
"CC", "CCC", "CCCC", "D", "DC", "DCC", "DCCC", "DCCCC"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.new_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", "CC", 
"CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.format_roman = function cljs$pprint$format_roman(table, params, navigator, offsets) {
  var vec__14747 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__14747, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__14747, 1, null);
  if (typeof arg === "number" && arg > 0 && arg < 4E3) {
    var digits_14750 = cljs.pprint.remainders.call(null, 10, arg);
    var acc_14751 = cljs.core.PersistentVector.EMPTY;
    var pos_14752 = cljs.core.count.call(null, digits_14750) - 1;
    var digits_14753__$1 = digits_14750;
    while (true) {
      if (cljs.core.empty_QMARK_.call(null, digits_14753__$1)) {
        cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, acc_14751));
      } else {
        var digit_14754 = cljs.core.first.call(null, digits_14753__$1);
        var G__14755 = cljs.core._EQ_.call(null, 0, digit_14754) ? acc_14751 : cljs.core.conj.call(null, acc_14751, cljs.core.nth.call(null, cljs.core.nth.call(null, table, pos_14752), digit_14754 - 1));
        var G__14756 = pos_14752 - 1;
        var G__14757 = cljs.core.next.call(null, digits_14753__$1);
        acc_14751 = G__14755;
        pos_14752 = G__14756;
        digits_14753__$1 = G__14757;
        continue;
      }
      break;
    }
  } else {
    cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
  }
  return navigator__$1;
};
cljs.pprint.format_old_roman = function cljs$pprint$format_old_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.old_roman_table, params, navigator, offsets);
};
cljs.pprint.format_new_roman = function cljs$pprint$format_new_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.new_roman_table, params, navigator, offsets);
};
cljs.pprint.special_chars = new cljs.core.PersistentArrayMap(null, 5, [8, "Backspace", 9, "Tab", 10, "Newline", 13, "Return", 32, "Space"], null);
cljs.pprint.pretty_character = function cljs$pprint$pretty_character(params, navigator, offsets) {
  var vec__14761 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__14761, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__14761, 1, null);
  var as_int = cljs.pprint.char_code.call(null, c);
  var base_char = as_int & 127;
  var meta = as_int & 128;
  var special = cljs.core.get.call(null, cljs.pprint.special_chars, base_char);
  if (meta > 0) {
    cljs.pprint.print.call(null, "Meta-");
  } else {
  }
  cljs.pprint.print.call(null, cljs.core.truth_(special) ? special : base_char < 32 ? [cljs.core.str("Control-"), cljs.core.str(cljs.core.char$.call(null, base_char + 64))].join("") : cljs.core._EQ_.call(null, base_char, 127) ? "Control-?" : cljs.core.char$.call(null, base_char));
  return navigator__$1;
};
cljs.pprint.readable_character = function cljs$pprint$readable_character(params, navigator, offsets) {
  var vec__14770 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__14770, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__14770, 1, null);
  var pred__14773_14776 = cljs.core._EQ_;
  var expr__14774_14777 = (new cljs.core.Keyword(null, "char-format", "char-format", -1016499218)).cljs$core$IFn$_invoke$arity$1(params);
  if (cljs.core.truth_(pred__14773_14776.call(null, "o", expr__14774_14777))) {
    cljs.pprint.cl_format.call(null, true, "\\o~3, '0o", cljs.pprint.char_code.call(null, c));
  } else {
    if (cljs.core.truth_(pred__14773_14776.call(null, "u", expr__14774_14777))) {
      cljs.pprint.cl_format.call(null, true, "\\u~4, '0x", cljs.pprint.char_code.call(null, c));
    } else {
      if (cljs.core.truth_(pred__14773_14776.call(null, null, expr__14774_14777))) {
        cljs.pprint.print_char.call(null, c);
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__14774_14777)].join(""));
      }
    }
  }
  return navigator__$1;
};
cljs.pprint.plain_character = function cljs$pprint$plain_character(params, navigator, offsets) {
  var vec__14781 = cljs.pprint.next_arg.call(null, navigator);
  var char$ = cljs.core.nth.call(null, vec__14781, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__14781, 1, null);
  cljs.pprint.print.call(null, char$);
  return navigator__$1;
};
cljs.pprint.abort_QMARK_ = function cljs$pprint$abort_QMARK_(context) {
  var token = cljs.core.first.call(null, context);
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), token) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), token);
};
cljs.pprint.execute_sub_format = function cljs$pprint$execute_sub_format(format, args, base_args) {
  return cljs.core.second.call(null, cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, context))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__14790 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__14790, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__14790, 1, null);
      var vec__14793 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__14793, 0, null);
      var offsets = cljs.core.nth.call(null, vec__14793, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), base_args);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format));
};
cljs.pprint.float_parts_base = function cljs$pprint$float_parts_base(f) {
  var s = clojure.string.lower_case.call(null, [cljs.core.str(f)].join(""));
  var exploc = s.indexOf("e");
  var dotloc = s.indexOf(".");
  if (exploc < 0) {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, [cljs.core.str(cljs.core.count.call(null, s) - 1)].join("")], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s, 0, dotloc)), cljs.core.str(cljs.core.subs.call(null, s, dotloc + 1))].join(""), [cljs.core.str(dotloc - 1)].join("")], null);
    }
  } else {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, 0, exploc), cljs.core.subs.call(null, s, exploc + 1)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s, 0, 1)), cljs.core.str(cljs.core.subs.call(null, s, 2, exploc))].join(""), cljs.core.subs.call(null, s, exploc + 1)], null);
    }
  }
};
cljs.pprint.float_parts = function cljs$pprint$float_parts(f) {
  var vec__14799 = cljs.pprint.float_parts_base.call(null, f);
  var m = cljs.core.nth.call(null, vec__14799, 0, null);
  var e = cljs.core.nth.call(null, vec__14799, 1, null);
  var m1 = cljs.pprint.rtrim.call(null, m, "0");
  var m2 = cljs.pprint.ltrim.call(null, m1, "0");
  var delta = cljs.core.count.call(null, m1) - cljs.core.count.call(null, m2);
  var e__$1 = cljs.core.count.call(null, e) > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, e, 0), "+") ? cljs.core.subs.call(null, e, 1) : e;
  if (cljs.core.empty_QMARK_.call(null, m2)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m2, parseInt(e__$1, 10) - delta], null);
  }
};
cljs.pprint.inc_s = function cljs$pprint$inc_s(s) {
  var len_1 = cljs.core.count.call(null, s) - 1;
  var i = len_1 | 0;
  while (true) {
    if (i < 0) {
      return cljs.core.apply.call(null, cljs.core.str, "1", cljs.core.repeat.call(null, len_1 + 1, "0"));
    } else {
      if (cljs.core._EQ_.call(null, "9", s.charAt(i))) {
        var G__14802 = i - 1;
        i = G__14802;
        continue;
      } else {
        return cljs.core.apply.call(null, cljs.core.str, cljs.core.subs.call(null, s, 0, i), cljs.core.char$.call(null, cljs.pprint.char_code.call(null, s.charAt(i)) + 1), cljs.core.repeat.call(null, len_1 - i, "0"));
      }
    }
    break;
  }
};
cljs.pprint.round_str = function cljs$pprint$round_str(m, e, d, w) {
  if (cljs.core.truth_(function() {
    var or__6210__auto__ = d;
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return w;
    }
  }())) {
    var len = cljs.core.count.call(null, m);
    var w__$1 = cljs.core.truth_(w) ? function() {
      var x__6541__auto__ = 2;
      var y__6542__auto__ = w;
      return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
    }() : 0;
    var round_pos = cljs.core.truth_(d) ? e + d + 1 : e >= 0 ? function() {
      var x__6541__auto__ = e + 1;
      var y__6542__auto__ = w__$1 - 1;
      return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
    }() : w__$1 + e;
    var vec__14806 = cljs.core._EQ_.call(null, round_pos, 0) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("0"), cljs.core.str(m)].join(""), e + 1, 1, len + 1], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, round_pos, len], null);
    var m1 = cljs.core.nth.call(null, vec__14806, 0, null);
    var e1 = cljs.core.nth.call(null, vec__14806, 1, null);
    var round_pos__$1 = cljs.core.nth.call(null, vec__14806, 2, null);
    var len__$1 = cljs.core.nth.call(null, vec__14806, 3, null);
    if (cljs.core.truth_(round_pos__$1)) {
      if (round_pos__$1 < 0) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0, false], null);
      } else {
        if (len__$1 > round_pos__$1) {
          var round_char = cljs.core.nth.call(null, m1, round_pos__$1);
          var result = cljs.core.subs.call(null, m1, 0, round_pos__$1);
          if (cljs.pprint.char_code.call(null, round_char) >= cljs.pprint.char_code.call(null, "5")) {
            var round_up_result = cljs.pprint.inc_s.call(null, result);
            var expanded = cljs.core.count.call(null, round_up_result) > cljs.core.count.call(null, result);
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [expanded ? cljs.core.subs.call(null, round_up_result, 0, cljs.core.count.call(null, round_up_result) - 1) : round_up_result, e1, expanded], null);
          } else {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [result, e1, false], null);
          }
        } else {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
        }
      }
    } else {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
    }
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
  }
};
cljs.pprint.expand_fixed = function cljs$pprint$expand_fixed(m, e, d) {
  var vec__14812 = e < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -e - 1, "0"))), cljs.core.str(m)].join(""), -1], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e], null);
  var m1 = cljs.core.nth.call(null, vec__14812, 0, null);
  var e1 = cljs.core.nth.call(null, vec__14812, 1, null);
  var len = cljs.core.count.call(null, m1);
  var target_len = cljs.core.truth_(d) ? e1 + d + 1 : e1 + 1;
  if (len < target_len) {
    return [cljs.core.str(m1), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, target_len - len, "0")))].join("");
  } else {
    return m1;
  }
};
cljs.pprint.insert_decimal = function cljs$pprint$insert_decimal(m, e) {
  if (e < 0) {
    return [cljs.core.str("."), cljs.core.str(m)].join("");
  } else {
    var loc = e + 1;
    return [cljs.core.str(cljs.core.subs.call(null, m, 0, loc)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, m, loc))].join("");
  }
};
cljs.pprint.get_fixed = function cljs$pprint$get_fixed(m, e, d) {
  return cljs.pprint.insert_decimal.call(null, cljs.pprint.expand_fixed.call(null, m, e, d), e);
};
cljs.pprint.insert_scaled_decimal = function cljs$pprint$insert_scaled_decimal(m, k) {
  if (k < 0) {
    return [cljs.core.str("."), cljs.core.str(m)].join("");
  } else {
    return [cljs.core.str(cljs.core.subs.call(null, m, 0, k)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, m, k))].join("");
  }
};
cljs.pprint.convert_ratio = function cljs$pprint$convert_ratio(x) {
  return x;
};
cljs.pprint.fixed_float = function cljs$pprint$fixed_float(params, navigator, offsets) {
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__14827 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__14827, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__14827, 1, null);
  var vec__14830 = arg < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-", -arg], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["+", arg], null);
  var sign = cljs.core.nth.call(null, vec__14830, 0, null);
  var abs = cljs.core.nth.call(null, vec__14830, 1, null);
  var abs__$1 = cljs.pprint.convert_ratio.call(null, abs);
  var vec__14833 = cljs.pprint.float_parts.call(null, abs__$1);
  var mantissa = cljs.core.nth.call(null, vec__14833, 0, null);
  var exp = cljs.core.nth.call(null, vec__14833, 1, null);
  var scaled_exp = exp + (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__6210__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return arg < 0;
    }
  }();
  var append_zero = cljs.core.not.call(null, d) && cljs.core.count.call(null, mantissa) - 1 <= scaled_exp;
  var vec__14836 = cljs.pprint.round_str.call(null, mantissa, scaled_exp, d, cljs.core.truth_(w) ? w - (cljs.core.truth_(add_sign) ? 1 : 0) : null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__14836, 0, null);
  var scaled_exp__$1 = cljs.core.nth.call(null, vec__14836, 1, null);
  var expanded = cljs.core.nth.call(null, vec__14836, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp__$1 + 1 : scaled_exp__$1, d);
  var fixed_repr__$1 = cljs.core.truth_(function() {
    var and__6198__auto__ = w;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = d;
      if (cljs.core.truth_(and__6198__auto____$1)) {
        return d >= 1 && cljs.core._EQ_.call(null, fixed_repr.charAt(0), "0") && cljs.core._EQ_.call(null, fixed_repr.charAt(1), ".") && cljs.core.count.call(null, fixed_repr) > w - (cljs.core.truth_(add_sign) ? 1 : 0);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }()) ? cljs.core.subs.call(null, fixed_repr, 1) : fixed_repr;
  var prepend_zero = cljs.core._EQ_.call(null, cljs.core.first.call(null, fixed_repr__$1), ".");
  if (cljs.core.truth_(w)) {
    var len_14839 = cljs.core.count.call(null, fixed_repr__$1);
    var signed_len_14840 = cljs.core.truth_(add_sign) ? len_14839 + 1 : len_14839;
    var prepend_zero_14841__$1 = prepend_zero && !(signed_len_14840 >= w);
    var append_zero_14842__$1 = append_zero && !(signed_len_14840 >= w);
    var full_len_14843 = prepend_zero_14841__$1 || append_zero_14842__$1 ? signed_len_14840 + 1 : signed_len_14840;
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = full_len_14843 > w;
      if (and__6198__auto__) {
        return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__6198__auto__;
      }
    }())) {
      cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
    } else {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len_14843, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(add_sign) ? sign : null), cljs.core.str(prepend_zero_14841__$1 ? "0" : null), cljs.core.str(fixed_repr__$1), cljs.core.str(append_zero_14842__$1 ? "0" : null)].join(""));
    }
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(add_sign) ? sign : null), cljs.core.str(prepend_zero ? "0" : null), cljs.core.str(fixed_repr__$1), cljs.core.str(append_zero ? "0" : null)].join(""));
  }
  return navigator__$1;
};
cljs.pprint.exponential_float = function cljs$pprint$exponential_float(params, navigator, offset) {
  var vec__14860 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__14860, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__14860, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var G__14866_14876 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var vec__14867_14877 = G__14866_14876;
  var mantissa_14878 = cljs.core.nth.call(null, vec__14867_14877, 0, null);
  var exp_14879 = cljs.core.nth.call(null, vec__14867_14877, 1, null);
  var G__14866_14880__$1 = G__14866_14876;
  while (true) {
    var vec__14870_14881 = G__14866_14880__$1;
    var mantissa_14882__$1 = cljs.core.nth.call(null, vec__14870_14881, 0, null);
    var exp_14883__$1 = cljs.core.nth.call(null, vec__14870_14881, 1, null);
    var w_14884 = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
    var d_14885 = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
    var e_14886 = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
    var k_14887 = (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
    var expchar_14888 = function() {
      var or__6210__auto__ = (new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        return "E";
      }
    }();
    var add_sign_14889 = function() {
      var or__6210__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        return arg__$1 < 0;
      }
    }();
    var prepend_zero_14890 = k_14887 <= 0;
    var scaled_exp_14891 = exp_14883__$1 - (k_14887 - 1);
    var scaled_exp_str_14892 = [cljs.core.str(Math.abs(scaled_exp_14891))].join("");
    var scaled_exp_str_14893__$1 = [cljs.core.str(expchar_14888), cljs.core.str(scaled_exp_14891 < 0 ? "-" : "+"), cljs.core.str(cljs.core.truth_(e_14886) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, e_14886 - cljs.core.count.call(null, scaled_exp_str_14892), "0")) : null), cljs.core.str(scaled_exp_str_14892)].join("");
    var exp_width_14894 = cljs.core.count.call(null, scaled_exp_str_14893__$1);
    var base_mantissa_width_14895 = cljs.core.count.call(null, mantissa_14882__$1);
    var scaled_mantissa_14896 = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -k_14887, "0"))), cljs.core.str(mantissa_14882__$1), cljs.core.str(cljs.core.truth_(d_14885) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d_14885 - (base_mantissa_width_14895 - 1) - (k_14887 < 0 ? -k_14887 : 0), "0")) : null)].join("");
    var w_mantissa_14897 = cljs.core.truth_(w_14884) ? w_14884 - exp_width_14894 : null;
    var vec__14873_14898 = cljs.pprint.round_str.call(null, scaled_mantissa_14896, 0, cljs.core._EQ_.call(null, k_14887, 0) ? d_14885 - 1 : k_14887 > 0 ? d_14885 : k_14887 < 0 ? d_14885 - 1 : null, cljs.core.truth_(w_mantissa_14897) ? w_mantissa_14897 - (cljs.core.truth_(add_sign_14889) ? 1 : 0) : null);
    var rounded_mantissa_14899 = cljs.core.nth.call(null, vec__14873_14898, 0, null);
    var __14900 = cljs.core.nth.call(null, vec__14873_14898, 1, null);
    var incr_exp_14901 = cljs.core.nth.call(null, vec__14873_14898, 2, null);
    var full_mantissa_14902 = cljs.pprint.insert_scaled_decimal.call(null, rounded_mantissa_14899, k_14887);
    var append_zero_14903 = cljs.core._EQ_.call(null, k_14887, cljs.core.count.call(null, rounded_mantissa_14899)) && d_14885 == null;
    if (cljs.core.not.call(null, incr_exp_14901)) {
      if (cljs.core.truth_(w_14884)) {
        var len_14904 = cljs.core.count.call(null, full_mantissa_14902) + exp_width_14894;
        var signed_len_14905 = cljs.core.truth_(add_sign_14889) ? len_14904 + 1 : len_14904;
        var prepend_zero_14906__$1 = prepend_zero_14890 && !cljs.core._EQ_.call(null, signed_len_14905, w_14884);
        var full_len_14907 = prepend_zero_14906__$1 ? signed_len_14905 + 1 : signed_len_14905;
        var append_zero_14908__$1 = append_zero_14903 && full_len_14907 < w_14884;
        if (cljs.core.truth_(function() {
          var and__6198__auto__ = function() {
            var or__6210__auto__ = full_len_14907 > w_14884;
            if (or__6210__auto__) {
              return or__6210__auto__;
            } else {
              var and__6198__auto__ = e_14886;
              if (cljs.core.truth_(and__6198__auto__)) {
                return exp_width_14894 - 2 > e_14886;
              } else {
                return and__6198__auto__;
              }
            }
          }();
          if (cljs.core.truth_(and__6198__auto__)) {
            return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
          } else {
            return and__6198__auto__;
          }
        }())) {
          cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_14884, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
        } else {
          cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_14884 - full_len_14907 - (append_zero_14908__$1 ? 1 : 0), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(add_sign_14889) ? arg__$1 < 0 ? "-" : "+" : null), cljs.core.str(prepend_zero_14906__$1 ? "0" : null), cljs.core.str(full_mantissa_14902), cljs.core.str(append_zero_14908__$1 ? "0" : 
          null), cljs.core.str(scaled_exp_str_14893__$1)].join(""));
        }
      } else {
        cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(add_sign_14889) ? arg__$1 < 0 ? "-" : "+" : null), cljs.core.str(prepend_zero_14890 ? "0" : null), cljs.core.str(full_mantissa_14902), cljs.core.str(append_zero_14903 ? "0" : null), cljs.core.str(scaled_exp_str_14893__$1)].join(""));
      }
    } else {
      var G__14909 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rounded_mantissa_14899, exp_14883__$1 + 1], null);
      G__14866_14880__$1 = G__14909;
      continue;
    }
    break;
  }
  return navigator__$1;
};
cljs.pprint.general_float = function cljs$pprint$general_float(params, navigator, offsets) {
  var vec__14916 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__14916, 0, null);
  var _ = cljs.core.nth.call(null, vec__14916, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var vec__14919 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var mantissa = cljs.core.nth.call(null, vec__14919, 0, null);
  var exp = cljs.core.nth.call(null, vec__14919, 1, null);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var e = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
  var n = cljs.core._EQ_.call(null, arg__$1, 0) ? 0 : exp + 1;
  var ee = cljs.core.truth_(e) ? e + 2 : 4;
  var ww = cljs.core.truth_(w) ? w - ee : null;
  var d__$1 = cljs.core.truth_(d) ? d : function() {
    var x__6541__auto__ = cljs.core.count.call(null, mantissa);
    var y__6542__auto__ = function() {
      var x__6548__auto__ = n;
      var y__6549__auto__ = 7;
      return x__6548__auto__ < y__6549__auto__ ? x__6548__auto__ : y__6549__auto__;
    }();
    return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
  }();
  var dd = d__$1 - n;
  if (0 <= dd && dd <= d__$1) {
    var navigator__$1 = cljs.pprint.fixed_float.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "w", "w", 354169001), ww, new cljs.core.Keyword(null, "d", "d", 1972142424), dd, new cljs.core.Keyword(null, "k", "k", -2146297393), 0, new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)], null), navigator, offsets);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, ee, " ")));
    return navigator__$1;
  } else {
    return cljs.pprint.exponential_float.call(null, params, navigator, offsets);
  }
};
cljs.pprint.dollar_float = function cljs$pprint$dollar_float(params, navigator, offsets) {
  var vec__14931 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__14931, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__14931, 1, null);
  var vec__14934 = cljs.pprint.float_parts.call(null, Math.abs(arg));
  var mantissa = cljs.core.nth.call(null, vec__14934, 0, null);
  var exp = cljs.core.nth.call(null, vec__14934, 1, null);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__6210__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return arg < 0;
    }
  }();
  var vec__14937 = cljs.pprint.round_str.call(null, mantissa, exp, d, null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__14937, 0, null);
  var scaled_exp = cljs.core.nth.call(null, vec__14937, 1, null);
  var expanded = cljs.core.nth.call(null, vec__14937, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp + 1 : scaled_exp, d);
  var full_repr = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n - fixed_repr.indexOf("."), "0"))), cljs.core.str(fixed_repr)].join("");
  var full_len = cljs.core.count.call(null, full_repr) + (cljs.core.truth_(add_sign) ? 1 : 0);
  cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(function() {
    var and__6198__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__6198__auto__)) {
      return add_sign;
    } else {
      return and__6198__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(function() {
    var and__6198__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    if (and__6198__auto__) {
      return add_sign;
    } else {
      return and__6198__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null), cljs.core.str(full_repr)].join(""));
  return navigator__$1;
};
cljs.pprint.choice_conditional = function cljs$pprint$choice_conditional(params, arg_navigator, offsets) {
  var arg = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__14943 = cljs.core.truth_(arg) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg, arg_navigator], null) : cljs.pprint.next_arg.call(null, arg_navigator);
  var arg__$1 = cljs.core.nth.call(null, vec__14943, 0, null);
  var navigator = cljs.core.nth.call(null, vec__14943, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = arg__$1 < 0 || arg__$1 >= cljs.core.count.call(null, clauses) ? cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params)) : cljs.core.nth.call(null, clauses, arg__$1);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.boolean_conditional = function cljs$pprint$boolean_conditional(params, arg_navigator, offsets) {
  var vec__14949 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__14949, 0, null);
  var navigator = cljs.core.nth.call(null, vec__14949, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.second.call(null, clauses) : cljs.core.first.call(null, clauses);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.check_arg_conditional = function cljs$pprint$check_arg_conditional(params, arg_navigator, offsets) {
  var vec__14955 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__14955, 0, null);
  var navigator = cljs.core.nth.call(null, vec__14955, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.first.call(null, clauses) : null;
  if (cljs.core.truth_(arg)) {
    if (cljs.core.truth_(clause)) {
      return cljs.pprint.execute_sub_format.call(null, clause, arg_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return arg_navigator;
    }
  } else {
    return navigator;
  }
};
cljs.pprint.iterate_sublist = function cljs$pprint$iterate_sublist(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__14964 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__14964, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__14964, 1, null);
  var vec__14967 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__14967, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__14967, 1, null);
  var args = cljs.pprint.init_navigator.call(null, arg_list);
  var count = 0;
  var args__$1 = args;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1), last_pos) && count > 1) {
      throw Error("%{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__6210__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(args__$1)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__6210__auto__) {
        return or__6210__auto__;
      } else {
        var and__6198__auto__ = max_count;
        if (cljs.core.truth_(and__6198__auto__)) {
          return count >= max_count;
        } else {
          return and__6198__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, args__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__14970 = count + 1;
        var G__14971 = iter_result;
        var G__14972 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1);
        count = G__14970;
        args__$1 = G__14971;
        last_pos = G__14972;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_list_of_sublists = function cljs$pprint$iterate_list_of_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__14979 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__14979, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__14979, 1, null);
  var vec__14982 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__14982, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__14982, 1, null);
  var count = 0;
  var arg_list__$1 = arg_list;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__6210__auto__ = cljs.core.empty_QMARK_.call(null, arg_list__$1) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__6210__auto__) {
        return or__6210__auto__;
      } else {
        var and__6198__auto__ = max_count;
        if (cljs.core.truth_(and__6198__auto__)) {
          return count >= max_count;
        } else {
          return and__6198__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, cljs.core.first.call(null, arg_list__$1)), cljs.pprint.init_navigator.call(null, cljs.core.next.call(null, arg_list__$1)));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__14985 = count + 1;
        var G__14986 = cljs.core.next.call(null, arg_list__$1);
        count = G__14985;
        arg_list__$1 = G__14986;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_list = function cljs$pprint$iterate_main_list(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__14990 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__14990, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__14990, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2), last_pos) && count > 1) {
      throw Error("%@{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__6210__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__6210__auto__) {
        return or__6210__auto__;
      } else {
        var and__6198__auto__ = max_count;
        if (cljs.core.truth_(and__6198__auto__)) {
          return count >= max_count;
        } else {
          return and__6198__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return cljs.core.second.call(null, iter_result);
      } else {
        var G__14993 = count + 1;
        var G__14994 = iter_result;
        var G__14995 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2);
        count = G__14993;
        navigator__$2 = G__14994;
        last_pos = G__14995;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_sublists = function cljs$pprint$iterate_main_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__15002 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__15002, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__15002, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__6210__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__6210__auto__) {
        return or__6210__auto__;
      } else {
        var and__6198__auto__ = max_count;
        if (cljs.core.truth_(and__6198__auto__)) {
          return count >= max_count;
        } else {
          return and__6198__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var vec__15005 = cljs.pprint.next_arg_or_nil.call(null, navigator__$2);
      var sublist = cljs.core.nth.call(null, vec__15005, 0, null);
      var navigator__$3 = cljs.core.nth.call(null, vec__15005, 1, null);
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, sublist), navigator__$3);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$3;
      } else {
        var G__15008 = count + 1;
        var G__15009 = navigator__$3;
        count = G__15008;
        navigator__$2 = G__15009;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.logical_block_or_justify = function cljs$pprint$logical_block_or_justify(params, navigator, offsets) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return cljs.pprint.format_logical_block.call(null, params, navigator, offsets);
  } else {
    return cljs.pprint.justify_clauses.call(null, params, navigator, offsets);
  }
};
cljs.pprint.render_clauses = function cljs$pprint$render_clauses(clauses, navigator, base_navigator) {
  var clauses__$1 = clauses;
  var acc = cljs.core.PersistentVector.EMPTY;
  var navigator__$1 = navigator;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, clauses__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, navigator__$1], null);
    } else {
      var clause = cljs.core.first.call(null, clauses__$1);
      var vec__15014 = function() {
        var sb = new goog.string.StringBuffer;
        var _STAR_out_STAR_15017 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(sb);
        try {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.execute_sub_format.call(null, clause, navigator__$1, base_navigator), [cljs.core.str(sb)].join("")], null);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_15017;
        }
      }();
      var iter_result = cljs.core.nth.call(null, vec__15014, 0, null);
      var result_str = cljs.core.nth.call(null, vec__15014, 1, null);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, cljs.core.second.call(null, iter_result)], null);
      } else {
        var G__15018 = cljs.core.next.call(null, clauses__$1);
        var G__15019 = cljs.core.conj.call(null, acc, result_str);
        var G__15020 = iter_result;
        clauses__$1 = G__15018;
        acc = G__15019;
        navigator__$1 = G__15020;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.justify_clauses = function cljs$pprint$justify_clauses(params, navigator, offsets) {
  var vec__15033 = function() {
    var temp__4425__auto__ = (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var else$ = temp__4425__auto__;
      return cljs.pprint.render_clauses.call(null, else$, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return null;
    }
  }();
  var vec__15036 = cljs.core.nth.call(null, vec__15033, 0, null);
  var eol_str = cljs.core.nth.call(null, vec__15036, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__15033, 1, null);
  var navigator__$1 = function() {
    var or__6210__auto__ = new_navigator;
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return navigator;
    }
  }();
  var vec__15039 = function() {
    var temp__4425__auto__ = (new cljs.core.Keyword(null, "else-params", "else-params", -832171646)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var p = temp__4425__auto__;
      return cljs.pprint.realize_parameter_list.call(null, p, navigator__$1);
    } else {
      return null;
    }
  }();
  var else_params = cljs.core.nth.call(null, vec__15039, 0, null);
  var new_navigator__$1 = cljs.core.nth.call(null, vec__15039, 1, null);
  var navigator__$2 = function() {
    var or__6210__auto__ = new_navigator__$1;
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return navigator__$1;
    }
  }();
  var min_remaining = function() {
    var or__6210__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return 0;
    }
  }();
  var max_columns = function() {
    var or__6210__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return cljs.pprint.get_max_column.call(null, cljs.core._STAR_out_STAR_);
    }
  }();
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__15042 = cljs.pprint.render_clauses.call(null, clauses, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  var strs = cljs.core.nth.call(null, vec__15042, 0, null);
  var navigator__$3 = cljs.core.nth.call(null, vec__15042, 1, null);
  var slots = function() {
    var x__6541__auto__ = 1;
    var y__6542__auto__ = cljs.core.count.call(null, strs) - 1 + (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0) + (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0);
    return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
  }();
  var chars = cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, strs));
  var mincol = (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params);
  var minpad = (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var minout = chars + slots * minpad;
  var result_columns = minout <= mincol ? mincol : mincol + colinc * (1 + cljs.core.quot.call(null, minout - mincol - 1, colinc));
  var total_pad = result_columns - chars;
  var pad = function() {
    var x__6541__auto__ = minpad;
    var y__6542__auto__ = cljs.core.quot.call(null, total_pad, slots);
    return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
  }();
  var extra_pad = total_pad - pad * slots;
  var pad_str = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, pad, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = eol_str;
    if (cljs.core.truth_(and__6198__auto__)) {
      return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))) + min_remaining + result_columns > max_columns;
    } else {
      return and__6198__auto__;
    }
  }())) {
    cljs.pprint.print.call(null, eol_str);
  } else {
  }
  var slots_15045__$1 = slots;
  var extra_pad_15046__$1 = extra_pad;
  var strs_15047__$1 = strs;
  var pad_only_15048 = function() {
    var or__6210__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return cljs.core._EQ_.call(null, cljs.core.count.call(null, strs_15047__$1), 1) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params));
    }
  }();
  while (true) {
    if (cljs.core.seq.call(null, strs_15047__$1)) {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.not.call(null, pad_only_15048) ? cljs.core.first.call(null, strs_15047__$1) : null), cljs.core.str(cljs.core.truth_(function() {
        var or__6210__auto__ = pad_only_15048;
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          var or__6210__auto____$1 = cljs.core.next.call(null, strs_15047__$1);
          if (or__6210__auto____$1) {
            return or__6210__auto____$1;
          } else {
            return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
          }
        }
      }()) ? pad_str : null), cljs.core.str(extra_pad_15046__$1 > 0 ? (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params) : null)].join(""));
      var G__15049 = slots_15045__$1 - 1;
      var G__15050 = extra_pad_15046__$1 - 1;
      var G__15051 = cljs.core.truth_(pad_only_15048) ? strs_15047__$1 : cljs.core.next.call(null, strs_15047__$1);
      var G__15052 = false;
      slots_15045__$1 = G__15049;
      extra_pad_15046__$1 = G__15050;
      strs_15047__$1 = G__15051;
      pad_only_15048 = G__15052;
      continue;
    } else {
    }
    break;
  }
  return navigator__$3;
};
cljs.pprint.downcase_writer = function cljs$pprint$downcase_writer(writer) {
  if (typeof cljs.pprint.t_cljs$pprint15059 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint15059 = function(downcase_writer, writer, meta15060) {
      this.downcase_writer = downcase_writer;
      this.writer = writer;
      this.meta15060 = meta15060;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint15059.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15061, meta15060__$1) {
      var self__ = this;
      var _15061__$1 = this;
      return new cljs.pprint.t_cljs$pprint15059(self__.downcase_writer, self__.writer, meta15060__$1);
    };
    cljs.pprint.t_cljs$pprint15059.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15061) {
      var self__ = this;
      var _15061__$1 = this;
      return self__.meta15060;
    };
    cljs.pprint.t_cljs$pprint15059.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint15059.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__15062 = cljs.core._EQ_;
      var expr__15063 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__15062.call(null, String, expr__15063))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__15062.call(null, Number, expr__15063))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__15063)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint15059.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "downcase-writer", "downcase-writer", 37286911, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to lower case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta15060", "meta15060", 216957912, null)], null);
    };
    cljs.pprint.t_cljs$pprint15059.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint15059.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint15059";
    cljs.pprint.t_cljs$pprint15059.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
      return cljs.core._write.call(null, writer__6817__auto__, "cljs.pprint/t_cljs$pprint15059");
    };
    cljs.pprint.__GT_t_cljs$pprint15059 = function cljs$pprint$downcase_writer_$___GT_t_cljs$pprint15059(downcase_writer__$1, writer__$1, meta15060) {
      return new cljs.pprint.t_cljs$pprint15059(downcase_writer__$1, writer__$1, meta15060);
    };
  }
  return new cljs.pprint.t_cljs$pprint15059(cljs$pprint$downcase_writer, writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.upcase_writer = function cljs$pprint$upcase_writer(writer) {
  if (typeof cljs.pprint.t_cljs$pprint15071 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint15071 = function(upcase_writer, writer, meta15072) {
      this.upcase_writer = upcase_writer;
      this.writer = writer;
      this.meta15072 = meta15072;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint15071.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15073, meta15072__$1) {
      var self__ = this;
      var _15073__$1 = this;
      return new cljs.pprint.t_cljs$pprint15071(self__.upcase_writer, self__.writer, meta15072__$1);
    };
    cljs.pprint.t_cljs$pprint15071.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15073) {
      var self__ = this;
      var _15073__$1 = this;
      return self__.meta15072;
    };
    cljs.pprint.t_cljs$pprint15071.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint15071.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__15074 = cljs.core._EQ_;
      var expr__15075 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__15074.call(null, String, expr__15075))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__15074.call(null, Number, expr__15075))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__15075)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint15071.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "upcase-writer", "upcase-writer", 51077317, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to upper case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta15072", "meta15072", -1261564192, null)], null);
    };
    cljs.pprint.t_cljs$pprint15071.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint15071.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint15071";
    cljs.pprint.t_cljs$pprint15071.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
      return cljs.core._write.call(null, writer__6817__auto__, "cljs.pprint/t_cljs$pprint15071");
    };
    cljs.pprint.__GT_t_cljs$pprint15071 = function cljs$pprint$upcase_writer_$___GT_t_cljs$pprint15071(upcase_writer__$1, writer__$1, meta15072) {
      return new cljs.pprint.t_cljs$pprint15071(upcase_writer__$1, writer__$1, meta15072);
    };
  }
  return new cljs.pprint.t_cljs$pprint15071(cljs$pprint$upcase_writer, writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.capitalize_string = function cljs$pprint$capitalize_string(s, first_QMARK_) {
  var f = cljs.core.first.call(null, s);
  var s__$1 = cljs.core.truth_(function() {
    var and__6198__auto__ = first_QMARK_;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = f;
      if (cljs.core.truth_(and__6198__auto____$1)) {
        return goog.string.isUnicodeChar(f);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }()) ? [cljs.core.str(clojure.string.upper_case.call(null, f)), cljs.core.str(cljs.core.subs.call(null, s, 1))].join("") : s;
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(f, s__$1) {
    return function(s__$2) {
      if (cljs.core.empty_QMARK_.call(null, s__$2)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
      } else {
        var m = RegExp("\\W\\w", "g").exec(s__$2);
        var offset = function() {
          var and__6198__auto__ = m;
          if (cljs.core.truth_(and__6198__auto__)) {
            return m.index + 1;
          } else {
            return and__6198__auto__;
          }
        }();
        if (cljs.core.truth_(offset)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s__$2, 0, offset)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, s__$2, offset)))].join(""), cljs.core.subs.call(null, s__$2, offset + 1)], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$2, null], null);
        }
      }
    };
  }(f, s__$1), s__$1)));
};
cljs.pprint.capitalize_word_writer = function cljs$pprint$capitalize_word_writer(writer) {
  var last_was_whitespace_QMARK_ = cljs.core.atom.call(null, true);
  if (typeof cljs.pprint.t_cljs$pprint15083 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint15083 = function(capitalize_word_writer, writer, last_was_whitespace_QMARK_, meta15084) {
      this.capitalize_word_writer = capitalize_word_writer;
      this.writer = writer;
      this.last_was_whitespace_QMARK_ = last_was_whitespace_QMARK_;
      this.meta15084 = meta15084;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint15083.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(_15085, meta15084__$1) {
        var self__ = this;
        var _15085__$1 = this;
        return new cljs.pprint.t_cljs$pprint15083(self__.capitalize_word_writer, self__.writer, self__.last_was_whitespace_QMARK_, meta15084__$1);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint15083.prototype.cljs$core$IMeta$_meta$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_15085) {
        var self__ = this;
        var _15085__$1 = this;
        return self__.meta15084;
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint15083.prototype.cljs$core$IWriter$_flush$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint15083.prototype.cljs$core$IWriter$_write$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__15086 = cljs.core._EQ_;
        var expr__15087 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__15086.call(null, String, expr__15087))) {
          var s = x;
          cljs.core._write.call(null, self__.writer, cljs.pprint.capitalize_string.call(null, s.toLowerCase(), cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)));
          if (s.length > 0) {
            return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1)));
          } else {
            return null;
          }
        } else {
          if (cljs.core.truth_(pred__15086.call(null, Number, expr__15087))) {
            var c = cljs.core.char$.call(null, x);
            var mod_c = cljs.core.truth_(cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)) ? clojure.string.upper_case.call(null, c) : c;
            cljs.core._write.call(null, self__.writer, mod_c);
            return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(c));
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__15087)].join(""));
          }
        }
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint15083.getBasis = function(last_was_whitespace_QMARK_) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "capitalize-word-writer", "capitalize-word-writer", 196688059, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing all words"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "last-was-whitespace?", "last-was-whitespace?", -1073928093, null), new cljs.core.Symbol(null, "meta15084", "meta15084", -403993123, null)], null);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint15083.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint15083.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint15083";
    cljs.pprint.t_cljs$pprint15083.cljs$lang$ctorPrWriter = function(last_was_whitespace_QMARK_) {
      return function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
        return cljs.core._write.call(null, writer__6817__auto__, "cljs.pprint/t_cljs$pprint15083");
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.__GT_t_cljs$pprint15083 = function(last_was_whitespace_QMARK_) {
      return function cljs$pprint$capitalize_word_writer_$___GT_t_cljs$pprint15083(capitalize_word_writer__$1, writer__$1, last_was_whitespace_QMARK___$1, meta15084) {
        return new cljs.pprint.t_cljs$pprint15083(capitalize_word_writer__$1, writer__$1, last_was_whitespace_QMARK___$1, meta15084);
      };
    }(last_was_whitespace_QMARK_);
  }
  return new cljs.pprint.t_cljs$pprint15083(cljs$pprint$capitalize_word_writer, writer, last_was_whitespace_QMARK_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.init_cap_writer = function cljs$pprint$init_cap_writer(writer) {
  var capped = cljs.core.atom.call(null, false);
  if (typeof cljs.pprint.t_cljs$pprint15095 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint15095 = function(init_cap_writer, writer, capped, meta15096) {
      this.init_cap_writer = init_cap_writer;
      this.writer = writer;
      this.capped = capped;
      this.meta15096 = meta15096;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint15095.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(capped) {
      return function(_15097, meta15096__$1) {
        var self__ = this;
        var _15097__$1 = this;
        return new cljs.pprint.t_cljs$pprint15095(self__.init_cap_writer, self__.writer, self__.capped, meta15096__$1);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint15095.prototype.cljs$core$IMeta$_meta$arity$1 = function(capped) {
      return function(_15097) {
        var self__ = this;
        var _15097__$1 = this;
        return self__.meta15096;
      };
    }(capped);
    cljs.pprint.t_cljs$pprint15095.prototype.cljs$core$IWriter$_flush$arity$1 = function(capped) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint15095.prototype.cljs$core$IWriter$_write$arity$2 = function(capped) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__15098 = cljs.core._EQ_;
        var expr__15099 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__15098.call(null, String, expr__15099))) {
          var s = clojure.string.lower_case.call(null, x);
          if (cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped))) {
            var m = RegExp("\\S", "g").exec(s);
            var offset = function() {
              var and__6198__auto__ = m;
              if (cljs.core.truth_(and__6198__auto__)) {
                return m.index;
              } else {
                return and__6198__auto__;
              }
            }();
            if (cljs.core.truth_(offset)) {
              cljs.core._write.call(null, self__.writer, [cljs.core.str(cljs.core.subs.call(null, s, 0, offset)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, s, offset))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, offset + 1)))].join(""));
              return cljs.core.reset_BANG_.call(null, self__.capped, true);
            } else {
              return cljs.core._write.call(null, self__.writer, s);
            }
          } else {
            return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
          }
        } else {
          if (cljs.core.truth_(pred__15098.call(null, Number, expr__15099))) {
            var c = cljs.core.char$.call(null, x);
            if (cljs.core.truth_(function() {
              var and__6198__auto__ = cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped));
              if (and__6198__auto__) {
                return goog.string.isUnicodeChar(c);
              } else {
                return and__6198__auto__;
              }
            }())) {
              cljs.core.reset_BANG_.call(null, self__.capped, true);
              return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, c));
            } else {
              return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, c));
            }
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__15099)].join(""));
          }
        }
      };
    }(capped);
    cljs.pprint.t_cljs$pprint15095.getBasis = function(capped) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "init-cap-writer", "init-cap-writer", -861558336, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing the first word"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "capped", "capped", -1650988402, null), new cljs.core.Symbol(null, "meta15096", "meta15096", 748223803, null)], null);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint15095.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint15095.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint15095";
    cljs.pprint.t_cljs$pprint15095.cljs$lang$ctorPrWriter = function(capped) {
      return function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
        return cljs.core._write.call(null, writer__6817__auto__, "cljs.pprint/t_cljs$pprint15095");
      };
    }(capped);
    cljs.pprint.__GT_t_cljs$pprint15095 = function(capped) {
      return function cljs$pprint$init_cap_writer_$___GT_t_cljs$pprint15095(init_cap_writer__$1, writer__$1, capped__$1, meta15096) {
        return new cljs.pprint.t_cljs$pprint15095(init_cap_writer__$1, writer__$1, capped__$1, meta15096);
      };
    }(capped);
  }
  return new cljs.pprint.t_cljs$pprint15095(cljs$pprint$init_cap_writer, writer, capped, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.modify_case = function cljs$pprint$modify_case(make_writer, params, navigator, offsets) {
  var clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var _STAR_out_STAR_15102 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = make_writer.call(null, cljs.core._STAR_out_STAR_);
  try {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_15102;
  }
};
cljs.pprint.get_pretty_writer = function cljs$pprint$get_pretty_writer(writer) {
  if (cljs.core.truth_(cljs.pprint.pretty_writer_QMARK_.call(null, writer))) {
    return writer;
  } else {
    return cljs.pprint.pretty_writer.call(null, writer, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_);
  }
};
cljs.pprint.fresh_line = function cljs$pprint$fresh_line() {
  if (!(cljs.core._STAR_out_STAR_ == null) ? cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core._STAR_out_STAR_.cljs$core$IDeref$ ? true : !cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_)) {
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))))) {
      return cljs.pprint.prn.call(null);
    } else {
      return null;
    }
  } else {
    return cljs.pprint.prn.call(null);
  }
};
cljs.pprint.absolute_tabulation = function cljs$pprint$absolute_tabulation(params, navigator, offsets) {
  var colnum_15105 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_15106 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var current_15107 = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var space_count_15108 = current_15107 < colnum_15105 ? colnum_15105 - current_15107 : cljs.core._EQ_.call(null, colinc_15106, 0) ? 0 : colinc_15106 - cljs.core.rem.call(null, current_15107 - colnum_15105, colinc_15106);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_15108, " ")));
  return navigator;
};
cljs.pprint.relative_tabulation = function cljs$pprint$relative_tabulation(params, navigator, offsets) {
  var colrel_15109 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_15110 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var start_col_15111 = colrel_15109 + cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var offset_15112 = colinc_15110 > 0 ? cljs.core.rem.call(null, start_col_15111, colinc_15110) : 0;
  var space_count_15113 = colrel_15109 + (cljs.core._EQ_.call(null, 0, offset_15112) ? 0 : colinc_15110 - offset_15112);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_15113, " ")));
  return navigator;
};
cljs.pprint.format_logical_block = function cljs$pprint$format_logical_block(params, navigator, offsets) {
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause_count = cljs.core.count.call(null, clauses);
  var prefix = clause_count > 1 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.first.call(null, clauses)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? "(" : null;
  var body = cljs.core.nth.call(null, clauses, clause_count > 1 ? 1 : 0);
  var suffix = clause_count > 2 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.nth.call(null, clauses, 2)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? ")" : null;
  var vec__15119 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__15119, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__15119, 1, null);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_15122_15124 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_15123_15125 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, suffix);
      cljs.pprint.execute_sub_format.call(null, body, cljs.pprint.init_navigator.call(null, arg), (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_15123_15125;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_15122_15124;
    }
  }
  return navigator__$1;
};
cljs.pprint.set_indent = function cljs$pprint$set_indent(params, navigator, offsets) {
  var relative_to = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "current", "current", -1088038603) : new cljs.core.Keyword(null, "block", "block", 664686210);
  cljs.pprint.pprint_indent.call(null, relative_to, (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params));
  return navigator;
};
cljs.pprint.conditional_newline = function cljs$pprint$conditional_newline(params, navigator, offsets) {
  var kind = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336) : new cljs.core.Keyword(null, "fill", "fill", 883462889) : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, 
  "miser", "miser", -556060186) : new cljs.core.Keyword(null, "linear", "linear", 872268697);
  cljs.pprint.pprint_newline.call(null, kind);
  return navigator;
};
cljs.pprint.directive_table = cljs.core.PersistentHashMap.fromArrays(["A", "S", "D", "B", "O", "X", "R", "P", "C", "F", "E", "G", "$", "%", "\x26", "|", "~", "\n", "T", "*", "?", "(", ")", "[", ";", "]", "{", "}", "\x3c", "\x3e", "^", "W", "_", "I"], [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "A", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", 
"mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 
new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__15126_SHARP_, p2__15127_SHARP_, p3__15128_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.print_str, p1__15126_SHARP_, p2__15127_SHARP_, p3__15128_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "S", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__15129_SHARP_, p2__15130_SHARP_, p3__15131_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.pr_str, p1__15129_SHARP_, p2__15130_SHARP_, p3__15131_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "D", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__15132_SHARP_, p2__15133_SHARP_, p3__15134_SHARP_) {
    return cljs.pprint.format_integer.call(null, 10, p1__15132_SHARP_, p2__15133_SHARP_, p3__15134_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "B", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__15135_SHARP_, p2__15136_SHARP_, p3__15137_SHARP_) {
    return cljs.pprint.format_integer.call(null, 2, p1__15135_SHARP_, p2__15136_SHARP_, p3__15137_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "O", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__15138_SHARP_, p2__15139_SHARP_, p3__15140_SHARP_) {
    return cljs.pprint.format_integer.call(null, 8, p1__15138_SHARP_, p2__15139_SHARP_, p3__15140_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "X", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__15141_SHARP_, p2__15142_SHARP_, p3__15143_SHARP_) {
    return cljs.pprint.format_integer.call(null, 16, p1__15141_SHARP_, p2__15142_SHARP_, p3__15143_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "R", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(cljs.core.first.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return function(p1__15144_SHARP_, p2__15145_SHARP_, p3__15146_SHARP_) {
      return cljs.pprint.format_integer.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(p1__15144_SHARP_), p1__15144_SHARP_, p2__15145_SHARP_, p3__15146_SHARP_);
    };
  } else {
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(and__6198__auto__)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__6198__auto__;
      }
    }())) {
      return function(p1__15147_SHARP_, p2__15148_SHARP_, p3__15149_SHARP_) {
        return cljs.pprint.format_old_roman.call(null, p1__15147_SHARP_, p2__15148_SHARP_, p3__15149_SHARP_);
      };
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return function(p1__15150_SHARP_, p2__15151_SHARP_, p3__15152_SHARP_) {
          return cljs.pprint.format_new_roman.call(null, p1__15150_SHARP_, p2__15151_SHARP_, p3__15152_SHARP_);
        };
      } else {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
          return function(p1__15153_SHARP_, p2__15154_SHARP_, p3__15155_SHARP_) {
            return cljs.pprint.format_ordinal_english.call(null, p1__15153_SHARP_, p2__15154_SHARP_, p3__15155_SHARP_);
          };
        } else {
          return function(p1__15156_SHARP_, p2__15157_SHARP_, p3__15158_SHARP_) {
            return cljs.pprint.format_cardinal_english.call(null, p1__15156_SHARP_, p2__15157_SHARP_, p3__15158_SHARP_);
          };
        }
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "P", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var navigator__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.pprint.relative_reposition.call(null, navigator, -1) : navigator;
    var strs = cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["y", "ies"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "s"], null);
    var vec__15168 = cljs.pprint.next_arg.call(null, navigator__$1);
    var arg = cljs.core.nth.call(null, vec__15168, 0, null);
    var navigator__$2 = cljs.core.nth.call(null, vec__15168, 1, null);
    cljs.pprint.print.call(null, cljs.core._EQ_.call(null, arg, 1) ? cljs.core.first.call(null, strs) : cljs.core.second.call(null, strs));
    return navigator__$2;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "C", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "char-format", "char-format", -1016499218), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.pretty_character;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.readable_character;
    } else {
      return cljs.pprint.plain_character;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "F", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.fixed_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "E", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.exponential_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "G", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.general_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "$", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, Number], null), new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.dollar_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "%", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__7125__auto___15186 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_15187 = 0;
    while (true) {
      if (i_15187 < n__7125__auto___15186) {
        cljs.pprint.prn.call(null);
        var G__15188 = i_15187 + 1;
        i_15187 = G__15188;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x26", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var cnt_15189 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cnt_15189 > 0) {
      cljs.pprint.fresh_line.call(null);
    } else {
    }
    var n__7125__auto___15190 = cnt_15189 - 1;
    var i_15191 = 0;
    while (true) {
      if (i_15191 < n__7125__auto___15190) {
        cljs.pprint.prn.call(null);
        var G__15192 = i_15191 + 1;
        i_15191 = G__15192;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "|", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__7125__auto___15193 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_15194 = 0;
    while (true) {
      if (i_15194 < n__7125__auto___15193) {
        cljs.pprint.print.call(null, "\f");
        var G__15195 = i_15194 + 1;
        i_15194 = G__15195;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "~", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n, "~")));
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\n", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), 
new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      cljs.pprint.prn.call(null);
    } else {
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "T", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colnum", "colnum", 2023796854), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(p1__15159_SHARP_, p2__15160_SHARP_, p3__15161_SHARP_) {
      return cljs.pprint.relative_tabulation.call(null, p1__15159_SHARP_, p2__15160_SHARP_, p3__15161_SHARP_);
    };
  } else {
    return function(p1__15162_SHARP_, p2__15163_SHARP_, p3__15164_SHARP_) {
      return cljs.pprint.absolute_tabulation.call(null, p1__15162_SHARP_, p2__15163_SHARP_, p3__15164_SHARP_);
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "*", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      return cljs.pprint.absolute_reposition.call(null, navigator, n);
    } else {
      return cljs.pprint.relative_reposition.call(null, navigator, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? -n : n);
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "?", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), 
cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(params__$1, navigator, offsets) {
      var vec__15171 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__15171, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__15171, 1, null);
      return cljs.pprint.execute_sub_format.call(null, subformat, navigator__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
    };
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__15174 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__15174, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__15174, 1, null);
      var vec__15177 = cljs.pprint.next_arg.call(null, navigator__$1);
      var subargs = cljs.core.nth.call(null, vec__15177, 0, null);
      var navigator__$2 = cljs.core.nth.call(null, vec__15177, 1, null);
      var sub_navigator = cljs.pprint.init_navigator.call(null, subargs);
      cljs.pprint.execute_sub_format.call(null, subformat, sub_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
      return navigator__$2;
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "(", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), ")", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), null, new cljs.core.Keyword(null, "else", "else", -1508377146), null], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  var mod_case_writer = cljs.core.truth_(function() {
    var and__6198__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__6198__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__6198__auto__;
    }
  }()) ? cljs.pprint.upcase_writer : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.capitalize_word_writer : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.init_cap_writer : cljs.pprint.downcase_writer;
  return function(mod_case_writer) {
    return function(p1__15165_SHARP_, p2__15166_SHARP_, p3__15167_SHARP_) {
      return cljs.pprint.modify_case.call(null, mod_case_writer, p1__15165_SHARP_, p2__15166_SHARP_, p3__15167_SHARP_);
    };
  }(mod_case_writer);
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ")", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "[", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selector", "selector", 762528866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "]", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), true, new cljs.core.Keyword(null, "else", "else", -1508377146), 
new cljs.core.Keyword(null, "last", "last", 1105735132)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.boolean_conditional;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.check_arg_conditional;
    } else {
      return cljs.pprint.choice_conditional;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ";", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), true], null), new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "]", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "{", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "right", "right", -452581833), "}", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
false], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__6198__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__6198__auto__;
    }
  }())) {
    return cljs.pprint.iterate_main_sublists;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.iterate_list_of_sublists;
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return cljs.pprint.iterate_main_list;
      } else {
        return cljs.pprint.iterate_sublist;
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "}", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3c", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "\x3e", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
true, new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.Keyword(null, "first", "first", -644103046)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.logical_block_or_justify;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3e", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "^", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, 
new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var arg1 = (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg2 = (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg3 = (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var exit = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007) : new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333);
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = arg1;
      if (cljs.core.truth_(and__6198__auto__)) {
        var and__6198__auto____$1 = arg2;
        if (cljs.core.truth_(and__6198__auto____$1)) {
          return arg3;
        } else {
          return and__6198__auto____$1;
        }
      } else {
        return and__6198__auto__;
      }
    }())) {
      if (arg1 <= arg2 && arg2 <= arg3) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
      } else {
        return navigator;
      }
    } else {
      if (cljs.core.truth_(function() {
        var and__6198__auto__ = arg1;
        if (cljs.core.truth_(and__6198__auto__)) {
          return arg2;
        } else {
          return and__6198__auto__;
        }
      }())) {
        if (cljs.core._EQ_.call(null, arg1, arg2)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
        } else {
          return navigator;
        }
      } else {
        if (cljs.core.truth_(arg1)) {
          if (cljs.core._EQ_.call(null, arg1, 0)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        } else {
          if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1))) : cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        }
      }
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "W", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var or__6210__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    }
  }())) {
    var bindings = cljs.core.concat.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1290497552), null, new cljs.core.Keyword(null, "length", "length", 588987862), null], null) : cljs.core.PersistentVector.EMPTY, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), true], null) : cljs.core.PersistentVector.EMPTY);
    return function(bindings) {
      return function(params__$1, navigator, offsets) {
        var vec__15180 = cljs.pprint.next_arg.call(null, navigator);
        var arg = cljs.core.nth.call(null, vec__15180, 0, null);
        var navigator__$1 = cljs.core.nth.call(null, vec__15180, 1, null);
        if (cljs.core.truth_(cljs.core.apply.call(null, cljs.pprint.write, arg, bindings))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
        } else {
          return navigator__$1;
        }
      };
    }(bindings);
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__15183 = cljs.pprint.next_arg.call(null, navigator);
      var arg = cljs.core.nth.call(null, vec__15183, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__15183, 1, null);
      if (cljs.core.truth_(cljs.pprint.write_out.call(null, arg))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
      } else {
        return navigator__$1;
      }
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "_", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.conditional_newline;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "I", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.set_indent;
}], null)]);
cljs.pprint.param_pattern = /^([vV]|#|('.)|([+-]?\d+)|(?=,))/;
cljs.pprint.special_params = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335), null, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196), null], null), null);
cljs.pprint.extract_param = function cljs$pprint$extract_param(p__15196) {
  var vec__15200 = p__15196;
  var s = cljs.core.nth.call(null, vec__15200, 0, null);
  var offset = cljs.core.nth.call(null, vec__15200, 1, null);
  var saw_comma = cljs.core.nth.call(null, vec__15200, 2, null);
  var m = new RegExp(cljs.pprint.param_pattern.source, "g");
  var param = m.exec(s);
  if (cljs.core.truth_(param)) {
    var token_str = cljs.core.first.call(null, param);
    var remainder = cljs.core.subs.call(null, s, m.lastIndex);
    var new_offset = offset + m.lastIndex;
    if (!cljs.core._EQ_.call(null, ",", cljs.core.nth.call(null, remainder, 0))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder, new_offset, false], null)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, remainder, 1), new_offset + 1, true], null)], null);
    }
  } else {
    if (cljs.core.truth_(saw_comma)) {
      return cljs.pprint.format_error.call(null, "Badly formed parameters in format directive", offset);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset], null)], null);
    }
  }
};
cljs.pprint.extract_params = function cljs$pprint$extract_params(s, offset) {
  return cljs.pprint.consume.call(null, cljs.pprint.extract_param, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, false], null));
};
cljs.pprint.translate_param = function cljs$pprint$translate_param(p__15203) {
  var vec__15207 = p__15203;
  var p = cljs.core.nth.call(null, vec__15207, 0, null);
  var offset = cljs.core.nth.call(null, vec__15207, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, p.length, 0) ? null : cljs.core._EQ_.call(null, p.length, 1) && cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["V", null, "v", null], null), null), cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196) : cljs.core._EQ_.call(null, p.length, 1) && 
  cljs.core._EQ_.call(null, "#", cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335) : cljs.core._EQ_.call(null, p.length, 2) && cljs.core._EQ_.call(null, "'", cljs.core.nth.call(null, p, 0)) ? cljs.core.nth.call(null, p, 1) : parseInt(p, 10), offset], null);
};
cljs.pprint.flag_defs = new cljs.core.PersistentArrayMap(null, 2, [":", new cljs.core.Keyword(null, "colon", "colon", -965200945), "@", new cljs.core.Keyword(null, "at", "at", 1476951349)], null);
cljs.pprint.extract_flags = function cljs$pprint$extract_flags(s, offset) {
  return cljs.pprint.consume.call(null, function(p__15214) {
    var vec__15215 = p__15214;
    var s__$1 = cljs.core.nth.call(null, vec__15215, 0, null);
    var offset__$1 = cljs.core.nth.call(null, vec__15215, 1, null);
    var flags = cljs.core.nth.call(null, vec__15215, 2, null);
    if (cljs.core.empty_QMARK_.call(null, s__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
    } else {
      var flag = cljs.core.get.call(null, cljs.pprint.flag_defs, cljs.core.first.call(null, s__$1));
      if (cljs.core.truth_(flag)) {
        if (cljs.core.contains_QMARK_.call(null, flags, flag)) {
          return cljs.pprint.format_error.call(null, [cljs.core.str('Flag "'), cljs.core.str(cljs.core.first.call(null, s__$1)), cljs.core.str('" appears more than once in a directive')].join(""), offset__$1);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s__$1, 1), offset__$1 + 1, cljs.core.assoc.call(null, flags, flag, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, offset__$1], null))], null)], null);
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.pprint.check_flags = function cljs$pprint$check_flags(def, flags) {
  var allowed = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(def);
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__6198__auto__) {
      return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__6198__auto__;
    }
  }())) {
    cljs.pprint.format_error.call(null, [cljs.core.str('"@" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__6198__auto__) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__6198__auto__;
    }
  }())) {
    cljs.pprint.format_error.call(null, [cljs.core.str('":" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "both", "both", -393648840)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__6198__auto__) {
      var and__6198__auto____$1 = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
      if (cljs.core.truth_(and__6198__auto____$1)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return cljs.pprint.format_error.call(null, [cljs.core.str('Cannot combine "@" and ":" flags for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), function() {
      var x__6548__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      var y__6549__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      return x__6548__auto__ < y__6549__auto__ ? x__6548__auto__ : y__6549__auto__;
    }());
  } else {
    return null;
  }
};
cljs.pprint.map_params = function cljs$pprint$map_params(def, params, flags, offset) {
  cljs.pprint.check_flags.call(null, def, flags);
  if (cljs.core.count.call(null, params) > cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))) {
    cljs.pprint.format_error.call(null, cljs.pprint.cl_format.call(null, null, 'Too many parameters for directive "~C": ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed', (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def), cljs.core.count.call(null, params), cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))), cljs.core.second.call(null, cljs.core.first.call(null, 
    params)));
  } else {
  }
  cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__15218_SHARP_, p2__15219_SHARP_) {
    var val = cljs.core.first.call(null, p1__15218_SHARP_);
    if (!(val == null || cljs.core.contains_QMARK_.call(null, cljs.pprint.special_params, val) || cljs.core._EQ_.call(null, cljs.core.second.call(null, cljs.core.second.call(null, p2__15219_SHARP_)), cljs.core.type.call(null, val)))) {
      return cljs.pprint.format_error.call(null, [cljs.core.str("Parameter "), cljs.core.str(cljs.core.name.call(null, cljs.core.first.call(null, p2__15219_SHARP_))), cljs.core.str(' has bad type in directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('": '), cljs.core.str(cljs.core.type.call(null, val))].join(""), cljs.core.second.call(null, p1__15218_SHARP_));
    } else {
      return null;
    }
  }, params, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)));
  return cljs.core.merge.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.reverse.call(null, function() {
    var iter__6990__auto__ = function cljs$pprint$map_params_$_iter__15251(s__15252) {
      return new cljs.core.LazySeq(null, function() {
        var s__15252__$1 = s__15252;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__15252__$1);
          if (temp__4425__auto__) {
            var s__15252__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__15252__$2)) {
              var c__6988__auto__ = cljs.core.chunk_first.call(null, s__15252__$2);
              var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
              var b__15254 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
              if (function() {
                var i__15253 = 0;
                while (true) {
                  if (i__15253 < size__6989__auto__) {
                    var vec__15267 = cljs.core._nth.call(null, c__6988__auto__, i__15253);
                    var name = cljs.core.nth.call(null, vec__15267, 0, null);
                    var vec__15270 = cljs.core.nth.call(null, vec__15267, 1, null);
                    var default$ = cljs.core.nth.call(null, vec__15270, 0, null);
                    cljs.core.chunk_append.call(null, b__15254, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null));
                    var G__15279 = i__15253 + 1;
                    i__15253 = G__15279;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15254), cljs$pprint$map_params_$_iter__15251.call(null, cljs.core.chunk_rest.call(null, s__15252__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15254), null);
              }
            } else {
              var vec__15273 = cljs.core.first.call(null, s__15252__$2);
              var name = cljs.core.nth.call(null, vec__15273, 0, null);
              var vec__15276 = cljs.core.nth.call(null, vec__15273, 1, null);
              var default$ = cljs.core.nth.call(null, vec__15276, 0, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null), cljs$pprint$map_params_$_iter__15251.call(null, cljs.core.rest.call(null, s__15252__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6990__auto__.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def));
  }())), cljs.core.reduce.call(null, function(p1__15220_SHARP_, p2__15221_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.assoc, p1__15220_SHARP_, p2__15221_SHARP_);
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(p1__15222_SHARP_) {
    return cljs.core.first.call(null, cljs.core.nth.call(null, p1__15222_SHARP_, 1));
  }, cljs.core.zipmap.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)), params))), flags);
};
cljs.pprint.compile_directive = function cljs$pprint$compile_directive(s, offset) {
  var vec__15292 = cljs.pprint.extract_params.call(null, s, offset);
  var raw_params = cljs.core.nth.call(null, vec__15292, 0, null);
  var vec__15295 = cljs.core.nth.call(null, vec__15292, 1, null);
  var rest = cljs.core.nth.call(null, vec__15295, 0, null);
  var offset__$1 = cljs.core.nth.call(null, vec__15295, 1, null);
  var vec__15298 = cljs.pprint.extract_flags.call(null, rest, offset__$1);
  var _ = cljs.core.nth.call(null, vec__15298, 0, null);
  var vec__15301 = cljs.core.nth.call(null, vec__15298, 1, null);
  var rest__$1 = cljs.core.nth.call(null, vec__15301, 0, null);
  var offset__$2 = cljs.core.nth.call(null, vec__15301, 1, null);
  var flags = cljs.core.nth.call(null, vec__15301, 2, null);
  var directive = cljs.core.first.call(null, rest__$1);
  var def = cljs.core.get.call(null, cljs.pprint.directive_table, clojure.string.upper_case.call(null, directive));
  var params = cljs.core.truth_(def) ? cljs.pprint.map_params.call(null, def, cljs.core.map.call(null, cljs.pprint.translate_param, raw_params), flags, offset__$2) : null;
  if (cljs.core.not.call(null, directive)) {
    cljs.pprint.format_error.call(null, "Format string ended in the middle of a directive", offset__$2);
  } else {
  }
  if (cljs.core.not.call(null, def)) {
    cljs.pprint.format_error.call(null, [cljs.core.str('Directive "'), cljs.core.str(directive), cljs.core.str('" is undefined')].join(""), offset__$2);
  } else {
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656)).cljs$core$IFn$_invoke$arity$1(def).call(null, params, offset__$2), def, params, offset__$2, null, null, null), function() {
    var remainder = cljs.core.subs.call(null, rest__$1, 1);
    var offset__$3 = offset__$2 + 1;
    var trim_QMARK_ = cljs.core._EQ_.call(null, "\n", (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    var trim_count = trim_QMARK_ ? cljs.pprint.prefix_count.call(null, remainder, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", "\t"], null)) : 0;
    var remainder__$1 = cljs.core.subs.call(null, remainder, trim_count);
    var offset__$4 = offset__$3 + trim_count;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder__$1, offset__$4], null);
  }()], null);
};
cljs.pprint.compile_raw_string = function cljs$pprint$compile_raw_string(s, offset) {
  return new cljs.pprint.compiled_directive(function(_, a, ___$1) {
    cljs.pprint.print.call(null, s);
    return a;
  }, null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "string", "string", -1989541586), s], null), offset, null, null, null);
};
cljs.pprint.right_bracket = function cljs$pprint$right_bracket(this$) {
  return (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.separator_QMARK_ = function cljs$pprint$separator_QMARK_(this$) {
  return (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.else_separator_QMARK_ = function cljs$pprint$else_separator_QMARK_(this$) {
  var and__6198__auto__ = (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
  if (cljs.core.truth_(and__6198__auto__)) {
    return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$));
  } else {
    return and__6198__auto__;
  }
};
cljs.pprint.process_bracket = function cljs$pprint$process_bracket(this$, remainder) {
  var vec__15307 = cljs.pprint.collect_clauses.call(null, (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), remainder);
  var subex = cljs.core.nth.call(null, vec__15307, 0, null);
  var remainder__$1 = cljs.core.nth.call(null, vec__15307, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(this$), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), cljs.pprint.tuple_map.call(null, subex, (new cljs.core.Keyword(null, 
  "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$))), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), null, null, null), remainder__$1], null);
};
cljs.pprint.process_clause = function cljs$pprint$process_clause(bracket_info, offset, remainder) {
  return cljs.pprint.consume.call(null, function(remainder__$1) {
    if (cljs.core.empty_QMARK_.call(null, remainder__$1)) {
      return cljs.pprint.format_error.call(null, "No closing bracket found.", offset);
    } else {
      var this$ = cljs.core.first.call(null, remainder__$1);
      var remainder__$2 = cljs.core.next.call(null, remainder__$1);
      if (cljs.core.truth_(cljs.pprint.right_bracket.call(null, this$))) {
        return cljs.pprint.process_bracket.call(null, this$, remainder__$2);
      } else {
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket_info), (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), null, remainder__$2], null)], null);
        } else {
          if (cljs.core.truth_(cljs.pprint.else_separator_QMARK_.call(null, this$))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "else", "else", -1508377146), null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), remainder__$2], null)], null);
          } else {
            if (cljs.core.truth_(cljs.pprint.separator_QMARK_.call(null, this$))) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), null, null, remainder__$2], null)], null);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$2], null);
            }
          }
        }
      }
    }
  }, remainder);
};
cljs.pprint.collect_clauses = function cljs$pprint$collect_clauses(bracket_info, offset, remainder) {
  return cljs.core.second.call(null, cljs.pprint.consume.call(null, function(p__15320) {
    var vec__15321 = p__15320;
    var clause_map = cljs.core.nth.call(null, vec__15321, 0, null);
    var saw_else = cljs.core.nth.call(null, vec__15321, 1, null);
    var remainder__$1 = cljs.core.nth.call(null, vec__15321, 2, null);
    var vec__15324 = cljs.pprint.process_clause.call(null, bracket_info, offset, remainder__$1);
    var clause = cljs.core.nth.call(null, vec__15324, 0, null);
    var vec__15327 = cljs.core.nth.call(null, vec__15324, 1, null);
    var type = cljs.core.nth.call(null, vec__15327, 0, null);
    var right_params = cljs.core.nth.call(null, vec__15327, 1, null);
    var else_params = cljs.core.nth.call(null, vec__15327, 2, null);
    var remainder__$2 = cljs.core.nth.call(null, vec__15327, 3, null);
    if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, cljs.core.PersistentArrayMap.fromArray([cljs.core.truth_(saw_else) ? new cljs.core.Keyword(null, "else", "else", -1508377146) : new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [clause], null), new cljs.core.Keyword(null, "right-params", "right-params", -1790676237), right_params], true, false)), remainder__$2], null)], null);
    } else {
      if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "else", "else", -1508377146))) {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
          return cljs.pprint.format_error.call(null, 'Two else clauses ("~:;") inside bracket construction.', offset);
        } else {
          if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
            return cljs.pprint.format_error.call(null, 'An else clause ("~:;") is in a bracket type that doesn\'t support it.', offset);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info)) && cljs.core.seq.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
              return cljs.pprint.format_error.call(null, 'The else clause ("~:;") is only allowed in the first position for this directive.', offset);
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null), new cljs.core.Keyword(null, "else-params", "else-params", 
                -832171646), else_params], null)), false, remainder__$2], null)], null);
              } else {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), true, remainder__$2], null)], 
                null);
              }
            }
          }
        }
      } else {
        if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "separator", "separator", -1628749125))) {
          if (cljs.core.truth_(saw_else)) {
            return cljs.pprint.format_error.call(null, 'A plain clause (with "~;") follows an else clause ("~:;") inside bracket construction.', offset);
          } else {
            if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
              return cljs.pprint.format_error.call(null, 'A separator ("~;") is in a bracket type that doesn\'t support it.', offset);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), false, remainder__$2], null)], null)
              ;
            }
          }
        } else {
          return null;
        }
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), cljs.core.PersistentVector.EMPTY], null), false, remainder], null)));
};
cljs.pprint.process_nesting = function cljs$pprint$process_nesting(format) {
  return cljs.core.first.call(null, cljs.pprint.consume.call(null, function(remainder) {
    var this$ = cljs.core.first.call(null, remainder);
    var remainder__$1 = cljs.core.next.call(null, remainder);
    var bracket = (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$));
    if (cljs.core.truth_((new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket))) {
      return cljs.pprint.process_bracket.call(null, this$, remainder__$1);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$1], null);
    }
  }, format));
};
cljs.pprint.compile_format = function cljs$pprint$compile_format(format_str) {
  var _STAR_format_str_STAR_15335 = cljs.pprint._STAR_format_str_STAR_;
  cljs.pprint._STAR_format_str_STAR_ = format_str;
  try {
    return cljs.pprint.process_nesting.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(_STAR_format_str_STAR_15335) {
      return function(p__15336) {
        var vec__15337 = p__15336;
        var s = cljs.core.nth.call(null, vec__15337, 0, null);
        var offset = cljs.core.nth.call(null, vec__15337, 1, null);
        if (cljs.core.empty_QMARK_.call(null, s)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, s], null);
        } else {
          var tilde = s.indexOf("~");
          if (tilde < 0) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, s, offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", offset + s.length], null)], null);
          } else {
            if (tilde === 0) {
              return cljs.pprint.compile_directive.call(null, cljs.core.subs.call(null, s, 1), offset + 1);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, cljs.core.subs.call(null, s, 0, tilde), offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, tilde), tilde + offset], null)], null);
            }
          }
        }
      };
    }(_STAR_format_str_STAR_15335), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [format_str, 0], null))));
  } finally {
    cljs.pprint._STAR_format_str_STAR_ = _STAR_format_str_STAR_15335;
  }
};
cljs.pprint.needs_pretty = function cljs$pprint$needs_pretty(format) {
  var format__$1 = format;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, format__$1)) {
      return false;
    } else {
      if (cljs.core.truth_(function() {
        var or__6210__auto__ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1))));
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          var or__6210__auto____$1 = cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          if (cljs.core.truth_(or__6210__auto____$1)) {
            return or__6210__auto____$1;
          } else {
            return cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          }
        }
      }())) {
        return true;
      } else {
        var G__15340 = cljs.core.next.call(null, format__$1);
        format__$1 = G__15340;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.execute_format = function cljs$pprint$execute_format(var_args) {
  var args15341 = [];
  var len__7285__auto___15351 = arguments.length;
  var i__7286__auto___15352 = 0;
  while (true) {
    if (i__7286__auto___15352 < len__7285__auto___15351) {
      args15341.push(arguments[i__7286__auto___15352]);
      var G__15353 = i__7286__auto___15352 + 1;
      i__7286__auto___15352 = G__15353;
      continue;
    } else {
    }
    break;
  }
  var G__15343 = args15341.length;
  switch(G__15343) {
    case 3:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15341.length)].join(""));;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3 = function(stream, format, args) {
  var sb = new goog.string.StringBuffer;
  var real_stream = cljs.core.not.call(null, stream) || stream === true ? new cljs.core.StringBufferWriter(sb) : stream;
  var wrapped_stream = cljs.core.truth_(function() {
    var and__6198__auto__ = cljs.pprint.needs_pretty.call(null, format);
    if (cljs.core.truth_(and__6198__auto__)) {
      return cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, real_stream));
    } else {
      return and__6198__auto__;
    }
  }()) ? cljs.pprint.get_pretty_writer.call(null, real_stream) : real_stream;
  var _STAR_out_STAR_15344 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = wrapped_stream;
  try {
    try {
      cljs.pprint.execute_format.call(null, format, args);
    } finally {
      if (!(real_stream === wrapped_stream)) {
        cljs.core._flush.call(null, wrapped_stream);
      } else {
      }
    }
    if (cljs.core.not.call(null, stream)) {
      return [cljs.core.str(sb)].join("");
    } else {
      if (stream === true) {
        return cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
      } else {
        return null;
      }
    }
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_15344;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2 = function(format, args) {
  cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, context))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__15345 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__15345, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__15345, 1, null);
      var vec__15348 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__15348, 0, null);
      var offsets = cljs.core.nth.call(null, vec__15348, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), args__$1);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format);
  return null;
};
cljs.pprint.execute_format.cljs$lang$maxFixedArity = 3;
cljs.pprint.cached_compile = cljs.core.memoize.call(null, cljs.pprint.compile_format);
cljs.pprint.use_method = function cljs$pprint$use_method(multifn, dispatch_val, func) {
  return cljs.core._add_method.call(null, multifn, dispatch_val, func);
};
cljs.pprint.reader_macros = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "'", new cljs.core.Symbol(null, "var", "var", 870848730, null), "#'", new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), "@", new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null), "~", new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null), "@", new cljs.core.Symbol("cljs.core", 
"unquote", "cljs.core/unquote", 1013085760, null), "~"], null);
cljs.pprint.pprint_reader_macro = function cljs$pprint$pprint_reader_macro(alis) {
  var macro_char = cljs.pprint.reader_macros.call(null, cljs.core.first.call(null, alis));
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = macro_char;
    if (cljs.core.truth_(and__6198__auto__)) {
      return cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, alis));
    } else {
      return and__6198__auto__;
    }
  }())) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, macro_char);
    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis));
    return true;
  } else {
    return null;
  }
};
cljs.pprint.pprint_simple_list = function cljs$pprint$pprint_simple_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_15358_15361 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_15359_15362 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      var length_count15360_15363 = 0;
      var alis_15364__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count15360_15363 < cljs.core._STAR_print_length_STAR_) {
          if (alis_15364__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_15364__$1));
            if (cljs.core.next.call(null, alis_15364__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__15365 = length_count15360_15363 + 1;
              var G__15366 = cljs.core.next.call(null, alis_15364__$1);
              length_count15360_15363 = G__15365;
              alis_15364__$1 = G__15366;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_15359_15362;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_15358_15361;
    }
  }
  return null;
};
cljs.pprint.pprint_list = function cljs$pprint$pprint_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    return cljs.pprint.pprint_simple_list.call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_vector = function cljs$pprint$pprint_vector(avec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_15370_15373 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_15371_15374 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count15372_15375 = 0;
      var aseq_15376 = cljs.core.seq.call(null, avec);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count15372_15375 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_15376) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, aseq_15376));
            if (cljs.core.next.call(null, aseq_15376)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__15377 = length_count15372_15375 + 1;
              var G__15378 = cljs.core.next.call(null, aseq_15376);
              length_count15372_15375 = G__15377;
              aseq_15376 = G__15378;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_15371_15374;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_15370_15373;
    }
  }
  return null;
};
cljs.pprint.pprint_array = function() {
  var format_in__14210__auto__ = "~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e";
  var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
  return function(format_in__14210__auto__, cf__14211__auto__) {
    return function() {
      var G__15379__delegate = function(args__14212__auto__) {
        var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
        return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
      };
      var G__15379 = function(var_args) {
        var args__14212__auto__ = null;
        if (arguments.length > 0) {
          var G__15380__i = 0, G__15380__a = new Array(arguments.length - 0);
          while (G__15380__i < G__15380__a.length) {
            G__15380__a[G__15380__i] = arguments[G__15380__i + 0];
            ++G__15380__i;
          }
          args__14212__auto__ = new cljs.core.IndexedSeq(G__15380__a, 0);
        }
        return G__15379__delegate.call(this, args__14212__auto__);
      };
      G__15379.cljs$lang$maxFixedArity = 0;
      G__15379.cljs$lang$applyTo = function(arglist__15381) {
        var args__14212__auto__ = cljs.core.seq(arglist__15381);
        return G__15379__delegate(args__14212__auto__);
      };
      G__15379.cljs$core$IFn$_invoke$arity$variadic = G__15379__delegate;
      return G__15379;
    }();
  }(format_in__14210__auto__, cf__14211__auto__);
}();
cljs.pprint.pprint_map = function cljs$pprint$pprint_map(amap) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_15387_15392 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_15388_15393 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "{", null, "}");
      var length_count15389_15394 = 0;
      var aseq_15395 = cljs.core.seq.call(null, amap);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count15389_15394 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_15395) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR_15390_15396 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR_15391_15397 = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.ffirst.call(null, aseq_15395));
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                cljs.pprint._STAR_current_length_STAR_ = 0;
                cljs.pprint.write_out.call(null, cljs.core.fnext.call(null, cljs.core.first.call(null, aseq_15395)));
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_15391_15397;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_15390_15396;
              }
            }
            if (cljs.core.next.call(null, aseq_15395)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, ", ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__15398 = length_count15389_15394 + 1;
              var G__15399 = cljs.core.next.call(null, aseq_15395);
              length_count15389_15394 = G__15398;
              aseq_15395 = G__15399;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_15388_15393;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_15387_15392;
    }
  }
  return null;
};
cljs.pprint.pprint_simple_default = function cljs$pprint$pprint_simple_default(obj) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, obj));
};
cljs.pprint.pprint_set = function() {
  var format_in__14210__auto__ = "~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e";
  var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
  return function(format_in__14210__auto__, cf__14211__auto__) {
    return function() {
      var G__15400__delegate = function(args__14212__auto__) {
        var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
        return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
      };
      var G__15400 = function(var_args) {
        var args__14212__auto__ = null;
        if (arguments.length > 0) {
          var G__15401__i = 0, G__15401__a = new Array(arguments.length - 0);
          while (G__15401__i < G__15401__a.length) {
            G__15401__a[G__15401__i] = arguments[G__15401__i + 0];
            ++G__15401__i;
          }
          args__14212__auto__ = new cljs.core.IndexedSeq(G__15401__a, 0);
        }
        return G__15400__delegate.call(this, args__14212__auto__);
      };
      G__15400.cljs$lang$maxFixedArity = 0;
      G__15400.cljs$lang$applyTo = function(arglist__15402) {
        var args__14212__auto__ = cljs.core.seq(arglist__15402);
        return G__15400__delegate(args__14212__auto__);
      };
      G__15400.cljs$core$IFn$_invoke$arity$variadic = G__15400__delegate;
      return G__15400;
    }();
  }(format_in__14210__auto__, cf__14211__auto__);
}();
cljs.pprint.type_map = new cljs.core.PersistentArrayMap(null, 2, ["core$future_call", "Future", "core$promise", "Promise"], null);
cljs.pprint.map_ref_type = function cljs$pprint$map_ref_type(name) {
  var or__6210__auto__ = function() {
    var temp__4425__auto__ = cljs.core.re_find.call(null, /^[^$]+\$[^$]+/, name);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var match = temp__4425__auto__;
      return cljs.pprint.type_map.call(null, match);
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    return name;
  }
};
cljs.pprint.pprint_ideref = function cljs$pprint$pprint_ideref(o) {
  var prefix = [cljs.core.str("#\x3c"), cljs.core.str(cljs.pprint.map_ref_type.call(null, cljs.core.type.call(null, o).name)), cljs.core.str("@"), cljs.core.str(goog.getUid(o)), cljs.core.str(": ")].join("");
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_15407_15411 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_15408_15412 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, "\x3e");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), -(cljs.core.count.call(null, prefix) - 2));
      cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
      cljs.pprint.write_out.call(null, function() {
        var and__6198__auto__ = !(o == null) ? o.cljs$lang$protocol_mask$partition1$ & 1 || o.cljs$core$IPending$ ? true : !o.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o);
        if (and__6198__auto__) {
          return !cljs.core._realized_QMARK_.call(null, o);
        } else {
          return and__6198__auto__;
        }
      }() ? new cljs.core.Keyword(null, "not-delivered", "not-delivered", 1599158697) : cljs.core.deref.call(null, o));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_15408_15412;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_15407_15411;
    }
  }
  return null;
};
cljs.pprint.pprint_pqueue = function() {
  var format_in__14210__auto__ = "~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e";
  var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
  return function(format_in__14210__auto__, cf__14211__auto__) {
    return function() {
      var G__15413__delegate = function(args__14212__auto__) {
        var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
        return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
      };
      var G__15413 = function(var_args) {
        var args__14212__auto__ = null;
        if (arguments.length > 0) {
          var G__15414__i = 0, G__15414__a = new Array(arguments.length - 0);
          while (G__15414__i < G__15414__a.length) {
            G__15414__a[G__15414__i] = arguments[G__15414__i + 0];
            ++G__15414__i;
          }
          args__14212__auto__ = new cljs.core.IndexedSeq(G__15414__a, 0);
        }
        return G__15413__delegate.call(this, args__14212__auto__);
      };
      G__15413.cljs$lang$maxFixedArity = 0;
      G__15413.cljs$lang$applyTo = function(arglist__15415) {
        var args__14212__auto__ = cljs.core.seq(arglist__15415);
        return G__15413__delegate(args__14212__auto__);
      };
      G__15413.cljs$core$IFn$_invoke$arity$variadic = G__15413__delegate;
      return G__15413;
    }();
  }(format_in__14210__auto__, cf__14211__auto__);
}();
cljs.pprint.type_dispatcher = function cljs$pprint$type_dispatcher(obj) {
  if (obj instanceof cljs.core.PersistentQueue) {
    return new cljs.core.Keyword(null, "queue", "queue", 1455835879);
  } else {
    if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 32768 || obj.cljs$core$IDeref$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj)) {
      return new cljs.core.Keyword(null, "deref", "deref", -145586795);
    } else {
      if (obj instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(null, "symbol", "symbol", -1038572696);
      } else {
        if (cljs.core.seq_QMARK_.call(null, obj)) {
          return new cljs.core.Keyword(null, "list", "list", 765357683);
        } else {
          if (cljs.core.map_QMARK_.call(null, obj)) {
            return new cljs.core.Keyword(null, "map", "map", 1371690461);
          } else {
            if (cljs.core.vector_QMARK_.call(null, obj)) {
              return new cljs.core.Keyword(null, "vector", "vector", 1902966158);
            } else {
              if (cljs.core.set_QMARK_.call(null, obj)) {
                return new cljs.core.Keyword(null, "set", "set", 304602554);
              } else {
                if (obj == null) {
                  return null;
                } else {
                  return new cljs.core.Keyword(null, "default", "default", -1987822328);
                }
              }
            }
          }
        }
      }
    }
  }
};
if (typeof cljs.pprint.simple_dispatch !== "undefined") {
} else {
  cljs.pprint.simple_dispatch = function() {
    var method_table__7135__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__7136__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__7137__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__7138__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__7139__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "simple-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__7139__auto__, method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_list);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, null, function() {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, null));
});
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.brackets = function cljs$pprint$brackets(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["[", "]"], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(", ")"], null);
  }
};
cljs.pprint.pprint_ns_reference = function cljs$pprint$pprint_ns_reference(reference) {
  if (cljs.core.sequential_QMARK_.call(null, reference)) {
    var vec__15434 = cljs.pprint.brackets.call(null, reference);
    var start = cljs.core.nth.call(null, vec__15434, 0, null);
    var end = cljs.core.nth.call(null, vec__15434, 1, null);
    var vec__15437 = reference;
    var seq__15438 = cljs.core.seq.call(null, vec__15437);
    var first__15439 = cljs.core.first.call(null, seq__15438);
    var seq__15438__$1 = cljs.core.next.call(null, seq__15438);
    var keyw = first__15439;
    var args = seq__15438__$1;
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_15440_15450 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_15441_15451 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start, null, end);
        (function() {
          var format_in__14210__auto__ = "~w~:i";
          var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
          return function(format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15440_15450, _STAR_current_length_STAR_15441_15451, vec__15434, start, end, vec__15437, seq__15438, first__15439, seq__15438__$1, keyw, args) {
            return function() {
              var G__15452__delegate = function(args__14212__auto__) {
                var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
                return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
              };
              var G__15452 = function(var_args) {
                var args__14212__auto__ = null;
                if (arguments.length > 0) {
                  var G__15453__i = 0, G__15453__a = new Array(arguments.length - 0);
                  while (G__15453__i < G__15453__a.length) {
                    G__15453__a[G__15453__i] = arguments[G__15453__i + 0];
                    ++G__15453__i;
                  }
                  args__14212__auto__ = new cljs.core.IndexedSeq(G__15453__a, 0);
                }
                return G__15452__delegate.call(this, args__14212__auto__);
              };
              G__15452.cljs$lang$maxFixedArity = 0;
              G__15452.cljs$lang$applyTo = function(arglist__15454) {
                var args__14212__auto__ = cljs.core.seq(arglist__15454);
                return G__15452__delegate(args__14212__auto__);
              };
              G__15452.cljs$core$IFn$_invoke$arity$variadic = G__15452__delegate;
              return G__15452;
            }();
          }(format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15440_15450, _STAR_current_length_STAR_15441_15451, vec__15434, start, end, vec__15437, seq__15438, first__15439, seq__15438__$1, keyw, args);
        })().call(null, keyw);
        var args_15455__$1 = args;
        while (true) {
          if (cljs.core.seq.call(null, args_15455__$1)) {
            (function() {
              var format_in__14210__auto__ = " ";
              var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
              return function(args_15455__$1, format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15440_15450, _STAR_current_length_STAR_15441_15451, vec__15434, start, end, vec__15437, seq__15438, first__15439, seq__15438__$1, keyw, args) {
                return function() {
                  var G__15456__delegate = function(args__14212__auto__) {
                    var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
                    return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
                  };
                  var G__15456 = function(var_args) {
                    var args__14212__auto__ = null;
                    if (arguments.length > 0) {
                      var G__15457__i = 0, G__15457__a = new Array(arguments.length - 0);
                      while (G__15457__i < G__15457__a.length) {
                        G__15457__a[G__15457__i] = arguments[G__15457__i + 0];
                        ++G__15457__i;
                      }
                      args__14212__auto__ = new cljs.core.IndexedSeq(G__15457__a, 0);
                    }
                    return G__15456__delegate.call(this, args__14212__auto__);
                  };
                  G__15456.cljs$lang$maxFixedArity = 0;
                  G__15456.cljs$lang$applyTo = function(arglist__15458) {
                    var args__14212__auto__ = cljs.core.seq(arglist__15458);
                    return G__15456__delegate(args__14212__auto__);
                  };
                  G__15456.cljs$core$IFn$_invoke$arity$variadic = G__15456__delegate;
                  return G__15456;
                }();
              }(args_15455__$1, format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15440_15450, _STAR_current_length_STAR_15441_15451, vec__15434, start, end, vec__15437, seq__15438, first__15439, seq__15438__$1, keyw, args);
            })().call(null);
            var arg_15459 = cljs.core.first.call(null, args_15455__$1);
            if (cljs.core.sequential_QMARK_.call(null, arg_15459)) {
              var vec__15442_15460 = cljs.pprint.brackets.call(null, arg_15459);
              var start_15461__$1 = cljs.core.nth.call(null, vec__15442_15460, 0, null);
              var end_15462__$1 = cljs.core.nth.call(null, vec__15442_15460, 1, null);
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_15445_15463 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_15446_15464 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start_15461__$1, null, end_15462__$1);
                  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, arg_15459), 3) && cljs.core.second.call(null, arg_15459) instanceof cljs.core.Keyword) {
                    var vec__15447_15465 = arg_15459;
                    var ns_15466 = cljs.core.nth.call(null, vec__15447_15465, 0, null);
                    var kw_15467 = cljs.core.nth.call(null, vec__15447_15465, 1, null);
                    var lis_15468 = cljs.core.nth.call(null, vec__15447_15465, 2, null);
                    (function() {
                      var format_in__14210__auto__ = "~w ~w ";
                      var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
                      return function(args_15455__$1, format_in__14210__auto__, cf__14211__auto__, vec__15447_15465, ns_15466, kw_15467, lis_15468, _STAR_current_level_STAR_15445_15463, _STAR_current_length_STAR_15446_15464, vec__15442_15460, start_15461__$1, end_15462__$1, arg_15459, _STAR_current_level_STAR_15440_15450, _STAR_current_length_STAR_15441_15451, vec__15434, start, end, vec__15437, seq__15438, first__15439, seq__15438__$1, keyw, args) {
                        return function() {
                          var G__15469__delegate = function(args__14212__auto__) {
                            var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
                            return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
                          };
                          var G__15469 = function(var_args) {
                            var args__14212__auto__ = null;
                            if (arguments.length > 0) {
                              var G__15470__i = 0, G__15470__a = new Array(arguments.length - 0);
                              while (G__15470__i < G__15470__a.length) {
                                G__15470__a[G__15470__i] = arguments[G__15470__i + 0];
                                ++G__15470__i;
                              }
                              args__14212__auto__ = new cljs.core.IndexedSeq(G__15470__a, 0);
                            }
                            return G__15469__delegate.call(this, args__14212__auto__);
                          };
                          G__15469.cljs$lang$maxFixedArity = 0;
                          G__15469.cljs$lang$applyTo = function(arglist__15471) {
                            var args__14212__auto__ = cljs.core.seq(arglist__15471);
                            return G__15469__delegate(args__14212__auto__);
                          };
                          G__15469.cljs$core$IFn$_invoke$arity$variadic = G__15469__delegate;
                          return G__15469;
                        }();
                      }(args_15455__$1, format_in__14210__auto__, cf__14211__auto__, vec__15447_15465, ns_15466, kw_15467, lis_15468, _STAR_current_level_STAR_15445_15463, _STAR_current_length_STAR_15446_15464, vec__15442_15460, start_15461__$1, end_15462__$1, arg_15459, _STAR_current_level_STAR_15440_15450, _STAR_current_length_STAR_15441_15451, vec__15434, start, end, vec__15437, seq__15438, first__15439, seq__15438__$1, keyw, args);
                    })().call(null, ns_15466, kw_15467);
                    if (cljs.core.sequential_QMARK_.call(null, lis_15468)) {
                      (function() {
                        var format_in__14210__auto__ = cljs.core.vector_QMARK_.call(null, lis_15468) ? "~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e" : "~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e";
                        var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
                        return function(args_15455__$1, format_in__14210__auto__, cf__14211__auto__, vec__15447_15465, ns_15466, kw_15467, lis_15468, _STAR_current_level_STAR_15445_15463, _STAR_current_length_STAR_15446_15464, vec__15442_15460, start_15461__$1, end_15462__$1, arg_15459, _STAR_current_level_STAR_15440_15450, _STAR_current_length_STAR_15441_15451, vec__15434, start, end, vec__15437, seq__15438, first__15439, seq__15438__$1, keyw, args) {
                          return function() {
                            var G__15472__delegate = function(args__14212__auto__) {
                              var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
                              return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
                            };
                            var G__15472 = function(var_args) {
                              var args__14212__auto__ = null;
                              if (arguments.length > 0) {
                                var G__15473__i = 0, G__15473__a = new Array(arguments.length - 0);
                                while (G__15473__i < G__15473__a.length) {
                                  G__15473__a[G__15473__i] = arguments[G__15473__i + 0];
                                  ++G__15473__i;
                                }
                                args__14212__auto__ = new cljs.core.IndexedSeq(G__15473__a, 0);
                              }
                              return G__15472__delegate.call(this, args__14212__auto__);
                            };
                            G__15472.cljs$lang$maxFixedArity = 0;
                            G__15472.cljs$lang$applyTo = function(arglist__15474) {
                              var args__14212__auto__ = cljs.core.seq(arglist__15474);
                              return G__15472__delegate(args__14212__auto__);
                            };
                            G__15472.cljs$core$IFn$_invoke$arity$variadic = G__15472__delegate;
                            return G__15472;
                          }();
                        }(args_15455__$1, format_in__14210__auto__, cf__14211__auto__, vec__15447_15465, ns_15466, kw_15467, lis_15468, _STAR_current_level_STAR_15445_15463, _STAR_current_length_STAR_15446_15464, vec__15442_15460, start_15461__$1, end_15462__$1, arg_15459, _STAR_current_level_STAR_15440_15450, _STAR_current_length_STAR_15441_15451, vec__15434, start, end, vec__15437, seq__15438, first__15439, seq__15438__$1, keyw, args);
                      })().call(null, lis_15468);
                    } else {
                      cljs.pprint.write_out.call(null, lis_15468);
                    }
                  } else {
                    cljs.core.apply.call(null, function() {
                      var format_in__14210__auto__ = "~w ~:i~@{~w~^ ~:_~}";
                      var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
                      return function(args_15455__$1, format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15445_15463, _STAR_current_length_STAR_15446_15464, vec__15442_15460, start_15461__$1, end_15462__$1, arg_15459, _STAR_current_level_STAR_15440_15450, _STAR_current_length_STAR_15441_15451, vec__15434, start, end, vec__15437, seq__15438, first__15439, seq__15438__$1, keyw, args) {
                        return function() {
                          var G__15475__delegate = function(args__14212__auto__) {
                            var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
                            return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
                          };
                          var G__15475 = function(var_args) {
                            var args__14212__auto__ = null;
                            if (arguments.length > 0) {
                              var G__15476__i = 0, G__15476__a = new Array(arguments.length - 0);
                              while (G__15476__i < G__15476__a.length) {
                                G__15476__a[G__15476__i] = arguments[G__15476__i + 0];
                                ++G__15476__i;
                              }
                              args__14212__auto__ = new cljs.core.IndexedSeq(G__15476__a, 0);
                            }
                            return G__15475__delegate.call(this, args__14212__auto__);
                          };
                          G__15475.cljs$lang$maxFixedArity = 0;
                          G__15475.cljs$lang$applyTo = function(arglist__15477) {
                            var args__14212__auto__ = cljs.core.seq(arglist__15477);
                            return G__15475__delegate(args__14212__auto__);
                          };
                          G__15475.cljs$core$IFn$_invoke$arity$variadic = G__15475__delegate;
                          return G__15475;
                        }();
                      }(args_15455__$1, format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15445_15463, _STAR_current_length_STAR_15446_15464, vec__15442_15460, start_15461__$1, end_15462__$1, arg_15459, _STAR_current_level_STAR_15440_15450, _STAR_current_length_STAR_15441_15451, vec__15434, start, end, vec__15437, seq__15438, first__15439, seq__15438__$1, keyw, args);
                    }(), arg_15459);
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_15446_15464;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_15445_15463;
                }
              }
              if (cljs.core.next.call(null, args_15455__$1)) {
                (function() {
                  var format_in__14210__auto__ = "~_";
                  var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
                  return function(args_15455__$1, format_in__14210__auto__, cf__14211__auto__, vec__15442_15460, start_15461__$1, end_15462__$1, arg_15459, _STAR_current_level_STAR_15440_15450, _STAR_current_length_STAR_15441_15451, vec__15434, start, end, vec__15437, seq__15438, first__15439, seq__15438__$1, keyw, args) {
                    return function() {
                      var G__15478__delegate = function(args__14212__auto__) {
                        var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
                        return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
                      };
                      var G__15478 = function(var_args) {
                        var args__14212__auto__ = null;
                        if (arguments.length > 0) {
                          var G__15479__i = 0, G__15479__a = new Array(arguments.length - 0);
                          while (G__15479__i < G__15479__a.length) {
                            G__15479__a[G__15479__i] = arguments[G__15479__i + 0];
                            ++G__15479__i;
                          }
                          args__14212__auto__ = new cljs.core.IndexedSeq(G__15479__a, 0);
                        }
                        return G__15478__delegate.call(this, args__14212__auto__);
                      };
                      G__15478.cljs$lang$maxFixedArity = 0;
                      G__15478.cljs$lang$applyTo = function(arglist__15480) {
                        var args__14212__auto__ = cljs.core.seq(arglist__15480);
                        return G__15478__delegate(args__14212__auto__);
                      };
                      G__15478.cljs$core$IFn$_invoke$arity$variadic = G__15478__delegate;
                      return G__15478;
                    }();
                  }(args_15455__$1, format_in__14210__auto__, cf__14211__auto__, vec__15442_15460, start_15461__$1, end_15462__$1, arg_15459, _STAR_current_level_STAR_15440_15450, _STAR_current_length_STAR_15441_15451, vec__15434, start, end, vec__15437, seq__15438, first__15439, seq__15438__$1, keyw, args);
                })().call(null);
              } else {
              }
            } else {
              cljs.pprint.write_out.call(null, arg_15459);
              if (cljs.core.next.call(null, args_15455__$1)) {
                (function() {
                  var format_in__14210__auto__ = "~:_";
                  var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
                  return function(args_15455__$1, format_in__14210__auto__, cf__14211__auto__, arg_15459, _STAR_current_level_STAR_15440_15450, _STAR_current_length_STAR_15441_15451, vec__15434, start, end, vec__15437, seq__15438, first__15439, seq__15438__$1, keyw, args) {
                    return function() {
                      var G__15481__delegate = function(args__14212__auto__) {
                        var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
                        return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
                      };
                      var G__15481 = function(var_args) {
                        var args__14212__auto__ = null;
                        if (arguments.length > 0) {
                          var G__15482__i = 0, G__15482__a = new Array(arguments.length - 0);
                          while (G__15482__i < G__15482__a.length) {
                            G__15482__a[G__15482__i] = arguments[G__15482__i + 0];
                            ++G__15482__i;
                          }
                          args__14212__auto__ = new cljs.core.IndexedSeq(G__15482__a, 0);
                        }
                        return G__15481__delegate.call(this, args__14212__auto__);
                      };
                      G__15481.cljs$lang$maxFixedArity = 0;
                      G__15481.cljs$lang$applyTo = function(arglist__15483) {
                        var args__14212__auto__ = cljs.core.seq(arglist__15483);
                        return G__15481__delegate(args__14212__auto__);
                      };
                      G__15481.cljs$core$IFn$_invoke$arity$variadic = G__15481__delegate;
                      return G__15481;
                    }();
                  }(args_15455__$1, format_in__14210__auto__, cf__14211__auto__, arg_15459, _STAR_current_level_STAR_15440_15450, _STAR_current_length_STAR_15441_15451, vec__15434, start, end, vec__15437, seq__15438, first__15439, seq__15438__$1, keyw, args);
                })().call(null);
              } else {
              }
            }
            var G__15484 = cljs.core.next.call(null, args_15455__$1);
            args_15455__$1 = G__15484;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_15441_15451;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_15440_15450;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, reference);
  }
};
cljs.pprint.pprint_ns = function cljs$pprint$pprint_ns(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__15496 = alis;
    var seq__15497 = cljs.core.seq.call(null, vec__15496);
    var first__15498 = cljs.core.first.call(null, seq__15497);
    var seq__15497__$1 = cljs.core.next.call(null, seq__15497);
    var ns_sym = first__15498;
    var first__15498__$1 = cljs.core.first.call(null, seq__15497__$1);
    var seq__15497__$2 = cljs.core.next.call(null, seq__15497__$1);
    var ns_name = first__15498__$1;
    var stuff = seq__15497__$2;
    var vec__15499 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__15499, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__15499, 1, null);
    var vec__15502 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__15502, 0, null);
    var references = cljs.core.nth.call(null, vec__15502, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_15505_15507 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_15506_15508 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__14210__auto__ = "~w ~1I~@_~w";
          var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
          return function(format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15505_15507, _STAR_current_length_STAR_15506_15508, vec__15496, seq__15497, first__15498, seq__15497__$1, ns_sym, first__15498__$1, seq__15497__$2, ns_name, stuff, vec__15499, doc_str, stuff__$1, vec__15502, attr_map, references) {
            return function() {
              var G__15509__delegate = function(args__14212__auto__) {
                var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
                return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
              };
              var G__15509 = function(var_args) {
                var args__14212__auto__ = null;
                if (arguments.length > 0) {
                  var G__15510__i = 0, G__15510__a = new Array(arguments.length - 0);
                  while (G__15510__i < G__15510__a.length) {
                    G__15510__a[G__15510__i] = arguments[G__15510__i + 0];
                    ++G__15510__i;
                  }
                  args__14212__auto__ = new cljs.core.IndexedSeq(G__15510__a, 0);
                }
                return G__15509__delegate.call(this, args__14212__auto__);
              };
              G__15509.cljs$lang$maxFixedArity = 0;
              G__15509.cljs$lang$applyTo = function(arglist__15511) {
                var args__14212__auto__ = cljs.core.seq(arglist__15511);
                return G__15509__delegate(args__14212__auto__);
              };
              G__15509.cljs$core$IFn$_invoke$arity$variadic = G__15509__delegate;
              return G__15509;
            }();
          }(format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15505_15507, _STAR_current_length_STAR_15506_15508, vec__15496, seq__15497, first__15498, seq__15497__$1, ns_sym, first__15498__$1, seq__15497__$2, ns_name, stuff, vec__15499, doc_str, stuff__$1, vec__15502, attr_map, references);
        })().call(null, ns_sym, ns_name);
        if (cljs.core.truth_(function() {
          var or__6210__auto__ = doc_str;
          if (cljs.core.truth_(or__6210__auto__)) {
            return or__6210__auto__;
          } else {
            var or__6210__auto____$1 = attr_map;
            if (cljs.core.truth_(or__6210__auto____$1)) {
              return or__6210__auto____$1;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }
        }())) {
          (function() {
            var format_in__14210__auto__ = "~@:_";
            var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
            return function(format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15505_15507, _STAR_current_length_STAR_15506_15508, vec__15496, seq__15497, first__15498, seq__15497__$1, ns_sym, first__15498__$1, seq__15497__$2, ns_name, stuff, vec__15499, doc_str, stuff__$1, vec__15502, attr_map, references) {
              return function() {
                var G__15512__delegate = function(args__14212__auto__) {
                  var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
                  return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
                };
                var G__15512 = function(var_args) {
                  var args__14212__auto__ = null;
                  if (arguments.length > 0) {
                    var G__15513__i = 0, G__15513__a = new Array(arguments.length - 0);
                    while (G__15513__i < G__15513__a.length) {
                      G__15513__a[G__15513__i] = arguments[G__15513__i + 0];
                      ++G__15513__i;
                    }
                    args__14212__auto__ = new cljs.core.IndexedSeq(G__15513__a, 0);
                  }
                  return G__15512__delegate.call(this, args__14212__auto__);
                };
                G__15512.cljs$lang$maxFixedArity = 0;
                G__15512.cljs$lang$applyTo = function(arglist__15514) {
                  var args__14212__auto__ = cljs.core.seq(arglist__15514);
                  return G__15512__delegate(args__14212__auto__);
                };
                G__15512.cljs$core$IFn$_invoke$arity$variadic = G__15512__delegate;
                return G__15512;
              }();
            }(format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15505_15507, _STAR_current_length_STAR_15506_15508, vec__15496, seq__15497, first__15498, seq__15497__$1, ns_sym, first__15498__$1, seq__15497__$2, ns_name, stuff, vec__15499, doc_str, stuff__$1, vec__15502, attr_map, references);
          })().call(null);
        } else {
        }
        if (cljs.core.truth_(doc_str)) {
          cljs.pprint.cl_format.call(null, true, '"~a"~:[~;~:@_~]', doc_str, function() {
            var or__6210__auto__ = attr_map;
            if (cljs.core.truth_(or__6210__auto__)) {
              return or__6210__auto__;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }());
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__14210__auto__ = "~w~:[~;~:@_~]";
            var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
            return function(format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15505_15507, _STAR_current_length_STAR_15506_15508, vec__15496, seq__15497, first__15498, seq__15497__$1, ns_sym, first__15498__$1, seq__15497__$2, ns_name, stuff, vec__15499, doc_str, stuff__$1, vec__15502, attr_map, references) {
              return function() {
                var G__15515__delegate = function(args__14212__auto__) {
                  var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
                  return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
                };
                var G__15515 = function(var_args) {
                  var args__14212__auto__ = null;
                  if (arguments.length > 0) {
                    var G__15516__i = 0, G__15516__a = new Array(arguments.length - 0);
                    while (G__15516__i < G__15516__a.length) {
                      G__15516__a[G__15516__i] = arguments[G__15516__i + 0];
                      ++G__15516__i;
                    }
                    args__14212__auto__ = new cljs.core.IndexedSeq(G__15516__a, 0);
                  }
                  return G__15515__delegate.call(this, args__14212__auto__);
                };
                G__15515.cljs$lang$maxFixedArity = 0;
                G__15515.cljs$lang$applyTo = function(arglist__15517) {
                  var args__14212__auto__ = cljs.core.seq(arglist__15517);
                  return G__15515__delegate(args__14212__auto__);
                };
                G__15515.cljs$core$IFn$_invoke$arity$variadic = G__15515__delegate;
                return G__15515;
              }();
            }(format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15505_15507, _STAR_current_length_STAR_15506_15508, vec__15496, seq__15497, first__15498, seq__15497__$1, ns_sym, first__15498__$1, seq__15497__$2, ns_name, stuff, vec__15499, doc_str, stuff__$1, vec__15502, attr_map, references);
          })().call(null, attr_map, cljs.core.seq.call(null, references));
        } else {
        }
        var references_15518__$1 = references;
        while (true) {
          cljs.pprint.pprint_ns_reference.call(null, cljs.core.first.call(null, references_15518__$1));
          var temp__4425__auto___15519 = cljs.core.next.call(null, references_15518__$1);
          if (temp__4425__auto___15519) {
            var references_15520__$2 = temp__4425__auto___15519;
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            var G__15521 = references_15520__$2;
            references_15518__$1 = G__15521;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_15506_15508;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_15505_15507;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, alis);
  }
};
cljs.pprint.pprint_hold_first = function() {
  var format_in__14210__auto__ = "~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e";
  var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
  return function(format_in__14210__auto__, cf__14211__auto__) {
    return function() {
      var G__15522__delegate = function(args__14212__auto__) {
        var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
        return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
      };
      var G__15522 = function(var_args) {
        var args__14212__auto__ = null;
        if (arguments.length > 0) {
          var G__15523__i = 0, G__15523__a = new Array(arguments.length - 0);
          while (G__15523__i < G__15523__a.length) {
            G__15523__a[G__15523__i] = arguments[G__15523__i + 0];
            ++G__15523__i;
          }
          args__14212__auto__ = new cljs.core.IndexedSeq(G__15523__a, 0);
        }
        return G__15522__delegate.call(this, args__14212__auto__);
      };
      G__15522.cljs$lang$maxFixedArity = 0;
      G__15522.cljs$lang$applyTo = function(arglist__15524) {
        var args__14212__auto__ = cljs.core.seq(arglist__15524);
        return G__15522__delegate(args__14212__auto__);
      };
      G__15522.cljs$core$IFn$_invoke$arity$variadic = G__15522__delegate;
      return G__15522;
    }();
  }(format_in__14210__auto__, cf__14211__auto__);
}();
cljs.pprint.single_defn = function cljs$pprint$single_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    if (cljs.core.truth_(has_doc_str_QMARK_)) {
      (function() {
        var format_in__14210__auto__ = " ~_";
        var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
        return function(format_in__14210__auto__, cf__14211__auto__) {
          return function() {
            var G__15525__delegate = function(args__14212__auto__) {
              var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
              return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
            };
            var G__15525 = function(var_args) {
              var args__14212__auto__ = null;
              if (arguments.length > 0) {
                var G__15526__i = 0, G__15526__a = new Array(arguments.length - 0);
                while (G__15526__i < G__15526__a.length) {
                  G__15526__a[G__15526__i] = arguments[G__15526__i + 0];
                  ++G__15526__i;
                }
                args__14212__auto__ = new cljs.core.IndexedSeq(G__15526__a, 0);
              }
              return G__15525__delegate.call(this, args__14212__auto__);
            };
            G__15525.cljs$lang$maxFixedArity = 0;
            G__15525.cljs$lang$applyTo = function(arglist__15527) {
              var args__14212__auto__ = cljs.core.seq(arglist__15527);
              return G__15525__delegate(args__14212__auto__);
            };
            G__15525.cljs$core$IFn$_invoke$arity$variadic = G__15525__delegate;
            return G__15525;
          }();
        }(format_in__14210__auto__, cf__14211__auto__);
      })().call(null);
    } else {
      (function() {
        var format_in__14210__auto__ = " ~@_";
        var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
        return function(format_in__14210__auto__, cf__14211__auto__) {
          return function() {
            var G__15528__delegate = function(args__14212__auto__) {
              var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
              return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
            };
            var G__15528 = function(var_args) {
              var args__14212__auto__ = null;
              if (arguments.length > 0) {
                var G__15529__i = 0, G__15529__a = new Array(arguments.length - 0);
                while (G__15529__i < G__15529__a.length) {
                  G__15529__a[G__15529__i] = arguments[G__15529__i + 0];
                  ++G__15529__i;
                }
                args__14212__auto__ = new cljs.core.IndexedSeq(G__15529__a, 0);
              }
              return G__15528__delegate.call(this, args__14212__auto__);
            };
            G__15528.cljs$lang$maxFixedArity = 0;
            G__15528.cljs$lang$applyTo = function(arglist__15530) {
              var args__14212__auto__ = cljs.core.seq(arglist__15530);
              return G__15528__delegate(args__14212__auto__);
            };
            G__15528.cljs$core$IFn$_invoke$arity$variadic = G__15528__delegate;
            return G__15528;
          }();
        }(format_in__14210__auto__, cf__14211__auto__);
      })().call(null);
    }
    return function() {
      var format_in__14210__auto__ = "~{~w~^ ~_~}";
      var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
      return function(format_in__14210__auto__, cf__14211__auto__) {
        return function() {
          var G__15531__delegate = function(args__14212__auto__) {
            var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
            return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
          };
          var G__15531 = function(var_args) {
            var args__14212__auto__ = null;
            if (arguments.length > 0) {
              var G__15532__i = 0, G__15532__a = new Array(arguments.length - 0);
              while (G__15532__i < G__15532__a.length) {
                G__15532__a[G__15532__i] = arguments[G__15532__i + 0];
                ++G__15532__i;
              }
              args__14212__auto__ = new cljs.core.IndexedSeq(G__15532__a, 0);
            }
            return G__15531__delegate.call(this, args__14212__auto__);
          };
          G__15531.cljs$lang$maxFixedArity = 0;
          G__15531.cljs$lang$applyTo = function(arglist__15533) {
            var args__14212__auto__ = cljs.core.seq(arglist__15533);
            return G__15531__delegate(args__14212__auto__);
          };
          G__15531.cljs$core$IFn$_invoke$arity$variadic = G__15531__delegate;
          return G__15531;
        }();
      }(format_in__14210__auto__, cf__14211__auto__);
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.multi_defn = function cljs$pprint$multi_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    return function() {
      var format_in__14210__auto__ = " ~_~{~w~^ ~_~}";
      var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
      return function(format_in__14210__auto__, cf__14211__auto__) {
        return function() {
          var G__15534__delegate = function(args__14212__auto__) {
            var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
            return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
          };
          var G__15534 = function(var_args) {
            var args__14212__auto__ = null;
            if (arguments.length > 0) {
              var G__15535__i = 0, G__15535__a = new Array(arguments.length - 0);
              while (G__15535__i < G__15535__a.length) {
                G__15535__a[G__15535__i] = arguments[G__15535__i + 0];
                ++G__15535__i;
              }
              args__14212__auto__ = new cljs.core.IndexedSeq(G__15535__a, 0);
            }
            return G__15534__delegate.call(this, args__14212__auto__);
          };
          G__15534.cljs$lang$maxFixedArity = 0;
          G__15534.cljs$lang$applyTo = function(arglist__15536) {
            var args__14212__auto__ = cljs.core.seq(arglist__15536);
            return G__15534__delegate(args__14212__auto__);
          };
          G__15534.cljs$core$IFn$_invoke$arity$variadic = G__15534__delegate;
          return G__15534;
        }();
      }(format_in__14210__auto__, cf__14211__auto__);
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_defn = function cljs$pprint$pprint_defn(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__15548 = alis;
    var seq__15549 = cljs.core.seq.call(null, vec__15548);
    var first__15550 = cljs.core.first.call(null, seq__15549);
    var seq__15549__$1 = cljs.core.next.call(null, seq__15549);
    var defn_sym = first__15550;
    var first__15550__$1 = cljs.core.first.call(null, seq__15549__$1);
    var seq__15549__$2 = cljs.core.next.call(null, seq__15549__$1);
    var defn_name = first__15550__$1;
    var stuff = seq__15549__$2;
    var vec__15551 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__15551, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__15551, 1, null);
    var vec__15554 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__15554, 0, null);
    var stuff__$2 = cljs.core.nth.call(null, vec__15554, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_15557_15559 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_15558_15560 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__14210__auto__ = "~w ~1I~@_~w";
          var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
          return function(format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15557_15559, _STAR_current_length_STAR_15558_15560, vec__15548, seq__15549, first__15550, seq__15549__$1, defn_sym, first__15550__$1, seq__15549__$2, defn_name, stuff, vec__15551, doc_str, stuff__$1, vec__15554, attr_map, stuff__$2) {
            return function() {
              var G__15561__delegate = function(args__14212__auto__) {
                var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
                return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
              };
              var G__15561 = function(var_args) {
                var args__14212__auto__ = null;
                if (arguments.length > 0) {
                  var G__15562__i = 0, G__15562__a = new Array(arguments.length - 0);
                  while (G__15562__i < G__15562__a.length) {
                    G__15562__a[G__15562__i] = arguments[G__15562__i + 0];
                    ++G__15562__i;
                  }
                  args__14212__auto__ = new cljs.core.IndexedSeq(G__15562__a, 0);
                }
                return G__15561__delegate.call(this, args__14212__auto__);
              };
              G__15561.cljs$lang$maxFixedArity = 0;
              G__15561.cljs$lang$applyTo = function(arglist__15563) {
                var args__14212__auto__ = cljs.core.seq(arglist__15563);
                return G__15561__delegate(args__14212__auto__);
              };
              G__15561.cljs$core$IFn$_invoke$arity$variadic = G__15561__delegate;
              return G__15561;
            }();
          }(format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15557_15559, _STAR_current_length_STAR_15558_15560, vec__15548, seq__15549, first__15550, seq__15549__$1, defn_sym, first__15550__$1, seq__15549__$2, defn_name, stuff, vec__15551, doc_str, stuff__$1, vec__15554, attr_map, stuff__$2);
        })().call(null, defn_sym, defn_name);
        if (cljs.core.truth_(doc_str)) {
          (function() {
            var format_in__14210__auto__ = " ~_~w";
            var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
            return function(format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15557_15559, _STAR_current_length_STAR_15558_15560, vec__15548, seq__15549, first__15550, seq__15549__$1, defn_sym, first__15550__$1, seq__15549__$2, defn_name, stuff, vec__15551, doc_str, stuff__$1, vec__15554, attr_map, stuff__$2) {
              return function() {
                var G__15564__delegate = function(args__14212__auto__) {
                  var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
                  return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
                };
                var G__15564 = function(var_args) {
                  var args__14212__auto__ = null;
                  if (arguments.length > 0) {
                    var G__15565__i = 0, G__15565__a = new Array(arguments.length - 0);
                    while (G__15565__i < G__15565__a.length) {
                      G__15565__a[G__15565__i] = arguments[G__15565__i + 0];
                      ++G__15565__i;
                    }
                    args__14212__auto__ = new cljs.core.IndexedSeq(G__15565__a, 0);
                  }
                  return G__15564__delegate.call(this, args__14212__auto__);
                };
                G__15564.cljs$lang$maxFixedArity = 0;
                G__15564.cljs$lang$applyTo = function(arglist__15566) {
                  var args__14212__auto__ = cljs.core.seq(arglist__15566);
                  return G__15564__delegate(args__14212__auto__);
                };
                G__15564.cljs$core$IFn$_invoke$arity$variadic = G__15564__delegate;
                return G__15564;
              }();
            }(format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15557_15559, _STAR_current_length_STAR_15558_15560, vec__15548, seq__15549, first__15550, seq__15549__$1, defn_sym, first__15550__$1, seq__15549__$2, defn_name, stuff, vec__15551, doc_str, stuff__$1, vec__15554, attr_map, stuff__$2);
          })().call(null, doc_str);
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__14210__auto__ = " ~_~w";
            var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
            return function(format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15557_15559, _STAR_current_length_STAR_15558_15560, vec__15548, seq__15549, first__15550, seq__15549__$1, defn_sym, first__15550__$1, seq__15549__$2, defn_name, stuff, vec__15551, doc_str, stuff__$1, vec__15554, attr_map, stuff__$2) {
              return function() {
                var G__15567__delegate = function(args__14212__auto__) {
                  var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
                  return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
                };
                var G__15567 = function(var_args) {
                  var args__14212__auto__ = null;
                  if (arguments.length > 0) {
                    var G__15568__i = 0, G__15568__a = new Array(arguments.length - 0);
                    while (G__15568__i < G__15568__a.length) {
                      G__15568__a[G__15568__i] = arguments[G__15568__i + 0];
                      ++G__15568__i;
                    }
                    args__14212__auto__ = new cljs.core.IndexedSeq(G__15568__a, 0);
                  }
                  return G__15567__delegate.call(this, args__14212__auto__);
                };
                G__15567.cljs$lang$maxFixedArity = 0;
                G__15567.cljs$lang$applyTo = function(arglist__15569) {
                  var args__14212__auto__ = cljs.core.seq(arglist__15569);
                  return G__15567__delegate(args__14212__auto__);
                };
                G__15567.cljs$core$IFn$_invoke$arity$variadic = G__15567__delegate;
                return G__15567;
              }();
            }(format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15557_15559, _STAR_current_length_STAR_15558_15560, vec__15548, seq__15549, first__15550, seq__15549__$1, defn_sym, first__15550__$1, seq__15549__$2, defn_name, stuff, vec__15551, doc_str, stuff__$1, vec__15554, attr_map, stuff__$2);
          })().call(null, attr_map);
        } else {
        }
        if (cljs.core.vector_QMARK_.call(null, cljs.core.first.call(null, stuff__$2))) {
          cljs.pprint.single_defn.call(null, stuff__$2, function() {
            var or__6210__auto__ = doc_str;
            if (cljs.core.truth_(or__6210__auto__)) {
              return or__6210__auto__;
            } else {
              return attr_map;
            }
          }());
        } else {
          cljs.pprint.multi_defn.call(null, stuff__$2, function() {
            var or__6210__auto__ = doc_str;
            if (cljs.core.truth_(or__6210__auto__)) {
              return or__6210__auto__;
            } else {
              return attr_map;
            }
          }());
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_15558_15560;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_15557_15559;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_binding_form = function cljs$pprint$pprint_binding_form(binding_vec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_15575_15580 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_15576_15581 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count15577_15582 = 0;
      var binding_15583 = binding_vec;
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count15577_15582 < cljs.core._STAR_print_length_STAR_) {
          if (cljs.core.seq.call(null, binding_15583)) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR_15578_15584 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR_15579_15585 = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.first.call(null, binding_15583));
                if (cljs.core.next.call(null, binding_15583)) {
                  cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                  cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                  cljs.pprint.write_out.call(null, cljs.core.second.call(null, binding_15583));
                } else {
                }
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_15579_15585;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_15578_15584;
              }
            }
            if (cljs.core.next.call(null, cljs.core.rest.call(null, binding_15583))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__15586 = length_count15577_15582 + 1;
              var G__15587 = cljs.core.next.call(null, cljs.core.rest.call(null, binding_15583));
              length_count15577_15582 = G__15586;
              binding_15583 = G__15587;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_15576_15581;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_15575_15580;
    }
  }
  return null;
};
cljs.pprint.pprint_let = function cljs$pprint$pprint_let(alis) {
  var base_sym = cljs.core.first.call(null, alis);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_15590_15592 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_15591_15593 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      if (cljs.core.next.call(null, alis) && cljs.core.vector_QMARK_.call(null, cljs.core.second.call(null, alis))) {
        (function() {
          var format_in__14210__auto__ = "~w ~1I~@_";
          var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
          return function(format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15590_15592, _STAR_current_length_STAR_15591_15593, base_sym) {
            return function() {
              var G__15594__delegate = function(args__14212__auto__) {
                var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
                return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
              };
              var G__15594 = function(var_args) {
                var args__14212__auto__ = null;
                if (arguments.length > 0) {
                  var G__15595__i = 0, G__15595__a = new Array(arguments.length - 0);
                  while (G__15595__i < G__15595__a.length) {
                    G__15595__a[G__15595__i] = arguments[G__15595__i + 0];
                    ++G__15595__i;
                  }
                  args__14212__auto__ = new cljs.core.IndexedSeq(G__15595__a, 0);
                }
                return G__15594__delegate.call(this, args__14212__auto__);
              };
              G__15594.cljs$lang$maxFixedArity = 0;
              G__15594.cljs$lang$applyTo = function(arglist__15596) {
                var args__14212__auto__ = cljs.core.seq(arglist__15596);
                return G__15594__delegate(args__14212__auto__);
              };
              G__15594.cljs$core$IFn$_invoke$arity$variadic = G__15594__delegate;
              return G__15594;
            }();
          }(format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15590_15592, _STAR_current_length_STAR_15591_15593, base_sym);
        })().call(null, base_sym);
        cljs.pprint.pprint_binding_form.call(null, cljs.core.second.call(null, alis));
        (function() {
          var format_in__14210__auto__ = " ~_~{~w~^ ~_~}";
          var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
          return function(format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15590_15592, _STAR_current_length_STAR_15591_15593, base_sym) {
            return function() {
              var G__15597__delegate = function(args__14212__auto__) {
                var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
                return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
              };
              var G__15597 = function(var_args) {
                var args__14212__auto__ = null;
                if (arguments.length > 0) {
                  var G__15598__i = 0, G__15598__a = new Array(arguments.length - 0);
                  while (G__15598__i < G__15598__a.length) {
                    G__15598__a[G__15598__i] = arguments[G__15598__i + 0];
                    ++G__15598__i;
                  }
                  args__14212__auto__ = new cljs.core.IndexedSeq(G__15598__a, 0);
                }
                return G__15597__delegate.call(this, args__14212__auto__);
              };
              G__15597.cljs$lang$maxFixedArity = 0;
              G__15597.cljs$lang$applyTo = function(arglist__15599) {
                var args__14212__auto__ = cljs.core.seq(arglist__15599);
                return G__15597__delegate(args__14212__auto__);
              };
              G__15597.cljs$core$IFn$_invoke$arity$variadic = G__15597__delegate;
              return G__15597;
            }();
          }(format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15590_15592, _STAR_current_length_STAR_15591_15593, base_sym);
        })().call(null, cljs.core.next.call(null, cljs.core.rest.call(null, alis)));
      } else {
        cljs.pprint.pprint_simple_code_list.call(null, alis);
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_15591_15593;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_15590_15592;
    }
  }
  return null;
};
cljs.pprint.pprint_if = function() {
  var format_in__14210__auto__ = "~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e";
  var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
  return function(format_in__14210__auto__, cf__14211__auto__) {
    return function() {
      var G__15600__delegate = function(args__14212__auto__) {
        var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
        return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
      };
      var G__15600 = function(var_args) {
        var args__14212__auto__ = null;
        if (arguments.length > 0) {
          var G__15601__i = 0, G__15601__a = new Array(arguments.length - 0);
          while (G__15601__i < G__15601__a.length) {
            G__15601__a[G__15601__i] = arguments[G__15601__i + 0];
            ++G__15601__i;
          }
          args__14212__auto__ = new cljs.core.IndexedSeq(G__15601__a, 0);
        }
        return G__15600__delegate.call(this, args__14212__auto__);
      };
      G__15600.cljs$lang$maxFixedArity = 0;
      G__15600.cljs$lang$applyTo = function(arglist__15602) {
        var args__14212__auto__ = cljs.core.seq(arglist__15602);
        return G__15600__delegate(args__14212__auto__);
      };
      G__15600.cljs$core$IFn$_invoke$arity$variadic = G__15600__delegate;
      return G__15600;
    }();
  }(format_in__14210__auto__, cf__14211__auto__);
}();
cljs.pprint.pprint_cond = function cljs$pprint$pprint_cond(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_15608_15613 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_15609_15614 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis));
      if (cljs.core.next.call(null, alis)) {
        cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
        cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
        var length_count15610_15615 = 0;
        var alis_15616__$1 = cljs.core.next.call(null, alis);
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count15610_15615 < cljs.core._STAR_print_length_STAR_) {
            if (alis_15616__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_15611_15617 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_15612_15618 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_15616__$1));
                  if (cljs.core.next.call(null, alis_15616__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_15616__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_15612_15618;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_15611_15617;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_15616__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__15619 = length_count15610_15615 + 1;
                var G__15620 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_15616__$1));
                length_count15610_15615 = G__15619;
                alis_15616__$1 = G__15620;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
      } else {
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_15609_15614;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_15608_15613;
    }
  }
  return null;
};
cljs.pprint.pprint_condp = function cljs$pprint$pprint_condp(alis) {
  if (cljs.core.count.call(null, alis) > 3) {
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_15626_15631 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_15627_15632 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
        cljs.core.apply.call(null, function() {
          var format_in__14210__auto__ = "~w ~@_~w ~@_~w ~_";
          var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
          return function(format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15626_15631, _STAR_current_length_STAR_15627_15632) {
            return function() {
              var G__15633__delegate = function(args__14212__auto__) {
                var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
                return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
              };
              var G__15633 = function(var_args) {
                var args__14212__auto__ = null;
                if (arguments.length > 0) {
                  var G__15634__i = 0, G__15634__a = new Array(arguments.length - 0);
                  while (G__15634__i < G__15634__a.length) {
                    G__15634__a[G__15634__i] = arguments[G__15634__i + 0];
                    ++G__15634__i;
                  }
                  args__14212__auto__ = new cljs.core.IndexedSeq(G__15634__a, 0);
                }
                return G__15633__delegate.call(this, args__14212__auto__);
              };
              G__15633.cljs$lang$maxFixedArity = 0;
              G__15633.cljs$lang$applyTo = function(arglist__15635) {
                var args__14212__auto__ = cljs.core.seq(arglist__15635);
                return G__15633__delegate(args__14212__auto__);
              };
              G__15633.cljs$core$IFn$_invoke$arity$variadic = G__15633__delegate;
              return G__15633;
            }();
          }(format_in__14210__auto__, cf__14211__auto__, _STAR_current_level_STAR_15626_15631, _STAR_current_length_STAR_15627_15632);
        }(), alis);
        var length_count15628_15636 = 0;
        var alis_15637__$1 = cljs.core.seq.call(null, cljs.core.drop.call(null, 3, alis));
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count15628_15636 < cljs.core._STAR_print_length_STAR_) {
            if (alis_15637__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_15629_15638 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_15630_15639 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_15637__$1));
                  if (cljs.core.next.call(null, alis_15637__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_15637__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_15630_15639;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_15629_15638;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_15637__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__15640 = length_count15628_15636 + 1;
                var G__15641 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_15637__$1));
                length_count15628_15636 = G__15640;
                alis_15637__$1 = G__15641;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_15627_15632;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_15626_15631;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint._STAR_symbol_map_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.pprint.pprint_anon_func = function cljs$pprint$pprint_anon_func(alis) {
  var args = cljs.core.second.call(null, alis);
  var nlis = cljs.core.first.call(null, cljs.core.rest.call(null, cljs.core.rest.call(null, alis)));
  if (cljs.core.vector_QMARK_.call(null, args)) {
    var _STAR_symbol_map_STAR_15645 = cljs.pprint._STAR_symbol_map_STAR_;
    cljs.pprint._STAR_symbol_map_STAR_ = cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, args)) ? cljs.core.PersistentArrayMap.fromArray([cljs.core.first.call(null, args), "%"], true, false) : cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(_STAR_symbol_map_STAR_15645, args, nlis) {
      return function(p1__15642_SHARP_, p2__15643_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__15642_SHARP_, [cljs.core.str("%"), cljs.core.str(p2__15643_SHARP_)].join("")], null);
      };
    }(_STAR_symbol_map_STAR_15645, args, nlis), args, cljs.core.range.call(null, 1, cljs.core.count.call(null, args) + 1)));
    try {
      return function() {
        var format_in__14210__auto__ = "~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e";
        var cf__14211__auto__ = typeof format_in__14210__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__14210__auto__) : format_in__14210__auto__;
        return function(format_in__14210__auto__, cf__14211__auto__, _STAR_symbol_map_STAR_15645, args, nlis) {
          return function() {
            var G__15646__delegate = function(args__14212__auto__) {
              var navigator__14213__auto__ = cljs.pprint.init_navigator.call(null, args__14212__auto__);
              return cljs.pprint.execute_format.call(null, cf__14211__auto__, navigator__14213__auto__);
            };
            var G__15646 = function(var_args) {
              var args__14212__auto__ = null;
              if (arguments.length > 0) {
                var G__15647__i = 0, G__15647__a = new Array(arguments.length - 0);
                while (G__15647__i < G__15647__a.length) {
                  G__15647__a[G__15647__i] = arguments[G__15647__i + 0];
                  ++G__15647__i;
                }
                args__14212__auto__ = new cljs.core.IndexedSeq(G__15647__a, 0);
              }
              return G__15646__delegate.call(this, args__14212__auto__);
            };
            G__15646.cljs$lang$maxFixedArity = 0;
            G__15646.cljs$lang$applyTo = function(arglist__15648) {
              var args__14212__auto__ = cljs.core.seq(arglist__15648);
              return G__15646__delegate(args__14212__auto__);
            };
            G__15646.cljs$core$IFn$_invoke$arity$variadic = G__15646__delegate;
            return G__15646;
          }();
        }(format_in__14210__auto__, cf__14211__auto__, _STAR_symbol_map_STAR_15645, args, nlis);
      }().call(null, nlis);
    } finally {
      cljs.pprint._STAR_symbol_map_STAR_ = _STAR_symbol_map_STAR_15645;
    }
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_simple_code_list = function cljs$pprint$pprint_simple_code_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_15652_15655 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_15653_15656 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      var length_count15654_15657 = 0;
      var alis_15658__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count15654_15657 < cljs.core._STAR_print_length_STAR_) {
          if (alis_15658__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_15658__$1));
            if (cljs.core.next.call(null, alis_15658__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__15659 = length_count15654_15657 + 1;
              var G__15660 = cljs.core.next.call(null, alis_15658__$1);
              length_count15654_15657 = G__15659;
              alis_15658__$1 = G__15660;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_15653_15656;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_15652_15655;
    }
  }
  return null;
};
cljs.pprint.two_forms = function cljs$pprint$two_forms(amap) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.mapcat.call(null, cljs.core.identity, function() {
    var iter__6990__auto__ = function cljs$pprint$two_forms_$_iter__15665(s__15666) {
      return new cljs.core.LazySeq(null, function() {
        var s__15666__$1 = s__15666;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__15666__$1);
          if (temp__4425__auto__) {
            var s__15666__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__15666__$2)) {
              var c__6988__auto__ = cljs.core.chunk_first.call(null, s__15666__$2);
              var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
              var b__15668 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
              if (function() {
                var i__15667 = 0;
                while (true) {
                  if (i__15667 < size__6989__auto__) {
                    var x = cljs.core._nth.call(null, c__6988__auto__, i__15667);
                    cljs.core.chunk_append.call(null, b__15668, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null));
                    var G__15669 = i__15667 + 1;
                    i__15667 = G__15669;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15668), cljs$pprint$two_forms_$_iter__15665.call(null, cljs.core.chunk_rest.call(null, s__15666__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15668), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__15666__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null), cljs$pprint$two_forms_$_iter__15665.call(null, cljs.core.rest.call(null, s__15666__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6990__auto__.call(null, amap);
  }()));
};
cljs.pprint.add_core_ns = function cljs$pprint$add_core_ns(amap) {
  var core = "clojure.core";
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(core) {
    return function(p1__15670_SHARP_) {
      var vec__15674 = p1__15670_SHARP_;
      var s = cljs.core.nth.call(null, vec__15674, 0, null);
      var f = cljs.core.nth.call(null, vec__15674, 1, null);
      if (cljs.core.not.call(null, function() {
        var or__6210__auto__ = cljs.core.namespace.call(null, s);
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          return cljs.core.special_symbol_QMARK_.call(null, s);
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, core, cljs.core.name.call(null, s)), f], null);
      } else {
        return p1__15670_SHARP_;
      }
    };
  }(core), amap));
};
cljs.pprint._STAR_code_table_STAR_ = cljs.pprint.two_forms.call(null, cljs.pprint.add_core_ns.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, ".", ".", 1975675962, null), new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.Symbol(null, "when-first", "when-first", 821699168, null), new cljs.core.Symbol(null, "if", "if", 1181717262, null), new cljs.core.Symbol(null, "condp", "condp", 1054325175, null), new cljs.core.Symbol(null, "..", "..", -300507420, 
null), new cljs.core.Symbol(null, "defmacro", "defmacro", 2054157304, null), new cljs.core.Symbol(null, "defn", "defn", -126010802, null), new cljs.core.Symbol(null, "loop", "loop", 1244978678, null), new cljs.core.Symbol(null, "struct", "struct", 325972931, null), new cljs.core.Symbol(null, "doseq", "doseq", 221164135, null), new cljs.core.Symbol(null, "if-not", "if-not", -265415609, null), new cljs.core.Symbol(null, "when-not", "when-not", -1223136340, null), new cljs.core.Symbol(null, "def", "def", 
597100991, null), new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "with-open", "with-open", 172119667, null), new cljs.core.Symbol(null, "with-local-vars", "with-local-vars", 837642072, null), new cljs.core.Symbol(null, "defonce", "defonce", -1681484013, null), new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "dotimes", "dotimes", -818708397, null), new cljs.core.Symbol(null, 
"cond", "cond", 1606708055, null), new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "defn-", "defn-", 1097765044, null), new cljs.core.Symbol(null, "locking", "locking", 1542862874, null), new cljs.core.Symbol(null, "-\x3e", "-\x3e", -2139605430, null), new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), new cljs.core.Symbol(null, 
"struct-map", "struct-map", -1387540878, null)], [cljs.pprint.pprint_hold_first, cljs.pprint.pprint_anon_func, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_condp, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_if, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_if, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, 
cljs.pprint.pprint_let, cljs.pprint.pprint_ns, cljs.pprint.pprint_let, cljs.pprint.pprint_cond, cljs.pprint.pprint_let, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first])));
cljs.pprint.pprint_code_list = function cljs$pprint$pprint_code_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    var temp__4423__auto__ = cljs.pprint._STAR_code_table_STAR_.call(null, cljs.core.first.call(null, alis));
    if (cljs.core.truth_(temp__4423__auto__)) {
      var special_form = temp__4423__auto__;
      return special_form.call(null, alis);
    } else {
      return cljs.pprint.pprint_simple_code_list.call(null, alis);
    }
  } else {
    return null;
  }
};
cljs.pprint.pprint_code_symbol = function cljs$pprint$pprint_code_symbol(sym) {
  var temp__4423__auto__ = sym.call(null, cljs.pprint._STAR_symbol_map_STAR_);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var arg_num = temp__4423__auto__;
    return cljs.pprint.print.call(null, arg_num);
  } else {
    if (cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_)) {
      return cljs.pprint.print.call(null, cljs.core.name.call(null, sym));
    } else {
      return cljs.pprint.pr.call(null, sym);
    }
  }
};
if (typeof cljs.pprint.code_dispatch !== "undefined") {
} else {
  cljs.pprint.code_dispatch = function() {
    var method_table__7135__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__7136__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__7137__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__7138__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__7139__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "code-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__7139__auto__, method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_code_list);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), cljs.pprint.pprint_code_symbol);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "queue", "queue", 1455835879), cljs.pprint.pprint_pqueue);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "deref", "deref", -145586795), cljs.pprint.pprint_ideref);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, null, cljs.pprint.pr);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.add_padding = function cljs$pprint$add_padding(width, s) {
  var padding = function() {
    var x__6541__auto__ = 0;
    var y__6542__auto__ = width - cljs.core.count.call(null, s);
    return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
  }();
  return cljs.core.apply.call(null, cljs.core.str, clojure.string.join.call(null, cljs.core.repeat.call(null, padding, " ")), s);
};
cljs.pprint.print_table = function cljs$pprint$print_table(var_args) {
  var args15680 = [];
  var len__7285__auto___15704 = arguments.length;
  var i__7286__auto___15705 = 0;
  while (true) {
    if (i__7286__auto___15705 < len__7285__auto___15704) {
      args15680.push(arguments[i__7286__auto___15705]);
      var G__15706 = i__7286__auto___15705 + 1;
      i__7286__auto___15705 = G__15706;
      continue;
    } else {
    }
    break;
  }
  var G__15682 = args15680.length;
  switch(G__15682) {
    case 2:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15680.length)].join(""));;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2 = function(ks, rows) {
  var _STAR_print_newline_STAR_15683 = cljs.core._STAR_print_newline_STAR_;
  try {
    if (cljs.core.seq.call(null, rows)) {
      var widths = cljs.core.map.call(null, function(_STAR_print_newline_STAR_15683) {
        return function(k) {
          return cljs.core.apply.call(null, cljs.core.max, cljs.core.count.call(null, [cljs.core.str(k)].join("")), cljs.core.map.call(null, function(_STAR_print_newline_STAR_15683) {
            return function(p1__15677_SHARP_) {
              return cljs.core.count.call(null, [cljs.core.str(cljs.core.get.call(null, p1__15677_SHARP_, k))].join(""));
            };
          }(_STAR_print_newline_STAR_15683), rows));
        };
      }(_STAR_print_newline_STAR_15683), ks);
      var spacers = cljs.core.map.call(null, function(widths, _STAR_print_newline_STAR_15683) {
        return function(p1__15678_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, p1__15678_SHARP_, "-"));
        };
      }(widths, _STAR_print_newline_STAR_15683), widths);
      var fmt_row = function(widths, spacers, _STAR_print_newline_STAR_15683) {
        return function(leader, divider, trailer, row) {
          return [cljs.core.str(leader), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, divider, function() {
            var iter__6990__auto__ = function(widths, spacers, _STAR_print_newline_STAR_15683) {
              return function cljs$pprint$iter__15684(s__15685) {
                return new cljs.core.LazySeq(null, function(widths, spacers, _STAR_print_newline_STAR_15683) {
                  return function() {
                    var s__15685__$1 = s__15685;
                    while (true) {
                      var temp__4425__auto__ = cljs.core.seq.call(null, s__15685__$1);
                      if (temp__4425__auto__) {
                        var s__15685__$2 = temp__4425__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__15685__$2)) {
                          var c__6988__auto__ = cljs.core.chunk_first.call(null, s__15685__$2);
                          var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
                          var b__15687 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
                          if (function() {
                            var i__15686 = 0;
                            while (true) {
                              if (i__15686 < size__6989__auto__) {
                                var vec__15694 = cljs.core._nth.call(null, c__6988__auto__, i__15686);
                                var col = cljs.core.nth.call(null, vec__15694, 0, null);
                                var width = cljs.core.nth.call(null, vec__15694, 1, null);
                                cljs.core.chunk_append.call(null, b__15687, cljs.pprint.add_padding.call(null, width, [cljs.core.str(col)].join("")));
                                var G__15708 = i__15686 + 1;
                                i__15686 = G__15708;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15687), cljs$pprint$iter__15684.call(null, cljs.core.chunk_rest.call(null, s__15685__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15687), null);
                          }
                        } else {
                          var vec__15697 = cljs.core.first.call(null, s__15685__$2);
                          var col = cljs.core.nth.call(null, vec__15697, 0, null);
                          var width = cljs.core.nth.call(null, vec__15697, 1, null);
                          return cljs.core.cons.call(null, cljs.pprint.add_padding.call(null, width, [cljs.core.str(col)].join("")), cljs$pprint$iter__15684.call(null, cljs.core.rest.call(null, s__15685__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(widths, spacers, _STAR_print_newline_STAR_15683), null, null);
              };
            }(widths, spacers, _STAR_print_newline_STAR_15683);
            return iter__6990__auto__.call(null, cljs.core.map.call(null, cljs.core.vector, cljs.core.map.call(null, function(iter__6990__auto__, widths, spacers, _STAR_print_newline_STAR_15683) {
              return function(p1__15679_SHARP_) {
                return cljs.core.get.call(null, row, p1__15679_SHARP_);
              };
            }(iter__6990__auto__, widths, spacers, _STAR_print_newline_STAR_15683), ks), widths));
          }()))), cljs.core.str(trailer)].join("");
        };
      }(widths, spacers, _STAR_print_newline_STAR_15683);
      cljs.core.println.call(null);
      cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", cljs.core.zipmap.call(null, ks, ks)));
      cljs.core.println.call(null, fmt_row.call(null, "|-", "-+-", "-|", cljs.core.zipmap.call(null, ks, spacers)));
      var seq__15700 = cljs.core.seq.call(null, rows);
      var chunk__15701 = null;
      var count__15702 = 0;
      var i__15703 = 0;
      while (true) {
        if (i__15703 < count__15702) {
          var row = cljs.core._nth.call(null, chunk__15701, i__15703);
          cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
          var G__15709 = seq__15700;
          var G__15710 = chunk__15701;
          var G__15711 = count__15702;
          var G__15712 = i__15703 + 1;
          seq__15700 = G__15709;
          chunk__15701 = G__15710;
          count__15702 = G__15711;
          i__15703 = G__15712;
          continue;
        } else {
          var temp__4425__auto__ = cljs.core.seq.call(null, seq__15700);
          if (temp__4425__auto__) {
            var seq__15700__$1 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__15700__$1)) {
              var c__7021__auto__ = cljs.core.chunk_first.call(null, seq__15700__$1);
              var G__15713 = cljs.core.chunk_rest.call(null, seq__15700__$1);
              var G__15714 = c__7021__auto__;
              var G__15715 = cljs.core.count.call(null, c__7021__auto__);
              var G__15716 = 0;
              seq__15700 = G__15713;
              chunk__15701 = G__15714;
              count__15702 = G__15715;
              i__15703 = G__15716;
              continue;
            } else {
              var row = cljs.core.first.call(null, seq__15700__$1);
              cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
              var G__15717 = cljs.core.next.call(null, seq__15700__$1);
              var G__15718 = null;
              var G__15719 = 0;
              var G__15720 = 0;
              seq__15700 = G__15717;
              chunk__15701 = G__15718;
              count__15702 = G__15719;
              i__15703 = G__15720;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_15683;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1 = function(rows) {
  return cljs.pprint.print_table.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, rows)), rows);
};
cljs.pprint.print_table.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.pprint");
cljs.test.empty_env = function cljs$test$empty_env(var_args) {
  var args15945 = [];
  var len__7285__auto___15949 = arguments.length;
  var i__7286__auto___15950 = 0;
  while (true) {
    if (i__7286__auto___15950 < len__7285__auto___15949) {
      args15945.push(arguments[i__7286__auto___15950]);
      var G__15951 = i__7286__auto___15950 + 1;
      i__7286__auto___15950 = G__15951;
      continue;
    } else {
    }
    break;
  }
  var G__15947 = args15945.length;
  switch(G__15947) {
    case 0:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15945.length)].join(""));;
  }
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.test.empty_env.call(null, new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322));
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1 = function(reporter) {
  var G__15948 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150), 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523), cljs.core.List.EMPTY, new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.core.pr_str, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), reporter], null);
  var G__15948__$1 = cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.test", "pprint", "cljs.test/pprint", 1627393641), reporter) ? cljs.core.assoc.call(null, G__15948, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.pprint.pprint) : G__15948;
  return G__15948__$1;
};
cljs.test.empty_env.cljs$lang$maxFixedArity = 1;
cljs.test._STAR_current_env_STAR_ = null;
cljs.test.get_current_env = function cljs$test$get_current_env() {
  var or__6210__auto__ = cljs.test._STAR_current_env_STAR_;
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    return cljs.test.empty_env.call(null);
  }
};
cljs.test.update_current_env_BANG_ = function cljs$test$update_current_env_BANG_(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___15956 = arguments.length;
  var i__7286__auto___15957 = 0;
  while (true) {
    if (i__7286__auto___15957 < len__7285__auto___15956) {
      args__7292__auto__.push(arguments[i__7286__auto___15957]);
      var G__15958 = i__7286__auto___15957 + 1;
      i__7286__auto___15957 = G__15958;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ks, f, args) {
  return cljs.test._STAR_current_env_STAR_ = cljs.core.apply.call(null, cljs.core.update_in, cljs.test.get_current_env.call(null), ks, f, args);
};
cljs.test.update_current_env_BANG_.cljs$lang$maxFixedArity = 2;
cljs.test.update_current_env_BANG_.cljs$lang$applyTo = function(seq15953) {
  var G__15954 = cljs.core.first.call(null, seq15953);
  var seq15953__$1 = cljs.core.next.call(null, seq15953);
  var G__15955 = cljs.core.first.call(null, seq15953__$1);
  var seq15953__$2 = cljs.core.next.call(null, seq15953__$1);
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__15954, G__15955, seq15953__$2);
};
cljs.test.set_env_BANG_ = function cljs$test$set_env_BANG_(new_env) {
  return cljs.test._STAR_current_env_STAR_ = new_env;
};
cljs.test.clear_env_BANG_ = function cljs$test$clear_env_BANG_() {
  return cljs.test._STAR_current_env_STAR_ = null;
};
cljs.test.get_and_clear_env_BANG_ = function cljs$test$get_and_clear_env_BANG_() {
  var env = cljs.test.get_current_env.call(null);
  cljs.test.clear_env_BANG_.call(null);
  return env;
};
cljs.test.testing_vars_str = function cljs$test$testing_vars_str(m) {
  var map__15962 = m;
  var map__15962__$1 = (!(map__15962 == null) ? map__15962.cljs$lang$protocol_mask$partition0$ & 64 || map__15962.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15962) : map__15962;
  var file = cljs.core.get.call(null, map__15962__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  var line = cljs.core.get.call(null, map__15962__$1, new cljs.core.Keyword(null, "line", "line", 212345235));
  var column = cljs.core.get.call(null, map__15962__$1, new cljs.core.Keyword(null, "column", "column", 2078222095));
  return [cljs.core.str(cljs.core.reverse.call(null, cljs.core.map.call(null, function(map__15962, map__15962__$1, file, line, column) {
    return function(p1__15959_SHARP_) {
      return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__15959_SHARP_));
    };
  }(map__15962, map__15962__$1, file, line, column), (new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))))), cljs.core.str(" ("), cljs.core.str(file), cljs.core.str(":"), cljs.core.str(line), cljs.core.str(cljs.core.truth_(column) ? [cljs.core.str(":"), cljs.core.str(column)].join("") : null), cljs.core.str(")")].join("");
};
cljs.test.testing_contexts_str = function cljs$test$testing_contexts_str() {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))));
};
cljs.test.inc_report_counter_BANG_ = function cljs$test$inc_report_counter_BANG_(name) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
  } else {
    return null;
  }
};
if (typeof cljs.test.report !== "undefined") {
} else {
  cljs.test.report = function() {
    var method_table__7135__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__7136__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__7137__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__7138__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__7139__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.test", "report"), function(method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__, hierarchy__7139__auto__) {
      return function(m) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "reporter", "reporter", -805360621)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m)], null);
      };
    }(method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__, hierarchy__7139__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__7139__auto__, method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.Keyword(null, "default", "default", -1987822328), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "pass", "pass", 1574159993)], null), function(m) {
  return cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
});
cljs.test.print_comparison = function cljs$test$print_comparison(m) {
  var formatter_fn = function() {
    var or__6210__auto__ = (new cljs.core.Keyword(null, "formatter", "formatter", -483008823)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return cljs.core.pr_str;
    }
  }();
  cljs.core.println.call(null, "expected:", formatter_fn.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
  return cljs.core.println.call(null, "  actual:", formatter_fn.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)));
};
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "fail", "fail", 1706214930)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  cljs.core.println.call(null, "\nFAIL in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__4425__auto___15964 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__4425__auto___15964)) {
    var message_15965 = temp__4425__auto___15964;
    cljs.core.println.call(null, message_15965);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "error", "error", -978969032)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "error", "error", -978969032));
  cljs.core.println.call(null, "\nERROR in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__4425__auto___15966 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__4425__auto___15966)) {
    var message_15967 = temp__4425__auto___15966;
    cljs.core.println.call(null, message_15967);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "summary", "summary", 380847952)], null), function(m) {
  cljs.core.println.call(null, "\nRan", (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(m), "tests containing", (new cljs.core.Keyword(null, "pass", "pass", 1574159993)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "assertions.");
  return cljs.core.println.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m), "failures,", (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "errors.");
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null), function(m) {
  return cljs.core.println.call(null, "\nTesting", cljs.core.name.call(null, (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(m)));
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-all-vars", "end-test-all-vars", 548827253)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713)], null), function(m) {
  return null;
});
cljs.test.js_line_and_column = function cljs$test$js_line_and_column(stack_element) {
  var parts = stack_element.split(":");
  var cnt = cljs.core.count.call(null, parts);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [parseInt(cljs.core.nth.call(null, parts, cnt - 2), 10), parseInt(cljs.core.nth.call(null, parts, cnt - 1), 10)], null);
};
cljs.test.js_filename = function cljs$test$js_filename(stack_element) {
  return cljs.core.first.call(null, cljs.core.last.call(null, stack_element.split("/out/")).split(":"));
};
cljs.test.mapped_line_and_column = function cljs$test$mapped_line_and_column(filename, line, column) {
  var default$ = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line, column], null);
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "source-map", "source-map", 1706252311)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var source_map = temp__4423__auto__;
    var temp__4423__auto____$1 = cljs.core.get_in.call(null, source_map, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line - 1], null));
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var columns = temp__4423__auto____$1;
      return cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first.call(null, function() {
        var temp__4423__auto____$2 = cljs.core.get.call(null, columns, column - 1);
        if (cljs.core.truth_(temp__4423__auto____$2)) {
          var mapping = temp__4423__auto____$2;
          return mapping;
        } else {
          return cljs.core.second.call(null, cljs.core.first.call(null, columns));
        }
      }()), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "source", "source", -433931539), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "col", "col", -1959363084)], null)));
    } else {
      return default$;
    }
  } else {
    return default$;
  }
};
cljs.test.file_and_line = function cljs$test$file_and_line(exception, depth) {
  var temp__4423__auto__ = function() {
    var and__6198__auto__ = typeof exception.stack === "string";
    if (and__6198__auto__) {
      var G__15977 = exception.stack;
      var G__15977__$1 = G__15977 == null ? null : clojure.string.split_lines.call(null, G__15977);
      var G__15977__$2 = G__15977__$1 == null ? null : cljs.core.get.call(null, G__15977__$1, depth);
      var G__15977__$3 = G__15977__$2 == null ? null : clojure.string.trim.call(null, G__15977__$2);
      return G__15977__$3;
    } else {
      return and__6198__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4423__auto__)) {
    var stack_element = temp__4423__auto__;
    var fname = cljs.test.js_filename.call(null, stack_element);
    var vec__15978 = cljs.test.js_line_and_column.call(null, stack_element);
    var line = cljs.core.nth.call(null, vec__15978, 0, null);
    var column = cljs.core.nth.call(null, vec__15978, 1, null);
    var vec__15981 = cljs.test.mapped_line_and_column.call(null, fname, line, column);
    var fname__$1 = cljs.core.nth.call(null, vec__15981, 0, null);
    var line__$1 = cljs.core.nth.call(null, vec__15981, 1, null);
    var column__$1 = cljs.core.nth.call(null, vec__15981, 2, null);
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "file", "file", -1269645878), fname__$1, new cljs.core.Keyword(null, "line", "line", 212345235), line__$1, new cljs.core.Keyword(null, "column", "column", 2078222095), column__$1], null);
  } else {
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), exception.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), exception.lineNumber], null);
  }
};
cljs.test.do_report = function cljs$test$do_report(m) {
  var m__$1 = function() {
    var G__15985 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m).fqn : null;
    switch(G__15985) {
      case "fail":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, new Error, 4), m);
        break;
      case "error":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m), 0), m);
        break;
      default:
        return m;
    }
  }();
  return cljs.test.report.call(null, m__$1);
};
cljs.test.IAsyncTest = function() {
};
cljs.test.async_QMARK_ = function cljs$test$async_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$test$IAsyncTest$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
  }
};
cljs.test.run_block = function cljs$test$run_block(fns) {
  while (true) {
    var temp__4425__auto__ = cljs.core.seq.call(null, fns);
    if (temp__4425__auto__) {
      var xs__4977__auto__ = temp__4425__auto__;
      var f = cljs.core.first.call(null, xs__4977__auto__);
      var obj = f.call(null);
      if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, obj))) {
        return obj.call(null, function() {
          var d = new cljs.core.Delay(function(fns, obj, f, xs__4977__auto__, temp__4425__auto__) {
            return function() {
              return cljs$test$run_block.call(null, cljs.core.rest.call(null, fns));
            };
          }(fns, obj, f, xs__4977__auto__, temp__4425__auto__), null);
          return function(fns, d, obj, f, xs__4977__auto__, temp__4425__auto__) {
            return function() {
              if (cljs.core.realized_QMARK_.call(null, d)) {
                return cljs.core.println.call(null, "WARNING: Async test called done more than one time.");
              } else {
                return cljs.core.deref.call(null, d);
              }
            };
          }(fns, d, obj, f, xs__4977__auto__, temp__4425__auto__);
        }());
      } else {
        var G__15991 = function() {
          var G__15990 = cljs.core.rest.call(null, fns);
          var G__15990__$1 = cljs.core.truth_((new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, obj))) ? cljs.core.concat.call(null, obj, G__15990) : G__15990;
          return G__15990__$1;
        }();
        fns = G__15991;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.test.block = function cljs$test$block(fns) {
  var G__15993 = fns;
  var G__15993__$1 = G__15993 == null ? null : cljs.core.vary_meta.call(null, G__15993, cljs.core.assoc, new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965), true);
  return G__15993__$1;
};
cljs.test.test_var_block_STAR_ = function cljs$test$test_var_block_STAR_(v, t) {
  if (v instanceof cljs.core.Var) {
  } else {
    throw new Error("Assert failed: (instance? Var v)");
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.conj, v);
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.Keyword(null, "test", "test", 577538877)], null), cljs.core.inc);
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    try {
      return t.call(null);
    } catch (e15996) {
      var e = e15996;
      var G__15997 = e instanceof cljs.core.Keyword ? e.fqn : null;
      switch(G__15997) {
        case "cljs.test/async-disabled":
          throw "Async tests require fixtures to be specified as maps.  Testing aborted.";break;
        default:
          return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), e], null));
      }
    }
  }, function() {
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.rest);
  }], null);
};
cljs.test.test_var_block = function cljs$test$test_var_block(v) {
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var t = temp__4423__auto__;
    return cljs.test.test_var_block_STAR_.call(null, v, t);
  } else {
    return null;
  }
};
cljs.test.test_var = function cljs$test$test_var(v) {
  return cljs.test.run_block.call(null, cljs.test.test_var_block.call(null, v));
};
cljs.test.default_fixture = function cljs$test$default_fixture(f) {
  return f.call(null);
};
cljs.test.compose_fixtures = function cljs$test$compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cljs.test.join_fixtures = function cljs$test$join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cljs.test.compose_fixtures, cljs.test.default_fixture, fixtures);
};
cljs.test.wrap_map_fixtures = function cljs$test$wrap_map_fixtures(map_fixtures, block) {
  return cljs.core.concat.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "before", "before", -1633692388), map_fixtures), block, cljs.core.reverse.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "after", "after", 594996914), map_fixtures)));
};
cljs.test.execution_strategy = function cljs$test$execution_strategy(once, each) {
  var fixtures_type = function cljs$test$execution_strategy_$_fixtures_type(coll) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return new cljs.core.Keyword(null, "none", "none", 1333468478);
    } else {
      if (cljs.core.every_QMARK_.call(null, cljs.core.map_QMARK_, coll)) {
        return new cljs.core.Keyword(null, "map", "map", 1371690461);
      } else {
        if (cljs.core.every_QMARK_.call(null, cljs.core.fn_QMARK_, coll)) {
          return new cljs.core.Keyword(null, "fn", "fn", -1175266204);
        } else {
          return null;
        }
      }
    }
  };
  var fixtures_types = function cljs$test$execution_strategy_$_fixtures_types() {
    return cljs.core.distinct.call(null, cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null), cljs.core.map.call(null, fixtures_type, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [once, each], null))));
  };
  var vec__16002 = fixtures_types.call(null);
  var type = cljs.core.nth.call(null, vec__16002, 0, null);
  var types = vec__16002;
  if (cljs.core.not_any_QMARK_.call(null, cljs.core.nil_QMARK_, types)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Fixtures may not be of mixed types"), cljs.core.str("\n"), cljs.core.str("(not-any? nil? types)")].join(""));
  }
  if (2 > cljs.core.count.call(null, types)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("fixtures specified in :once and :each must be of the same type"), cljs.core.str("\n"), cljs.core.str("(\x3e 2 (count types))")].join(""));
  }
  return (new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "async", "async", 1050769601), new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "sync", "sync", -624148946)], null)).call(null, type, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.test.disable_async = function cljs$test$disable_async(f) {
  return function() {
    var obj = f.call(null);
    if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, obj))) {
      throw new cljs.core.Keyword("cljs.test", "async-disabled", "cljs.test/async-disabled", -772095377);
    } else {
    }
    return obj;
  };
};
cljs.test.test_vars_block = function cljs$test$test_vars_block(vars) {
  return cljs.core.map.call(null, function(p__16014) {
    var vec__16015 = p__16014;
    var ns = cljs.core.nth.call(null, vec__16015, 0, null);
    var vars__$1 = cljs.core.nth.call(null, vec__16015, 1, null);
    return function(vec__16015, ns, vars__$1) {
      return function() {
        return cljs.test.block.call(null, function() {
          var env = cljs.test.get_current_env.call(null);
          var once_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-fixtures", "once-fixtures", 1253947167), ns], null));
          var each_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "each-fixtures", "each-fixtures", 802243977), ns], null));
          var G__16018 = cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures) instanceof cljs.core.Keyword ? cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures).fqn : null;
          switch(G__16018) {
            case "async":
              return cljs.test.wrap_map_fixtures.call(null, once_fixtures, cljs.core.mapcat.call(null, cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.test.wrap_map_fixtures, each_fixtures), cljs.test.test_var_block), cljs.core.filter.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "test", "test", 577538877), cljs.core.meta), vars__$1)));
              break;
            case "sync":
              var each_fixture_fn = cljs.test.join_fixtures.call(null, each_fixtures);
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(each_fixture_fn, G__16018, env, once_fixtures, each_fixtures, vec__16015, ns, vars__$1) {
                return function() {
                  return cljs.test.join_fixtures.call(null, once_fixtures).call(null, function(each_fixture_fn, G__16018, env, once_fixtures, each_fixtures, vec__16015, ns, vars__$1) {
                    return function() {
                      var seq__16019 = cljs.core.seq.call(null, vars__$1);
                      var chunk__16020 = null;
                      var count__16021 = 0;
                      var i__16022 = 0;
                      while (true) {
                        if (i__16022 < count__16021) {
                          var v = cljs.core._nth.call(null, chunk__16020, i__16022);
                          var temp__4425__auto___16024 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                          if (cljs.core.truth_(temp__4425__auto___16024)) {
                            var t_16025 = temp__4425__auto___16024;
                            each_fixture_fn.call(null, function(seq__16019, chunk__16020, count__16021, i__16022, t_16025, temp__4425__auto___16024, v, each_fixture_fn, G__16018, env, once_fixtures, each_fixtures, vec__16015, ns, vars__$1) {
                              return function() {
                                return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_16025)));
                              };
                            }(seq__16019, chunk__16020, count__16021, i__16022, t_16025, temp__4425__auto___16024, v, each_fixture_fn, G__16018, env, once_fixtures, each_fixtures, vec__16015, ns, vars__$1));
                          } else {
                          }
                          var G__16026 = seq__16019;
                          var G__16027 = chunk__16020;
                          var G__16028 = count__16021;
                          var G__16029 = i__16022 + 1;
                          seq__16019 = G__16026;
                          chunk__16020 = G__16027;
                          count__16021 = G__16028;
                          i__16022 = G__16029;
                          continue;
                        } else {
                          var temp__4425__auto__ = cljs.core.seq.call(null, seq__16019);
                          if (temp__4425__auto__) {
                            var seq__16019__$1 = temp__4425__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, seq__16019__$1)) {
                              var c__7021__auto__ = cljs.core.chunk_first.call(null, seq__16019__$1);
                              var G__16030 = cljs.core.chunk_rest.call(null, seq__16019__$1);
                              var G__16031 = c__7021__auto__;
                              var G__16032 = cljs.core.count.call(null, c__7021__auto__);
                              var G__16033 = 0;
                              seq__16019 = G__16030;
                              chunk__16020 = G__16031;
                              count__16021 = G__16032;
                              i__16022 = G__16033;
                              continue;
                            } else {
                              var v = cljs.core.first.call(null, seq__16019__$1);
                              var temp__4425__auto___16034__$1 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                              if (cljs.core.truth_(temp__4425__auto___16034__$1)) {
                                var t_16035 = temp__4425__auto___16034__$1;
                                each_fixture_fn.call(null, function(seq__16019, chunk__16020, count__16021, i__16022, t_16035, temp__4425__auto___16034__$1, v, seq__16019__$1, temp__4425__auto__, each_fixture_fn, G__16018, env, once_fixtures, each_fixtures, vec__16015, ns, vars__$1) {
                                  return function() {
                                    return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_16035)));
                                  };
                                }(seq__16019, chunk__16020, count__16021, i__16022, t_16035, temp__4425__auto___16034__$1, v, seq__16019__$1, temp__4425__auto__, each_fixture_fn, G__16018, env, once_fixtures, each_fixtures, vec__16015, ns, vars__$1));
                              } else {
                              }
                              var G__16036 = cljs.core.next.call(null, seq__16019__$1);
                              var G__16037 = null;
                              var G__16038 = 0;
                              var G__16039 = 0;
                              seq__16019 = G__16036;
                              chunk__16020 = G__16037;
                              count__16021 = G__16038;
                              i__16022 = G__16039;
                              continue;
                            }
                          } else {
                            return null;
                          }
                        }
                        break;
                      }
                    };
                  }(each_fixture_fn, G__16018, env, once_fixtures, each_fixtures, vec__16015, ns, vars__$1));
                };
              }(each_fixture_fn, G__16018, env, once_fixtures, each_fixtures, vec__16015, ns, vars__$1)], null);
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures))].join(""));;
          }
        }());
      };
    }(vec__16015, ns, vars__$1);
  }, cljs.core.group_by.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.core.meta), vars));
};
cljs.test.test_vars = function cljs$test$test_vars(vars) {
  return cljs.test.run_block.call(null, cljs.core.concat.call(null, cljs.test.test_vars_block.call(null, vars), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    return cljs.test.report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713), new cljs.core.Keyword(null, "vars", "vars", -2046957217), vars], null));
  }], null)));
};
cljs.test.successful_QMARK_ = function cljs$test$successful_QMARK_(summary) {
  return (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0 && (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0;
};
goog.provide("tiltontec.cell.base");
goog.require("cljs.core");
goog.require("tiltontec.util.base");
goog.require("cljs.test");
goog.require("tiltontec.util.core");
tiltontec.cell.base._PLUS_pulse_PLUS_ = cljs.core.atom.call(null, 0);
tiltontec.cell.base.cells_init = function tiltontec$cell$base$cells_init() {
  return cljs.core.reset_BANG_.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_, 0);
};
tiltontec.cell.base._STAR_causation_STAR_ = cljs.core.List.EMPTY;
tiltontec.cell.base._STAR_call_stack_STAR_ = null;
tiltontec.cell.base._STAR_depender_STAR_ = null;
tiltontec.cell.base._STAR_defer_changes_STAR_ = false;
tiltontec.cell.base._PLUS_client_q_handler_PLUS_ = cljs.core.atom.call(null, null);
if (typeof tiltontec.cell.base.unbound !== "undefined") {
} else {
  tiltontec.cell.base.unbound = cljs.core.gensym.call(null, "unbound-cell-value");
}
if (typeof tiltontec.cell.base.uncurrent !== "undefined") {
} else {
  tiltontec.cell.base.uncurrent = cljs.core.gensym.call(null, "uncurrent-formulaic-value");
}
tiltontec.cell.base._STAR_not_to_be_STAR_ = false;
tiltontec.cell.base._STAR_unfinished_business_STAR_ = null;
tiltontec.cell.base._STAR_within_integrity_STAR_ = false;
tiltontec.cell.base._STAR_finbiz_id_STAR_ = 0;
tiltontec.cell.base._STAR_c_prop_depth_STAR_ = 0;
tiltontec.cell.base._PLUS_c_debug_PLUS_ = cljs.core.atom.call(null, false);
tiltontec.cell.base._PLUS_stop_PLUS_ = cljs.core.atom.call(null, false);
tiltontec.cell.base.pcell = function tiltontec$cell$base$pcell(_AMPERSAND_form, _AMPERSAND_env, tag, c) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "println", "cljs.core/println", -331834442, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "pcell", "pcell", -240144130)), function() {
    var x__7044__auto__ = tag;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "c-slot", "tiltontec.cell.base/c-slot", 1453031347, null)), function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "c-state", "tiltontec.cell.base/c-state", 1205895034, null)), function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.cell.base.pcell.cljs$lang$macro = true;
tiltontec.cell.base.cells_reset = function tiltontec$cell$base$cells_reset(var_args) {
  var args13065 = [];
  var len__7285__auto___13068 = arguments.length;
  var i__7286__auto___13069 = 0;
  while (true) {
    if (i__7286__auto___13069 < len__7285__auto___13068) {
      args13065.push(arguments[i__7286__auto___13069]);
      var G__13070 = i__7286__auto___13069 + 1;
      i__7286__auto___13069 = G__13070;
      continue;
    } else {
    }
    break;
  }
  var G__13067 = args13065.length;
  switch(G__13067) {
    case 0:
      return tiltontec.cell.base.cells_reset.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return tiltontec.cell.base.cells_reset.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13065.length)].join(""));;
  }
};
tiltontec.cell.base.cells_reset.cljs$core$IFn$_invoke$arity$0 = function() {
  return tiltontec.cell.base.cells_reset.call(null, cljs.core.PersistentArrayMap.EMPTY);
};
tiltontec.cell.base.cells_reset.cljs$core$IFn$_invoke$arity$1 = function(options) {
  cljs.core.reset_BANG_.call(null, tiltontec.cell.base._PLUS_c_debug_PLUS_, (new cljs.core.Keyword(null, "debug", "debug", -1608172596)).cljs$core$IFn$_invoke$arity$2(options, false));
  cljs.core.reset_BANG_.call(null, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_), 0);
  return cljs.core.reset_BANG_.call(null, tiltontec.cell.base._PLUS_client_q_handler_PLUS_, (new cljs.core.Keyword(null, "client-queue-handler", "client-queue-handler", -817174181)).cljs$core$IFn$_invoke$arity$1(options));
};
tiltontec.cell.base.cells_reset.cljs$lang$maxFixedArity = 1;
tiltontec.cell.base.without_c_dependency = function tiltontec$cell$base$without_c_dependency(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13075 = arguments.length;
  var i__7286__auto___13076 = 0;
  while (true) {
    if (i__7286__auto___13076 < len__7285__auto___13075) {
      args__7292__auto__.push(arguments[i__7286__auto___13076]);
      var G__13077 = i__7286__auto___13076 + 1;
      i__7286__auto___13076 = G__13077;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return tiltontec.cell.base.without_c_dependency.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
tiltontec.cell.base.without_c_dependency.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "binding", "cljs.core/binding", 2050379843, null)), function() {
    var x__7044__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "*depender*", "tiltontec.cell.base/*depender*", 1302959745, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, null)))));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), body)));
};
tiltontec.cell.base.without_c_dependency.cljs$lang$maxFixedArity = 2;
tiltontec.cell.base.without_c_dependency.cljs$lang$applyTo = function(seq13072) {
  var G__13073 = cljs.core.first.call(null, seq13072);
  var seq13072__$1 = cljs.core.next.call(null, seq13072);
  var G__13074 = cljs.core.first.call(null, seq13072__$1);
  var seq13072__$2 = cljs.core.next.call(null, seq13072__$1);
  return tiltontec.cell.base.without_c_dependency.cljs$core$IFn$_invoke$arity$variadic(G__13073, G__13074, seq13072__$2);
};
tiltontec.cell.base.without_c_dependency.cljs$lang$macro = true;
tiltontec.cell.base._PLUS_cause = function tiltontec$cell$base$_PLUS_cause() {
  return cljs.core.first.call(null, tiltontec.cell.base._STAR_causation_STAR_);
};
tiltontec.cell.base.c_stopper = function tiltontec$cell$base$c_stopper(why) {
  return cljs.core.reset_BANG_.call(null, tiltontec.cell.base._PLUS_stop_PLUS_, why);
};
tiltontec.cell.base._PLUS_c_stopper_PLUS_ = cljs.core.atom.call(null, tiltontec.cell.base.c_stopper);
tiltontec.cell.base.c_stop = function tiltontec$cell$base$c_stop(var_args) {
  var args13078 = [];
  var len__7285__auto___13081 = arguments.length;
  var i__7286__auto___13082 = 0;
  while (true) {
    if (i__7286__auto___13082 < len__7285__auto___13081) {
      args13078.push(arguments[i__7286__auto___13082]);
      var G__13083 = i__7286__auto___13082 + 1;
      i__7286__auto___13082 = G__13083;
      continue;
    } else {
    }
    break;
  }
  var G__13080 = args13078.length;
  switch(G__13080) {
    case 0:
      return tiltontec.cell.base.c_stop.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return tiltontec.cell.base.c_stop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13078.length)].join(""));;
  }
};
tiltontec.cell.base.c_stop.cljs$core$IFn$_invoke$arity$0 = function() {
  return tiltontec.cell.base.c_stop.call(null, true);
};
tiltontec.cell.base.c_stop.cljs$core$IFn$_invoke$arity$1 = function(why) {
  return cljs.core.deref.call(null, tiltontec.cell.base._PLUS_c_stopper_PLUS_).call(null, why);
};
tiltontec.cell.base.c_stop.cljs$lang$maxFixedArity = 1;
tiltontec.cell.base.c_stopped = function tiltontec$cell$base$c_stopped() {
  return cljs.core.deref.call(null, tiltontec.cell.base._PLUS_stop_PLUS_);
};
tiltontec.cell.base.un_stopped = function tiltontec$cell$base$un_stopped(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13088 = arguments.length;
  var i__7286__auto___13089 = 0;
  while (true) {
    if (i__7286__auto___13089 < len__7285__auto___13088) {
      args__7292__auto__.push(arguments[i__7286__auto___13089]);
      var G__13090 = i__7286__auto___13089 + 1;
      i__7286__auto___13089 = G__13090;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return tiltontec.cell.base.un_stopped.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
tiltontec.cell.base.un_stopped.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "when-not", "cljs.core/when-not", -556141047, null)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "+stop+", "tiltontec.cell.base/+stop+", 1421569483, null)))));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), body)));
};
tiltontec.cell.base.un_stopped.cljs$lang$maxFixedArity = 2;
tiltontec.cell.base.un_stopped.cljs$lang$applyTo = function(seq13085) {
  var G__13086 = cljs.core.first.call(null, seq13085);
  var seq13085__$1 = cljs.core.next.call(null, seq13085);
  var G__13087 = cljs.core.first.call(null, seq13085__$1);
  var seq13085__$2 = cljs.core.next.call(null, seq13085__$1);
  return tiltontec.cell.base.un_stopped.cljs$core$IFn$_invoke$arity$variadic(G__13086, G__13087, seq13085__$2);
};
tiltontec.cell.base.un_stopped.cljs$lang$macro = true;
tiltontec.cell.base.ustack$ = function tiltontec$cell$base$ustack$(tag) {
  return [cljs.core.str(tag), cljs.core.str("ustack\x3e "), cljs.core.str(cljs.core.vec.call(null, cljs.core.map.call(null, function(c) {
    return (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c));
  }, tiltontec.cell.base._STAR_call_stack_STAR_)))].join("");
};
tiltontec.cell.base.c_assert = function tiltontec$cell$base$c_assert(var_args) {
  var args13091 = [];
  var len__7285__auto___13097 = arguments.length;
  var i__7286__auto___13098 = 0;
  while (true) {
    if (i__7286__auto___13098 < len__7285__auto___13097) {
      args13091.push(arguments[i__7286__auto___13098]);
      var G__13099 = i__7286__auto___13098 + 1;
      i__7286__auto___13098 = G__13099;
      continue;
    } else {
    }
    break;
  }
  var G__13096 = args13091.length;
  switch(G__13096) {
    case 1:
      return tiltontec.cell.base.c_assert.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args13091.slice(2), 0, null);
      return tiltontec.cell.base.c_assert.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
tiltontec.cell.base.c_assert.cljs$core$IFn$_invoke$arity$1 = function(assertion) {
  if (cljs.core.truth_(assertion)) {
    return null;
  } else {
    return tiltontec.util.core.err.call(null, "c-assert anon failed");
  }
};
tiltontec.cell.base.c_assert.cljs$core$IFn$_invoke$arity$variadic = function(assertion, fmt$, fmt_args) {
  if (cljs.core.truth_(tiltontec.cell.base._PLUS_stop_PLUS_)) {
    return null;
  } else {
    if (cljs.core.truth_(assertion)) {
      return null;
    } else {
      return cljs.core.apply.call(null, new cljs.core.Var(function() {
        return tiltontec.util.core.err;
      }, new cljs.core.Symbol("tiltontec.util.core", "err", "tiltontec.util.core/err", -267832473, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core", "tiltontec.util.core", -133870969, null), new cljs.core.Symbol(null, "err", "err", -448925678, null), "/home/kenneth/rube/src/tiltontec/util/core.cljc", 16, 3, 46, 46, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core.err) ? 
      tiltontec.util.core.err.cljs$lang$test : null])), [cljs.core.str("c-assert\x3e "), cljs.core.str(fmt$), cljs.core.str(fmt_args)].join(""));
    }
  }
};
tiltontec.cell.base.c_assert.cljs$lang$applyTo = function(seq13092) {
  var G__13093 = cljs.core.first.call(null, seq13092);
  var seq13092__$1 = cljs.core.next.call(null, seq13092);
  var G__13094 = cljs.core.first.call(null, seq13092__$1);
  var seq13092__$2 = cljs.core.next.call(null, seq13092__$1);
  return tiltontec.cell.base.c_assert.cljs$core$IFn$_invoke$arity$variadic(G__13093, G__13094, seq13092__$2);
};
tiltontec.cell.base.c_assert.cljs$lang$maxFixedArity = 2;
tiltontec.cell.base.c_break = function tiltontec$cell$base$c_break(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13102 = arguments.length;
  var i__7286__auto___13103 = 0;
  while (true) {
    if (i__7286__auto___13103 < len__7285__auto___13102) {
      args__7292__auto__.push(arguments[i__7286__auto___13103]);
      var G__13104 = i__7286__auto___13103 + 1;
      i__7286__auto___13103 = G__13104;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return tiltontec.cell.base.c_break.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
tiltontec.cell.base.c_break.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (cljs.core.truth_(tiltontec.cell.base._PLUS_stop_PLUS_)) {
    return null;
  } else {
    return tiltontec.util.core.err.call(null, [cljs.core.str(args)].join(""));
  }
};
tiltontec.cell.base.c_break.cljs$lang$maxFixedArity = 0;
tiltontec.cell.base.c_break.cljs$lang$applyTo = function(seq13101) {
  return tiltontec.cell.base.c_break.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq13101));
};
tiltontec.cell.base.c_warn = function tiltontec$cell$base$c_warn(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13106 = arguments.length;
  var i__7286__auto___13107 = 0;
  while (true) {
    if (i__7286__auto___13107 < len__7285__auto___13106) {
      args__7292__auto__.push(arguments[i__7286__auto___13107]);
      var G__13108 = i__7286__auto___13107 + 1;
      i__7286__auto___13107 = G__13108;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return tiltontec.cell.base.c_warn.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
tiltontec.cell.base.c_warn.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (cljs.core.truth_(tiltontec.cell.base._PLUS_stop_PLUS_)) {
    return null;
  } else {
    return cljs.core.println.call(null, cljs.core.apply.call(null, cljs.core.str, "WARNING: ", args));
  }
};
tiltontec.cell.base.c_warn.cljs$lang$maxFixedArity = 0;
tiltontec.cell.base.c_warn.cljs$lang$applyTo = function(seq13105) {
  return tiltontec.cell.base.c_warn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq13105));
};
cljs.core.derive.call(null, new cljs.core.Keyword("tiltontec.cell.base", "model", "tiltontec.cell.base/model", 284743830), new cljs.core.Keyword("tiltontec.cell.base", "object", "tiltontec.cell.base/object", 1595927066));
cljs.core.derive.call(null, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071), new cljs.core.Keyword("tiltontec.cell.base", "object", "tiltontec.cell.base/object", 1595927066));
cljs.core.derive.call(null, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071));
tiltontec.cell.base.ia_type = function tiltontec$cell$base$ia_type(it) {
  if (it instanceof cljs.core.Atom) {
    return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, it));
  } else {
    return cljs.core.type.call(null, it);
  }
};
tiltontec.cell.base.ia_type_QMARK_ = function tiltontec$cell$base$ia_type_QMARK_(it, typ) {
  return cljs.core.isa_QMARK_.call(null, tiltontec.cell.base.ia_type.call(null, it), typ);
};
tiltontec.cell.base.c_formula_QMARK_ = function tiltontec$cell$base$c_formula_QMARK_(c) {
  return tiltontec.cell.base.ia_type_QMARK_.call(null, c, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037));
};
tiltontec.cell.base.c_ref_QMARK_ = function tiltontec$cell$base$c_ref_QMARK_(x) {
  return tiltontec.cell.base.ia_type_QMARK_.call(null, x, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071));
};
tiltontec.cell.base.c_me = function tiltontec$cell$base$c_me(ref) {
  return (new cljs.core.Keyword(null, "me", "me", -139006693)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_slot = function tiltontec$cell$base$c_slot(ref) {
  return (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_state = function tiltontec$cell$base$c_state(ref) {
  return (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_input_QMARK_ = function tiltontec$cell$base$c_input_QMARK_(ref) {
  return (new cljs.core.Keyword(null, "input?", "input?", -1792843173)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_rule = function tiltontec$cell$base$c_rule(ref) {
  return (new cljs.core.Keyword(null, "rule", "rule", 729973257)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_pulse = function tiltontec$cell$base$c_pulse(ref) {
  return (new cljs.core.Keyword(null, "pulse", "pulse", -244494476)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_pulse_last_changed = function tiltontec$cell$base$c_pulse_last_changed(ref) {
  return (new cljs.core.Keyword(null, "pulse-last-changed", "pulse-last-changed", 1035703380)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_pulse_observed = function tiltontec$cell$base$c_pulse_observed(ref) {
  return (new cljs.core.Keyword(null, "pulse-observed", "pulse-observed", 595719633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_useds = function tiltontec$cell$base$c_useds(ref) {
  return (new cljs.core.Keyword(null, "useds", "useds", 621350967)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_users = function tiltontec$cell$base$c_users(ref) {
  return (new cljs.core.Keyword(null, "users", "users", -713552705)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_callers = function tiltontec$cell$base$c_callers(ref) {
  return (new cljs.core.Keyword(null, "callers", "callers", -1991542784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_optimize = function tiltontec$cell$base$c_optimize(ref) {
  return (new cljs.core.Keyword(null, "optimize", "optimize", -1912349448)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_ephemeral_QMARK_ = function tiltontec$cell$base$c_ephemeral_QMARK_(ref) {
  return (new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_lazy = function tiltontec$cell$base$c_lazy(ref) {
  return (new cljs.core.Keyword(null, "lazy", "lazy", -424547181)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_synaptic_QMARK_ = function tiltontec$cell$base$c_synaptic_QMARK_(ref) {
  return (new cljs.core.Keyword(null, "synaptic?", "synaptic?", -2113061248)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_value = function tiltontec$cell$base$c_value(c) {
  if (cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error("Assert failed: (any-ref? c)");
  }
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = tiltontec.cell.base.c_ref_QMARK_.call(null, c);
    if (cljs.core.truth_(and__6198__auto__)) {
      return cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, c));
    } else {
      return and__6198__auto__;
    }
  }())) {
    return (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c));
  } else {
    return cljs.core.deref.call(null, c);
  }
};
tiltontec.cell.base.c_optimized_away_QMARK_ = function tiltontec$cell$base$c_optimized_away_QMARK_(c) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
    return !cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, c)) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "optimized-away", "optimized-away", 876765856), (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c)));
  } else {
    return true;
  }
};
tiltontec.cell.base.c_model = function tiltontec$cell$base$c_model(rc) {
  return (new cljs.core.Keyword(null, "me", "me", -139006693)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rc));
};
tiltontec.cell.base.c_md_name = function tiltontec$cell$base$c_md_name(c) {
  var temp__4423__auto__ = tiltontec.cell.base.c_model.call(null, c);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var md = temp__4423__auto__;
    var or__6210__auto__ = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, md));
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return "anon";
    }
  } else {
    return "no-md";
  }
};
tiltontec.cell.base.c_slot_name = function tiltontec$cell$base$c_slot_name(rc) {
  return (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rc));
};
tiltontec.cell.base.c_value_state = function tiltontec$cell$base$c_value_state(rc) {
  var v = tiltontec.cell.base.c_value.call(null, rc);
  if (cljs.core._EQ_.call(null, v, tiltontec.cell.base.unbound)) {
    return new cljs.core.Keyword(null, "unbound", "unbound", -1366326654);
  } else {
    if (cljs.core._EQ_.call(null, v, tiltontec.cell.base.uncurrent)) {
      return new cljs.core.Keyword(null, "uncurrent", "uncurrent", -217246265);
    } else {
      return new cljs.core.Keyword(null, "valid", "valid", 155614240);
    }
  }
};
tiltontec.cell.base.c_unbound_QMARK_ = function tiltontec$cell$base$c_unbound_QMARK_(rc) {
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654), tiltontec.cell.base.c_value_state.call(null, rc));
};
tiltontec.cell.base.c_valid_QMARK_ = function tiltontec$cell$base$c_valid_QMARK_(rc) {
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "valid", "valid", 155614240), tiltontec.cell.base.c_value_state.call(null, rc));
};
tiltontec.cell.base.caller_ensure = function tiltontec$cell$base$caller_ensure(used, new_caller) {
  return cljs.core.swap_BANG_.call(null, used, cljs.core.assoc, new cljs.core.Keyword(null, "callers", "callers", -1991542784), cljs.core.conj.call(null, tiltontec.cell.base.c_callers.call(null, used), new_caller));
};
tiltontec.cell.base.caller_drop = function tiltontec$cell$base$caller_drop(used, caller) {
  return cljs.core.swap_BANG_.call(null, used, cljs.core.assoc, new cljs.core.Keyword(null, "callers", "callers", -1991542784), cljs.core.disj.call(null, tiltontec.cell.base.c_callers.call(null, used), caller));
};
tiltontec.cell.base.unlink_from_callers = function tiltontec$cell$base$unlink_from_callers(c) {
  var iter__6990__auto___13117 = function tiltontec$cell$base$unlink_from_callers_$_iter__13113(s__13114) {
    return new cljs.core.LazySeq(null, function() {
      var s__13114__$1 = s__13114;
      while (true) {
        var temp__4425__auto__ = cljs.core.seq.call(null, s__13114__$1);
        if (temp__4425__auto__) {
          var s__13114__$2 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__13114__$2)) {
            var c__6988__auto__ = cljs.core.chunk_first.call(null, s__13114__$2);
            var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
            var b__13116 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
            if (function() {
              var i__13115 = 0;
              while (true) {
                if (i__13115 < size__6989__auto__) {
                  var caller = cljs.core._nth.call(null, c__6988__auto__, i__13115);
                  cljs.core.chunk_append.call(null, b__13116, tiltontec.cell.base.caller_drop.call(null, c, caller));
                  var G__13118 = i__13115 + 1;
                  i__13115 = G__13118;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13116), tiltontec$cell$base$unlink_from_callers_$_iter__13113.call(null, cljs.core.chunk_rest.call(null, s__13114__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13116), null);
            }
          } else {
            var caller = cljs.core.first.call(null, s__13114__$2);
            return cljs.core.cons.call(null, tiltontec.cell.base.caller_drop.call(null, c, caller), tiltontec$cell$base$unlink_from_callers_$_iter__13113.call(null, cljs.core.rest.call(null, s__13114__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  iter__6990__auto___13117.call(null, tiltontec.cell.base.c_callers.call(null, c));
  return tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "callers", "callers", -1991542784), c], null), null);
};
tiltontec.cell.base.c_slots = function tiltontec$cell$base$c_slots(c, k) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error("Assert failed: (c-ref? c)");
  }
  return cljs.core.set.call(null, cljs.core.map.call(null, tiltontec.cell.base.c_slot, k.call(null, cljs.core.deref.call(null, c))));
};
tiltontec.cell.base.md_ref_QMARK_ = function tiltontec$cell$base$md_ref_QMARK_(x) {
  return x instanceof cljs.core.Atom;
};
if (typeof tiltontec.cell.base.mdead_QMARK_ !== "undefined") {
} else {
  tiltontec.cell.base.mdead_QMARK_ = function() {
    var method_table__7135__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__7136__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__7137__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__7138__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__7139__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.cell.base", "mdead?"), function(method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__, hierarchy__7139__auto__) {
      return function(me) {
        if (cljs.core.truth_(function() {
          var or__6210__auto__ = me == null;
          if (or__6210__auto__) {
            return or__6210__auto__;
          } else {
            return tiltontec.cell.base.md_ref_QMARK_.call(null, me);
          }
        }())) {
        } else {
          throw new Error("Assert failed: (or (nil? me) (md-ref? me))");
        }
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.type.call(null, cljs.core.truth_(me) ? cljs.core.deref.call(null, me) : null)], null);
      };
    }(method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__, hierarchy__7139__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__7139__auto__, method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.cell.base.mdead_QMARK_, new cljs.core.Keyword(null, "default", "default", -1987822328), function(me) {
  return false;
});
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.base.md_slot_owning_QMARK_ = function tiltontec$cell$base$md_slot_owning_QMARK_(class_name, slot_name) {
  return false;
};
goog.provide("tiltontec.model.macros");
goog.require("cljs.core");
goog.require("tiltontec.cell.base");
tiltontec.model.macros.pme = function tiltontec$model$macros$pme(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13124 = arguments.length;
  var i__7286__auto___13125 = 0;
  while (true) {
    if (i__7286__auto___13125 < len__7285__auto___13124) {
      args__7292__auto__.push(arguments[i__7286__auto___13125]);
      var G__13126 = i__7286__auto___13125 + 1;
      i__7286__auto___13125 = G__13126;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return tiltontec.model.macros.pme.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
tiltontec.model.macros.pme.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, mas) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "when", "cljs.core/when", 120293186, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, false), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "println", "cljs.core/println", -331834442, null)), function() {
      var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "ia-type", "tiltontec.cell.base/ia-type", 699012589, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null)))));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), function() {
      var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "name", "name", 1843675177)), function() {
        var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null)))));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }())));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), mas)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.model.macros.pme.cljs$lang$maxFixedArity = 2;
tiltontec.model.macros.pme.cljs$lang$applyTo = function(seq13121) {
  var G__13122 = cljs.core.first.call(null, seq13121);
  var seq13121__$1 = cljs.core.next.call(null, seq13121);
  var G__13123 = cljs.core.first.call(null, seq13121__$1);
  var seq13121__$2 = cljs.core.next.call(null, seq13121__$1);
  return tiltontec.model.macros.pme.cljs$core$IFn$_invoke$arity$variadic(G__13122, G__13123, seq13121__$2);
};
tiltontec.model.macros.pme.cljs$lang$macro = true;
goog.provide("tiltontec.cell.observer");
goog.require("cljs.core");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.model.macros");
tiltontec.cell.observer.type_cljc = function tiltontec$cell$observer$type_cljc(x) {
  var or__6210__auto__ = function() {
    var temp__4425__auto__ = cljs.core.meta.call(null, x);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var m = temp__4425__auto__;
      return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m);
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    return cljs.core.type.call(null, x);
  }
};
if (typeof tiltontec.cell.observer.observe !== "undefined") {
} else {
  tiltontec.cell.observer.observe = function() {
    var method_table__7135__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__7136__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__7137__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__7138__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__7139__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.cell.observer", "observe"), function(method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__, hierarchy__7139__auto__) {
      return function(slot_name, me, new_val, old_val, c) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot_name, tiltontec.cell.observer.type_cljc.call(null, me)], null);
      };
    }(method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__, hierarchy__7139__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__7139__auto__, method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__);
  }();
}
tiltontec.cell.observer._PLUS_observe_default_handler_PLUS_ = cljs.core.atom.call(null, null);
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.Keyword(null, "default", "default", -1987822328), function(slot, me, new_val, old_val, c) {
  var temp__4423__auto__ = cljs.core.deref.call(null, tiltontec.cell.observer._PLUS_observe_default_handler_PLUS_);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var obs = temp__4423__auto__;
    return obs.call(null, slot, me, new_val, old_val, c);
  } else {
    return null;
  }
});
tiltontec.cell.observer.defobserver = function tiltontec$cell$observer$defobserver(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13135 = arguments.length;
  var i__7286__auto___13136 = 0;
  while (true) {
    if (i__7286__auto___13136 < len__7285__auto___13135) {
      args__7292__auto__.push(arguments[i__7286__auto___13136]);
      var G__13137 = i__7286__auto___13136 + 1;
      i__7286__auto___13136 = G__13137;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 5 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(5), 0, null) : null;
  return tiltontec.cell.observer.defobserver.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__7293__auto__);
};
tiltontec.cell.observer.defobserver.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, slot, types, params, body) {
  if (slot instanceof cljs.core.Keyword) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("defobserver\x3e slot should be a keyword."), cljs.core.str("\n"), cljs.core.str("(keyword? slot)")].join(""));
  }
  var ftypes = cljs.core.concat.call(null, types, cljs.core.take_last.call(null, 1 - cljs.core.count.call(null, types), cljs.core.list(new cljs.core.Keyword("tiltontec.cell.base", "model", "tiltontec.cell.base/model", 284743830))));
  var fparams = cljs.core.concat.call(null, params, cljs.core.take_last.call(null, 4 - cljs.core.count.call(null, params), cljs.core.list(new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null), new cljs.core.Symbol(null, "old-value", "old-value", -1791888974, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))));
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "defmethod", "cljs.core/defmethod", -180785162, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.observer", "observe", "tiltontec.cell.observer/observe", -883619497, null)), function() {
    var x__7044__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
      var x__7044__auto__ = slot;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), ftypes))));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), function() {
    var x__7044__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "slot", "slot", 1880761098, null)), fparams))));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), body)));
};
tiltontec.cell.observer.defobserver.cljs$lang$maxFixedArity = 5;
tiltontec.cell.observer.defobserver.cljs$lang$applyTo = function(seq13129) {
  var G__13130 = cljs.core.first.call(null, seq13129);
  var seq13129__$1 = cljs.core.next.call(null, seq13129);
  var G__13131 = cljs.core.first.call(null, seq13129__$1);
  var seq13129__$2 = cljs.core.next.call(null, seq13129__$1);
  var G__13132 = cljs.core.first.call(null, seq13129__$2);
  var seq13129__$3 = cljs.core.next.call(null, seq13129__$2);
  var G__13133 = cljs.core.first.call(null, seq13129__$3);
  var seq13129__$4 = cljs.core.next.call(null, seq13129__$3);
  var G__13134 = cljs.core.first.call(null, seq13129__$4);
  var seq13129__$5 = cljs.core.next.call(null, seq13129__$4);
  return tiltontec.cell.observer.defobserver.cljs$core$IFn$_invoke$arity$variadic(G__13130, G__13131, G__13132, G__13133, G__13134, seq13129__$5);
};
tiltontec.cell.observer.defobserver.cljs$lang$macro = true;
tiltontec.cell.observer.fn_obs = function tiltontec$cell$observer$fn_obs(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13141 = arguments.length;
  var i__7286__auto___13142 = 0;
  while (true) {
    if (i__7286__auto___13142 < len__7285__auto___13141) {
      args__7292__auto__.push(arguments[i__7286__auto___13142]);
      var G__13143 = i__7286__auto___13142 + 1;
      i__7286__auto___13142 = G__13143;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return tiltontec.cell.observer.fn_obs.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
tiltontec.cell.observer.fn_obs.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
    var x__7044__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "slot", "slot", 1880761098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "new", "new", -444906321, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 
    new cljs.core.Symbol(null, "old", "old", -184691163, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "c", "c", -122660552, null))))));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), body)));
};
tiltontec.cell.observer.fn_obs.cljs$lang$maxFixedArity = 2;
tiltontec.cell.observer.fn_obs.cljs$lang$applyTo = function(seq13138) {
  var G__13139 = cljs.core.first.call(null, seq13138);
  var seq13138__$1 = cljs.core.next.call(null, seq13138);
  var G__13140 = cljs.core.first.call(null, seq13138__$1);
  var seq13138__$2 = cljs.core.next.call(null, seq13138__$1);
  return tiltontec.cell.observer.fn_obs.cljs$core$IFn$_invoke$arity$variadic(G__13139, G__13140, seq13138__$2);
};
tiltontec.cell.observer.fn_obs.cljs$lang$macro = true;
tiltontec.cell.observer.c_observe = function tiltontec$cell$observer$c_observe(var_args) {
  var args13144 = [];
  var len__7285__auto___13147 = arguments.length;
  var i__7286__auto___13148 = 0;
  while (true) {
    if (i__7286__auto___13148 < len__7285__auto___13147) {
      args13144.push(arguments[i__7286__auto___13148]);
      var G__13149 = i__7286__auto___13148 + 1;
      i__7286__auto___13148 = G__13149;
      continue;
    } else {
    }
    break;
  }
  var G__13146 = args13144.length;
  switch(G__13146) {
    case 2:
      return tiltontec.cell.observer.c_observe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return tiltontec.cell.observer.c_observe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13144.length)].join(""));;
  }
};
tiltontec.cell.observer.c_observe.cljs$core$IFn$_invoke$arity$2 = function(c, why) {
  return tiltontec.cell.observer.c_observe.call(null, c, tiltontec.cell.base.unbound, why);
};
tiltontec.cell.observer.c_observe.cljs$core$IFn$_invoke$arity$3 = function(c, prior_value, why) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error("Assert failed: (c-ref? c)");
  }
  tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pulse-observed", "pulse-observed", 595719633), c], null), cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_));
  return function() {
    var or__6210__auto__ = (new cljs.core.Keyword(null, "obs", "obs", -664011444)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c));
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return tiltontec.cell.observer.observe;
    }
  }().call(null, tiltontec.cell.base.c_slot.call(null, c), tiltontec.cell.base.c_model.call(null, c), tiltontec.cell.base.c_value.call(null, c), prior_value, c);
};
tiltontec.cell.observer.c_observe.cljs$lang$maxFixedArity = 3;
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function clojure$set$bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__16160_SHARP_) {
      return max === p1__16160_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function clojure$set$union(var_args) {
  var args16161 = [];
  var len__7285__auto___16167 = arguments.length;
  var i__7286__auto___16168 = 0;
  while (true) {
    if (i__7286__auto___16168 < len__7285__auto___16167) {
      args16161.push(arguments[i__7286__auto___16168]);
      var G__16169 = i__7286__auto___16168 + 1;
      i__7286__auto___16168 = G__16169;
      continue;
    } else {
    }
    break;
  }
  var G__16166 = args16161.length;
  switch(G__16166) {
    case 0:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args16161.slice(2), 0, null);
      return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.union.cljs$lang$applyTo = function(seq16162) {
  var G__16163 = cljs.core.first.call(null, seq16162);
  var seq16162__$1 = cljs.core.next.call(null, seq16162);
  var G__16164 = cljs.core.first.call(null, seq16162__$1);
  var seq16162__$2 = cljs.core.next.call(null, seq16162__$1);
  return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(G__16163, G__16164, seq16162__$2);
};
clojure.set.union.cljs$lang$maxFixedArity = 2;
clojure.set.intersection = function clojure$set$intersection(var_args) {
  var args16172 = [];
  var len__7285__auto___16178 = arguments.length;
  var i__7286__auto___16179 = 0;
  while (true) {
    if (i__7286__auto___16179 < len__7285__auto___16178) {
      args16172.push(arguments[i__7286__auto___16179]);
      var G__16180 = i__7286__auto___16179 + 1;
      i__7286__auto___16179 = G__16180;
      continue;
    } else {
    }
    break;
  }
  var G__16177 = args16172.length;
  switch(G__16177) {
    case 1:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args16172.slice(2), 0, null);
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  while (true) {
    if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
      var G__16182 = s2;
      var G__16183 = s1;
      s1 = G__16182;
      s2 = G__16183;
      continue;
    } else {
      return cljs.core.reduce.call(null, function(s1, s2) {
        return function(result, item) {
          if (cljs.core.contains_QMARK_.call(null, s2, item)) {
            return result;
          } else {
            return cljs.core.disj.call(null, result, item);
          }
        };
      }(s1, s2), s1, s1);
    }
    break;
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__16171_SHARP_) {
    return -cljs.core.count.call(null, p1__16171_SHARP_);
  }, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, clojure.set.intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.intersection.cljs$lang$applyTo = function(seq16173) {
  var G__16174 = cljs.core.first.call(null, seq16173);
  var seq16173__$1 = cljs.core.next.call(null, seq16173);
  var G__16175 = cljs.core.first.call(null, seq16173__$1);
  var seq16173__$2 = cljs.core.next.call(null, seq16173__$1);
  return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(G__16174, G__16175, seq16173__$2);
};
clojure.set.intersection.cljs$lang$maxFixedArity = 2;
clojure.set.difference = function clojure$set$difference(var_args) {
  var args16184 = [];
  var len__7285__auto___16190 = arguments.length;
  var i__7286__auto___16191 = 0;
  while (true) {
    if (i__7286__auto___16191 < len__7285__auto___16190) {
      args16184.push(arguments[i__7286__auto___16191]);
      var G__16192 = i__7286__auto___16191 + 1;
      i__7286__auto___16191 = G__16192;
      continue;
    } else {
    }
    break;
  }
  var G__16189 = args16184.length;
  switch(G__16189) {
    case 1:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7304__auto__ = new cljs.core.IndexedSeq(args16184.slice(2), 0, null);
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7304__auto__);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, function(result, item) {
      if (cljs.core.contains_QMARK_.call(null, s2, item)) {
        return cljs.core.disj.call(null, result, item);
      } else {
        return result;
      }
    }, s1, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  return cljs.core.reduce.call(null, clojure.set.difference, s1, cljs.core.conj.call(null, sets, s2));
};
clojure.set.difference.cljs$lang$applyTo = function(seq16185) {
  var G__16186 = cljs.core.first.call(null, seq16185);
  var seq16185__$1 = cljs.core.next.call(null, seq16185);
  var G__16187 = cljs.core.first.call(null, seq16185__$1);
  var seq16185__$2 = cljs.core.next.call(null, seq16185__$1);
  return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(G__16186, G__16187, seq16185__$2);
};
clojure.set.difference.cljs$lang$maxFixedArity = 2;
clojure.set.select = function clojure$set$select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function clojure$set$project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__16194_SHARP_) {
    return cljs.core.select_keys.call(null, p1__16194_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function clojure$set$rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__16199) {
    var vec__16200 = p__16199;
    var old = cljs.core.nth.call(null, vec__16200, 0, null);
    var new$ = cljs.core.nth.call(null, vec__16200, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function clojure$set$rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__16203_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__16203_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function clojure$set$index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function clojure$set$map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__16208) {
    var vec__16209 = p__16208;
    var k = cljs.core.nth.call(null, vec__16209, 0, null);
    var v = cljs.core.nth.call(null, vec__16209, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function clojure$set$join(var_args) {
  var args16216 = [];
  var len__7285__auto___16225 = arguments.length;
  var i__7286__auto___16226 = 0;
  while (true) {
    if (i__7286__auto___16226 < len__7285__auto___16225) {
      args16216.push(arguments[i__7286__auto___16226]);
      var G__16227 = i__7286__auto___16226 + 1;
      i__7286__auto___16226 = G__16227;
      continue;
    } else {
    }
    break;
  }
  var G__16218 = args16216.length;
  switch(G__16218) {
    case 2:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16216.length)].join(""));;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$2 = function(xrel, yrel) {
  if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
    var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
    var vec__16219 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
    var r = cljs.core.nth.call(null, vec__16219, 0, null);
    var s = cljs.core.nth.call(null, vec__16219, 1, null);
    var idx = clojure.set.index.call(null, r, ks);
    return cljs.core.reduce.call(null, function(ks, vec__16219, r, s, idx) {
      return function(ret, x) {
        var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, ks, vec__16219, r, s, idx) {
            return function(p1__16212_SHARP_, p2__16213_SHARP_) {
              return cljs.core.conj.call(null, p1__16212_SHARP_, cljs.core.merge.call(null, p2__16213_SHARP_, x));
            };
          }(found, ks, vec__16219, r, s, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(ks, vec__16219, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
  } else {
    return cljs.core.PersistentHashSet.EMPTY;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$3 = function(xrel, yrel, km) {
  var vec__16222 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
  var r = cljs.core.nth.call(null, vec__16222, 0, null);
  var s = cljs.core.nth.call(null, vec__16222, 1, null);
  var k = cljs.core.nth.call(null, vec__16222, 2, null);
  var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
  return cljs.core.reduce.call(null, function(vec__16222, r, s, k, idx) {
    return function(ret, x) {
      var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
      if (cljs.core.truth_(found)) {
        return cljs.core.reduce.call(null, function(found, vec__16222, r, s, k, idx) {
          return function(p1__16214_SHARP_, p2__16215_SHARP_) {
            return cljs.core.conj.call(null, p1__16214_SHARP_, cljs.core.merge.call(null, p2__16215_SHARP_, x));
          };
        }(found, vec__16222, r, s, k, idx), ret, found);
      } else {
        return ret;
      }
    };
  }(vec__16222, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
};
clojure.set.join.cljs$lang$maxFixedArity = 3;
clojure.set.subset_QMARK_ = function clojure$set$subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__16229_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__16229_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function clojure$set$superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__16230_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__16230_SHARP_);
  }, set2);
};
goog.provide("tiltontec.cell.integrity");
goog.require("cljs.core");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.integrity._STAR_one_pulse_QMARK__STAR_ = false;
tiltontec.cell.integrity._STAR_dp_log_STAR_ = false;
tiltontec.cell.integrity.data_pulse_next = function tiltontec$cell$integrity$data_pulse_next(var_args) {
  var args13181 = [];
  var len__7285__auto___13184 = arguments.length;
  var i__7286__auto___13185 = 0;
  while (true) {
    if (i__7286__auto___13185 < len__7285__auto___13184) {
      args13181.push(arguments[i__7286__auto___13185]);
      var G__13186 = i__7286__auto___13185 + 1;
      i__7286__auto___13185 = G__13186;
      continue;
    } else {
    }
    break;
  }
  var G__13183 = args13181.length;
  switch(G__13183) {
    case 0:
      return tiltontec.cell.integrity.data_pulse_next.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return tiltontec.cell.integrity.data_pulse_next.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13181.length)].join(""));;
  }
};
tiltontec.cell.integrity.data_pulse_next.cljs$core$IFn$_invoke$arity$0 = function() {
  return tiltontec.cell.integrity.data_pulse_next.call(null, new cljs.core.Keyword(null, "anon", "anon", -765650478));
};
tiltontec.cell.integrity.data_pulse_next.cljs$core$IFn$_invoke$arity$1 = function(pulse_info) {
  if (cljs.core.truth_(tiltontec.cell.integrity._STAR_one_pulse_QMARK__STAR_)) {
    return null;
  } else {
    if (cljs.core.truth_(tiltontec.cell.integrity._STAR_dp_log_STAR_)) {
      tiltontec.util.base.call_trc.call(null, "dp-next\x3e ", cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) + 1, pulse_info);
    } else {
    }
    return cljs.core.swap_BANG_.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_, cljs.core.inc);
  }
};
tiltontec.cell.integrity.data_pulse_next.cljs$lang$maxFixedArity = 1;
tiltontec.cell.integrity.c_current_QMARK_ = function tiltontec$cell$integrity$c_current_QMARK_(c) {
  return cljs.core._EQ_.call(null, tiltontec.cell.base.c_pulse.call(null, c), cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_));
};
tiltontec.cell.integrity.c_pulse_update = function tiltontec$cell$integrity$c_pulse_update(c, key) {
  if (cljs.core.truth_(tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c))) {
    return null;
  } else {
    if (cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) >= tiltontec.cell.base.c_pulse.call(null, c)) {
    } else {
      throw new Error("Assert failed: (\x3e\x3d (clojure.core/deref +pulse+) (c-pulse c))");
    }
    return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "pulse", "pulse", -244494476), cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_));
  }
};
tiltontec.cell.integrity._PLUS_ufb_opcodes_PLUS_ = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388), new cljs.core.Keyword(null, "awaken", "awaken", -1899628152), new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.Keyword(null, "ephemeral-reset", "ephemeral-reset", -1442676603), new cljs.core.Keyword(null, "change", "change", -1163046502)], null);
tiltontec.cell.integrity.unfin_biz = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
  var iter__6990__auto__ = function tiltontec$cell$integrity$iter__13188(s__13189) {
    return new cljs.core.LazySeq(null, function() {
      var s__13189__$1 = s__13189;
      while (true) {
        var temp__4425__auto__ = cljs.core.seq.call(null, s__13189__$1);
        if (temp__4425__auto__) {
          var s__13189__$2 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__13189__$2)) {
            var c__6988__auto__ = cljs.core.chunk_first.call(null, s__13189__$2);
            var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
            var b__13191 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
            if (function() {
              var i__13190 = 0;
              while (true) {
                if (i__13190 < size__6989__auto__) {
                  var i = cljs.core._nth.call(null, c__6988__auto__, i__13190);
                  cljs.core.chunk_append.call(null, b__13191, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY)], null));
                  var G__13192 = i__13190 + 1;
                  i__13190 = G__13192;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13191), tiltontec$cell$integrity$iter__13188.call(null, cljs.core.chunk_rest.call(null, s__13189__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13191), null);
            }
          } else {
            var i = cljs.core.first.call(null, s__13189__$2);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY)], null), tiltontec$cell$integrity$iter__13188.call(null, cljs.core.rest.call(null, s__13189__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__6990__auto__.call(null, tiltontec.cell.integrity._PLUS_ufb_opcodes_PLUS_);
}());
tiltontec.cell.integrity.ufb_queue = function tiltontec$cell$integrity$ufb_queue(opcode) {
  var or__6210__auto__ = opcode.call(null, tiltontec.cell.integrity.unfin_biz);
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    return tiltontec.util.core.err.call(null, [cljs.core.str("ufb-queue\x3e opcode unknown: "), cljs.core.str(opcode)].join(""));
  }
};
tiltontec.cell.integrity.ufb_queue_ensure = function tiltontec$cell$integrity$ufb_queue_ensure(opcode) {
  return tiltontec.cell.integrity.ufb_queue.call(null, opcode);
};
tiltontec.cell.integrity.ufb_add = function tiltontec$cell$integrity$ufb_add(opcode, continuation) {
  return tiltontec.util.core.fifo_add.call(null, tiltontec.cell.integrity.ufb_queue_ensure.call(null, opcode), continuation);
};
tiltontec.cell.integrity.ufb_assert_q_empty = function tiltontec$cell$integrity$ufb_assert_q_empty(opcode) {
  var temp__4423__auto__ = tiltontec.util.core.fifo_peek.call(null, tiltontec.cell.integrity.ufb_queue_ensure.call(null, opcode));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var uqp = temp__4423__auto__;
    return tiltontec.util.core.err.call(null, [cljs.core.str("ufb queue %s not empty, viz %s"), cljs.core.str(opcode), cljs.core.str(uqp)].join(""));
  } else {
    return true;
  }
};
tiltontec.cell.integrity._STAR_ufb_do_q_STAR_ = null;
tiltontec.cell.integrity.ufb_do = function tiltontec$cell$integrity$ufb_do(var_args) {
  var args13193 = [];
  var len__7285__auto___13199 = arguments.length;
  var i__7286__auto___13200 = 0;
  while (true) {
    if (i__7286__auto___13200 < len__7285__auto___13199) {
      args13193.push(arguments[i__7286__auto___13200]);
      var G__13201 = i__7286__auto___13200 + 1;
      i__7286__auto___13200 = G__13201;
      continue;
    } else {
    }
    break;
  }
  var G__13195 = args13193.length;
  switch(G__13195) {
    case 1:
      return tiltontec.cell.integrity.ufb_do.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return tiltontec.cell.integrity.ufb_do.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13193.length)].join(""));;
  }
};
tiltontec.cell.integrity.ufb_do.cljs$core$IFn$_invoke$arity$1 = function(opcode) {
  return tiltontec.cell.integrity.ufb_do.call(null, tiltontec.cell.integrity.ufb_queue.call(null, opcode), opcode);
};
tiltontec.cell.integrity.ufb_do.cljs$core$IFn$_invoke$arity$2 = function(q, opcode) {
  while (true) {
    var temp__4425__auto__ = tiltontec.util.core.fifo_pop.call(null, q);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__13196 = temp__4425__auto__;
      var defer_info = cljs.core.nth.call(null, vec__13196, 0, null);
      var task = cljs.core.nth.call(null, vec__13196, 1, null);
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "ufb-do-yep", "ufb-do-yep", -2077548937), defer_info, task);
      task.call(null, opcode, defer_info);
      var G__13203 = q;
      var G__13204 = opcode;
      q = G__13203;
      opcode = G__13204;
      continue;
    } else {
      return null;
    }
    break;
  }
};
tiltontec.cell.integrity.ufb_do.cljs$lang$maxFixedArity = 2;
tiltontec.cell.integrity.finish_business = function tiltontec$cell$integrity$finish_business() {
  if (cljs.core.truth_(cljs.core.deref.call(null, tiltontec.cell.base._PLUS_stop_PLUS_))) {
    return null;
  } else {
    var tag = new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388);
    while (true) {
      var G__13209 = tag instanceof cljs.core.Keyword ? tag.fqn : null;
      switch(G__13209) {
        case "tell-dependents":
          tiltontec.cell.integrity.ufb_do.call(null, new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388));
          tiltontec.cell.integrity.ufb_do.call(null, new cljs.core.Keyword(null, "awaken", "awaken", -1899628152));
          var G__13214 = cljs.core.truth_(tiltontec.util.core.fifo_peek.call(null, tiltontec.cell.integrity.ufb_queue_ensure.call(null, new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388)))) ? new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388) : new cljs.core.Keyword(null, "handle-clients", "handle-clients", -1446571173);
          tag = G__13214;
          continue;
          break;
        case "handle-clients":
          tiltontec.util.core.pln.call(null, new cljs.core.Keyword(null, "handle-clients!!!!!", "handle-clients!!!!!", -1474024132));
          var temp__4425__auto__ = tiltontec.cell.integrity.ufb_queue.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117));
          if (cljs.core.truth_(temp__4425__auto__)) {
            var clientq = temp__4425__auto__;
            var temp__4423__auto___13215 = cljs.core.deref.call(null, tiltontec.cell.base._PLUS_client_q_handler_PLUS_);
            if (cljs.core.truth_(temp__4423__auto___13215)) {
              var cqh_13216 = temp__4423__auto___13215;
              cqh_13216.call(null, clientq);
            } else {
              tiltontec.cell.integrity.ufb_do.call(null, clientq, new cljs.core.Keyword(null, "client", "client", -1323448117));
            }
            var G__13217 = cljs.core.truth_(tiltontec.util.core.fifo_peek.call(null, tiltontec.cell.integrity.ufb_queue.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117)))) ? function() {
              tiltontec.util.core.pln.call(null, new cljs.core.Keyword(null, "re-handling-clients!!!!", "re-handling-clients!!!!", -1248166541));
              return new cljs.core.Keyword(null, "handle-clients", "handle-clients", -1446571173);
            }() : new cljs.core.Keyword(null, "ephemeral-reset", "ephemeral-reset", -1442676603);
            tag = G__13217;
            continue;
          } else {
            return null;
          }
          break;
        case "ephemeral-reset":
          tiltontec.cell.integrity.ufb_do.call(null, new cljs.core.Keyword(null, "ephemeral-reset", "ephemeral-reset", -1442676603));
          var G__13218 = new cljs.core.Keyword(null, "deferred-state-change", "deferred-state-change", -1362791478);
          tag = G__13218;
          continue;
          break;
        case "deferred-state-change":
          var temp__4425__auto__ = tiltontec.util.core.fifo_pop.call(null, tiltontec.cell.integrity.ufb_queue.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502)));
          if (cljs.core.truth_(temp__4425__auto__)) {
            var vec__13210 = temp__4425__auto__;
            var defer_info = cljs.core.nth.call(null, vec__13210, 0, null);
            var task_fn = cljs.core.nth.call(null, vec__13210, 1, null);
            tiltontec.cell.integrity.data_pulse_next.call(null, new cljs.core.Keyword(null, "def-state-chg", "def-state-chg", 1797246466));
            task_fn.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502), defer_info);
            var G__13219 = new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388);
            tag = G__13219;
            continue;
          } else {
            return null;
          }
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(tag)].join(""));;
      }
      break;
    }
  }
};
tiltontec.cell.integrity.with_integrity = function tiltontec$cell$integrity$with_integrity(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13228 = arguments.length;
  var i__7286__auto___13229 = 0;
  while (true) {
    if (i__7286__auto___13229 < len__7285__auto___13228) {
      args__7292__auto__.push(arguments[i__7286__auto___13229]);
      var G__13230 = i__7286__auto___13229 + 1;
      i__7286__auto___13229 = G__13230;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 3 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(3), 0, null) : null;
  return tiltontec.cell.integrity.with_integrity.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7293__auto__);
};
tiltontec.cell.integrity.with_integrity.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__13224, body) {
  var vec__13225 = p__13224;
  var opcode = cljs.core.nth.call(null, vec__13225, 0, null);
  var info = cljs.core.nth.call(null, vec__13225, 1, null);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.integrity", "call-with-integrity", "tiltontec.cell.integrity/call-with-integrity", -729981427, null)), function() {
    var x__7044__auto__ = opcode;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), function() {
    var x__7044__auto__ = info;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
      var x__7044__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "opcode", "opcode", 311089360, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "defer-info", "defer-info", -446799704, null))))));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), body)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.cell.integrity.with_integrity.cljs$lang$maxFixedArity = 3;
tiltontec.cell.integrity.with_integrity.cljs$lang$applyTo = function(seq13220) {
  var G__13221 = cljs.core.first.call(null, seq13220);
  var seq13220__$1 = cljs.core.next.call(null, seq13220);
  var G__13222 = cljs.core.first.call(null, seq13220__$1);
  var seq13220__$2 = cljs.core.next.call(null, seq13220__$1);
  var G__13223 = cljs.core.first.call(null, seq13220__$2);
  var seq13220__$3 = cljs.core.next.call(null, seq13220__$2);
  return tiltontec.cell.integrity.with_integrity.cljs$core$IFn$_invoke$arity$variadic(G__13221, G__13222, G__13223, seq13220__$3);
};
tiltontec.cell.integrity.with_integrity.cljs$lang$macro = true;
tiltontec.cell.integrity.with_cc = function tiltontec$cell$integrity$with_cc(_AMPERSAND_form, _AMPERSAND_env, id, _AMPERSAND_body, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.integrity", "with-integrity", "tiltontec.cell.integrity/with-integrity", -1374442056, null)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "change", "change", -1163046502)), function() {
      var x__7044__auto__ = id;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), body)));
};
tiltontec.cell.integrity.with_cc.cljs$lang$macro = true;
tiltontec.cell.integrity.without_integrity = function tiltontec$cell$integrity$without_integrity(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13234 = arguments.length;
  var i__7286__auto___13235 = 0;
  while (true) {
    if (i__7286__auto___13235 < len__7285__auto___13234) {
      args__7292__auto__.push(arguments[i__7286__auto___13235]);
      var G__13236 = i__7286__auto___13235 + 1;
      i__7286__auto___13235 = G__13236;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return tiltontec.cell.integrity.without_integrity.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
tiltontec.cell.integrity.without_integrity.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "binding", "cljs.core/binding", 2050379843, null)), function() {
    var x__7044__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "*within-integrity*", "tiltontec.cell.base/*within-integrity*", 1558744567, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, false), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "*defer-changes*", "tiltontec.cell.base/*defer-changes*", 
    405681033, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, false), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.integrity", "*call-stack*", "tiltontec.cell.integrity/*call-stack*", 1793416916, null)), function() {
      var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), function() {
        var x__7044__auto__ = cljs.core.List.EMPTY;
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }())));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }()))));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), body)));
};
tiltontec.cell.integrity.without_integrity.cljs$lang$maxFixedArity = 2;
tiltontec.cell.integrity.without_integrity.cljs$lang$applyTo = function(seq13231) {
  var G__13232 = cljs.core.first.call(null, seq13231);
  var seq13231__$1 = cljs.core.next.call(null, seq13231);
  var G__13233 = cljs.core.first.call(null, seq13231__$1);
  var seq13231__$2 = cljs.core.next.call(null, seq13231__$1);
  return tiltontec.cell.integrity.without_integrity.cljs$core$IFn$_invoke$arity$variadic(G__13232, G__13233, seq13231__$2);
};
tiltontec.cell.integrity.without_integrity.cljs$lang$macro = true;
tiltontec.cell.integrity.call_with_integrity = function tiltontec$cell$integrity$call_with_integrity(opcode, defer_info, action) {
  if (cljs.core.truth_(opcode)) {
    if (cljs.core.truth_(tiltontec.util.core.cl_find.call(null, opcode, tiltontec.cell.integrity._PLUS_ufb_opcodes_PLUS_))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid opcode for with-integrity: %s. Allowed values: %s"), cljs.core.str(opcode), cljs.core.str(tiltontec.cell.integrity._PLUS_ufb_opcodes_PLUS_)].join("")), cljs.core.str("\n"), cljs.core.str("(cl-find opcode +ufb-opcodes+)")].join(""));
    }
  } else {
  }
  if (cljs.core.truth_(cljs.core.deref.call(null, tiltontec.cell.base._PLUS_stop_PLUS_))) {
    return null;
  } else {
    if (cljs.core.truth_(tiltontec.cell.base.c_stopped.call(null))) {
      return cljs.core.println.call(null, new cljs.core.Keyword(null, "cwi-sees-stop!!!!!!!!!!!", "cwi-sees-stop!!!!!!!!!!!", -1009254623));
    } else {
      if (cljs.core.truth_(tiltontec.cell.base._STAR_within_integrity_STAR_)) {
        if (cljs.core.truth_(opcode)) {
          var result__8295__auto__ = new cljs.core.Keyword(null, "deferred-to-ufb-1", "deferred-to-ufb-1", -1094275721);
          tiltontec.util.core.pln.call(null, new cljs.core.Keyword(null, "cwi", "cwi", 1748296377), new cljs.core.Keyword(null, "defers", "defers", -187510750), opcode, cljs.core.first.call(null, tiltontec.util.core.ensure_vec.call(null, defer_info)));
          tiltontec.cell.integrity.ufb_add.call(null, opcode, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [defer_info, action], null));
          return result__8295__auto__;
        } else {
          return action.call(null, opcode, defer_info);
        }
      } else {
        var _STAR_within_integrity_STAR_13239 = tiltontec.cell.base._STAR_within_integrity_STAR_;
        var _STAR_defer_changes_STAR_13240 = tiltontec.cell.base._STAR_defer_changes_STAR_;
        tiltontec.cell.base._STAR_within_integrity_STAR_ = true;
        tiltontec.cell.base._STAR_defer_changes_STAR_ = false;
        try {
          if (cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) === 0 || cljs.core._EQ_.call(null, opcode, new cljs.core.Keyword(null, "change", "change", -1163046502))) {
            tiltontec.cell.integrity.data_pulse_next.call(null, new cljs.core.Keyword(null, "cwi", "cwi", 1748296377));
          } else {
          }
          var result__8295__auto__ = action.call(null, opcode, defer_info);
          tiltontec.cell.integrity.finish_business.call(null);
          tiltontec.cell.integrity.ufb_assert_q_empty.call(null, new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388));
          tiltontec.cell.integrity.ufb_assert_q_empty.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502));
          return result__8295__auto__;
        } finally {
          tiltontec.cell.base._STAR_defer_changes_STAR_ = _STAR_defer_changes_STAR_13240;
          tiltontec.cell.base._STAR_within_integrity_STAR_ = _STAR_within_integrity_STAR_13239;
        }
      }
    }
  }
};
goog.provide("tiltontec.cell.evaluate");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.integrity");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.evaluate.ephemeral_reset = function tiltontec$cell$evaluate$ephemeral_reset(rc) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ephemeral_QMARK_.call(null, rc))) {
    return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "ephemeral-reset", "ephemeral-reset", -1442676603), rc, function(opcode, defer_info) {
      var temp__4425__auto___13296 = (new cljs.core.Keyword(null, "me", "me", -139006693)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rc));
      if (cljs.core.truth_(temp__4425__auto___13296)) {
        var me_13297 = temp__4425__auto___13296;
        cljs.core.swap_BANG_.call(null, me_13297, cljs.core.assoc, (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rc)), null);
      } else {
      }
      return cljs.core.swap_BANG_.call(null, rc, cljs.core.assoc, new cljs.core.Keyword(null, "value", "value", 305978217), null);
    });
  } else {
    return null;
  }
};
tiltontec.cell.evaluate.record_dependency = function tiltontec$cell$evaluate$record_dependency(used) {
  if (cljs.core.truth_(tiltontec.cell.base.c_optimized_away_QMARK_.call(null, used))) {
    return null;
  } else {
    if (cljs.core.truth_(tiltontec.cell.base._STAR_depender_STAR_)) {
    } else {
      throw new Error("Assert failed: *depender*");
    }
    tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "reco-dep!!!", "reco-dep!!!", 380319801), new cljs.core.Keyword(null, "used", "used", -1414786177), tiltontec.cell.base.c_slot.call(null, used), new cljs.core.Keyword(null, "caller", "caller", -1275362879), tiltontec.cell.base.c_slot.call(null, tiltontec.cell.base._STAR_depender_STAR_));
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "useds", "useds", 621350967), tiltontec.cell.base._STAR_depender_STAR_], null), cljs.core.conj.call(null, tiltontec.cell.base.c_useds.call(null, tiltontec.cell.base._STAR_depender_STAR_), used));
    return tiltontec.cell.base.caller_ensure.call(null, used, tiltontec.cell.base._STAR_depender_STAR_);
  }
};
tiltontec.cell.evaluate.ensure_value_is_current = function tiltontec$cell$evaluate$ensure_value_is_current(c, debug_id, ensurer) {
  if (cljs.core.truth_(tiltontec.cell.base._STAR_not_to_be_STAR_)) {
    if (cljs.core.truth_(tiltontec.cell.base.c_unbound_QMARK_.call(null, c))) {
      return tiltontec.util.core.err.call(null, "evic\x3e unbound slot %s of model %s", tiltontec.cell.base.c_slot.call(null, c), tiltontec.cell.base.c_model.call(null, c));
    } else {
      if (cljs.core.truth_(tiltontec.cell.base.c_valid_QMARK_.call(null, c))) {
        return tiltontec.cell.base.c_value.call(null, c);
      } else {
        return null;
      }
    }
  } else {
    if (cljs.core.truth_(tiltontec.cell.integrity.c_current_QMARK_.call(null, c))) {
      return tiltontec.cell.base.c_value.call(null, c);
    } else {
      if (cljs.core.truth_(function() {
        var and__6198__auto__ = tiltontec.cell.base.c_input_QMARK_.call(null, c);
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = tiltontec.cell.base.c_valid_QMARK_.call(null, c);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            return cljs.core.not.call(null, function() {
              var and__6198__auto____$2 = tiltontec.cell.base.c_formula_QMARK_.call(null, c);
              if (cljs.core.truth_(and__6198__auto____$2)) {
                return cljs.core._EQ_.call(null, tiltontec.cell.base.c_optimize.call(null, c), new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336)) && tiltontec.cell.base.c_value.call(null, c) == null;
              } else {
                return and__6198__auto____$2;
              }
            }());
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }())) {
        return tiltontec.cell.base.c_value.call(null, c);
      } else {
        if (cljs.core.truth_(function() {
          var temp__4425__auto__ = tiltontec.cell.base.c_model.call(null, c);
          if (cljs.core.truth_(temp__4425__auto__)) {
            var md = temp__4425__auto__;
            return tiltontec.cell.base.mdead_QMARK_.call(null, tiltontec.cell.base.c_model.call(null, c));
          } else {
            return null;
          }
        }())) {
          return tiltontec.util.core.err.call(null, cljs.core.str, "evic\x3e model %s of cell %s is dead", tiltontec.cell.base.c_model.call(null, c), c);
        } else {
          if (cljs.core.truth_(function() {
            var or__6210__auto__ = cljs.core.not.call(null, tiltontec.cell.base.c_valid_QMARK_.call(null, c));
            if (or__6210__auto__) {
              return or__6210__auto__;
            } else {
              var G__13331 = cljs.core.seq.call(null, tiltontec.cell.base.c_useds.call(null, c));
              var vec__13332 = G__13331;
              var seq__13333 = cljs.core.seq.call(null, vec__13332);
              var first__13334 = cljs.core.first.call(null, seq__13333);
              var seq__13333__$1 = cljs.core.next.call(null, seq__13333);
              var used = first__13334;
              var urest = seq__13333__$1;
              var G__13331__$1 = G__13331;
              while (true) {
                var vec__13335 = G__13331__$1;
                var seq__13336 = cljs.core.seq.call(null, vec__13335);
                var first__13337 = cljs.core.first.call(null, seq__13336);
                var seq__13336__$1 = cljs.core.next.call(null, seq__13336);
                var used__$1 = first__13337;
                var urest__$1 = seq__13336__$1;
                if (cljs.core.truth_(used__$1)) {
                  cljs.core.println.call(null, new cljs.core.Keyword(null, "pcell", "pcell", -240144130), new cljs.core.Keyword(null, "cnset-evicing", "cnset-evicing", 380848352), tiltontec.cell.base.c_slot.call(null, used__$1), tiltontec.cell.base.c_state.call(null, used__$1));
                  tiltontec$cell$evaluate$ensure_value_is_current.call(null, used__$1, new cljs.core.Keyword(null, "nested", "nested", 18943849), c);
                  var or__6210__auto____$1 = tiltontec.cell.base.c_pulse_last_changed.call(null, used__$1) > tiltontec.cell.base.c_pulse.call(null, c);
                  if (or__6210__auto____$1) {
                    return or__6210__auto____$1;
                  } else {
                    var G__13338 = urest__$1;
                    G__13331__$1 = G__13338;
                    continue;
                  }
                } else {
                  return null;
                }
                break;
              }
            }
          }())) {
            if (cljs.core.truth_(tiltontec.cell.integrity.c_current_QMARK_.call(null, c))) {
            } else {
              tiltontec.cell.evaluate.calculate_and_set.call(null, c, new cljs.core.Keyword(null, "evic", "evic", 1309656753), ensurer);
            }
            return tiltontec.cell.base.c_value.call(null, c);
          } else {
            tiltontec.cell.integrity.c_pulse_update.call(null, c, new cljs.core.Keyword(null, "valid-uninfluenced", "valid-uninfluenced", 676756797));
            return tiltontec.cell.base.c_value.call(null, c);
          }
        }
      }
    }
  }
};
tiltontec.cell.evaluate.c_get = function tiltontec$cell$evaluate$c_get(c) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
    var result__8295__auto__ = tiltontec.cell.integrity.call_with_integrity.call(null, null, null, function(opcode, defer_info) {
      var prior_value = tiltontec.cell.base.c_value.call(null, c);
      var result__8295__auto__ = tiltontec.cell.evaluate.ensure_value_is_current.call(null, c, new cljs.core.Keyword(null, "c-read", "c-read", -1481921085), null);
      if (tiltontec.cell.base.c_model.call(null, c) == null && cljs.core._EQ_.call(null, tiltontec.cell.base.c_state.call(null, c), new cljs.core.Keyword(null, "nascent", "nascent", 443401807)) && cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) > tiltontec.cell.base.c_pulse_observed.call(null, c)) {
        tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), c], null), new cljs.core.Keyword(null, "awake", "awake", 1922840899));
        tiltontec.cell.observer.c_observe.call(null, c, prior_value, new cljs.core.Keyword(null, "cget", "cget", 1794378742));
        tiltontec.cell.evaluate.ephemeral_reset.call(null, c);
      } else {
      }
      return result__8295__auto__;
    });
    if (cljs.core.truth_(tiltontec.cell.base._STAR_depender_STAR_)) {
      tiltontec.cell.evaluate.record_dependency.call(null, c);
    } else {
    }
    return result__8295__auto__;
  } else {
    if (cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, c))) {
      return cljs.core.deref.call(null, c);
    } else {
      return c;
    }
  }
};
tiltontec.cell.evaluate.calculate_and_set = function tiltontec$cell$evaluate$calculate_and_set(c, dbgid, dbgdata) {
  var raw_value = tiltontec.cell.evaluate.calculate_and_link.call(null, c);
  if (cljs.core.truth_(tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c))) {
    return null;
  } else {
    if (cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, c))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("calc-n-set"), cljs.core.str("\n"), cljs.core.str("(map? (clojure.core/deref c))")].join(""));
    }
    return tiltontec.cell.evaluate.c_value_assume.call(null, c, raw_value, null);
  }
};
tiltontec.cell.evaluate.calculate_and_link = function tiltontec$cell$evaluate$calculate_and_link(c) {
  var _STAR_call_stack_STAR_13342 = tiltontec.cell.base._STAR_call_stack_STAR_;
  var _STAR_depender_STAR_13343 = tiltontec.cell.base._STAR_depender_STAR_;
  var _STAR_defer_changes_STAR_13344 = tiltontec.cell.base._STAR_defer_changes_STAR_;
  tiltontec.cell.base._STAR_call_stack_STAR_ = cljs.core.cons.call(null, c, tiltontec.cell.base._STAR_call_stack_STAR_);
  tiltontec.cell.base._STAR_depender_STAR_ = c;
  tiltontec.cell.base._STAR_defer_changes_STAR_ = true;
  try {
    tiltontec.cell.evaluate.unlink_from_used.call(null, c, new cljs.core.Keyword(null, "pre-rule-clear", "pre-rule-clear", 258781380));
    if (cljs.core.truth_(tiltontec.cell.base.c_rule.call(null, c))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No rule in %s type %s"), cljs.core.str((new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(c)), cljs.core.str(cljs.core.type.call(null, cljs.core.deref.call(null, c)))].join("")), cljs.core.str("\n"), cljs.core.str("(c-rule c)")].join(""));
    }
    return tiltontec.cell.base.c_rule.call(null, c).call(null, c);
  } finally {
    tiltontec.cell.base._STAR_defer_changes_STAR_ = _STAR_defer_changes_STAR_13344;
    tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_13343;
    tiltontec.cell.base._STAR_call_stack_STAR_ = _STAR_call_stack_STAR_13342;
  }
};
if (typeof tiltontec.cell.evaluate.c_awaken !== "undefined") {
} else {
  tiltontec.cell.evaluate.c_awaken = function() {
    var method_table__7135__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__7136__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__7137__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__7138__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__7139__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.cell.evaluate", "c-awaken"), function(method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__, hierarchy__7139__auto__) {
      return function(c) {
        return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, c));
      };
    }(method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__, hierarchy__7139__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__7139__auto__, method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.cell.evaluate.c_awaken, new cljs.core.Keyword(null, "default", "default", -1987822328), function(c) {
  if (cljs.core.coll_QMARK_.call(null, c)) {
    return cljs.core.doall.call(null, function() {
      var iter__6990__auto__ = function tiltontec$cell$evaluate$iter__13345(s__13346) {
        return new cljs.core.LazySeq(null, function() {
          var s__13346__$1 = s__13346;
          while (true) {
            var temp__4425__auto__ = cljs.core.seq.call(null, s__13346__$1);
            if (temp__4425__auto__) {
              var s__13346__$2 = temp__4425__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__13346__$2)) {
                var c__6988__auto__ = cljs.core.chunk_first.call(null, s__13346__$2);
                var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
                var b__13348 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
                if (function() {
                  var i__13347 = 0;
                  while (true) {
                    if (i__13347 < size__6989__auto__) {
                      var ce = cljs.core._nth.call(null, c__6988__auto__, i__13347);
                      cljs.core.chunk_append.call(null, b__13348, tiltontec.cell.evaluate.c_awaken.call(null, ce));
                      var G__13349 = i__13347 + 1;
                      i__13347 = G__13349;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13348), tiltontec$cell$evaluate$iter__13345.call(null, cljs.core.chunk_rest.call(null, s__13346__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13348), null);
                }
              } else {
                var ce = cljs.core.first.call(null, s__13346__$2);
                return cljs.core.cons.call(null, tiltontec.cell.evaluate.c_awaken.call(null, ce), tiltontec$cell$evaluate$iter__13345.call(null, cljs.core.rest.call(null, s__13346__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__6990__auto__.call(null, c);
    }());
  } else {
    return cljs.core.println.call(null, new cljs.core.Keyword(null, "c-awaken-fall-thru", "c-awaken-fall-thru", -2004606871), cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, c)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ref-of", "ref-of", 1886926194), cljs.core.type.call(null, c), cljs.core.deref.call(null, c)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
    "unref", "unref", -1884894186), c, cljs.core.type.call(null, c)], null));
  }
});
cljs.core._add_method.call(null, tiltontec.cell.evaluate.c_awaken, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071), function(c) {
  if (cljs.core.truth_(tiltontec.cell.base.c_input_QMARK_.call(null, c))) {
  } else {
    throw new Error("Assert failed: (c-input? c)");
  }
  if (cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) > tiltontec.cell.base.c_pulse_observed.call(null, c)) {
    var temp__4425__auto___13350 = tiltontec.cell.base.c_me.call(null, c);
    if (cljs.core.truth_(temp__4425__auto___13350)) {
      var me_13351 = temp__4425__auto___13350;
      tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.cell.base.c_slot.call(null, c), me_13351], null), tiltontec.cell.base.c_value.call(null, c));
    } else {
    }
    tiltontec.cell.observer.c_observe.call(null, c, new cljs.core.Keyword(null, "cell-awaken", "cell-awaken", 2137807704));
    return tiltontec.cell.evaluate.ephemeral_reset.call(null, c);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, tiltontec.cell.evaluate.c_awaken, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), function(c) {
  var _STAR_depender_STAR_13352 = tiltontec.cell.base._STAR_depender_STAR_;
  tiltontec.cell.base._STAR_depender_STAR_ = null;
  try {
    if (cljs.core.truth_(tiltontec.cell.integrity.c_current_QMARK_.call(null, c))) {
      return null;
    } else {
      return tiltontec.cell.evaluate.calculate_and_set.call(null, c, new cljs.core.Keyword(null, "fn-c-awaken", "fn-c-awaken", 1597115821), null);
    }
  } finally {
    tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_13352;
  }
});
tiltontec.cell.evaluate.md_slot_value_store = function tiltontec$cell$evaluate$md_slot_value_store(me, slot, value) {
  if (cljs.core.truth_(me)) {
  } else {
    throw new Error("Assert failed: me");
  }
  if (cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, me))) {
  } else {
    throw new Error("Assert failed: (any-ref? me)");
  }
  return tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me], null), value);
};
tiltontec.cell.evaluate.c_value_assume = function tiltontec$cell$evaluate$c_value_assume(c, new_value, propagation_code) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error("Assert failed: (c-ref? c)");
  }
  var result__8295__auto__ = new_value;
  var _STAR_depender_STAR_13355_13357 = tiltontec.cell.base._STAR_depender_STAR_;
  tiltontec.cell.base._STAR_depender_STAR_ = null;
  try {
    var prior_value_13358 = tiltontec.cell.base.c_value.call(null, c);
    var prior_state_13359 = tiltontec.cell.base.c_value_state.call(null, c);
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), c], null), new_value);
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), c], null), new cljs.core.Keyword(null, "awake", "awake", 1922840899));
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = tiltontec.cell.base.c_model.call(null, c);
      if (cljs.core.truth_(and__6198__auto__)) {
        return cljs.core.not.call(null, tiltontec.cell.base.c_synaptic_QMARK_.call(null, c));
      } else {
        return and__6198__auto__;
      }
    }())) {
      tiltontec.cell.evaluate.md_slot_value_store.call(null, tiltontec.cell.base.c_model.call(null, c), tiltontec.cell.base.c_slot_name.call(null, c), new_value);
    } else {
    }
    tiltontec.cell.integrity.c_pulse_update.call(null, c, new cljs.core.Keyword(null, "slotv-assume", "slotv-assume", -1071260275));
    if (cljs.core.truth_(function() {
      var or__6210__auto__ = cljs.core._EQ_.call(null, propagation_code, new cljs.core.Keyword(null, "propagate", "propagate", 274376905));
      if (or__6210__auto__) {
        return or__6210__auto__;
      } else {
        var or__6210__auto____$1 = cljs.core.not.call(null, cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([prior_state_13359], true), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "valid", "valid", 155614240), new cljs.core.Keyword(null, "uncurrent", "uncurrent", -217246265)], null)));
        if (or__6210__auto____$1) {
          return or__6210__auto____$1;
        } else {
          return tiltontec.cell.evaluate.c_value_changed_QMARK_.call(null, c, new_value, prior_value_13358);
        }
      }
    }())) {
      var callers_13360 = tiltontec.cell.base.c_callers.call(null, c);
      var temp__4425__auto___13361 = function() {
        var and__6198__auto__ = tiltontec.cell.base.c_formula_QMARK_.call(null, c);
        if (cljs.core.truth_(and__6198__auto__)) {
          return tiltontec.cell.base.c_optimize.call(null, c);
        } else {
          return and__6198__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4425__auto___13361)) {
        var optimize_13362 = temp__4425__auto___13361;
        tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "wtf", "wtf", -1581114577), optimize_13362);
        var G__13356_13363 = optimize_13362;
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336), G__13356_13363)) {
          if (cljs.core.truth_(tiltontec.cell.base.c_value.call(null, c))) {
            tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336), tiltontec.cell.base.c_slot.call(null, c));
            tiltontec.cell.evaluate.unlink_from_used.call(null, c, new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336));
          } else {
          }
        } else {
          if (cljs.core._EQ_.call(null, true, G__13356_13363)) {
            tiltontec.cell.evaluate.optimize_away_QMARK__BANG_.call(null, c, prior_value_13358);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(optimize_13362)].join(""));
          }
        }
      } else {
      }
      if (cljs.core.truth_(function() {
        var or__6210__auto__ = cljs.core._EQ_.call(null, propagation_code, new cljs.core.Keyword(null, "no-propagate", "no-propagate", -573850970));
        if (or__6210__auto__) {
          return or__6210__auto__;
        } else {
          return tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c);
        }
      }())) {
      } else {
        if (cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, c))) {
        } else {
          throw new Error("Assert failed: (map? (clojure.core/deref c))");
        }
        tiltontec.cell.evaluate.propagate.call(null, c, prior_value_13358, callers_13360);
      }
    } else {
    }
  } finally {
    tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_13355_13357;
  }
  return result__8295__auto__;
};
tiltontec.cell.evaluate.unlink_from_used = function tiltontec$cell$evaluate$unlink_from_used(c, why) {
  var iter__6990__auto___13372 = function tiltontec$cell$evaluate$unlink_from_used_$_iter__13368(s__13369) {
    return new cljs.core.LazySeq(null, function() {
      var s__13369__$1 = s__13369;
      while (true) {
        var temp__4425__auto__ = cljs.core.seq.call(null, s__13369__$1);
        if (temp__4425__auto__) {
          var s__13369__$2 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__13369__$2)) {
            var c__6988__auto__ = cljs.core.chunk_first.call(null, s__13369__$2);
            var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
            var b__13371 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
            if (function() {
              var i__13370 = 0;
              while (true) {
                if (i__13370 < size__6989__auto__) {
                  var used = cljs.core._nth.call(null, c__6988__auto__, i__13370);
                  cljs.core.chunk_append.call(null, b__13371, tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "callers", "callers", -1991542784), used], null), cljs.core.disj.call(null, tiltontec.cell.base.c_callers.call(null, used), c)));
                  var G__13373 = i__13370 + 1;
                  i__13370 = G__13373;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13371), tiltontec$cell$evaluate$unlink_from_used_$_iter__13368.call(null, cljs.core.chunk_rest.call(null, s__13369__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13371), null);
            }
          } else {
            var used = cljs.core.first.call(null, s__13369__$2);
            return cljs.core.cons.call(null, tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "callers", "callers", -1991542784), used], null), cljs.core.disj.call(null, tiltontec.cell.base.c_callers.call(null, used), c)), tiltontec$cell$evaluate$unlink_from_used_$_iter__13368.call(null, cljs.core.rest.call(null, s__13369__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  iter__6990__auto___13372.call(null, tiltontec.cell.base.c_useds.call(null, c));
  return tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "useds", "useds", 621350967), c], null), cljs.core.PersistentHashSet.EMPTY);
};
tiltontec.cell.evaluate.md_cell_flush = function tiltontec$cell$evaluate$md_cell_flush(c) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error("Assert failed: (c-ref? c)");
  }
  var temp__4425__auto__ = tiltontec.cell.base.c_model.call(null, c);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var me = temp__4425__auto__;
    return tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cells-flushed", "cells-flushed", -1653073949), me], null), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "cells-flushed", "cells-flushed", -1653073949)).cljs$core$IFn$_invoke$arity$1(me), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.cell.base.c_slot.call(null, c), tiltontec.cell.base.c_pulse_observed.call(null, 
    c)], null)));
  } else {
    return null;
  }
};
tiltontec.cell.evaluate.optimize_away_QMARK__BANG_ = function tiltontec$cell$evaluate$optimize_away_QMARK__BANG_(c, prior_value) {
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = tiltontec.cell.base.c_formula_QMARK_.call(null, c);
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = cljs.core.empty_QMARK_.call(null, tiltontec.cell.base.c_useds.call(null, c));
      if (and__6198__auto____$1) {
        var and__6198__auto____$2 = tiltontec.cell.base.c_optimize.call(null, c);
        if (cljs.core.truth_(and__6198__auto____$2)) {
          var and__6198__auto____$3 = cljs.core.not.call(null, tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c));
          if (and__6198__auto____$3) {
            var and__6198__auto____$4 = tiltontec.cell.base.c_valid_QMARK_.call(null, c);
            if (cljs.core.truth_(and__6198__auto____$4)) {
              return cljs.core.not.call(null, tiltontec.cell.base.c_synaptic_QMARK_.call(null, c)) && cljs.core.not.call(null, tiltontec.cell.base.c_input_QMARK_.call(null, c));
            } else {
              return and__6198__auto____$4;
            }
          } else {
            return and__6198__auto____$3;
          }
        } else {
          return and__6198__auto____$2;
        }
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), c], null), new cljs.core.Keyword(null, "optimized-away", "optimized-away", 876765856));
    tiltontec.cell.observer.c_observe.call(null, c, prior_value, new cljs.core.Keyword(null, "opti-away", "opti-away", 1290785499));
    var temp__4425__auto___13382 = tiltontec.cell.base.c_model.call(null, c);
    if (cljs.core.truth_(temp__4425__auto___13382)) {
      var me_13383 = temp__4425__auto___13382;
      tiltontec.util.core.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cz", "cz", 1670864932), me_13383], null), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, me_13383)), tiltontec.cell.base.c_slot.call(null, c), null));
      tiltontec.cell.evaluate.md_cell_flush.call(null, c);
    } else {
    }
    var seq__13378_13384 = cljs.core.seq.call(null, cljs.core.seq.call(null, tiltontec.cell.base.c_callers.call(null, c)));
    var chunk__13379_13385 = null;
    var count__13380_13386 = 0;
    var i__13381_13387 = 0;
    while (true) {
      if (i__13381_13387 < count__13380_13386) {
        var caller_13388 = cljs.core._nth.call(null, chunk__13379_13385, i__13381_13387);
        cljs.core.swap_BANG_.call(null, caller_13388, cljs.core.assoc, new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.remove.call(null, cljs.core.PersistentHashSet.fromArray([c], true), tiltontec.cell.base.c_useds.call(null, caller_13388)));
        tiltontec.cell.base.caller_drop.call(null, c, caller_13388);
        tiltontec.cell.evaluate.ensure_value_is_current.call(null, caller_13388, new cljs.core.Keyword(null, "opti-used", "opti-used", 660350789), c);
        var G__13389 = seq__13378_13384;
        var G__13390 = chunk__13379_13385;
        var G__13391 = count__13380_13386;
        var G__13392 = i__13381_13387 + 1;
        seq__13378_13384 = G__13389;
        chunk__13379_13385 = G__13390;
        count__13380_13386 = G__13391;
        i__13381_13387 = G__13392;
        continue;
      } else {
        var temp__4425__auto___13393 = cljs.core.seq.call(null, seq__13378_13384);
        if (temp__4425__auto___13393) {
          var seq__13378_13394__$1 = temp__4425__auto___13393;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__13378_13394__$1)) {
            var c__7021__auto___13395 = cljs.core.chunk_first.call(null, seq__13378_13394__$1);
            var G__13396 = cljs.core.chunk_rest.call(null, seq__13378_13394__$1);
            var G__13397 = c__7021__auto___13395;
            var G__13398 = cljs.core.count.call(null, c__7021__auto___13395);
            var G__13399 = 0;
            seq__13378_13384 = G__13396;
            chunk__13379_13385 = G__13397;
            count__13380_13386 = G__13398;
            i__13381_13387 = G__13399;
            continue;
          } else {
            var caller_13400 = cljs.core.first.call(null, seq__13378_13394__$1);
            cljs.core.swap_BANG_.call(null, caller_13400, cljs.core.assoc, new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.remove.call(null, cljs.core.PersistentHashSet.fromArray([c], true), tiltontec.cell.base.c_useds.call(null, caller_13400)));
            tiltontec.cell.base.caller_drop.call(null, c, caller_13400);
            tiltontec.cell.evaluate.ensure_value_is_current.call(null, caller_13400, new cljs.core.Keyword(null, "opti-used", "opti-used", 660350789), c);
            var G__13401 = cljs.core.next.call(null, seq__13378_13394__$1);
            var G__13402 = null;
            var G__13403 = 0;
            var G__13404 = 0;
            seq__13378_13384 = G__13401;
            chunk__13379_13385 = G__13402;
            count__13380_13386 = G__13403;
            i__13381_13387 = G__13404;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.core.reset_BANG_.call(null, c, tiltontec.cell.base.c_value.call(null, c));
  } else {
    return null;
  }
};
tiltontec.cell.evaluate.c_quiesce = function tiltontec$cell$evaluate$c_quiesce(c) {
  if (cljs.core.truth_(c)) {
  } else {
    throw new Error("Assert failed: c");
  }
  tiltontec.cell.base.unlink_from_callers.call(null, c);
  tiltontec.cell.evaluate.unlink_from_used.call(null, c, new cljs.core.Keyword(null, "quiesce", "quiesce", -798294121));
  return cljs.core.reset_BANG_.call(null, c, new cljs.core.Keyword(null, "dead-c", "dead-c", 385485497));
};
if (typeof tiltontec.cell.evaluate.not_to_be !== "undefined") {
} else {
  tiltontec.cell.evaluate.not_to_be = function() {
    var method_table__7135__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__7136__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__7137__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__7138__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__7139__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.cell.evaluate", "not-to-be"), function(method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__, hierarchy__7139__auto__) {
      return function(me) {
        if (cljs.core.truth_(tiltontec.cell.base.md_ref_QMARK_.call(null, me))) {
        } else {
          throw new Error("Assert failed: (md-ref? me)");
        }
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.type.call(null, cljs.core.truth_(me) ? cljs.core.deref.call(null, me) : null)], null);
      };
    }(method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__, hierarchy__7139__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__7139__auto__, method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.cell.evaluate.not_to_be, new cljs.core.Keyword(null, "default", "default", -1987822328), function(me) {
  var seq__13405_13409 = cljs.core.seq.call(null, cljs.core.vals.call(null, (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, me))));
  var chunk__13406_13410 = null;
  var count__13407_13411 = 0;
  var i__13408_13412 = 0;
  while (true) {
    if (i__13408_13412 < count__13407_13411) {
      var c_13413 = cljs.core._nth.call(null, chunk__13406_13410, i__13408_13412);
      if (cljs.core.truth_(c_13413)) {
        tiltontec.cell.evaluate.c_quiesce.call(null, c_13413);
      } else {
      }
      var G__13414 = seq__13405_13409;
      var G__13415 = chunk__13406_13410;
      var G__13416 = count__13407_13411;
      var G__13417 = i__13408_13412 + 1;
      seq__13405_13409 = G__13414;
      chunk__13406_13410 = G__13415;
      count__13407_13411 = G__13416;
      i__13408_13412 = G__13417;
      continue;
    } else {
      var temp__4425__auto___13418 = cljs.core.seq.call(null, seq__13405_13409);
      if (temp__4425__auto___13418) {
        var seq__13405_13419__$1 = temp__4425__auto___13418;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13405_13419__$1)) {
          var c__7021__auto___13420 = cljs.core.chunk_first.call(null, seq__13405_13419__$1);
          var G__13421 = cljs.core.chunk_rest.call(null, seq__13405_13419__$1);
          var G__13422 = c__7021__auto___13420;
          var G__13423 = cljs.core.count.call(null, c__7021__auto___13420);
          var G__13424 = 0;
          seq__13405_13409 = G__13421;
          chunk__13406_13410 = G__13422;
          count__13407_13411 = G__13423;
          i__13408_13412 = G__13424;
          continue;
        } else {
          var c_13425 = cljs.core.first.call(null, seq__13405_13419__$1);
          if (cljs.core.truth_(c_13425)) {
            tiltontec.cell.evaluate.c_quiesce.call(null, c_13425);
          } else {
          }
          var G__13426 = cljs.core.next.call(null, seq__13405_13419__$1);
          var G__13427 = null;
          var G__13428 = 0;
          var G__13429 = 0;
          seq__13405_13409 = G__13426;
          chunk__13406_13410 = G__13427;
          count__13407_13411 = G__13428;
          i__13408_13412 = G__13429;
          continue;
        }
      } else {
      }
    }
    break;
  }
  cljs.core.reset_BANG_.call(null, me, null);
  return tiltontec.util.core.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), me], null), new cljs.core.Keyword(null, "dead", "dead", -1946604091));
});
if (typeof tiltontec.cell.evaluate.unchanged_test !== "undefined") {
} else {
  tiltontec.cell.evaluate.unchanged_test = function() {
    var method_table__7135__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__7136__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__7137__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__7138__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__7139__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.cell.evaluate", "unchanged-test"), function(method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__, hierarchy__7139__auto__) {
      return function(me, slot) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(me) ? cljs.core.type.call(null, cljs.core.deref.call(null, me)) : null, slot], null);
      };
    }(method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__, hierarchy__7139__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__7139__auto__, method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.cell.evaluate.unchanged_test, new cljs.core.Keyword(null, "default", "default", -1987822328), function(self, slotname) {
  return cljs.core._EQ_;
});
tiltontec.cell.evaluate.c_value_changed_QMARK_ = function tiltontec$cell$evaluate$c_value_changed_QMARK_(c, new_value, old_value) {
  return cljs.core.not.call(null, function() {
    var or__6210__auto__ = (new cljs.core.Keyword(null, "unchanged-if", "unchanged-if", -923210106)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c));
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return tiltontec.cell.evaluate.unchanged_test.call(null, tiltontec.cell.base.c_model.call(null, c), tiltontec.cell.base.c_slot.call(null, c));
    }
  }().call(null, new_value, old_value));
};
tiltontec.cell.evaluate._STAR_custom_propagater_STAR_ = null;
tiltontec.cell.evaluate.propagate = function tiltontec$cell$evaluate$propagate(c, prior_value, callers) {
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "propagate", "propagate", 274376905), (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c)));
  if (cljs.core.truth_(tiltontec.cell.integrity._STAR_one_pulse_QMARK__STAR_)) {
    if (cljs.core.truth_(tiltontec.cell.evaluate._STAR_custom_propagater_STAR_)) {
      return tiltontec.cell.evaluate._STAR_custom_propagater_STAR_.call(null, c, prior_value);
    } else {
      return null;
    }
  } else {
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pulse-last-changed", "pulse-last-changed", 1035703380), c], null), cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_));
    var _STAR_depender_STAR_13438 = tiltontec.cell.base._STAR_depender_STAR_;
    var _STAR_call_stack_STAR_13439 = tiltontec.cell.base._STAR_call_stack_STAR_;
    var _STAR_c_prop_depth_STAR_13440 = tiltontec.cell.base._STAR_c_prop_depth_STAR_;
    var _STAR_defer_changes_STAR_13441 = tiltontec.cell.base._STAR_defer_changes_STAR_;
    tiltontec.cell.base._STAR_depender_STAR_ = null;
    tiltontec.cell.base._STAR_call_stack_STAR_ = null;
    tiltontec.cell.base._STAR_c_prop_depth_STAR_ = tiltontec.cell.base._STAR_c_prop_depth_STAR_ + 1;
    tiltontec.cell.base._STAR_defer_changes_STAR_ = true;
    try {
      if (cljs.core.truth_(function() {
        var and__6198__auto__ = prior_value;
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = tiltontec.cell.base.c_model.call(null, c);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            return tiltontec.cell.base.md_slot_owning_QMARK_.call(null, cljs.core.type.call(null, tiltontec.cell.base.c_model.call(null, c)), tiltontec.cell.base.c_slot_name.call(null, c));
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }())) {
        var temp__4425__auto___13446 = clojure.set.difference.call(null, tiltontec.util.core.set_ify.call(null, prior_value), tiltontec.util.core.set_ify.call(null, tiltontec.cell.base.c_value.call(null, c)));
        if (cljs.core.truth_(temp__4425__auto___13446)) {
          var ownees_13447 = temp__4425__auto___13446;
          var seq__13442_13448 = cljs.core.seq.call(null, ownees_13447);
          var chunk__13443_13449 = null;
          var count__13444_13450 = 0;
          var i__13445_13451 = 0;
          while (true) {
            if (i__13445_13451 < count__13444_13450) {
              var ownee_13452 = cljs.core._nth.call(null, chunk__13443_13449, i__13445_13451);
              tiltontec.cell.evaluate.not_to_be.call(null, ownee_13452);
              var G__13453 = seq__13442_13448;
              var G__13454 = chunk__13443_13449;
              var G__13455 = count__13444_13450;
              var G__13456 = i__13445_13451 + 1;
              seq__13442_13448 = G__13453;
              chunk__13443_13449 = G__13454;
              count__13444_13450 = G__13455;
              i__13445_13451 = G__13456;
              continue;
            } else {
              var temp__4425__auto___13457__$1 = cljs.core.seq.call(null, seq__13442_13448);
              if (temp__4425__auto___13457__$1) {
                var seq__13442_13458__$1 = temp__4425__auto___13457__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__13442_13458__$1)) {
                  var c__7021__auto___13459 = cljs.core.chunk_first.call(null, seq__13442_13458__$1);
                  var G__13460 = cljs.core.chunk_rest.call(null, seq__13442_13458__$1);
                  var G__13461 = c__7021__auto___13459;
                  var G__13462 = cljs.core.count.call(null, c__7021__auto___13459);
                  var G__13463 = 0;
                  seq__13442_13448 = G__13460;
                  chunk__13443_13449 = G__13461;
                  count__13444_13450 = G__13462;
                  i__13445_13451 = G__13463;
                  continue;
                } else {
                  var ownee_13464 = cljs.core.first.call(null, seq__13442_13458__$1);
                  tiltontec.cell.evaluate.not_to_be.call(null, ownee_13464);
                  var G__13465 = cljs.core.next.call(null, seq__13442_13458__$1);
                  var G__13466 = null;
                  var G__13467 = 0;
                  var G__13468 = 0;
                  seq__13442_13448 = G__13465;
                  chunk__13443_13449 = G__13466;
                  count__13444_13450 = G__13467;
                  i__13445_13451 = G__13468;
                  continue;
                }
              } else {
              }
            }
            break;
          }
        } else {
        }
      } else {
      }
      tiltontec.cell.evaluate.propagate_to_callers.call(null, c, callers);
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obs-chkpulse!!!!!!!!", "obs-chkpulse!!!!!!!!", 498932923), cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_), tiltontec.cell.base.c_pulse_observed.call(null, c));
      if (cljs.core.truth_(function() {
        var or__6210__auto__ = cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) > tiltontec.cell.base.c_pulse_observed.call(null, c);
        if (or__6210__auto__) {
          return or__6210__auto__;
        } else {
          return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.cell.base.c_lazy.call(null, c)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854), new cljs.core.Keyword(null, "always", "always", -1772028770), true], null));
        }
      }())) {
        tiltontec.cell.observer.c_observe.call(null, c, prior_value, new cljs.core.Keyword(null, "propagate", "propagate", 274376905));
      } else {
      }
      return tiltontec.cell.evaluate.ephemeral_reset.call(null, c);
    } finally {
      tiltontec.cell.base._STAR_defer_changes_STAR_ = _STAR_defer_changes_STAR_13441;
      tiltontec.cell.base._STAR_c_prop_depth_STAR_ = _STAR_c_prop_depth_STAR_13440;
      tiltontec.cell.base._STAR_call_stack_STAR_ = _STAR_call_stack_STAR_13439;
      tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_13438;
    }
  }
};
tiltontec.cell.evaluate.propagate_to_callers = function tiltontec$cell$evaluate$propagate_to_callers(c, callers) {
  if (cljs.core.empty_QMARK_.call(null, callers)) {
    return null;
  } else {
    var causation = cljs.core.cons.call(null, c, tiltontec.cell.base._STAR_causation_STAR_);
    return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388), c, function(causation) {
      return function(opcode, defer_info) {
        if (cljs.core.truth_(tiltontec.cell.base.mdead_QMARK_.call(null, tiltontec.cell.base.c_model.call(null, c)))) {
          return tiltontec.util.base.call_trc.call(null, "WHOAA!!!! dead by time :tell-deps dispatched; bailing", c);
        } else {
          var _STAR_causation_STAR_13474 = tiltontec.cell.base._STAR_causation_STAR_;
          tiltontec.cell.base._STAR_causation_STAR_ = causation;
          try {
            var seq__13475 = cljs.core.seq.call(null, cljs.core.seq.call(null, callers));
            var chunk__13476 = null;
            var count__13477 = 0;
            var i__13478 = 0;
            while (true) {
              if (i__13478 < count__13477) {
                var caller = cljs.core._nth.call(null, chunk__13476, i__13478);
                if (cljs.core.truth_(function() {
                  var or__6210__auto__ = cljs.core._EQ_.call(null, tiltontec.cell.base.c_state.call(null, caller), new cljs.core.Keyword(null, "quiesced", "quiesced", 421940903));
                  if (or__6210__auto__) {
                    return or__6210__auto__;
                  } else {
                    var or__6210__auto____$1 = tiltontec.cell.integrity.c_current_QMARK_.call(null, caller);
                    if (cljs.core.truth_(or__6210__auto____$1)) {
                      return or__6210__auto____$1;
                    } else {
                      var or__6210__auto____$2 = cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.cell.base.c_lazy.call(null, caller)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.Keyword(null, "always", "always", -1772028770), new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854)], null));
                      if (cljs.core.truth_(or__6210__auto____$2)) {
                        return or__6210__auto____$2;
                      } else {
                        return cljs.core.not.call(null, cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([c], true), tiltontec.cell.base.c_useds.call(null, caller))) && cljs.core.not.call(null, tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c));
                      }
                    }
                  }
                }())) {
                  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "not-propping", "not-propping", 438111539), tiltontec.cell.base.c_slot.call(null, c), new cljs.core.Keyword(null, "to", "to", 192099007), tiltontec.cell.base.c_slot.call(null, caller));
                } else {
                  tiltontec.cell.evaluate.calculate_and_set.call(null, caller, new cljs.core.Keyword(null, "propagate", "propagate", 274376905), c);
                }
                var G__13479 = seq__13475;
                var G__13480 = chunk__13476;
                var G__13481 = count__13477;
                var G__13482 = i__13478 + 1;
                seq__13475 = G__13479;
                chunk__13476 = G__13480;
                count__13477 = G__13481;
                i__13478 = G__13482;
                continue;
              } else {
                var temp__4425__auto__ = cljs.core.seq.call(null, seq__13475);
                if (temp__4425__auto__) {
                  var seq__13475__$1 = temp__4425__auto__;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__13475__$1)) {
                    var c__7021__auto__ = cljs.core.chunk_first.call(null, seq__13475__$1);
                    var G__13483 = cljs.core.chunk_rest.call(null, seq__13475__$1);
                    var G__13484 = c__7021__auto__;
                    var G__13485 = cljs.core.count.call(null, c__7021__auto__);
                    var G__13486 = 0;
                    seq__13475 = G__13483;
                    chunk__13476 = G__13484;
                    count__13477 = G__13485;
                    i__13478 = G__13486;
                    continue;
                  } else {
                    var caller = cljs.core.first.call(null, seq__13475__$1);
                    if (cljs.core.truth_(function() {
                      var or__6210__auto__ = cljs.core._EQ_.call(null, tiltontec.cell.base.c_state.call(null, caller), new cljs.core.Keyword(null, "quiesced", "quiesced", 421940903));
                      if (or__6210__auto__) {
                        return or__6210__auto__;
                      } else {
                        var or__6210__auto____$1 = tiltontec.cell.integrity.c_current_QMARK_.call(null, caller);
                        if (cljs.core.truth_(or__6210__auto____$1)) {
                          return or__6210__auto____$1;
                        } else {
                          var or__6210__auto____$2 = cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.cell.base.c_lazy.call(null, caller)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.Keyword(null, "always", "always", -1772028770), new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854)], null));
                          if (cljs.core.truth_(or__6210__auto____$2)) {
                            return or__6210__auto____$2;
                          } else {
                            return cljs.core.not.call(null, cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([c], true), tiltontec.cell.base.c_useds.call(null, caller))) && cljs.core.not.call(null, tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c));
                          }
                        }
                      }
                    }())) {
                      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "not-propping", "not-propping", 438111539), tiltontec.cell.base.c_slot.call(null, c), new cljs.core.Keyword(null, "to", "to", 192099007), tiltontec.cell.base.c_slot.call(null, caller));
                    } else {
                      tiltontec.cell.evaluate.calculate_and_set.call(null, caller, new cljs.core.Keyword(null, "propagate", "propagate", 274376905), c);
                    }
                    var G__13487 = cljs.core.next.call(null, seq__13475__$1);
                    var G__13488 = null;
                    var G__13489 = 0;
                    var G__13490 = 0;
                    seq__13475 = G__13487;
                    chunk__13476 = G__13488;
                    count__13477 = G__13489;
                    i__13478 = G__13490;
                    continue;
                  }
                } else {
                  return null;
                }
              }
              break;
            }
          } finally {
            tiltontec.cell.base._STAR_causation_STAR_ = _STAR_causation_STAR_13474;
          }
        }
      };
    }(causation));
  }
};
goog.provide("tiltontec.cell.core");
goog.require("cljs.core");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.evaluate");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.core.make_cell = function tiltontec$cell$core$make_cell(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13494 = arguments.length;
  var i__7286__auto___13495 = 0;
  while (true) {
    if (i__7286__auto___13495 < len__7285__auto___13494) {
      args__7292__auto__.push(arguments[i__7286__auto___13495]);
      var G__13496 = i__7286__auto___13495 + 1;
      i__7286__auto___13495 = G__13496;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return tiltontec.cell.core.make_cell.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
tiltontec.cell.core.make_cell.cljs$core$IFn$_invoke$arity$variadic = function(kvs) {
  var options = cljs.core.apply.call(null, cljs.core.hash_map, kvs);
  return cljs.core.atom.call(null, cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "callers", "callers", -1991542784), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "pulse-observed", "pulse-observed", 595719633), new cljs.core.Keyword(null, "lazy", "lazy", -424547181), new cljs.core.Keyword(null, 
  "pulse-last-changed", "pulse-last-changed", 1035703380), new cljs.core.Keyword(null, "pulse", "pulse", -244494476), new cljs.core.Keyword(null, "input?", "input?", -1792843173)], [cljs.core.PersistentHashSet.EMPTY, tiltontec.cell.base.unbound, false, new cljs.core.Keyword(null, "nascent", "nascent", 443401807), 0, false, 0, 0, true]), options), new cljs.core.Keyword(null, "meta", "meta", 1499536964), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), 
  new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)], null));
};
tiltontec.cell.core.make_cell.cljs$lang$maxFixedArity = 0;
tiltontec.cell.core.make_cell.cljs$lang$applyTo = function(seq13493) {
  return tiltontec.cell.core.make_cell.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq13493));
};
tiltontec.cell.core.make_c_formula = function tiltontec$cell$core$make_c_formula(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13498 = arguments.length;
  var i__7286__auto___13499 = 0;
  while (true) {
    if (i__7286__auto___13499 < len__7285__auto___13498) {
      args__7292__auto__.push(arguments[i__7286__auto___13499]);
      var G__13500 = i__7286__auto___13499 + 1;
      i__7286__auto___13499 = G__13500;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return tiltontec.cell.core.make_c_formula.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
tiltontec.cell.core.make_c_formula.cljs$core$IFn$_invoke$arity$variadic = function(kvs) {
  var options = cljs.core.apply.call(null, cljs.core.hash_map, kvs);
  var rule = (new cljs.core.Keyword(null, "rule", "rule", 729973257)).cljs$core$IFn$_invoke$arity$1(options);
  if (cljs.core.truth_(rule)) {
  } else {
    throw new Error("Assert failed: rule");
  }
  if (cljs.core.fn_QMARK_.call(null, rule)) {
  } else {
    throw new Error("Assert failed: (fn? rule)");
  }
  return cljs.core.atom.call(null, cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "callers", "callers", -1991542784), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "pulse-observed", "pulse-observed", 595719633), new cljs.core.Keyword(null, "lazy", "lazy", -424547181), new cljs.core.Keyword(null, 
  "pulse-last-changed", "pulse-last-changed", 1035703380), new cljs.core.Keyword(null, "pulse", "pulse", -244494476), new cljs.core.Keyword(null, "useds", "useds", 621350967), new cljs.core.Keyword(null, "optimize", "optimize", -1912349448), new cljs.core.Keyword(null, "input?", "input?", -1792843173)], [cljs.core.PersistentHashSet.EMPTY, tiltontec.cell.base.unbound, false, new cljs.core.Keyword(null, "nascent", "nascent", 443401807), 0, false, 0, 0, cljs.core.PersistentHashSet.EMPTY, true, false]), 
  options), new cljs.core.Keyword(null, "meta", "meta", 1499536964), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)], null));
};
tiltontec.cell.core.make_c_formula.cljs$lang$maxFixedArity = 0;
tiltontec.cell.core.make_c_formula.cljs$lang$applyTo = function(seq13497) {
  return tiltontec.cell.core.make_c_formula.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq13497));
};
tiltontec.cell.core.c_fn_var = function tiltontec$cell$core$c_fn_var(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13509 = arguments.length;
  var i__7286__auto___13510 = 0;
  while (true) {
    if (i__7286__auto___13510 < len__7285__auto___13509) {
      args__7292__auto__.push(arguments[i__7286__auto___13510]);
      var G__13511 = i__7286__auto___13510 + 1;
      i__7286__auto___13510 = G__13511;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 3 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(3), 0, null) : null;
  return tiltontec.cell.core.c_fn_var.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7293__auto__);
};
tiltontec.cell.core.c_fn_var.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__13505, body) {
  var vec__13506 = p__13505;
  var c = cljs.core.nth.call(null, vec__13506, 0, null);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
    var x__7044__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }()))));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null)), function() {
      var x__7044__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null)), function() {
        var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "c-model", "tiltontec.cell.base/c-model", 566190580, null)), function() {
          var x__7044__auto__ = c;
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
        }())));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "cache", "cache", 403508473, null)), function() {
        var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "c-value", "tiltontec.cell.base/c-value", -808509395, null)), function() {
          var x__7044__auto__ = c;
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
        }())));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }()))));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), body)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.cell.core.c_fn_var.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c_fn_var.cljs$lang$applyTo = function(seq13501) {
  var G__13502 = cljs.core.first.call(null, seq13501);
  var seq13501__$1 = cljs.core.next.call(null, seq13501);
  var G__13503 = cljs.core.first.call(null, seq13501__$1);
  var seq13501__$2 = cljs.core.next.call(null, seq13501__$1);
  var G__13504 = cljs.core.first.call(null, seq13501__$2);
  var seq13501__$3 = cljs.core.next.call(null, seq13501__$2);
  return tiltontec.cell.core.c_fn_var.cljs$core$IFn$_invoke$arity$variadic(G__13502, G__13503, G__13504, seq13501__$3);
};
tiltontec.cell.core.c_fn_var.cljs$lang$macro = true;
tiltontec.cell.core.c_fn = function tiltontec$cell$core$c_fn(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13515 = arguments.length;
  var i__7286__auto___13516 = 0;
  while (true) {
    if (i__7286__auto___13516 < len__7285__auto___13515) {
      args__7292__auto__.push(arguments[i__7286__auto___13516]);
      var G__13517 = i__7286__auto___13516 + 1;
      i__7286__auto___13516 = G__13517;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return tiltontec.cell.core.c_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
tiltontec.cell.core.c_fn.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn-var", "tiltontec.cell.core/c-fn-var", -1960595436, null)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "slot-c#", "slot-c#", 1084398166, null)))));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), body)));
};
tiltontec.cell.core.c_fn.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_fn.cljs$lang$applyTo = function(seq13512) {
  var G__13513 = cljs.core.first.call(null, seq13512);
  var seq13512__$1 = cljs.core.next.call(null, seq13512);
  var G__13514 = cljs.core.first.call(null, seq13512__$1);
  var seq13512__$2 = cljs.core.next.call(null, seq13512__$1);
  return tiltontec.cell.core.c_fn.cljs$core$IFn$_invoke$arity$variadic(G__13513, G__13514, seq13512__$2);
};
tiltontec.cell.core.c_fn.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_ = function tiltontec$cell$core$c_QMARK_(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13521 = arguments.length;
  var i__7286__auto___13522 = 0;
  while (true) {
    if (i__7286__auto___13522 < len__7285__auto___13521) {
      args__7292__auto__.push(arguments[i__7286__auto___13522]);
      var G__13523 = i__7286__auto___13522 + 1;
      i__7286__auto___13522 = G__13523;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return tiltontec.cell.core.c_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
tiltontec.cell.core.c_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), function() {
      var x__7044__auto__ = body;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.cell.core.c_QMARK_.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_.cljs$lang$applyTo = function(seq13518) {
  var G__13519 = cljs.core.first.call(null, seq13518);
  var seq13518__$1 = cljs.core.next.call(null, seq13518);
  var G__13520 = cljs.core.first.call(null, seq13518__$1);
  var seq13518__$2 = cljs.core.next.call(null, seq13518__$1);
  return tiltontec.cell.core.c_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__13519, G__13520, seq13518__$2);
};
tiltontec.cell.core.c_QMARK_.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK__PLUS_ = function tiltontec$cell$core$c_QMARK__PLUS_(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13532 = arguments.length;
  var i__7286__auto___13533 = 0;
  while (true) {
    if (i__7286__auto___13533 < len__7285__auto___13532) {
      args__7292__auto__.push(arguments[i__7286__auto___13533]);
      var G__13534 = i__7286__auto___13533 + 1;
      i__7286__auto___13533 = G__13534;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 3 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(3), 0, null) : null;
  return tiltontec.cell.core.c_QMARK__PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7293__auto__);
};
tiltontec.cell.core.c_QMARK__PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__13528, body) {
  var vec__13529 = p__13528;
  var seq__13530 = cljs.core.seq.call(null, vec__13529);
  var options = seq__13530;
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), options, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), function() {
      var x__7044__auto__ = body;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.cell.core.c_QMARK__PLUS_.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c_QMARK__PLUS_.cljs$lang$applyTo = function(seq13524) {
  var G__13525 = cljs.core.first.call(null, seq13524);
  var seq13524__$1 = cljs.core.next.call(null, seq13524);
  var G__13526 = cljs.core.first.call(null, seq13524__$1);
  var seq13524__$2 = cljs.core.next.call(null, seq13524__$1);
  var G__13527 = cljs.core.first.call(null, seq13524__$2);
  var seq13524__$3 = cljs.core.next.call(null, seq13524__$2);
  return tiltontec.cell.core.c_QMARK__PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__13525, G__13526, G__13527, seq13524__$3);
};
tiltontec.cell.core.c_QMARK__PLUS_.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK__PLUS_n = function tiltontec$cell$core$c_QMARK__PLUS_n(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13538 = arguments.length;
  var i__7286__auto___13539 = 0;
  while (true) {
    if (i__7286__auto___13539 < len__7285__auto___13538) {
      args__7292__auto__.push(arguments[i__7286__auto___13539]);
      var G__13540 = i__7286__auto___13539 + 1;
      i__7286__auto___13539 = G__13540;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return tiltontec.cell.core.c_QMARK__PLUS_n.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
tiltontec.cell.core.c_QMARK__PLUS_n.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "code", "code", 1586293142)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), function() {
      var x__7044__auto__ = body;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.cell.core.c_QMARK__PLUS_n.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK__PLUS_n.cljs$lang$applyTo = function(seq13535) {
  var G__13536 = cljs.core.first.call(null, seq13535);
  var seq13535__$1 = cljs.core.next.call(null, seq13535);
  var G__13537 = cljs.core.first.call(null, seq13535__$1);
  var seq13535__$2 = cljs.core.next.call(null, seq13535__$1);
  return tiltontec.cell.core.c_QMARK__PLUS_n.cljs$core$IFn$_invoke$arity$variadic(G__13536, G__13537, seq13535__$2);
};
tiltontec.cell.core.c_QMARK__PLUS_n.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_n = function tiltontec$cell$core$c_QMARK_n(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13544 = arguments.length;
  var i__7286__auto___13545 = 0;
  while (true) {
    if (i__7286__auto___13545 < len__7285__auto___13544) {
      args__7292__auto__.push(arguments[i__7286__auto___13545]);
      var G__13546 = i__7286__auto___13545 + 1;
      i__7286__auto___13545 = G__13546;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return tiltontec.cell.core.c_QMARK_n.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
tiltontec.cell.core.c_QMARK_n.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), function() {
      var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "rule", "rule", 729973257)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), function() {
      var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.cell.core.c_QMARK_n.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_n.cljs$lang$applyTo = function(seq13541) {
  var G__13542 = cljs.core.first.call(null, seq13541);
  var seq13541__$1 = cljs.core.next.call(null, seq13541);
  var G__13543 = cljs.core.first.call(null, seq13541__$1);
  var seq13541__$2 = cljs.core.next.call(null, seq13541__$1);
  return tiltontec.cell.core.c_QMARK_n.cljs$core$IFn$_invoke$arity$variadic(G__13542, G__13543, seq13541__$2);
};
tiltontec.cell.core.c_QMARK_n.cljs$lang$macro = true;
tiltontec.cell.core.c__QMARK_n = function tiltontec$cell$core$c__QMARK_n(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13550 = arguments.length;
  var i__7286__auto___13551 = 0;
  while (true) {
    if (i__7286__auto___13551 < len__7285__auto___13550) {
      args__7292__auto__.push(arguments[i__7286__auto___13551]);
      var G__13552 = i__7286__auto___13551 + 1;
      i__7286__auto___13551 = G__13552;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return tiltontec.cell.core.c__QMARK_n.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
tiltontec.cell.core.c__QMARK_n.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), function() {
      var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "until-asked", "until-asked", -1449069768)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), function() {
      var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.cell.core.c__QMARK_n.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c__QMARK_n.cljs$lang$applyTo = function(seq13547) {
  var G__13548 = cljs.core.first.call(null, seq13547);
  var seq13547__$1 = cljs.core.next.call(null, seq13547);
  var G__13549 = cljs.core.first.call(null, seq13547__$1);
  var seq13547__$2 = cljs.core.next.call(null, seq13547__$1);
  return tiltontec.cell.core.c__QMARK_n.cljs$core$IFn$_invoke$arity$variadic(G__13548, G__13549, seq13547__$2);
};
tiltontec.cell.core.c__QMARK_n.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_n_dbg = function tiltontec$cell$core$c_QMARK_n_dbg(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13556 = arguments.length;
  var i__7286__auto___13557 = 0;
  while (true) {
    if (i__7286__auto___13557 < len__7285__auto___13556) {
      args__7292__auto__.push(arguments[i__7286__auto___13557]);
      var G__13558 = i__7286__auto___13557 + 1;
      i__7286__auto___13557 = G__13558;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return tiltontec.cell.core.c_QMARK_n_dbg.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
tiltontec.cell.core.c_QMARK_n_dbg.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), function() {
      var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "debug", "debug", -1608172596)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", 
  "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), function() {
      var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.cell.core.c_QMARK_n_dbg.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_n_dbg.cljs$lang$applyTo = function(seq13553) {
  var G__13554 = cljs.core.first.call(null, seq13553);
  var seq13553__$1 = cljs.core.next.call(null, seq13553);
  var G__13555 = cljs.core.first.call(null, seq13553__$1);
  var seq13553__$2 = cljs.core.next.call(null, seq13553__$1);
  return tiltontec.cell.core.c_QMARK_n_dbg.cljs$core$IFn$_invoke$arity$variadic(G__13554, G__13555, seq13553__$2);
};
tiltontec.cell.core.c_QMARK_n_dbg.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_n_until = function tiltontec$cell$core$c_QMARK_n_until(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13563 = arguments.length;
  var i__7286__auto___13564 = 0;
  while (true) {
    if (i__7286__auto___13564 < len__7285__auto___13563) {
      args__7292__auto__.push(arguments[i__7286__auto___13564]);
      var G__13565 = i__7286__auto___13564 + 1;
      i__7286__auto___13564 = G__13565;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 3 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(3), 0, null) : null;
  return tiltontec.cell.core.c_QMARK_n_until.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7293__auto__);
};
tiltontec.cell.core.c_QMARK_n_until.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, args, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "optimize", "optimize", -1912349448)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), function() {
      var x__7044__auto__ = body;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "rule", "rule", 729973257)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), args)));
};
tiltontec.cell.core.c_QMARK_n_until.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c_QMARK_n_until.cljs$lang$applyTo = function(seq13559) {
  var G__13560 = cljs.core.first.call(null, seq13559);
  var seq13559__$1 = cljs.core.next.call(null, seq13559);
  var G__13561 = cljs.core.first.call(null, seq13559__$1);
  var seq13559__$2 = cljs.core.next.call(null, seq13559__$1);
  var G__13562 = cljs.core.first.call(null, seq13559__$2);
  var seq13559__$3 = cljs.core.next.call(null, seq13559__$2);
  return tiltontec.cell.core.c_QMARK_n_until.cljs$core$IFn$_invoke$arity$variadic(G__13560, G__13561, G__13562, seq13559__$3);
};
tiltontec.cell.core.c_QMARK_n_until.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_once = function tiltontec$cell$core$c_QMARK_once(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13569 = arguments.length;
  var i__7286__auto___13570 = 0;
  while (true) {
    if (i__7286__auto___13570 < len__7285__auto___13569) {
      args__7292__auto__.push(arguments[i__7286__auto___13570]);
      var G__13571 = i__7286__auto___13570 + 1;
      i__7286__auto___13570 = G__13571;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return tiltontec.cell.core.c_QMARK_once.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
tiltontec.cell.core.c_QMARK_once.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), function() {
      var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, null), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "rule", "rule", 729973257)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), function() {
      var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.cell.core.c_QMARK_once.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_once.cljs$lang$applyTo = function(seq13566) {
  var G__13567 = cljs.core.first.call(null, seq13566);
  var seq13566__$1 = cljs.core.next.call(null, seq13566);
  var G__13568 = cljs.core.first.call(null, seq13566__$1);
  var seq13566__$2 = cljs.core.next.call(null, seq13566__$1);
  return tiltontec.cell.core.c_QMARK_once.cljs$core$IFn$_invoke$arity$variadic(G__13567, G__13568, seq13566__$2);
};
tiltontec.cell.core.c_QMARK_once.cljs$lang$macro = true;
tiltontec.cell.core.c_1 = function tiltontec$cell$core$c_1(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13575 = arguments.length;
  var i__7286__auto___13576 = 0;
  while (true) {
    if (i__7286__auto___13576 < len__7285__auto___13575) {
      args__7292__auto__.push(arguments[i__7286__auto___13576]);
      var G__13577 = i__7286__auto___13576 + 1;
      i__7286__auto___13576 = G__13577;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return tiltontec.cell.core.c_1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
tiltontec.cell.core.c_1.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), function() {
      var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, null), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", 
  "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), function() {
      var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.cell.core.c_1.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_1.cljs$lang$applyTo = function(seq13572) {
  var G__13573 = cljs.core.first.call(null, seq13572);
  var seq13572__$1 = cljs.core.next.call(null, seq13572);
  var G__13574 = cljs.core.first.call(null, seq13572__$1);
  var seq13572__$2 = cljs.core.next.call(null, seq13572__$1);
  return tiltontec.cell.core.c_1.cljs$core$IFn$_invoke$arity$variadic(G__13573, G__13574, seq13572__$2);
};
tiltontec.cell.core.c_1.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_1 = function tiltontec$cell$core$c_QMARK_1(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13581 = arguments.length;
  var i__7286__auto___13582 = 0;
  while (true) {
    if (i__7286__auto___13582 < len__7285__auto___13581) {
      args__7292__auto__.push(arguments[i__7286__auto___13582]);
      var G__13583 = i__7286__auto___13582 + 1;
      i__7286__auto___13582 = G__13583;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return tiltontec.cell.core.c_QMARK_1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
tiltontec.cell.core.c_QMARK_1.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c?once", "tiltontec.cell.core/c?once", 88229667, null)), body)));
};
tiltontec.cell.core.c_QMARK_1.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_1.cljs$lang$applyTo = function(seq13578) {
  var G__13579 = cljs.core.first.call(null, seq13578);
  var seq13578__$1 = cljs.core.next.call(null, seq13578);
  var G__13580 = cljs.core.first.call(null, seq13578__$1);
  var seq13578__$2 = cljs.core.next.call(null, seq13578__$1);
  return tiltontec.cell.core.c_QMARK_1.cljs$core$IFn$_invoke$arity$variadic(G__13579, G__13580, seq13578__$2);
};
tiltontec.cell.core.c_QMARK_1.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_dbg = function tiltontec$cell$core$c_QMARK_dbg(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13587 = arguments.length;
  var i__7286__auto___13588 = 0;
  while (true) {
    if (i__7286__auto___13588 < len__7285__auto___13587) {
      args__7292__auto__.push(arguments[i__7286__auto___13588]);
      var G__13589 = i__7286__auto___13588 + 1;
      i__7286__auto___13588 = G__13589;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return tiltontec.cell.core.c_QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
tiltontec.cell.core.c_QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), function() {
      var x__7044__auto__ = body;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "debug", "debug", -1608172596)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "rule", "rule", 729973257)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.cell.core.c_QMARK_dbg.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_dbg.cljs$lang$applyTo = function(seq13584) {
  var G__13585 = cljs.core.first.call(null, seq13584);
  var seq13584__$1 = cljs.core.next.call(null, seq13584);
  var G__13586 = cljs.core.first.call(null, seq13584__$1);
  var seq13584__$2 = cljs.core.next.call(null, seq13584__$1);
  return tiltontec.cell.core.c_QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic(G__13585, G__13586, seq13584__$2);
};
tiltontec.cell.core.c_QMARK_dbg.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK__ = function tiltontec$cell$core$c_QMARK__(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13598 = arguments.length;
  var i__7286__auto___13599 = 0;
  while (true) {
    if (i__7286__auto___13599 < len__7285__auto___13598) {
      args__7292__auto__.push(arguments[i__7286__auto___13599]);
      var G__13600 = i__7286__auto___13599 + 1;
      i__7286__auto___13599 = G__13600;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 3 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(3), 0, null) : null;
  return tiltontec.cell.core.c_QMARK__.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7293__auto__);
};
tiltontec.cell.core.c_QMARK__.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__13594, body) {
  var vec__13595 = p__13594;
  var seq__13596 = cljs.core.seq.call(null, vec__13595);
  var options = seq__13596;
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), options, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), function() {
      var x__7044__auto__ = body;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "rule", "rule", 729973257)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.cell.core.c_QMARK__.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c_QMARK__.cljs$lang$applyTo = function(seq13590) {
  var G__13591 = cljs.core.first.call(null, seq13590);
  var seq13590__$1 = cljs.core.next.call(null, seq13590);
  var G__13592 = cljs.core.first.call(null, seq13590__$1);
  var seq13590__$2 = cljs.core.next.call(null, seq13590__$1);
  var G__13593 = cljs.core.first.call(null, seq13590__$2);
  var seq13590__$3 = cljs.core.next.call(null, seq13590__$2);
  return tiltontec.cell.core.c_QMARK__.cljs$core$IFn$_invoke$arity$variadic(G__13591, G__13592, G__13593, seq13590__$3);
};
tiltontec.cell.core.c_QMARK__.cljs$lang$macro = true;
tiltontec.cell.core.c__QMARK_ = function tiltontec$cell$core$c__QMARK_(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13609 = arguments.length;
  var i__7286__auto___13610 = 0;
  while (true) {
    if (i__7286__auto___13610 < len__7285__auto___13609) {
      args__7292__auto__.push(arguments[i__7286__auto___13610]);
      var G__13611 = i__7286__auto___13610 + 1;
      i__7286__auto___13610 = G__13611;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 3 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(3), 0, null) : null;
  return tiltontec.cell.core.c__QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7293__auto__);
};
tiltontec.cell.core.c__QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__13605, body) {
  var vec__13606 = p__13605;
  var seq__13607 = cljs.core.seq.call(null, vec__13606);
  var options = seq__13607;
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), options, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), function() {
      var x__7044__auto__ = body;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "until-asked", "until-asked", -1449069768)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.cell.core.c__QMARK_.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c__QMARK_.cljs$lang$applyTo = function(seq13601) {
  var G__13602 = cljs.core.first.call(null, seq13601);
  var seq13601__$1 = cljs.core.next.call(null, seq13601);
  var G__13603 = cljs.core.first.call(null, seq13601__$1);
  var seq13601__$2 = cljs.core.next.call(null, seq13601__$1);
  var G__13604 = cljs.core.first.call(null, seq13601__$2);
  var seq13601__$3 = cljs.core.next.call(null, seq13601__$2);
  return tiltontec.cell.core.c__QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__13602, G__13603, G__13604, seq13601__$3);
};
tiltontec.cell.core.c__QMARK_.cljs$lang$macro = true;
tiltontec.cell.core.c__QMARK_dbg = function tiltontec$cell$core$c__QMARK_dbg(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13615 = arguments.length;
  var i__7286__auto___13616 = 0;
  while (true) {
    if (i__7286__auto___13616 < len__7285__auto___13615) {
      args__7292__auto__.push(arguments[i__7286__auto___13616]);
      var G__13617 = i__7286__auto___13616 + 1;
      i__7286__auto___13616 = G__13617;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return tiltontec.cell.core.c__QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
tiltontec.cell.core.c__QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), function() {
      var x__7044__auto__ = body;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "until-asked", "until-asked", -1449069768)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "debug", "debug", -1608172596)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true))));
};
tiltontec.cell.core.c__QMARK_dbg.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c__QMARK_dbg.cljs$lang$applyTo = function(seq13612) {
  var G__13613 = cljs.core.first.call(null, seq13612);
  var seq13612__$1 = cljs.core.next.call(null, seq13612);
  var G__13614 = cljs.core.first.call(null, seq13612__$1);
  var seq13612__$2 = cljs.core.next.call(null, seq13612__$1);
  return tiltontec.cell.core.c__QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic(G__13613, G__13614, seq13612__$2);
};
tiltontec.cell.core.c__QMARK_dbg.cljs$lang$macro = true;
tiltontec.cell.core.c_formula = function tiltontec$cell$core$c_formula(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13626 = arguments.length;
  var i__7286__auto___13627 = 0;
  while (true) {
    if (i__7286__auto___13627 < len__7285__auto___13626) {
      args__7292__auto__.push(arguments[i__7286__auto___13627]);
      var G__13628 = i__7286__auto___13627 + 1;
      i__7286__auto___13627 = G__13628;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 3 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(3), 0, null) : null;
  return tiltontec.cell.core.c_formula.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7293__auto__);
};
tiltontec.cell.core.c_formula.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__13622, body) {
  var vec__13623 = p__13622;
  var seq__13624 = cljs.core.seq.call(null, vec__13623);
  var kvs = seq__13624;
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), function() {
      var x__7044__auto__ = body;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), cljs.core.keys)));
};
tiltontec.cell.core.c_formula.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c_formula.cljs$lang$applyTo = function(seq13618) {
  var G__13619 = cljs.core.first.call(null, seq13618);
  var seq13618__$1 = cljs.core.next.call(null, seq13618);
  var G__13620 = cljs.core.first.call(null, seq13618__$1);
  var seq13618__$2 = cljs.core.next.call(null, seq13618__$1);
  var G__13621 = cljs.core.first.call(null, seq13618__$2);
  var seq13618__$3 = cljs.core.next.call(null, seq13618__$2);
  return tiltontec.cell.core.c_formula.cljs$core$IFn$_invoke$arity$variadic(G__13619, G__13620, G__13621, seq13618__$3);
};
tiltontec.cell.core.c_formula.cljs$lang$macro = true;
tiltontec.cell.core.c_in = function tiltontec$cell$core$c_in(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13631 = arguments.length;
  var i__7286__auto___13632 = 0;
  while (true) {
    if (i__7286__auto___13632 < len__7285__auto___13631) {
      args__7292__auto__.push(arguments[i__7286__auto___13632]);
      var G__13633 = i__7286__auto___13632 + 1;
      i__7286__auto___13632 = G__13633;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 1 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(1), 0, null) : null;
  return tiltontec.cell.core.c_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7293__auto__);
};
tiltontec.cell.core.c_in.cljs$core$IFn$_invoke$arity$variadic = function(value, option_kvs) {
  return cljs.core.apply.call(null, tiltontec.cell.core.make_cell, cljs.core.list_STAR_.call(null, new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "input?", "input?", -1792843173), true, option_kvs));
};
tiltontec.cell.core.c_in.cljs$lang$maxFixedArity = 1;
tiltontec.cell.core.c_in.cljs$lang$applyTo = function(seq13629) {
  var G__13630 = cljs.core.first.call(null, seq13629);
  var seq13629__$1 = cljs.core.next.call(null, seq13629);
  return tiltontec.cell.core.c_in.cljs$core$IFn$_invoke$arity$variadic(G__13630, seq13629__$1);
};
tiltontec.cell.core.c_reset_BANG_ = function tiltontec$cell$core$c_reset_BANG_(c, new_value) {
  if (cljs.core.truth_(c)) {
  } else {
    throw new Error("Assert failed: c");
  }
  if (cljs.core.truth_(tiltontec.cell.base._STAR_defer_changes_STAR_)) {
    throw new Error("c-reset!\x3e change to %s must be deferred by wrapping it in WITH-INTEGRITY", tiltontec.cell.base.c_slot.call(null, c));
  } else {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.cell.base.c_lazy.call(null, c)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854), new cljs.core.Keyword(null, "always", "always", -1772028770), true], null)))) {
      return tiltontec.cell.evaluate.c_value_assume.call(null, c, new_value, null);
    } else {
      return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502), tiltontec.cell.base.c_slot.call(null, c), function(opcode, defer_info) {
        return tiltontec.cell.evaluate.c_value_assume.call(null, c, new_value, null);
      });
    }
  }
};
tiltontec.cell.core.c_reset_next_BANG_ = function tiltontec$cell$core$c_reset_next_BANG_(_AMPERSAND_form, _AMPERSAND_env, f_c, f_new_value) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "cond", "cljs.core/cond", 2005388338, null)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "not", "cljs.core/not", 100665144, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "*within-integrity*", "tiltontec.cell.core/*within-integrity*", 1558832389, null)))));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "throw", "throw", 595905694, null)), function() {
      var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("js", "Error.", "js/Error.", 750655924, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, "c-reset-next!\x3e deferred change to %s not under WITH-INTEGRITY supervision."), function() {
        var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "c-slot", "tiltontec.cell.base/c-slot", 1453031347, null)), function() {
          var x__7044__auto__ = f_c;
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
        }())));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }())));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "else", "else", -1508377146)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "ufb-add", "tiltontec.cell.core/ufb-add", 1421793642, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "change", "change", -1163046502)), function() {
      var x__7044__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "c-reset-next!", "c-reset-next!", -1735615308)), function() {
        var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), function() {
          var x__7044__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "opcode", "opcode", 311089360, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "defer-info", "defer-info", -446799704, null))))));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
        }(), function() {
          var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null)), function() {
            var x__7044__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "c__13634__auto__", "c__13634__auto__", -262202937, null)), function() {
              var x__7044__auto__ = f_c;
              return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
            }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "new-value__13635__auto__", "new-value__13635__auto__", -1632391821, null)), function() {
              var x__7044__auto__ = f_new_value;
              return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
            }()))));
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
          }(), function() {
            var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "call-c-reset-next!", "tiltontec.cell.core/call-c-reset-next!", -970475516, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "c__13634__auto__", "c__13634__auto__", -262202937, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, 
            "new-value__13635__auto__", "new-value__13635__auto__", -1632391821, null)))));
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
          }())));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
        }())));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }()))));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.cell.core.c_reset_next_BANG_.cljs$lang$macro = true;
tiltontec.cell.core.call_c_reset_next_BANG_ = function tiltontec$cell$core$call_c_reset_next_BANG_(c, new_value) {
  if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.cell.base.c_lazy.call(null, c)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854), new cljs.core.Keyword(null, "always", "always", -1772028770), true], null)))) {
    return tiltontec.cell.evaluate.c_value_assume.call(null, c, new_value, null);
  } else {
    return tiltontec.cell.evaluate.c_value_assume.call(null, c, new_value, null);
  }
};
goog.provide("tiltontec.cell.evaluate_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.cell.evaluate");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.evaluate_test.test_input = function tiltontec$cell$evaluate_test$test_input() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$test_input.cljs$lang$var);
};
tiltontec.cell.evaluate_test.test_input.cljs$lang$test = function() {
  var c = tiltontec.cell.core.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
  try {
    var values__12844__auto___15587 = function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), x__7044__auto__);
    }();
    var result__12845__auto___15588 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto___15587);
    if (cljs.core.truth_(result__12845__auto___15588)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto___15587), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__12844__auto___15587);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15579) {
    var t__12882__auto___15589 = e15579;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15589, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15590 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_value_state.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), x__7044__auto__);
    }();
    var result__12845__auto___15591 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15590);
    if (cljs.core.truth_(result__12845__auto___15591)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15590), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15590);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15580) {
    var t__12882__auto___15592 = e15580;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15592, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15593 = function() {
      var x__7044__auto__ = cljs.core.PersistentHashSet.EMPTY;
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_callers.call(null, c);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15594 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15593);
    if (cljs.core.truth_(result__12845__auto___15594)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15593), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15593);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15581) {
    var t__12882__auto___15595 = e15581;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15595, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15596 = function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15597 = cljs.core.apply.call(null, tiltontec.cell.base.c_input_QMARK_, values__12844__auto___15596);
    if (cljs.core.truth_(result__12845__auto___15597)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_input_QMARK_, 
      values__12844__auto___15596), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__12844__auto___15596);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15582) {
    var t__12882__auto___15598 = e15582;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15598, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15599 = function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15600 = cljs.core.apply.call(null, tiltontec.cell.base.c_valid_QMARK_, values__12844__auto___15599);
    if (cljs.core.truth_(result__12845__auto___15600)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_valid_QMARK_, 
      values__12844__auto___15599), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__12844__auto___15599);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15583) {
    var t__12882__auto___15601 = e15583;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15601, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15602 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_model.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15603 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___15602);
    if (cljs.core.truth_(result__12845__auto___15603)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___15602), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___15602);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15584) {
    var t__12882__auto___15604 = e15584;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15604, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15605 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.base.c_slot.call(null, c);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_slot_name.call(null, c);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }(), new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
    var result__12845__auto___15606 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15605);
    if (cljs.core.truth_(result__12845__auto___15606)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15605), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15605);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15585) {
    var t__12882__auto___15607 = e15585;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15607, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), x__7044__auto__);
    }();
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15586) {
    var t__12882__auto__ = e15586;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.test_input.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.test_input;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "test-input", "tiltontec.cell.evaluate-test/test-input", -1028428775, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/evaluate_test.cljc", 20, 1, 45, 45, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.test_input) ? tiltontec.cell.evaluate_test.test_input.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.t_formula = function tiltontec$cell$evaluate_test$t_formula() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$t_formula.cljs$lang$var);
};
tiltontec.cell.evaluate_test.t_formula.cljs$lang$test = function() {
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 40, 2)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return 40 + 2;
  });
  try {
    var values__12844__auto___15618 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037));
    var result__12845__auto___15619 = cljs.core.apply.call(null, cljs.core.isa_QMARK_, values__12844__auto___15618);
    if (cljs.core.truth_(result__12845__auto___15619)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 
      608738071)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.isa_QMARK_, values__12844__auto___15618), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 
      608738071)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), values__12844__auto___15618);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15608) {
    var t__12882__auto___15620 = e15608;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 
    608738071)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15620, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15621 = function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), x__7044__auto__);
    }();
    var result__12845__auto___15622 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto___15621);
    if (cljs.core.truth_(result__12845__auto___15622)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto___15621), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__12844__auto___15621);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15609) {
    var t__12882__auto___15623 = e15609;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15623, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15624 = function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), x__7044__auto__);
    }();
    var result__12845__auto___15625 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto___15624);
    if (cljs.core.truth_(result__12845__auto___15625)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto___15624), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__12844__auto___15624);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15610) {
    var t__12882__auto___15626 = e15610;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15626, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15627 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_value_state.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654)), x__7044__auto__);
    }();
    var result__12845__auto___15628 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15627);
    if (cljs.core.truth_(result__12845__auto___15628)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15627), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15627);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15611) {
    var t__12882__auto___15629 = e15611;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15629, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15630 = function() {
      var x__7044__auto__ = cljs.core.PersistentHashSet.EMPTY;
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_callers.call(null, c);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15631 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15630);
    if (cljs.core.truth_(result__12845__auto___15631)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15630), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15630);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15612) {
    var t__12882__auto___15632 = e15612;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15632, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15633 = function() {
      var x__7044__auto__ = cljs.core.PersistentHashSet.EMPTY;
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_useds.call(null, c);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15634 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15633);
    if (cljs.core.truth_(result__12845__auto___15634)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15633), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15633);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15613) {
    var t__12882__auto___15635 = e15613;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15635, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15636 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_input_QMARK_.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15637 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___15636);
    if (cljs.core.truth_(result__12845__auto___15637)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__12844__auto___15636), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___15636);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15614) {
    var t__12882__auto___15638 = e15614;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15638, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15639 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_valid_QMARK_.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15640 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___15639);
    if (cljs.core.truth_(result__12845__auto___15640)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__12844__auto___15639), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___15639);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15615) {
    var t__12882__auto___15641 = e15615;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15641, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15642 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_model.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15643 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___15642);
    if (cljs.core.truth_(result__12845__auto___15643)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___15642), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___15642);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15616) {
    var t__12882__auto___15644 = e15616;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15644, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "readddd", "readddd", 455623157), tiltontec.cell.evaluate.c_get.call(null, c));
  try {
    var values__12844__auto__ = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), x__7044__auto__);
    }();
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15617) {
    var t__12882__auto__ = e15617;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.t_formula.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.t_formula;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula", "tiltontec.cell.evaluate-test/t-formula", 1151821320, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula", "t-formula", -178019426, null), "test/tiltontec/cell/evaluate_test.cljc", 19, 1, 57, 57, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula) ? tiltontec.cell.evaluate_test.t_formula.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.t_formula_2 = function tiltontec$cell$evaluate_test$t_formula_2() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$t_formula_2.cljs$lang$var);
};
tiltontec.cell.evaluate_test.t_formula_2.cljs$lang$test = function() {
  var b = tiltontec.cell.core.c_in.call(null, 2);
  var cct = cljs.core.atom.call(null, 0);
  var dct = cljs.core.atom.call(null, 0);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, 
  "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(b, cct, dct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, cct, cljs.core.inc);
      return 40 + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(b, cct, dct));
  var d = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, 
  "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(b, cct, dct, c) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, dct, cljs.core.inc);
      return tiltontec.cell.evaluate.c_get.call(null, c) + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(b, cct, dct, c));
  try {
    var values__12844__auto___15656 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, d);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 44), x__7044__auto__);
    }();
    var result__12845__auto___15657 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15656);
    if (cljs.core.truth_(result__12845__auto___15657)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15656), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15656);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15645) {
    var t__12882__auto___15658 = e15645;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15658, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15659 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), x__7044__auto__);
    }();
    var result__12845__auto___15660 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15659);
    if (cljs.core.truth_(result__12845__auto___15660)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15659), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15659);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15646) {
    var t__12882__auto___15661 = e15646;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15661, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15662 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, b);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), x__7044__auto__);
    }();
    var result__12845__auto___15663 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15662);
    if (cljs.core.truth_(result__12845__auto___15663)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15662), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15662);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15647) {
    var t__12882__auto___15664 = e15647;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15664, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15665 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, dct);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15666 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15665);
    if (cljs.core.truth_(result__12845__auto___15666)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15665), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15665);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15648) {
    var t__12882__auto___15667 = e15648;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15667, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15668 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, cct);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15669 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15668);
    if (cljs.core.truth_(result__12845__auto___15669)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15668), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15668);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15649) {
    var t__12882__auto___15670 = e15649;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15670, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15671 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.count.call(null, tiltontec.cell.base.c_useds.call(null, b));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 0);
    var result__12845__auto___15672 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15671);
    if (cljs.core.truth_(result__12845__auto___15672)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15671), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15671);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15650) {
    var t__12882__auto___15673 = e15650;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
    new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15673, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15674 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.count.call(null, tiltontec.cell.base.c_callers.call(null, b));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 2);
    var result__12845__auto___15675 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15674);
    if (cljs.core.truth_(result__12845__auto___15675)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15674), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15674);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15651) {
    var t__12882__auto___15676 = e15651;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
    new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15676, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15677 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.count.call(null, tiltontec.cell.base.c_useds.call(null, c));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15678 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15677);
    if (cljs.core.truth_(result__12845__auto___15678)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15677), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15677);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15652) {
    var t__12882__auto___15679 = e15652;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
    new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15679, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15680 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.count.call(null, tiltontec.cell.base.c_callers.call(null, c));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15681 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15680);
    if (cljs.core.truth_(result__12845__auto___15681)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15680), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15680);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15653) {
    var t__12882__auto___15682 = e15653;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
    new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15682, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15683 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.count.call(null, tiltontec.cell.base.c_useds.call(null, d));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 2);
    var result__12845__auto___15684 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15683);
    if (cljs.core.truth_(result__12845__auto___15684)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15683), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15683);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15654) {
    var t__12882__auto___15685 = e15654;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
    new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15685, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.count.call(null, tiltontec.cell.base.c_callers.call(null, d));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 0);
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15655) {
    var t__12882__auto__ = e15655;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, 
    null), new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.t_formula_2.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.t_formula_2;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula-2", "tiltontec.cell.evaluate-test/t-formula-2", 1653829372, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula-2", "t-formula-2", 844540770, null), "test/tiltontec/cell/evaluate_test.cljc", 21, 1, 74, 
74, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula_2) ? tiltontec.cell.evaluate_test.t_formula_2.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.yowza = cljs.core.atom.call(null, 0);
tiltontec.cell.evaluate_test.t_in_reset = function tiltontec$cell$evaluate_test$t_in_reset() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$t_in_reset.cljs$lang$var);
};
tiltontec.cell.evaluate_test.t_in_reset.cljs$lang$test = function() {
  cljs.core.reset_BANG_.call(null, tiltontec.cell.evaluate_test.yowza, 0);
  try {
    var values__12844__auto___15691 = function() {
      var x__7044__auto__ = cljs.core.deref.call(null, tiltontec.cell.evaluate_test.yowza);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 0), x__7044__auto__);
    }();
    var result__12845__auto___15692 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15691);
    if (cljs.core.truth_(result__12845__auto___15692)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null)), 
      0), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15691), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null)), 
      0), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15691);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15686) {
    var t__12882__auto___15693 = e15686;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null)), 
    0), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15693, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var b = tiltontec.cell.core.c_in.call(null, 2, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "yowza", "yowza", 561311574), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(slot, me, new$, old, c) {
    return cljs.core.reset_BANG_.call(null, tiltontec.cell.evaluate_test.yowza, new$);
  });
  try {
    var values__12844__auto___15694 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, b);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 2);
    var result__12845__auto___15695 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15694);
    if (cljs.core.truth_(result__12845__auto___15695)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15694), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15694);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15687) {
    var t__12882__auto___15696 = e15687;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15696, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15697 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, tiltontec.cell.evaluate_test.yowza);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 2);
    var result__12845__auto___15698 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15697);
    if (cljs.core.truth_(result__12845__auto___15698)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15697), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15697);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15688) {
    var t__12882__auto___15699 = e15688;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15699, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, 42);
  try {
    var values__12844__auto___15700 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, b);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___15701 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15700);
    if (cljs.core.truth_(result__12845__auto___15701)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15700), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15700);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15689) {
    var t__12882__auto___15702 = e15689;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15702, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, tiltontec.cell.evaluate_test.yowza);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15690) {
    var t__12882__auto__ = e15690;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.t_in_reset.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.t_in_reset;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-in-reset", "tiltontec.cell.evaluate-test/t-in-reset", -1060627208, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-in-reset", "t-in-reset", 285694538, null), "test/tiltontec/cell/evaluate_test.cljc", 20, 1, 100, 100, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_in_reset) ? tiltontec.cell.evaluate_test.t_in_reset.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.t_formula_22 = function tiltontec$cell$evaluate_test$t_formula_22() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$t_formula_22.cljs$lang$var);
};
tiltontec.cell.evaluate_test.t_formula_22.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var b = tiltontec.cell.core.c_in.call(null, 2, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837));
  var cct = cljs.core.atom.call(null, 0);
  var dct = cljs.core.atom.call(null, 0);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "cc", "cc", 301258124), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 
  40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(b, cct, dct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, cct, cljs.core.inc);
      return 40 + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(b, cct, dct));
  var d = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, 
  null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(b, cct, dct, c) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, dct, cljs.core.inc);
      return tiltontec.cell.evaluate.c_get.call(null, c) + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(b, cct, dct, c));
  try {
    var values__12844__auto___15713 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, d);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 44), x__7044__auto__);
    }();
    var result__12845__auto___15714 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15713);
    if (cljs.core.truth_(result__12845__auto___15714)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15713), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15713);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15703) {
    var t__12882__auto___15715 = e15703;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15715, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15716 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), x__7044__auto__);
    }();
    var result__12845__auto___15717 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15716);
    if (cljs.core.truth_(result__12845__auto___15717)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15716), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15716);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15704) {
    var t__12882__auto___15718 = e15704;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15718, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15719 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, b);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), x__7044__auto__);
    }();
    var result__12845__auto___15720 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15719);
    if (cljs.core.truth_(result__12845__auto___15720)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15719), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15719);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15705) {
    var t__12882__auto___15721 = e15705;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15721, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15722 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, dct);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15723 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15722);
    if (cljs.core.truth_(result__12845__auto___15723)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15722), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15722);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15706) {
    var t__12882__auto___15724 = e15706;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15724, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15725 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, cct);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15726 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15725);
    if (cljs.core.truth_(result__12845__auto___15726)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15725), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15725);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15707) {
    var t__12882__auto___15727 = e15707;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15727, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, 3);
  try {
    var values__12844__auto___15728 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, d);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 46), x__7044__auto__);
    }();
    var result__12845__auto___15729 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15728);
    if (cljs.core.truth_(result__12845__auto___15729)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 46), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15728), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 46), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15728);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15708) {
    var t__12882__auto___15730 = e15708;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 46), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15730, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15731 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 43), x__7044__auto__);
    }();
    var result__12845__auto___15732 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15731);
    if (cljs.core.truth_(result__12845__auto___15732)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 43), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15731), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 43), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15731);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15709) {
    var t__12882__auto___15733 = e15709;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 43), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15733, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15734 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, b);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 3), x__7044__auto__);
    }();
    var result__12845__auto___15735 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15734);
    if (cljs.core.truth_(result__12845__auto___15735)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 3), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15734), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 3), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15734);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15710) {
    var t__12882__auto___15736 = e15710;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 3), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15736, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15737 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, dct);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 2);
    var result__12845__auto___15738 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15737);
    if (cljs.core.truth_(result__12845__auto___15738)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15737), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15737);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15711) {
    var t__12882__auto___15739 = e15711;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15739, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, cct);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 2);
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15712) {
    var t__12882__auto__ = e15712;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.t_formula_22.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.t_formula_22;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula-22", "tiltontec.cell.evaluate-test/t-formula-22", 626462137, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula-22", "t-formula-22", -194457801, null), "test/tiltontec/cell/evaluate_test.cljc", 22, 1, 111, 
111, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula_22) ? tiltontec.cell.evaluate_test.t_formula_22.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.pentagram_of_death = function tiltontec$cell$evaluate_test$pentagram_of_death() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$pentagram_of_death.cljs$lang$var);
};
tiltontec.cell.evaluate_test.pentagram_of_death.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var run = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var obs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var rset = function(run, obs) {
    return function() {
      cljs.core.swap_BANG_.call(null, run, cljs.core.empty);
      return cljs.core.swap_BANG_.call(null, obs, cljs.core.empty);
    };
  }(run, obs);
  var logit = function(run, obs, rset) {
    return function(log, key) {
      return cljs.core.swap_BANG_.call(null, run, cljs.core.assoc, key, key.call(null, cljs.core.deref.call(null, run), 0) + 1);
    };
  }(run, obs, rset);
  var logrun = function(run, obs, rset, logit) {
    return function(p1__15740_SHARP_) {
      return logit.call(null, run, p1__15740_SHARP_);
    };
  }(run, obs, rset, logit);
  var cr = function(run, obs, rset, logit, logrun) {
    return function(c) {
      return tiltontec.cell.evaluate.c_get.call(null, c);
    };
  }(run, obs, rset, logit, logrun);
  var podobs = function(run, obs, rset, logit, logrun, cr) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, obs, cljs.core.assoc, slot, slot.call(null, cljs.core.deref.call(null, obs), 0) + 1);
    };
  }(run, obs, rset, logit, logrun, cr);
  var aa = tiltontec.cell.core.c_in.call(null, 1, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs);
  var a7 = tiltontec.cell.core.c_in.call(null, 7, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "a7", "a7", 1513050971), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs);
  var a70 = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "a70", "a70", 798099193), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "a70", "a70", 798099193)), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, 
  null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "a7", "a7", -1141384798, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "a70", "a70", 798099193));
      return 10 * cr.call(null, a7);
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7));
  var bb = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "bb", "bb", 75940837)), cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), 
  new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837));
      return cr.call(null, aa);
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70));
  var cc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "cc", "cc", 301258124), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "cc", "cc", 301258124)), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 
  10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "cc", "cc", 301258124));
      return 10 * cr.call(null, aa);
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb));
  var dd = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "dd", "dd", -1340437629)), cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, 
  null), cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), 42)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, 
  new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "dd", "dd", -1340437629));
      if (cljs.core.even_QMARK_.call(null, cr.call(null, bb))) {
        return 10 * cr.call(null, cc);
      } else {
        return 42;
      }
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc));
  var ee = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "ee", "ee", 643317400), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "ee", "ee", 643317400)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 
  cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "a70", "a70", -1856336576, null)), cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null)), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 1E4, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))))), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc, dd) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "ee", "ee", 643317400));
      return cr.call(null, a70) + cr.call(null, bb) + 1E4 * cr.call(null, dd);
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc, dd));
  var verify_p_current = function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc, dd, ee) {
    return function() {
      try {
        var values__12844__auto___15801 = cljs.core._conj.call(null, function() {
          var x__7044__auto__ = cr.call(null, aa);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
        }(), 2);
        var result__12845__auto___15802 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15801);
        if (cljs.core.truth_(result__12845__auto___15802)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15801), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
            var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15801);
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
          }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e15741) {
        var t__12882__auto___15803 = e15741;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__12882__auto___15803, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__12844__auto___15804 = cljs.core._conj.call(null, function() {
          var x__7044__auto__ = cr.call(null, bb);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
        }(), 2);
        var result__12845__auto___15805 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15804);
        if (cljs.core.truth_(result__12845__auto___15805)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15804), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
            var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15804);
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
          }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e15742) {
        var t__12882__auto___15806 = e15742;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__12882__auto___15806, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__12844__auto___15807 = cljs.core._conj.call(null, function() {
          var x__7044__auto__ = cr.call(null, cc);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
        }(), 20);
        var result__12845__auto___15808 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15807);
        if (cljs.core.truth_(result__12845__auto___15808)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 20, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15807), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 20, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
            var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15807);
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
          }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e15743) {
        var t__12882__auto___15809 = e15743;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 20, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__12882__auto___15809, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__12844__auto___15810 = cljs.core._conj.call(null, function() {
          var x__7044__auto__ = cr.call(null, dd);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
        }(), 200);
        var result__12845__auto___15811 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15810);
        if (cljs.core.truth_(result__12845__auto___15811)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 200, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15810), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 200, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
            var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15810);
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
          }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e15744) {
        var t__12882__auto___15812 = e15744;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 200, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__12882__auto___15812, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__12844__auto__ = cljs.core._conj.call(null, function() {
          var x__7044__auto__ = cr.call(null, ee);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
        }(), 2000072);
        var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
        if (cljs.core.truth_(result__12845__auto__)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2000072, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2000072, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
            var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
          }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return result__12845__auto__;
      } catch (e15745) {
        var t__12882__auto__ = e15745;
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2000072, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc, dd, ee);
  try {
    var values__12844__auto___15813 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cr.call(null, aa);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15814 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15813);
    if (cljs.core.truth_(result__12845__auto___15814)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15813), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15813);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15746) {
    var t__12882__auto___15815 = e15746;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__12882__auto___15815, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15816 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cr.call(null, bb);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15817 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15816);
    if (cljs.core.truth_(result__12845__auto___15817)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15816), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15816);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15747) {
    var t__12882__auto___15818 = e15747;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__12882__auto___15818, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15819 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cr.call(null, cc);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 10);
    var result__12845__auto___15820 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15819);
    if (cljs.core.truth_(result__12845__auto___15820)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15819), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15819);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15748) {
    var t__12882__auto___15821 = e15748;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15821, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15822 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cr.call(null, dd);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___15823 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15822);
    if (cljs.core.truth_(result__12845__auto___15823)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15822), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15822);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15749) {
    var t__12882__auto___15824 = e15749;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__12882__auto___15824, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15825 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cr.call(null, ee);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 420071);
    var result__12845__auto___15826 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15825);
    if (cljs.core.truth_(result__12845__auto___15826)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 420071, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15825), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 420071, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15825);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15750) {
    var t__12882__auto___15827 = e15750;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 420071, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15827, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15828 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.base.c_useds.call(null, aa);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), null);
    var result__12845__auto___15829 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15828);
    if (cljs.core.truth_(result__12845__auto___15829)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15828), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15828);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15751) {
    var t__12882__auto___15830 = e15751;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15830, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15831 = function() {
      var x__7044__auto__ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "cc", "cc", 301258124), null], null), null);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_slots.call(null, aa, new cljs.core.Keyword(null, "callers", "callers", -1991542784));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15832 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15831);
    if (cljs.core.truth_(result__12845__auto___15832)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
      "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15831), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
      "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15831);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15752) {
    var t__12882__auto___15833 = e15752;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
    "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15833, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15834 = function() {
      var x__7044__auto__ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_slots.call(null, bb, new cljs.core.Keyword(null, "useds", "useds", 621350967));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15835 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15834);
    if (cljs.core.truth_(result__12845__auto___15835)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15834), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15834);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15753) {
    var t__12882__auto___15836 = e15753;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15836, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15837 = function() {
      var x__7044__auto__ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_slots.call(null, bb, new cljs.core.Keyword(null, "callers", "callers", -1991542784));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15838 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15837);
    if (cljs.core.truth_(result__12845__auto___15838)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
      "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15837), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
      "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15837);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15754) {
    var t__12882__auto___15839 = e15754;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
    "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15839, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15840 = function() {
      var x__7044__auto__ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_slots.call(null, cc, new cljs.core.Keyword(null, "useds", "useds", 621350967));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15841 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15840);
    if (cljs.core.truth_(result__12845__auto___15841)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15840), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15840);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15755) {
    var t__12882__auto___15842 = e15755;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15842, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15843 = function() {
      var x__7044__auto__ = cljs.core.PersistentHashSet.EMPTY;
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_slots.call(null, cc, new cljs.core.Keyword(null, "callers", "callers", -1991542784));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15844 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15843);
    if (cljs.core.truth_(result__12845__auto___15844)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, 
      null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15843), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, 
      null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15843);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15756) {
    var t__12882__auto___15845 = e15756;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, 
    null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15845, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15846 = function() {
      var x__7044__auto__ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_slots.call(null, dd, new cljs.core.Keyword(null, "useds", "useds", 621350967));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15847 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15846);
    if (cljs.core.truth_(result__12845__auto___15847)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15846), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15846);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15757) {
    var t__12882__auto___15848 = e15757;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15848, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15849 = function() {
      var x__7044__auto__ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_slots.call(null, dd, new cljs.core.Keyword(null, "callers", "callers", -1991542784));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15850 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15849);
    if (cljs.core.truth_(result__12845__auto___15850)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15849), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15849);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15758) {
    var t__12882__auto___15851 = e15758;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15851, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15852 = function() {
      var x__7044__auto__ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "a70", "a70", 798099193), null], null), null);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_slots.call(null, ee, new cljs.core.Keyword(null, "useds", "useds", 621350967));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15853 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15852);
    if (cljs.core.truth_(result__12845__auto___15853)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
      "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "a70", "a70", 798099193), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15852), new cljs.core.Keyword(null, "message", "message", -406056002), 
      null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
      "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "a70", "a70", 798099193), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15852);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15759) {
    var t__12882__auto___15854 = e15759;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
    "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "a70", "a70", 798099193), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15854, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15855 = function() {
      var x__7044__auto__ = cljs.core.PersistentHashSet.EMPTY;
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_slots.call(null, ee, new cljs.core.Keyword(null, "callers", "callers", -1991542784));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15856 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15855);
    if (cljs.core.truth_(result__12845__auto___15856)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, 
      null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15855), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, 
      null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15855);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15760) {
    var t__12882__auto___15857 = e15760;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, 
    null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15857, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var _STAR_trx_QMARK__STAR_15761 = tiltontec.util.base._STAR_trx_QMARK__STAR_;
  tiltontec.util.base._STAR_trx_QMARK__STAR_ = true;
  try {
    rset.call(null);
    var seq__15762_15858 = cljs.core.seq.call(null, cljs.core.seq.call(null, cljs.core.deref.call(null, obs)));
    var chunk__15763_15859 = null;
    var count__15764_15860 = 0;
    var i__15765_15861 = 0;
    while (true) {
      if (i__15765_15861 < count__15764_15860) {
        var vec__15766_15862 = cljs.core._nth.call(null, chunk__15763_15859, i__15765_15861);
        var k_15863 = cljs.core.nth.call(null, vec__15766_15862, 0, null);
        var v_15864 = cljs.core.nth.call(null, vec__15766_15862, 1, null);
        tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obschk", "obschk", -637525555), k_15863, v_15864);
        try {
          var value__12847__auto___15865 = k_15863 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 0, v_15864);
          if (value__12847__auto___15865) {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto___15865, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          } else {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto___15865, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          }
        } catch (e15769) {
          var t__12882__auto___15866 = e15769;
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15866, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        var G__15867 = seq__15762_15858;
        var G__15868 = chunk__15763_15859;
        var G__15869 = count__15764_15860;
        var G__15870 = i__15765_15861 + 1;
        seq__15762_15858 = G__15867;
        chunk__15763_15859 = G__15868;
        count__15764_15860 = G__15869;
        i__15765_15861 = G__15870;
        continue;
      } else {
        var temp__4425__auto___15871 = cljs.core.seq.call(null, seq__15762_15858);
        if (temp__4425__auto___15871) {
          var seq__15762_15872__$1 = temp__4425__auto___15871;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__15762_15872__$1)) {
            var c__7021__auto___15873 = cljs.core.chunk_first.call(null, seq__15762_15872__$1);
            var G__15874 = cljs.core.chunk_rest.call(null, seq__15762_15872__$1);
            var G__15875 = c__7021__auto___15873;
            var G__15876 = cljs.core.count.call(null, c__7021__auto___15873);
            var G__15877 = 0;
            seq__15762_15858 = G__15874;
            chunk__15763_15859 = G__15875;
            count__15764_15860 = G__15876;
            i__15765_15861 = G__15877;
            continue;
          } else {
            var vec__15770_15878 = cljs.core.first.call(null, seq__15762_15872__$1);
            var k_15879 = cljs.core.nth.call(null, vec__15770_15878, 0, null);
            var v_15880 = cljs.core.nth.call(null, vec__15770_15878, 1, null);
            tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obschk", "obschk", -637525555), k_15879, v_15880);
            try {
              var value__12847__auto___15881 = k_15879 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 0, v_15880);
              if (value__12847__auto___15881) {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto___15881, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              } else {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto___15881, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              }
            } catch (e15773) {
              var t__12882__auto___15882 = e15773;
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
              "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15882, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
            var G__15883 = cljs.core.next.call(null, seq__15762_15872__$1);
            var G__15884 = null;
            var G__15885 = 0;
            var G__15886 = 0;
            seq__15762_15858 = G__15883;
            chunk__15763_15859 = G__15884;
            count__15764_15860 = G__15885;
            i__15765_15861 = G__15886;
            continue;
          }
        } else {
        }
      }
      break;
    }
    tiltontec.cell.core.c_reset_BANG_.call(null, aa, cr.call(null, aa) + 1);
    cljs.core._EQ_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "cc", "cc", 301258124), null, new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, run))));
    var seq__15774_15887 = cljs.core.seq.call(null, cljs.core.seq.call(null, cljs.core.deref.call(null, run)));
    var chunk__15775_15888 = null;
    var count__15776_15889 = 0;
    var i__15777_15890 = 0;
    while (true) {
      if (i__15777_15890 < count__15776_15889) {
        var vec__15778_15891 = cljs.core._nth.call(null, chunk__15775_15888, i__15777_15890);
        var k_15892 = cljs.core.nth.call(null, vec__15778_15891, 0, null);
        var v_15893 = cljs.core.nth.call(null, vec__15778_15891, 1, null);
        tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "runchk", "runchk", -886583070), k_15892, v_15893);
        try {
          var value__12847__auto___15894 = k_15892 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 1, v_15893);
          if (value__12847__auto___15894) {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto___15894, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          } else {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto___15894, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          }
        } catch (e15781) {
          var t__12882__auto___15895 = e15781;
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15895, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        var G__15896 = seq__15774_15887;
        var G__15897 = chunk__15775_15888;
        var G__15898 = count__15776_15889;
        var G__15899 = i__15777_15890 + 1;
        seq__15774_15887 = G__15896;
        chunk__15775_15888 = G__15897;
        count__15776_15889 = G__15898;
        i__15777_15890 = G__15899;
        continue;
      } else {
        var temp__4425__auto___15900 = cljs.core.seq.call(null, seq__15774_15887);
        if (temp__4425__auto___15900) {
          var seq__15774_15901__$1 = temp__4425__auto___15900;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__15774_15901__$1)) {
            var c__7021__auto___15902 = cljs.core.chunk_first.call(null, seq__15774_15901__$1);
            var G__15903 = cljs.core.chunk_rest.call(null, seq__15774_15901__$1);
            var G__15904 = c__7021__auto___15902;
            var G__15905 = cljs.core.count.call(null, c__7021__auto___15902);
            var G__15906 = 0;
            seq__15774_15887 = G__15903;
            chunk__15775_15888 = G__15904;
            count__15776_15889 = G__15905;
            i__15777_15890 = G__15906;
            continue;
          } else {
            var vec__15782_15907 = cljs.core.first.call(null, seq__15774_15901__$1);
            var k_15908 = cljs.core.nth.call(null, vec__15782_15907, 0, null);
            var v_15909 = cljs.core.nth.call(null, vec__15782_15907, 1, null);
            tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "runchk", "runchk", -886583070), k_15908, v_15909);
            try {
              var value__12847__auto___15910 = k_15908 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 1, v_15909);
              if (value__12847__auto___15910) {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto___15910, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              } else {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto___15910, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              }
            } catch (e15785) {
              var t__12882__auto___15911 = e15785;
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
              "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15911, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
            var G__15912 = cljs.core.next.call(null, seq__15774_15901__$1);
            var G__15913 = null;
            var G__15914 = 0;
            var G__15915 = 0;
            seq__15774_15887 = G__15912;
            chunk__15775_15888 = G__15913;
            count__15776_15889 = G__15914;
            i__15777_15890 = G__15915;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.core._EQ_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null, new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "cc", "cc", 301258124), null, new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, obs))));
    var seq__15786_15916 = cljs.core.seq.call(null, cljs.core.seq.call(null, cljs.core.deref.call(null, obs)));
    var chunk__15787_15917 = null;
    var count__15788_15918 = 0;
    var i__15789_15919 = 0;
    while (true) {
      if (i__15789_15919 < count__15788_15918) {
        var vec__15790_15920 = cljs.core._nth.call(null, chunk__15787_15917, i__15789_15919);
        var k_15921 = cljs.core.nth.call(null, vec__15790_15920, 0, null);
        var v_15922 = cljs.core.nth.call(null, vec__15790_15920, 1, null);
        tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obschk", "obschk", -637525555), k_15921, v_15922);
        try {
          var value__12847__auto___15923 = k_15921 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 1, v_15922);
          if (value__12847__auto___15923) {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto___15923, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          } else {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto___15923, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          }
        } catch (e15793) {
          var t__12882__auto___15924 = e15793;
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15924, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        var G__15925 = seq__15786_15916;
        var G__15926 = chunk__15787_15917;
        var G__15927 = count__15788_15918;
        var G__15928 = i__15789_15919 + 1;
        seq__15786_15916 = G__15925;
        chunk__15787_15917 = G__15926;
        count__15788_15918 = G__15927;
        i__15789_15919 = G__15928;
        continue;
      } else {
        var temp__4425__auto___15929 = cljs.core.seq.call(null, seq__15786_15916);
        if (temp__4425__auto___15929) {
          var seq__15786_15930__$1 = temp__4425__auto___15929;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__15786_15930__$1)) {
            var c__7021__auto___15931 = cljs.core.chunk_first.call(null, seq__15786_15930__$1);
            var G__15932 = cljs.core.chunk_rest.call(null, seq__15786_15930__$1);
            var G__15933 = c__7021__auto___15931;
            var G__15934 = cljs.core.count.call(null, c__7021__auto___15931);
            var G__15935 = 0;
            seq__15786_15916 = G__15932;
            chunk__15787_15917 = G__15933;
            count__15788_15918 = G__15934;
            i__15789_15919 = G__15935;
            continue;
          } else {
            var vec__15794_15936 = cljs.core.first.call(null, seq__15786_15930__$1);
            var k_15937 = cljs.core.nth.call(null, vec__15794_15936, 0, null);
            var v_15938 = cljs.core.nth.call(null, vec__15794_15936, 1, null);
            tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obschk", "obschk", -637525555), k_15937, v_15938);
            try {
              var value__12847__auto___15939 = k_15937 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 1, v_15938);
              if (value__12847__auto___15939) {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto___15939, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              } else {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto___15939, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              }
            } catch (e15797) {
              var t__12882__auto___15940 = e15797;
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
              "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15940, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
            var G__15941 = cljs.core.next.call(null, seq__15786_15930__$1);
            var G__15942 = null;
            var G__15943 = 0;
            var G__15944 = 0;
            seq__15786_15916 = G__15941;
            chunk__15787_15917 = G__15942;
            count__15788_15918 = G__15943;
            i__15789_15919 = G__15944;
            continue;
          }
        } else {
        }
      }
      break;
    }
    try {
      var values__12844__auto___15945 = function() {
        var x__7044__auto__ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "cc", "cc", 301258124), null], null), null);
        return cljs.core._conj.call(null, function() {
          var x__7044__auto____$1 = tiltontec.cell.base.c_slots.call(null, dd, new cljs.core.Keyword(null, "useds", "useds", 621350967));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
        }(), x__7044__auto__);
      }();
      var result__12845__auto___15946 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15945);
      if (cljs.core.truth_(result__12845__auto___15946)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
        "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15945), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
        "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
          var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15945);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
        }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e15798) {
      var t__12882__auto___15947 = e15798;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
      "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15947, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    verify_p_current.call(null);
    tiltontec.cell.core.c_reset_BANG_.call(null, aa, cr.call(null, aa) + 1);
    try {
      var values__12844__auto___15948 = cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cr.call(null, dd);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), 42);
      var result__12845__auto___15949 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15948);
      if (cljs.core.truth_(result__12845__auto___15949)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15948), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
          var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15948);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
        }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e15799) {
      var t__12882__auto___15950 = e15799;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), t__12882__auto___15950, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    try {
      var values__12844__auto__ = function() {
        var x__7044__auto__ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null);
        return cljs.core._conj.call(null, function() {
          var x__7044__auto____$1 = tiltontec.cell.base.c_slots.call(null, dd, new cljs.core.Keyword(null, "useds", "useds", 621350967));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
        }(), x__7044__auto__);
      }();
      var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
      if (cljs.core.truth_(result__12845__auto__)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
        "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
        "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
          var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
        }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      return result__12845__auto__;
    } catch (e15800) {
      var t__12882__auto__ = e15800;
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } finally {
    tiltontec.util.base._STAR_trx_QMARK__STAR_ = _STAR_trx_QMARK__STAR_15761;
  }
};
tiltontec.cell.evaluate_test.pentagram_of_death.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.pentagram_of_death;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "pentagram-of-death", "tiltontec.cell.evaluate-test/pentagram-of-death", -438613751, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "pentagram-of-death", "pentagram-of-death", 874385051, null), "test/tiltontec/cell/evaluate_test.cljc", 
28, 1, 147, 147, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.pentagram_of_death) ? tiltontec.cell.evaluate_test.pentagram_of_death.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.t_cell_unchanged_test = function tiltontec$cell$evaluate_test$t_cell_unchanged_test() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$t_cell_unchanged_test.cljs$lang$var);
};
tiltontec.cell.evaluate_test.t_cell_unchanged_test.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var ob = cljs.core.atom.call(null, 0);
  var b = tiltontec.cell.core.c_in.call(null, 2, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(ob) {
    return function(slot, me, new$, old, c) {
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obs-bb!!", "obs-bb!!", -1369030842), new$, old);
      return cljs.core.swap_BANG_.call(null, ob, cljs.core.inc);
    };
  }(ob), new cljs.core.Keyword(null, "unchanged-if", "unchanged-if", -923210106), function(ob) {
    return function(n, p) {
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "ucif-sees", "ucif-sees", -1878078109), n, p);
      return typeof n === "number" && typeof p === "number" && (cljs.core.even_QMARK_.call(null, n) && cljs.core.even_QMARK_.call(null, p) || cljs.core.odd_QMARK_.call(null, n) && cljs.core.odd_QMARK_.call(null, p));
    };
  }(ob));
  var cct = cljs.core.atom.call(null, 0);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "cc", "cc", 301258124), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 
  40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(ob, b, cct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, cct, cljs.core.inc);
      return 40 + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(ob, b, cct));
  try {
    var values__12844__auto___15963 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), x__7044__auto__);
    }();
    var result__12845__auto___15964 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15963);
    if (cljs.core.truth_(result__12845__auto___15964)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15963), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15963);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15951) {
    var t__12882__auto___15965 = e15951;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15965, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15966 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, b);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), x__7044__auto__);
    }();
    var result__12845__auto___15967 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15966);
    if (cljs.core.truth_(result__12845__auto___15967)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15966), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15966);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15952) {
    var t__12882__auto___15968 = e15952;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15968, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15969 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, ob);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15970 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15969);
    if (cljs.core.truth_(result__12845__auto___15970)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15969), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15969);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15953) {
    var t__12882__auto___15971 = e15953;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15971, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15972 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, cct);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15973 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15972);
    if (cljs.core.truth_(result__12845__auto___15973)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15972), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15972);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15954) {
    var t__12882__auto___15974 = e15954;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15974, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, 4);
  try {
    var values__12844__auto___15975 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), x__7044__auto__);
    }();
    var result__12845__auto___15976 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15975);
    if (cljs.core.truth_(result__12845__auto___15976)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15975), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15975);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15955) {
    var t__12882__auto___15977 = e15955;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15977, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15978 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, b);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 4), x__7044__auto__);
    }();
    var result__12845__auto___15979 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15978);
    if (cljs.core.truth_(result__12845__auto___15979)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 4), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15978), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 4), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15978);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15956) {
    var t__12882__auto___15980 = e15956;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 4), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15980, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15981 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, ob);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15982 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15981);
    if (cljs.core.truth_(result__12845__auto___15982)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15981), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15981);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15957) {
    var t__12882__auto___15983 = e15957;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15983, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15984 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, cct);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15985 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15984);
    if (cljs.core.truth_(result__12845__auto___15985)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15984), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15984);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15958) {
    var t__12882__auto___15986 = e15958;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15986, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, 5);
  try {
    var values__12844__auto___15987 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 45), x__7044__auto__);
    }();
    var result__12845__auto___15988 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15987);
    if (cljs.core.truth_(result__12845__auto___15988)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 45), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15987), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 45), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15987);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15959) {
    var t__12882__auto___15989 = e15959;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 45), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15989, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15990 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, b);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 5), x__7044__auto__);
    }();
    var result__12845__auto___15991 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15990);
    if (cljs.core.truth_(result__12845__auto___15991)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 5), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15990), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 5), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15990);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15960) {
    var t__12882__auto___15992 = e15960;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 5), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15992, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15993 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, ob);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 2);
    var result__12845__auto___15994 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15993);
    if (cljs.core.truth_(result__12845__auto___15994)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15993), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15993);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15961) {
    var t__12882__auto___15995 = e15961;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15995, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, cct);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 2);
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15962) {
    var t__12882__auto__ = e15962;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.t_cell_unchanged_test.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.t_cell_unchanged_test;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-cell-unchanged-test", "tiltontec.cell.evaluate-test/t-cell-unchanged-test", -1587253216, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-cell-unchanged-test", "t-cell-unchanged-test", -257732942, null), "test/tiltontec/cell/evaluate_test.cljc", 
31, 1, 294, 294, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_cell_unchanged_test) ? tiltontec.cell.evaluate_test.t_cell_unchanged_test.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.opti_away = function tiltontec$cell$evaluate_test$opti_away() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$opti_away.cljs$lang$var);
};
tiltontec.cell.evaluate_test.opti_away.cljs$lang$test = function() {
  var aa = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(42), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return 42;
  });
  try {
    var values__12844__auto___15999 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, aa);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___16000 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15999);
    if (cljs.core.truth_(result__12845__auto___16000)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15999), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15999);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15996) {
    var t__12882__auto___16001 = e15996;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___16001, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.println.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), cljs.core.deref.call(null, aa));
  try {
    var values__12844__auto___16002 = function() {
      var x__7044__auto__ = aa;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___16003 = cljs.core.apply.call(null, tiltontec.cell.base.c_optimized_away_QMARK_, values__12844__auto___16002);
    if (cljs.core.truth_(result__12845__auto___16003)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-optimized-away?", "c-optimized-away?", 285032327, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      tiltontec.cell.base.c_optimized_away_QMARK_, values__12844__auto___16002), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-optimized-away?", "c-optimized-away?", 285032327, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-optimized-away?", "c-optimized-away?", 285032327, null), values__12844__auto___16002);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15997) {
    var t__12882__auto___16004 = e15997;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-optimized-away?", "c-optimized-away?", 285032327, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___16004, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, aa);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15998) {
    var t__12882__auto__ = e15998;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.opti_away.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.opti_away;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "opti-away", "tiltontec.cell.evaluate-test/opti-away", 1608981072, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "opti-away", "opti-away", -1363650270, null), "test/tiltontec/cell/evaluate_test.cljc", 19, 1, 329, 329, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.opti_away) ? tiltontec.cell.evaluate_test.opti_away.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env16005 = cljs.test.empty_env.call(null);
  var summary16006 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16005, summary16006) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env16005);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__12948__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__12948__auto__, env16005, summary16006) {
          return function() {
            if (env__12948__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__12948__auto__, env16005, summary16006)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.test_input;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "test-input", "tiltontec.cell.evaluate-test/test-input", -1028428775, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/evaluate_test.cljc", 
        20, 1, 45, 45, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.test_input) ? tiltontec.cell.evaluate_test.test_input.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.t_formula;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula", "tiltontec.cell.evaluate-test/t-formula", 1151821320, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula", "t-formula", -178019426, null), "test/tiltontec/cell/evaluate_test.cljc", 
        19, 1, 57, 57, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula) ? tiltontec.cell.evaluate_test.t_formula.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.t_formula_2;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula-2", "tiltontec.cell.evaluate-test/t-formula-2", 1653829372, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula-2", "t-formula-2", 844540770, null), "test/tiltontec/cell/evaluate_test.cljc", 
        21, 1, 74, 74, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula_2) ? tiltontec.cell.evaluate_test.t_formula_2.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.t_in_reset;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-in-reset", "tiltontec.cell.evaluate-test/t-in-reset", -1060627208, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-in-reset", "t-in-reset", 285694538, null), "test/tiltontec/cell/evaluate_test.cljc", 
        20, 1, 100, 100, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_in_reset) ? tiltontec.cell.evaluate_test.t_in_reset.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.t_formula_22;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula-22", "tiltontec.cell.evaluate-test/t-formula-22", 626462137, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula-22", "t-formula-22", -194457801, null), "test/tiltontec/cell/evaluate_test.cljc", 
        22, 1, 111, 111, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula_22) ? tiltontec.cell.evaluate_test.t_formula_22.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.pentagram_of_death;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "pentagram-of-death", "tiltontec.cell.evaluate-test/pentagram-of-death", -438613751, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "pentagram-of-death", "pentagram-of-death", 874385051, null), "test/tiltontec/cell/evaluate_test.cljc", 
        28, 1, 147, 147, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.pentagram_of_death) ? tiltontec.cell.evaluate_test.pentagram_of_death.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.t_cell_unchanged_test;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-cell-unchanged-test", "tiltontec.cell.evaluate-test/t-cell-unchanged-test", -1587253216, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-cell-unchanged-test", "t-cell-unchanged-test", -257732942, null), "test/tiltontec/cell/evaluate_test.cljc", 
        31, 1, 294, 294, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_cell_unchanged_test) ? tiltontec.cell.evaluate_test.t_cell_unchanged_test.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.opti_away;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "opti-away", "tiltontec.cell.evaluate-test/opti-away", 1608981072, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "opti-away", "opti-away", -1363650270, null), "test/tiltontec/cell/evaluate_test.cljc", 
        19, 1, 329, 329, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.opti_away) ? tiltontec.cell.evaluate_test.opti_away.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__12948__auto__, env16005, summary16006) {
          return function() {
            if (env__12948__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__12948__auto__, env16005, summary16006)], null));
      }());
    };
  }(env16005, summary16006), function(env16005, summary16006) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env16005, summary16006)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16005, summary16006) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary16006, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary16006), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env16005, summary16006)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16005, summary16006) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env16005);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary16006));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary16006), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env16005, summary16006)], null));
}());
goog.provide("tiltontec.cell.observer_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.observer_test.t_formula = function tiltontec$cell$observer_test$t_formula() {
  return cljs.test.test_var.call(null, tiltontec$cell$observer_test$t_formula.cljs$lang$var);
};
tiltontec.cell.observer_test.t_formula.cljs$lang$test = function() {
  var bingo = cljs.core.atom.call(null, false);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(bingo) {
    return function(slot, me, new$, old, c) {
      return cljs.core.reset_BANG_.call(null, bingo, true);
    };
  }(bingo), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 40, 2)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(bingo) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return 40 + 2;
    };
  }(bingo));
  try {
    var values__12844__auto___14656 = function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), x__7044__auto__);
    }();
    var result__12845__auto___14657 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto___14656);
    if (cljs.core.truth_(result__12845__auto___14657)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto___14656), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__12844__auto___14656);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14645) {
    var t__12882__auto___14658 = e14645;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14658, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14659 = function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), x__7044__auto__);
    }();
    var result__12845__auto___14660 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto___14659);
    if (cljs.core.truth_(result__12845__auto___14660)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto___14659), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__12844__auto___14659);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14646) {
    var t__12882__auto___14661 = e14646;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14661, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14662 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_value_state.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654)), x__7044__auto__);
    }();
    var result__12845__auto___14663 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14662);
    if (cljs.core.truth_(result__12845__auto___14663)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14662), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14662);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14647) {
    var t__12882__auto___14664 = e14647;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14664, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14665 = function() {
      var x__7044__auto__ = cljs.core.PersistentHashSet.EMPTY;
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_callers.call(null, c);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___14666 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14665);
    if (cljs.core.truth_(result__12845__auto___14666)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14665), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14665);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14648) {
    var t__12882__auto___14667 = e14648;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14667, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14668 = function() {
      var x__7044__auto__ = cljs.core.PersistentHashSet.EMPTY;
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_useds.call(null, c);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___14669 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14668);
    if (cljs.core.truth_(result__12845__auto___14669)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14668), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14668);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14649) {
    var t__12882__auto___14670 = e14649;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14670, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14671 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_input_QMARK_.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14672 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___14671);
    if (cljs.core.truth_(result__12845__auto___14672)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__12844__auto___14671), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___14671);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14650) {
    var t__12882__auto___14673 = e14650;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14673, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14674 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_valid_QMARK_.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14675 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___14674);
    if (cljs.core.truth_(result__12845__auto___14675)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__12844__auto___14674), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___14674);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14651) {
    var t__12882__auto___14676 = e14651;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14676, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14677 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_model.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14678 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___14677);
    if (cljs.core.truth_(result__12845__auto___14678)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___14677), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___14677);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14652) {
    var t__12882__auto___14679 = e14652;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14679, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14680 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), x__7044__auto__);
    }();
    var result__12845__auto___14681 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14680);
    if (cljs.core.truth_(result__12845__auto___14681)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14680), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14680);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14653) {
    var t__12882__auto___14682 = e14653;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14682, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14683 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___14684 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14683);
    if (cljs.core.truth_(result__12845__auto___14684)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14683), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14683);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14654) {
    var t__12882__auto___14685 = e14654;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14685, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__12847__auto__ = cljs.core.deref.call(null, bingo);
    if (cljs.core.truth_(value__12847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo", "bingo", -1934750747, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto__, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo", "bingo", -1934750747, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto__, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return value__12847__auto__;
  } catch (e14655) {
    var t__12882__auto__ = e14655;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo", "bingo", -1934750747, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.observer_test.t_formula.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.observer_test.t_formula;
}, new cljs.core.Symbol("tiltontec.cell.observer-test", "t-formula", "tiltontec.cell.observer-test/t-formula", 453750507, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "t-formula", "t-formula", -178019426, null), "test/tiltontec/cell/observer_test.cljc", 19, 1, 43, 43, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.t_formula) ? tiltontec.cell.observer_test.t_formula.cljs$lang$test : null]));
tiltontec.cell.observer_test.bingo2 = cljs.core.atom.call(null, false);
tiltontec.cell.observer_test.test_input = function tiltontec$cell$observer_test$test_input() {
  return cljs.test.test_var.call(null, tiltontec$cell$observer_test$test_input.cljs$lang$var);
};
tiltontec.cell.observer_test.test_input.cljs$lang$test = function() {
  var c = tiltontec.cell.core.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(slot, me, new$, old, c) {
    return cljs.core.reset_BANG_.call(null, tiltontec.cell.observer_test.bingo2, true);
  });
  try {
    var values__12844__auto___14695 = function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), x__7044__auto__);
    }();
    var result__12845__auto___14696 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto___14695);
    if (cljs.core.truth_(result__12845__auto___14696)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto___14695), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__12844__auto___14695);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14686) {
    var t__12882__auto___14697 = e14686;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14697, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14698 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_value_state.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), x__7044__auto__);
    }();
    var result__12845__auto___14699 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14698);
    if (cljs.core.truth_(result__12845__auto___14699)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14698), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14698);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14687) {
    var t__12882__auto___14700 = e14687;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14700, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14701 = function() {
      var x__7044__auto__ = cljs.core.PersistentHashSet.EMPTY;
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_callers.call(null, c);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___14702 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14701);
    if (cljs.core.truth_(result__12845__auto___14702)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14701), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14701);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14688) {
    var t__12882__auto___14703 = e14688;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14703, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14704 = function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14705 = cljs.core.apply.call(null, tiltontec.cell.base.c_input_QMARK_, values__12844__auto___14704);
    if (cljs.core.truth_(result__12845__auto___14705)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_input_QMARK_, 
      values__12844__auto___14704), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__12844__auto___14704);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14689) {
    var t__12882__auto___14706 = e14689;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14706, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14707 = function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14708 = cljs.core.apply.call(null, tiltontec.cell.base.c_valid_QMARK_, values__12844__auto___14707);
    if (cljs.core.truth_(result__12845__auto___14708)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_valid_QMARK_, 
      values__12844__auto___14707), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__12844__auto___14707);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14690) {
    var t__12882__auto___14709 = e14690;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14709, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14710 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_model.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14711 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___14710);
    if (cljs.core.truth_(result__12845__auto___14711)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___14710), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___14710);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14691) {
    var t__12882__auto___14712 = e14691;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14712, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14713 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.base.c_slot.call(null, c);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_slot_name.call(null, c);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }(), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551));
    var result__12845__auto___14714 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14713);
    if (cljs.core.truth_(result__12845__auto___14714)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14713), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14713);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14692) {
    var t__12882__auto___14715 = e14692;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14715, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14716 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), x__7044__auto__);
    }();
    var result__12845__auto___14717 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14716);
    if (cljs.core.truth_(result__12845__auto___14717)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14716), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14716);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14693) {
    var t__12882__auto___14718 = e14693;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14718, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__12847__auto__ = cljs.core.deref.call(null, tiltontec.cell.observer_test.bingo2);
    if (cljs.core.truth_(value__12847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo2", "bingo2", 1462680976, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto__, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo2", "bingo2", 1462680976, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto__, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return value__12847__auto__;
  } catch (e14694) {
    var t__12882__auto__ = e14694;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo2", "bingo2", 1462680976, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.observer_test.test_input.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.observer_test.test_input;
}, new cljs.core.Symbol("tiltontec.cell.observer-test", "test-input", "tiltontec.cell.observer-test/test-input", -1111092170, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/observer_test.cljc", 20, 1, 64, 64, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.test_input) ? tiltontec.cell.observer_test.test_input.cljs$lang$test : null]));
tiltontec.cell.observer_test.t_custom_obs = function tiltontec$cell$observer_test$t_custom_obs() {
  return cljs.test.test_var.call(null, tiltontec$cell$observer_test$t_custom_obs.cljs$lang$var);
};
tiltontec.cell.observer_test.t_custom_obs.cljs$lang$test = function() {
  var bobs = cljs.core.atom.call(null, null);
  var b = tiltontec.cell.core.c_in.call(null, 2, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(bobs) {
    return function(slot, me, new$, old, c) {
      tiltontec.util.base.call_trc.call(null, null, slot, me, new$, old);
      return cljs.core.reset_BANG_.call(null, bobs, new$);
    };
  }(bobs));
  var cobs = cljs.core.atom.call(null, null);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(bobs, b, cobs) {
    return function(slot, me, new$, old, c) {
      new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me, new$, old, c], null);
      tiltontec.util.base.call_trc.call(null, "slot", me, new$, old);
      return cljs.core.reset_BANG_.call(null, cobs, new$);
    };
  }(bobs, b, cobs), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 10, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(bobs, b, cobs) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return 10 * tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(bobs, b, cobs));
  try {
    var values__12844__auto___14722 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, b);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), x__7044__auto__);
    }();
    var result__12845__auto___14723 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14722);
    if (cljs.core.truth_(result__12845__auto___14723)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14722), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14722);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14719) {
    var t__12882__auto___14724 = e14719;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14724, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14725 = function() {
      var x__7044__auto__ = cljs.core.deref.call(null, bobs);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), x__7044__auto__);
    }();
    var result__12845__auto___14726 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14725);
    if (cljs.core.truth_(result__12845__auto___14726)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bobs", "bobs", 2084089253, null)), 
      2), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14725), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bobs", "bobs", 2084089253, null)), 
      2), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14725);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14720) {
    var t__12882__auto___14727 = e14720;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bobs", "bobs", 2084089253, null)), 
    2), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14727, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 20), x__7044__auto__);
    }();
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 20), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 20), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e14721) {
    var t__12882__auto__ = e14721;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 20), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.observer_test.t_custom_obs.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.observer_test.t_custom_obs;
}, new cljs.core.Symbol("tiltontec.cell.observer-test", "t-custom-obs", "tiltontec.cell.observer-test/t-custom-obs", 662258146, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "t-custom-obs", "t-custom-obs", -1659782311, null), "test/tiltontec/cell/observer_test.cljc", 22, 1, 79, 
79, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.t_custom_obs) ? tiltontec.cell.observer_test.t_custom_obs.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env14728 = cljs.test.empty_env.call(null);
  var summary14729 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env14728, summary14729) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env14728);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__12948__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__12948__auto__, env14728, summary14729) {
          return function() {
            if (env__12948__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__12948__auto__, env14728, summary14729)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.observer_test.t_formula;
        }, new cljs.core.Symbol("tiltontec.cell.observer-test", "t-formula", "tiltontec.cell.observer-test/t-formula", 453750507, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "t-formula", "t-formula", -178019426, null), "test/tiltontec/cell/observer_test.cljc", 
        19, 1, 43, 43, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.t_formula) ? tiltontec.cell.observer_test.t_formula.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.observer_test.test_input;
        }, new cljs.core.Symbol("tiltontec.cell.observer-test", "test-input", "tiltontec.cell.observer-test/test-input", -1111092170, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/observer_test.cljc", 
        20, 1, 64, 64, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.test_input) ? tiltontec.cell.observer_test.test_input.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.observer_test.t_custom_obs;
        }, new cljs.core.Symbol("tiltontec.cell.observer-test", "t-custom-obs", "tiltontec.cell.observer-test/t-custom-obs", 662258146, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "t-custom-obs", "t-custom-obs", -1659782311, null), "test/tiltontec/cell/observer_test.cljc", 
        22, 1, 79, 79, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.t_custom_obs) ? tiltontec.cell.observer_test.t_custom_obs.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__12948__auto__, env14728, summary14729) {
          return function() {
            if (env__12948__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__12948__auto__, env14728, summary14729)], null));
      }());
    };
  }(env14728, summary14729), function(env14728, summary14729) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env14728, summary14729)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env14728, summary14729) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary14729, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary14729), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env14728, summary14729)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env14728, summary14729) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env14728);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary14729));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary14729), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env14728, summary14729)], null));
}());
goog.provide("tiltontec.model.base");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.util.core");
goog.require("cljs.test");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.model.macros");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.integrity");
tiltontec.model.base.md_name = function tiltontec$model$base$md_name(ref) {
  return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.model.base.md_state = function tiltontec$model$base$md_state(ref) {
  return (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, ref));
};
tiltontec.model.base.md_cz = function tiltontec$model$base$md_cz(ref) {
  return (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, ref));
};
tiltontec.model.base.md_cell = function tiltontec$model$base$md_cell(me, slot) {
  return slot.call(null, (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, me)));
};
tiltontec.model.base.md_install_cell = function tiltontec$model$base$md_install_cell(me, slot, c) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
    cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "slot", "slot", 240229571), slot, new cljs.core.Keyword(null, "me", "me", -139006693), me);
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me], null), cljs.core.truth_(tiltontec.cell.base.c_input_QMARK_.call(null, c)) ? tiltontec.cell.base.c_value.call(null, c) : null);
    return true;
  } else {
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me], null), c);
    return false;
  }
};
if (typeof tiltontec.model.base.md_awaken_before !== "undefined") {
} else {
  tiltontec.model.base.md_awaken_before = function() {
    var method_table__7135__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__7136__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__7137__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__7138__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__7139__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.model.base", "md-awaken-before"), tiltontec.cell.base.ia_type, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__7139__auto__, method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.model.base.md_awaken_before, new cljs.core.Keyword(null, "default", "default", -1987822328), function(me) {
  return null;
});
tiltontec.model.base.md_awaken = function tiltontec$model$base$md_awaken(me) {
  if (cljs.core.truth_(me)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("md-awaken passed nil"), cljs.core.str("\n"), cljs.core.str("me")].join(""));
  }
  tiltontec.model.base.md_awaken_before.call(null, me);
  tiltontec.cell.base.c_assert.call(null, cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "nascent", "nascent", 443401807), tiltontec.model.base.md_state.call(null, me)));
  tiltontec.util.core.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), me], null), new cljs.core.Keyword(null, "awakening", "awakening", 838364227));
  cljs.core.doall.call(null, function() {
    var iter__6990__auto__ = function tiltontec$model$base$md_awaken_$_iter__13642(s__13643) {
      return new cljs.core.LazySeq(null, function() {
        var s__13643__$1 = s__13643;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__13643__$1);
          if (temp__4425__auto__) {
            var s__13643__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__13643__$2)) {
              var c__6988__auto__ = cljs.core.chunk_first.call(null, s__13643__$2);
              var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
              var b__13645 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
              if (function() {
                var i__13644 = 0;
                while (true) {
                  if (i__13644 < size__6989__auto__) {
                    var slot = cljs.core._nth.call(null, c__6988__auto__, i__13644);
                    cljs.core.chunk_append.call(null, b__13645, function() {
                      var temp__4425__auto____$1 = slot.call(null, tiltontec.model.base.md_cz.call(null, me), new cljs.core.Keyword(null, "not-found", "not-found", -629079980));
                      if (cljs.core.truth_(temp__4425__auto____$1)) {
                        var c = temp__4425__auto____$1;
                        if (cljs.core._EQ_.call(null, c, new cljs.core.Keyword(null, "not-found", "not-found", -629079980))) {
                          if (cljs.core._EQ_.call(null, slot, new cljs.core.Keyword(null, "kids", "kids", 1156670771))) {
                          } else {
                          }
                          return tiltontec.cell.observer.observe.call(null, slot, me, slot.call(null, cljs.core.deref.call(null, me)), tiltontec.cell.base.unbound, null);
                        } else {
                          return tiltontec.cell.evaluate.c_awaken.call(null, c);
                        }
                      } else {
                        return null;
                      }
                    }());
                    var G__13646 = i__13644 + 1;
                    i__13644 = G__13646;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13645), tiltontec$model$base$md_awaken_$_iter__13642.call(null, cljs.core.chunk_rest.call(null, s__13643__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13645), null);
              }
            } else {
              var slot = cljs.core.first.call(null, s__13643__$2);
              return cljs.core.cons.call(null, function() {
                var temp__4425__auto____$1 = slot.call(null, tiltontec.model.base.md_cz.call(null, me), new cljs.core.Keyword(null, "not-found", "not-found", -629079980));
                if (cljs.core.truth_(temp__4425__auto____$1)) {
                  var c = temp__4425__auto____$1;
                  if (cljs.core._EQ_.call(null, c, new cljs.core.Keyword(null, "not-found", "not-found", -629079980))) {
                    if (cljs.core._EQ_.call(null, slot, new cljs.core.Keyword(null, "kids", "kids", 1156670771))) {
                    } else {
                    }
                    return tiltontec.cell.observer.observe.call(null, slot, me, slot.call(null, cljs.core.deref.call(null, me)), tiltontec.cell.base.unbound, null);
                  } else {
                    return tiltontec.cell.evaluate.c_awaken.call(null, c);
                  }
                } else {
                  return null;
                }
              }(), tiltontec$model$base$md_awaken_$_iter__13642.call(null, cljs.core.rest.call(null, s__13643__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6990__auto__.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, me)));
  }());
  tiltontec.util.core.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), me], null), new cljs.core.Keyword(null, "awake", "awake", 1922840899));
  return me;
};
goog.provide("tiltontec.model.core");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.model.base");
goog.require("tiltontec.cell.core");
goog.require("clojure.set");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.integrity");
tiltontec.model.core.md_name = function tiltontec$model$core$md_name(me) {
  return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
};
tiltontec.model.core.md_get = function tiltontec$model$core$md_get(me, slot) {
  var temp__4423__auto__ = tiltontec.model.base.md_cell.call(null, me, slot);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var c = temp__4423__auto__;
    return tiltontec.cell.evaluate.c_get.call(null, c);
  } else {
    return slot.call(null, cljs.core.deref.call(null, me));
  }
};
tiltontec.model.core.md_getx = function tiltontec$model$core$md_getx(tag, me, slot) {
  return tiltontec.model.core.md_get.call(null, me, slot);
};
tiltontec.model.core._STAR_par_STAR_ = null;
tiltontec.model.core.md_reset_BANG_ = function tiltontec$model$core$md_reset_BANG_(me, slot, new_value) {
  var temp__4423__auto__ = tiltontec.model.base.md_cell.call(null, me, slot);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var c = temp__4423__auto__;
    return tiltontec.cell.core.c_reset_BANG_.call(null, c, new_value);
  } else {
    if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, me), slot)) {
      return tiltontec.util.core.err.call(null, cljs.core.str, "change not mediated by cell ", slot, "/", tiltontec.cell.base.ia_type.call(null, me));
    } else {
      return tiltontec.util.core.err.call(null, cljs.core.str, "change to slot not mediated by cell and map lacks slot", slot);
    }
  }
};
tiltontec.model.core.make = function tiltontec$model$core$make(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13666 = arguments.length;
  var i__7286__auto___13667 = 0;
  while (true) {
    if (i__7286__auto___13667 < len__7285__auto___13666) {
      args__7292__auto__.push(arguments[i__7286__auto___13667]);
      var G__13668 = i__7286__auto___13667 + 1;
      i__7286__auto___13667 = G__13668;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 0 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(0), 0, null) : null;
  return tiltontec.model.core.make.cljs$core$IFn$_invoke$arity$variadic(argseq__7293__auto__);
};
tiltontec.model.core.make.cljs$core$IFn$_invoke$arity$variadic = function(iargs) {
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, iargs))) {
    return cljs.core.apply.call(null, tiltontec.model.core.make, new cljs.core.Keyword(null, "type", "type", 1174270348), iargs);
  } else {
    var me = cljs.core.atom.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "par", "par", -61778778), tiltontec.model.core._STAR_par_STAR_], null), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__13650) {
      var vec__13651 = p__13650;
      var k = cljs.core.nth.call(null, vec__13651, 0, null);
      var v = cljs.core.nth.call(null, vec__13651, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, v)) ? tiltontec.cell.base.unbound : v], null);
    }, cljs.core.filter.call(null, function(p__13654) {
      var vec__13655 = p__13654;
      var slot = cljs.core.nth.call(null, vec__13655, 0, null);
      var v = cljs.core.nth.call(null, vec__13655, 1, null);
      return !cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), slot);
    }, cljs.core.partition.call(null, 2, iargs))))), new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "nascent", "nascent", 443401807)], null), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, cljs.core.vec, cljs.core.filter.call(null, function(p__13658) {
      var vec__13659 = p__13658;
      var slot = cljs.core.nth.call(null, vec__13659, 0, null);
      var v = cljs.core.nth.call(null, vec__13659, 1, null);
      return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), slot);
    }, cljs.core.partition.call(null, 2, iargs))))));
    if (cljs.core.truth_(cljs.core.meta.call(null, me))) {
    } else {
      throw new Error("Assert failed: (meta me)");
    }
    tiltontec.util.core.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cz", "cz", 1670864932), me], null), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, cljs.core.vec, cljs.core.filter.call(null, function(me) {
      return function(p__13662) {
        var vec__13663 = p__13662;
        var slot = cljs.core.nth.call(null, vec__13663, 0, null);
        var v = cljs.core.nth.call(null, vec__13663, 1, null);
        return tiltontec.model.base.md_install_cell.call(null, me, slot, v);
      };
    }(me), cljs.core.partition.call(null, 2, iargs)))));
    tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "awaken", "awaken", -1899628152), me, function(me) {
      return function(opcode, defer_info) {
        return tiltontec.model.base.md_awaken.call(null, me);
      };
    }(me));
    return me;
  }
};
tiltontec.model.core.make.cljs$lang$maxFixedArity = 0;
tiltontec.model.core.make.cljs$lang$applyTo = function(seq13649) {
  return tiltontec.model.core.make.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq13649));
};
tiltontec.model.core.mm_obj = Object;
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kids", "kids", 1156670771), new cljs.core.Keyword("tiltontec.model.core", "family", "tiltontec.model.core/family", -623513184)], null), function(_, ___$1, newk, oldk, ___$2) {
  if (cljs.core._EQ_.call(null, oldk, tiltontec.cell.base.unbound)) {
    return null;
  } else {
    var lostks = clojure.set.difference.call(null, cljs.core.set.call(null, oldk), cljs.core.set.call(null, newk));
    if (cljs.core.empty_QMARK_.call(null, lostks)) {
      return null;
    } else {
      var seq__13669 = cljs.core.seq.call(null, lostks);
      var chunk__13670 = null;
      var count__13671 = 0;
      var i__13672 = 0;
      while (true) {
        if (i__13672 < count__13671) {
          var k = cljs.core._nth.call(null, chunk__13670, i__13672);
          tiltontec.cell.evaluate.not_to_be.call(null, k);
          var G__13673 = seq__13669;
          var G__13674 = chunk__13670;
          var G__13675 = count__13671;
          var G__13676 = i__13672 + 1;
          seq__13669 = G__13673;
          chunk__13670 = G__13674;
          count__13671 = G__13675;
          i__13672 = G__13676;
          continue;
        } else {
          var temp__4425__auto__ = cljs.core.seq.call(null, seq__13669);
          if (temp__4425__auto__) {
            var seq__13669__$1 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__13669__$1)) {
              var c__7021__auto__ = cljs.core.chunk_first.call(null, seq__13669__$1);
              var G__13677 = cljs.core.chunk_rest.call(null, seq__13669__$1);
              var G__13678 = c__7021__auto__;
              var G__13679 = cljs.core.count.call(null, c__7021__auto__);
              var G__13680 = 0;
              seq__13669 = G__13677;
              chunk__13670 = G__13678;
              count__13671 = G__13679;
              i__13672 = G__13680;
              continue;
            } else {
              var k = cljs.core.first.call(null, seq__13669__$1);
              tiltontec.cell.evaluate.not_to_be.call(null, k);
              var G__13681 = cljs.core.next.call(null, seq__13669__$1);
              var G__13682 = null;
              var G__13683 = 0;
              var G__13684 = 0;
              seq__13669 = G__13681;
              chunk__13670 = G__13682;
              count__13671 = G__13683;
              i__13672 = G__13684;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    }
  }
});
tiltontec.model.core.qx_par = function tiltontec$model$core$qx_par(me) {
  return (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
};
tiltontec.model.core.fget_EQ_ = function tiltontec$model$core$fget_EQ_(seek, poss) {
  if (cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, poss))) {
  } else {
    throw new Error("Assert failed: (any-ref? poss)");
  }
  if (cljs.core.fn_QMARK_.call(null, seek)) {
    return seek.call(null, poss);
  } else {
    if (seek instanceof cljs.core.Keyword) {
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "fget\x3dsees", "fget\x3dsees", -1079929248), seek, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, poss)));
      return cljs.core._EQ_.call(null, seek, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, poss)));
    } else {
      return cljs.core._EQ_.call(null, seek, poss);
    }
  }
};
tiltontec.model.core.fget = function tiltontec$model$core$fget(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13690 = arguments.length;
  var i__7286__auto___13691 = 0;
  while (true) {
    if (i__7286__auto___13691 < len__7285__auto___13690) {
      args__7292__auto__.push(arguments[i__7286__auto___13691]);
      var G__13692 = i__7286__auto___13691 + 1;
      i__7286__auto___13691 = G__13692;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return tiltontec.model.core.fget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
tiltontec.model.core.fget.cljs$core$IFn$_invoke$arity$variadic = function(what, where, options) {
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = where;
    if (cljs.core.truth_(and__6198__auto__)) {
      return what;
    } else {
      return and__6198__auto__;
    }
  }())) {
    var options__$1 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "me?", "me?", -625404259), false, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true, new cljs.core.Keyword(null, "wocd?", "wocd?", -195637516), true], null), cljs.core.apply.call(null, cljs.core.hash_map, options));
    var _STAR_depender_STAR_13689 = tiltontec.cell.base._STAR_depender_STAR_;
    tiltontec.cell.base._STAR_depender_STAR_ = cljs.core.truth_((new cljs.core.Keyword(null, "wocd?", "wocd?", -195637516)).cljs$core$IFn$_invoke$arity$1(options__$1)) ? null : tiltontec.cell.base._STAR_depender_STAR_;
    try {
      var or__6210__auto__ = function() {
        var and__6198__auto__ = (new cljs.core.Keyword(null, "me?", "me?", -625404259)).cljs$core$IFn$_invoke$arity$1(options__$1);
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = tiltontec.model.core.fget_EQ_.call(null, what, where);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            return where;
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }();
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var or__6210__auto____$1 = function() {
          var and__6198__auto__ = (new cljs.core.Keyword(null, "inside?", "inside?", 639243696)).cljs$core$IFn$_invoke$arity$1(options__$1);
          if (cljs.core.truth_(and__6198__auto__)) {
            var temp__4423__auto__ = tiltontec.model.core.md_get.call(null, where, new cljs.core.Keyword(null, "kids", "kids", 1156670771));
            if (cljs.core.truth_(temp__4423__auto__)) {
              var kids = temp__4423__auto__;
              tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "inside-kids!!!", "inside-kids!!!", -988551250), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, where)));
              var temp__4423__auto____$1 = cljs.core.remove.call(null, cljs.core.PersistentHashSet.fromArray([(new cljs.core.Keyword(null, "skip", "skip", 602715391)).cljs$core$IFn$_invoke$arity$1(options__$1)], true), kids);
              if (cljs.core.truth_(temp__4423__auto____$1)) {
                var netkids = temp__4423__auto____$1;
                return cljs.core.some.call(null, function(netkids, temp__4423__auto____$1, kids, temp__4423__auto__, and__6198__auto__, or__6210__auto__, _STAR_depender_STAR_13689, options__$1) {
                  return function(p1__13685_SHARP_) {
                    return tiltontec.model.core.fget.call(null, what, p1__13685_SHARP_, new cljs.core.Keyword(null, "me?", "me?", -625404259), true, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), false);
                  };
                }(netkids, temp__4423__auto____$1, kids, temp__4423__auto__, and__6198__auto__, or__6210__auto__, _STAR_depender_STAR_13689, options__$1), netkids);
              } else {
                return tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "no-net-kids", "no-net-kids", 1963649640));
              }
            } else {
              return tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "inside-no-kids", "inside-no-kids", -1437068961), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, where)));
            }
          } else {
            return and__6198__auto__;
          }
        }();
        if (cljs.core.truth_(or__6210__auto____$1)) {
          return or__6210__auto____$1;
        } else {
          var or__6210__auto____$2 = function() {
            var and__6198__auto__ = (new cljs.core.Keyword(null, "up?", "up?", 77854972)).cljs$core$IFn$_invoke$arity$1(options__$1);
            if (cljs.core.truth_(and__6198__auto__)) {
              var temp__4425__auto__ = (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, where));
              if (cljs.core.truth_(temp__4425__auto__)) {
                var par = temp__4425__auto__;
                return tiltontec.model.core.fget.call(null, what, par, new cljs.core.Keyword(null, "up?", "up?", 77854972), true, new cljs.core.Keyword(null, "me?", "me?", -625404259), true, new cljs.core.Keyword(null, "skip", "skip", 602715391), where, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true);
              } else {
                return null;
              }
            } else {
              return and__6198__auto__;
            }
          }();
          if (cljs.core.truth_(or__6210__auto____$2)) {
            return or__6210__auto____$2;
          } else {
            if (cljs.core.truth_((new cljs.core.Keyword(null, "must?", "must?", 1639898554)).cljs$core$IFn$_invoke$arity$1(options__$1))) {
              return tiltontec.util.core.err.call(null, new cljs.core.Keyword(null, "fget-must-failed", "fget-must-failed", 237242954), what, where, options__$1);
            } else {
              return null;
            }
          }
        }
      }
    } finally {
      tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_13689;
    }
  } else {
    return null;
  }
};
tiltontec.model.core.fget.cljs$lang$maxFixedArity = 2;
tiltontec.model.core.fget.cljs$lang$applyTo = function(seq13686) {
  var G__13687 = cljs.core.first.call(null, seq13686);
  var seq13686__$1 = cljs.core.next.call(null, seq13686);
  var G__13688 = cljs.core.first.call(null, seq13686__$1);
  var seq13686__$2 = cljs.core.next.call(null, seq13686__$1);
  return tiltontec.model.core.fget.cljs$core$IFn$_invoke$arity$variadic(G__13687, G__13688, seq13686__$2);
};
tiltontec.model.core.fm_BANG_ = function tiltontec$model$core$fm_BANG_(what, where) {
  return tiltontec.model.core.fget.call(null, what, where, new cljs.core.Keyword(null, "me?", "me?", -625404259), false, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true, new cljs.core.Keyword(null, "must?", "must?", 1639898554), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true);
};
tiltontec.model.core.mdv_BANG_ = function tiltontec$model$core$mdv_BANG_(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13702 = arguments.length;
  var i__7286__auto___13703 = 0;
  while (true) {
    if (i__7286__auto___13703 < len__7285__auto___13702) {
      args__7292__auto__.push(arguments[i__7286__auto___13703]);
      var G__13704 = i__7286__auto___13703 + 1;
      i__7286__auto___13703 = G__13704;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 4 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(4), 0, null) : null;
  return tiltontec.model.core.mdv_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7293__auto__);
};
tiltontec.model.core.mdv_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, what, slot, p__13698) {
  var vec__13699 = p__13698;
  var me = cljs.core.nth.call(null, vec__13699, 0, null);
  var me__$1 = function() {
    var or__6210__auto__ = me;
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return new cljs.core.Symbol(null, "me", "me", 1501524834, null);
    }
  }();
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "md-get", "tiltontec.model.core/md-get", -1259532148, null)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "fm!", "tiltontec.model.core/fm!", -726483993, null)), function() {
      var x__7044__auto__ = what;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), function() {
      var x__7044__auto__ = me__$1;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), function() {
    var x__7044__auto__ = slot;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.model.core.mdv_BANG_.cljs$lang$maxFixedArity = 4;
tiltontec.model.core.mdv_BANG_.cljs$lang$applyTo = function(seq13693) {
  var G__13694 = cljs.core.first.call(null, seq13693);
  var seq13693__$1 = cljs.core.next.call(null, seq13693);
  var G__13695 = cljs.core.first.call(null, seq13693__$1);
  var seq13693__$2 = cljs.core.next.call(null, seq13693__$1);
  var G__13696 = cljs.core.first.call(null, seq13693__$2);
  var seq13693__$3 = cljs.core.next.call(null, seq13693__$2);
  var G__13697 = cljs.core.first.call(null, seq13693__$3);
  var seq13693__$4 = cljs.core.next.call(null, seq13693__$3);
  return tiltontec.model.core.mdv_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__13694, G__13695, G__13696, G__13697, seq13693__$4);
};
tiltontec.model.core.mdv_BANG_.cljs$lang$macro = true;
tiltontec.model.core.the_kids = function tiltontec$model$core$the_kids(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13708 = arguments.length;
  var i__7286__auto___13709 = 0;
  while (true) {
    if (i__7286__auto___13709 < len__7285__auto___13708) {
      args__7292__auto__.push(arguments[i__7286__auto___13709]);
      var G__13710 = i__7286__auto___13709 + 1;
      i__7286__auto___13709 = G__13710;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return tiltontec.model.core.the_kids.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
tiltontec.model.core.the_kids.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, tree) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "binding", "cljs.core/binding", 2050379843, null)), function() {
    var x__7044__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "*par*", "tiltontec.model.core/*par*", 1276645059, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null))))));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "remove", "cljs.core/remove", 20102034, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "nil?", "cljs.core/nil?", 945071861, null)), function() {
      var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "flatten", "cljs.core/flatten", -237795822, null)), function() {
        var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "list", "cljs.core/list", -1331406371, null)), tree)));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }())));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.model.core.the_kids.cljs$lang$maxFixedArity = 2;
tiltontec.model.core.the_kids.cljs$lang$applyTo = function(seq13705) {
  var G__13706 = cljs.core.first.call(null, seq13705);
  var seq13705__$1 = cljs.core.next.call(null, seq13705);
  var G__13707 = cljs.core.first.call(null, seq13705__$1);
  var seq13705__$2 = cljs.core.next.call(null, seq13705__$1);
  return tiltontec.model.core.the_kids.cljs$core$IFn$_invoke$arity$variadic(G__13706, G__13707, seq13705__$2);
};
tiltontec.model.core.the_kids.cljs$lang$macro = true;
tiltontec.model.core.c_QMARK_kids = function tiltontec$model$core$c_QMARK_kids(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___13714 = arguments.length;
  var i__7286__auto___13715 = 0;
  while (true) {
    if (i__7286__auto___13715 < len__7285__auto___13714) {
      args__7292__auto__.push(arguments[i__7286__auto___13715]);
      var G__13716 = i__7286__auto___13715 + 1;
      i__7286__auto___13715 = G__13716;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 2 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(2), 0, null) : null;
  return tiltontec.model.core.c_QMARK_kids.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7293__auto__);
};
tiltontec.model.core.c_QMARK_kids.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, tree) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "c?", "tiltontec.model.core/c?", 508213181, null)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null)), tree)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.model.core.c_QMARK_kids.cljs$lang$maxFixedArity = 2;
tiltontec.model.core.c_QMARK_kids.cljs$lang$applyTo = function(seq13711) {
  var G__13712 = cljs.core.first.call(null, seq13711);
  var seq13711__$1 = cljs.core.next.call(null, seq13711);
  var G__13713 = cljs.core.first.call(null, seq13711__$1);
  var seq13711__$2 = cljs.core.next.call(null, seq13711__$1);
  return tiltontec.model.core.c_QMARK_kids.cljs$core$IFn$_invoke$arity$variadic(G__13712, G__13713, seq13711__$2);
};
tiltontec.model.core.c_QMARK_kids.cljs$lang$macro = true;
goog.provide("tiltontec.model.kids_test");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.model.core");
goog.require("tiltontec.util.core");
goog.require("cljs.test");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.model.base");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.integrity");
tiltontec.model.kids_test.k_notq2be = function tiltontec$model$kids_test$k_notq2be() {
  return cljs.test.test_var.call(null, tiltontec$model$kids_test$k_notq2be.cljs$lang$var);
};
tiltontec.model.kids_test.k_notq2be.cljs$lang$test = function() {
  var f = tiltontec.model.core.make.call(null, new cljs.core.Keyword("tiltontec.model.core", "family", "tiltontec.model.core/family", -623513184), new cljs.core.Keyword(null, "ee", "ee", 643317400), tiltontec.cell.core.c_in.call(null, 2), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), cljs.core.list(new cljs.core.Symbol(null, 
  "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "odd?", "odd?", -1458588199, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "ee", "ee", 643317400))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, 
  "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "par", "par", 1578752749, null), cljs.core.list(new cljs.core.Keyword(null, "par", "par", -61778778), cljs.core.list(new cljs.core.Symbol("clojure.core", 
  "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "par", "par", 1578752749, null), new cljs.core.Keyword(null, 
  "ee", "ee", 643317400))], null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 14, new cljs.core.Symbol(null, "ee", "ee", -2011118369, null)))))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_14378 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
        var x__7044__auto__ = cljs.core.odd_QMARK_.call(null, tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "ee", "ee", 643317400))) ? tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, 
        "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "par", "par", 1578752749, null), cljs.core.list(new cljs.core.Keyword(null, "par", "par", -61778778), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)))], null), cljs.core.list(new cljs.core.Symbol(null, 
        "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "par", "par", 1578752749, null), new cljs.core.Keyword(null, "ee", "ee", 643317400))], null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 14, new cljs.core.Symbol(null, "ee", "ee", -2011118369, 
        null)))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_14378, me, cache) {
          return function(slot_c_SHARP___$1) {
            var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
            var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
            var par = (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me__$1));
            var ee = tiltontec.model.core.md_get.call(null, par, new cljs.core.Keyword(null, "ee", "ee", 643317400));
            return 14 * ee;
          };
        }(_STAR_par_STAR_14378, me, cache))) : null;
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }()));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_14378;
    }
  }));
  try {
    var values__12844__auto___14386 = function() {
      var x__7044__auto__ = f;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.model.core", "family", "tiltontec.model.core/family", -623513184)), x__7044__auto__);
    }();
    var result__12845__auto___14387 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto___14386);
    if (cljs.core.truth_(result__12845__auto___14387)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword("tiltontec.model.core", "family", "tiltontec.model.core/family", -623513184)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto___14386), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword("tiltontec.model.core", "family", "tiltontec.model.core/family", -623513184)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__12844__auto___14386);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14379) {
    var t__12882__auto___14388 = e14379;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword("tiltontec.model.core", "family", "tiltontec.model.core/family", -623513184)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14388, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14389 = function() {
      var x__7044__auto__ = tiltontec.model.core.md_get.call(null, f, new cljs.core.Keyword(null, "kids", "kids", 1156670771));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14390 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__12844__auto___14389);
    if (cljs.core.truth_(result__12845__auto___14390)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__12844__auto___14389), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__12844__auto___14389);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14380) {
    var t__12882__auto___14391 = e14380;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
    "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14391, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.model.core.md_reset_BANG_.call(null, f, new cljs.core.Keyword(null, "ee", "ee", 643317400), 3);
  try {
    var values__12844__auto___14392 = function() {
      var x__7044__auto__ = cljs.core.empty_QMARK_.call(null, tiltontec.model.core.md_get.call(null, f, new cljs.core.Keyword(null, "kids", "kids", 1156670771)));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14393 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___14392);
    if (cljs.core.truth_(result__12845__auto___14393)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
      "f", "f", 43394975, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__12844__auto___14392), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
      "f", "f", 43394975, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___14392);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14381) {
    var t__12882__auto___14394 = e14381;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
    "f", "f", 43394975, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14394, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14395 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "yep", "yep", 1342783469), f), new cljs.core.Keyword(null, "value", "value", 305978217));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___14396 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14395);
    if (cljs.core.truth_(result__12845__auto___14396)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, 
      "value", "value", 305978217), new cljs.core.Symbol(null, "f", "f", 43394975, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14395), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, 
      "value", "value", 305978217), new cljs.core.Symbol(null, "f", "f", 43394975, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14395);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14382) {
    var t__12882__auto___14397 = e14382;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, 
    "value", "value", 305978217), new cljs.core.Symbol(null, "f", "f", 43394975, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14397, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var dmw = cljs.core.first.call(null, tiltontec.model.core.md_get.call(null, f, new cljs.core.Keyword(null, "kids", "kids", 1156670771)));
  if (cljs.core.truth_(tiltontec.cell.base.md_ref_QMARK_.call(null, dmw))) {
  } else {
    throw new Error("Assert failed: (md-ref? dmw)");
  }
  tiltontec.model.core.md_reset_BANG_.call(null, f, new cljs.core.Keyword(null, "ee", "ee", 643317400), 0);
  try {
    var values__12844__auto___14398 = function() {
      var x__7044__auto__ = tiltontec.model.core.md_get.call(null, f, new cljs.core.Keyword(null, "kids", "kids", 1156670771));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14399 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__12844__auto___14398);
    if (cljs.core.truth_(result__12845__auto___14399)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__12844__auto___14398), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__12844__auto___14398);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14383) {
    var t__12882__auto___14400 = e14383;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
    "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14400, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14401 = function() {
      var x__7044__auto__ = cljs.core.deref.call(null, dmw);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14402 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___14401);
    if (cljs.core.truth_(result__12845__auto___14402)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___14401), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___14401);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14384) {
    var t__12882__auto___14403 = e14384;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14403, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, dmw));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), new cljs.core.Keyword(null, "dead", "dead", -1946604091));
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "dead", "dead", -1946604091), cljs.core.list(new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.list(new cljs.core.Symbol(null, 
      "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "dead", "dead", -1946604091), cljs.core.list(new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.list(new cljs.core.Symbol(null, 
      "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e14385) {
    var t__12882__auto__ = e14385;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "dead", "dead", -1946604091), cljs.core.list(new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.list(new cljs.core.Symbol(null, 
    "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.kids_test.k_notq2be.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.kids_test.k_notq2be;
}, new cljs.core.Symbol("tiltontec.model.kids-test", "k-notq2be", "tiltontec.model.kids-test/k-notq2be", 1863973409, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.kids-test", "tiltontec.model.kids-test", 566869290, null), new cljs.core.Symbol(null, "k-notq2be", "k-notq2be", -2113236140, null), "test/tiltontec/model/kids_test.cljc", 19, 1, 48, 48, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.model.kids_test.k_notq2be) ? tiltontec.model.kids_test.k_notq2be.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env14404 = cljs.test.empty_env.call(null);
  var summary14405 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env14404, summary14405) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env14404);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.model.kids-test", "tiltontec.model.kids-test", 566869290, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__12948__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__12948__auto__, env14404, summary14405) {
          return function() {
            if (env__12948__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__12948__auto__, env14404, summary14405)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.model.kids_test.k_notq2be;
        }, new cljs.core.Symbol("tiltontec.model.kids-test", "k-notq2be", "tiltontec.model.kids-test/k-notq2be", 1863973409, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.kids-test", "tiltontec.model.kids-test", 566869290, null), new cljs.core.Symbol(null, "k-notq2be", "k-notq2be", -2113236140, null), "test/tiltontec/model/kids_test.cljc", 19, 1, 48, 48, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.kids_test.k_notq2be) ? tiltontec.model.kids_test.k_notq2be.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__12948__auto__, env14404, summary14405) {
          return function() {
            if (env__12948__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__12948__auto__, env14404, summary14405)], null));
      }());
    };
  }(env14404, summary14405), function(env14404, summary14405) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.model.kids-test", "tiltontec.model.kids-test", 566869290, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env14404, summary14405)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env14404, summary14405) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary14405, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary14405), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env14404, summary14405)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env14404, summary14405) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env14404);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary14405));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary14405), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env14404, summary14405)], null));
}());
goog.provide("tiltontec.cell.hello_cells_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.cell.evaluate");
tiltontec.cell.hello_cells_test.hw_01 = function tiltontec$cell$hello_cells_test$hw_01() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hw_01.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hw_01.cljs$lang$test = function() {
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.make_cell.call(null, new cljs.core.Keyword(null, "value", "value", 305978217), "knocks", new cljs.core.Keyword(null, "input?", "input?", -1792843173), true)], null);
  cljs.core.println.call(null, tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(v)), tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
  try {
    var values__12844__auto___15295 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(v));
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "World"), x__7044__auto__);
    }();
    var result__12845__auto___15296 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15295);
    if (cljs.core.truth_(result__12845__auto___15296)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15295), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15295);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15293) {
    var t__12882__auto___15297 = e15293;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15297, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "knocks"), x__7044__auto__);
    }();
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15294) {
    var t__12882__auto__ = e15294;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.hello_cells_test.hw_01.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hw_01;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-01", "tiltontec.cell.hello-cells-test/hw-01", -1914102464, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-01", "hw-01", -198427897, null), "test/tiltontec/cell/hello_cells_test.cljc", 15, 1, 42, 42, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_01) ? tiltontec.cell.hello_cells_test.hw_01.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.hw_02 = function tiltontec$cell$hello_cells_test$hw_02() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hw_02.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hw_02.cljs$lang$test = function() {
  var obs_action = cljs.core.atom.call(null, null);
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, "knocks", new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action) {
    return function(slot, me, new$, old, c) {
      cljs.core.reset_BANG_.call(null, obs_action, new$);
      return cljs.core.println.call(null, new cljs.core.Keyword(null, "observing", "observing", 1065333653), slot, new$, old);
    };
  }(obs_action))], null);
  try {
    var values__12844__auto___15301 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(v));
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "World"), x__7044__auto__);
    }();
    var result__12845__auto___15302 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15301);
    if (cljs.core.truth_(result__12845__auto___15302)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15301), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15301);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15298) {
    var t__12882__auto___15303 = e15298;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15303, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15304 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "knocks"), x__7044__auto__);
    }();
    var result__12845__auto___15305 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15304);
    if (cljs.core.truth_(result__12845__auto___15305)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15304), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15304);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15299) {
    var t__12882__auto___15306 = e15299;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15306, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, obs_action);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), "knocks");
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knocks", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs-action", "obs-action", 
      223700248, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knocks", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs-action", "obs-action", 
      223700248, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15300) {
    var t__12882__auto__ = e15300;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knocks", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs-action", "obs-action", 
    223700248, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.hello_cells_test.hw_02.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hw_02;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-02", "tiltontec.cell.hello-cells-test/hw-02", -1923842247, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-02", "hw-02", -1769431692, null), "test/tiltontec/cell/hello_cells_test.cljc", 15, 1, 54, 
54, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_02) ? tiltontec.cell.hello_cells_test.hw_02.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.hw_03 = function tiltontec$cell$hello_cells_test$hw_03() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hw_03.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hw_03.cljs$lang$test = function() {
  var action = cljs.core.atom.call(null, null);
  var obs_action = function(action) {
    return function(slot, me, new$, old, c) {
      cljs.core.reset_BANG_.call(null, action, new$);
      return cljs.core.println.call(null, new cljs.core.Keyword(null, "observing", "observing", 1065333653), slot, new$, old);
    };
  }(action);
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "obs", "obs", -664011444), obs_action)], null);
  try {
    var values__12844__auto___15311 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15312 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___15311);
    if (cljs.core.truth_(result__12845__auto___15312)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___15311), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___15311);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15307) {
    var t__12882__auto___15313 = e15307;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15313, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15314 = function() {
      var x__7044__auto__ = cljs.core.deref.call(null, action);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15315 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___15314);
    if (cljs.core.truth_(result__12845__auto___15315)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___15314), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___15314);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15308) {
    var t__12882__auto___15316 = e15308;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15316, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), "knock-knock");
  try {
    var values__12844__auto___15317 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, action);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), "knock-knock");
    var result__12845__auto___15318 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15317);
    if (cljs.core.truth_(result__12845__auto___15318)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knock-knock", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15317), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knock-knock", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15317);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15309) {
    var t__12882__auto___15319 = e15309;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knock-knock", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15319, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "knock-knock"), x__7044__auto__);
    }();
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knock-knock"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knock-knock"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15310) {
    var t__12882__auto__ = e15310;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "knock-knock"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.hello_cells_test.hw_03.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hw_03;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-03", "tiltontec.cell.hello-cells-test/hw-03", -166136141, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-03", "hw-03", -237693708, null), "test/tiltontec/cell/hello_cells_test.cljc", 15, 1, 68, 68, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_03) ? tiltontec.cell.hello_cells_test.hw_03.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.gobs = function tiltontec$cell$hello_cells_test$gobs(slot, me, new$, old, c) {
  return cljs.core.println.call(null, new cljs.core.Keyword(null, "gobs\x3e", "gobs\x3e", 972099754), slot, new$, old);
};
tiltontec.cell.hello_cells_test.hw_04 = function tiltontec$cell$hello_cells_test$hw_04() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hw_04.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hw_04.cljs$lang$test = function() {
  var r_action = tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "r-action", "r-action", -113870725), new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.hello_cells_test.gobs);
  var r_loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "r-loc", "r-loc", 1040711343), new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.hello_cells_test.gobs, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(r_action) {
    return function(c) {
      var G__15320 = tiltontec.cell.evaluate.c_get.call(null, r_action) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, r_action).fqn : null;
      switch(G__15320) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "at-home", "at-home", 1687350383);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(r_action));
  tiltontec.cell.evaluate.c_awaken.call(null, r_loc);
  try {
    var values__12844__auto___15324 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, r_loc));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), new cljs.core.Keyword(null, "missing", "missing", 362507769));
    var result__12845__auto___15325 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15324);
    if (cljs.core.truth_(result__12845__auto___15325)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15324), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15324);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15321) {
    var t__12882__auto___15326 = e15321;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15326, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.println.call(null, new cljs.core.Keyword(null, "---about-to-leave------------------", "---about-to-leave------------------", 511366567));
  tiltontec.cell.core.c_reset_BANG_.call(null, r_action, new cljs.core.Keyword(null, "leave", "leave", 1022579443));
  cljs.core.println.call(null, new cljs.core.Keyword(null, "---left------------------", "---left------------------", -1129059094));
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, r_loc);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), new cljs.core.Keyword(null, "away", "away", 1142420954));
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "away", "away", 1142420954), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "away", "away", 1142420954), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15322) {
    var t__12882__auto__ = e15322;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "away", "away", 1142420954), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, 
    "r-loc", "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.hello_cells_test.hw_04.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hw_04;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-04", "tiltontec.cell.hello-cells-test/hw-04", -1022076846, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-04", "hw-04", -86409835, null), "test/tiltontec/cell/hello_cells_test.cljc", 15, 1, 88, 88, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_04) ? tiltontec.cell.hello_cells_test.hw_04.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.hw_5 = function tiltontec$cell$hello_cells_test$hw_5() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hw_5.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hw_5.cljs$lang$test = function() {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "--go------------------", "--go------------------", 69945111));
  var obs_action = function(slot, me, new$, old, c) {
    return cljs.core.println.call(null, slot, new$, old);
  };
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "obs", "obs", -664011444), obs_action)], null);
  var r_action = tiltontec.cell.core.c_in.call(null, null);
  var r_loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action) {
    return function(slot, me, new$, old, c) {
      if (cljs.core.truth_(new$)) {
        return tiltontec.util.base.call_trc.call(null, ":honey-im", new$);
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-action", "r-action", 1526660802, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), 
  new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__15327 = tiltontec.cell.evaluate.c_get.call(null, r_action) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, r_action).fqn : null;
      switch(G__15327) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(obs_action, v, r_action));
  var r_response = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc) {
    return function(slot, me, new$, old, c) {
      return tiltontec.util.base.call_trc.call(null, ":r-resp", new$);
    };
  }(obs_action, v, r_action, r_loc), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null))), cljs.core.list(new cljs.core.Symbol(null, 
  "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, 
  "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.cell.evaluate.c_get.call(null, r_loc))) {
        var temp__4425__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
        if (cljs.core.truth_(temp__4425__auto__)) {
          var act = temp__4425__auto__;
          var G__15328 = act instanceof cljs.core.Keyword ? act.fqn : null;
          switch(G__15328) {
            case "knock-knock":
              return "hello, world";
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(act)].join(""));;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc));
  try {
    var values__12844__auto___15333 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, r_response);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15334 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___15333);
    if (cljs.core.truth_(result__12845__auto___15334)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___15333), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___15333);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15329) {
    var t__12882__auto___15335 = e15329;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15335, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
  tiltontec.cell.core.c_reset_BANG_.call(null, r_action, new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, r_loc);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15330) {
    var t__12882__auto__ = e15330;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, 
    "r-loc", "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.hello_cells_test.hw_5.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hw_5;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-5", "tiltontec.cell.hello-cells-test/hw-5", -1695099335, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-5", "hw-5", -2093878022, null), "test/tiltontec/cell/hello_cells_test.cljc", 14, 1, 107, 107, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_5) ? tiltontec.cell.hello_cells_test.hw_5.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.hello_world = function tiltontec$cell$hello_cells_test$hello_world() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hello_world.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hello_world.cljs$lang$test = function() {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "--go------------------", "--go------------------", 69945111));
  var obs_action = function(slot, me, new$, old, c) {
    return cljs.core.println.call(null, slot, new$, old);
  };
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "obs", "obs", -664011444), obs_action)], null);
  var r_action = tiltontec.cell.core.c_in.call(null, null);
  var r_loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action) {
    return function(slot, me, new$, old, c) {
      if (cljs.core.truth_(new$)) {
        return tiltontec.util.base.call_trc.call(null, ":honey-im", new$);
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-action", "r-action", 1526660802, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), 
  new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__15336 = tiltontec.cell.evaluate.c_get.call(null, r_action) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, r_action).fqn : null;
      switch(G__15336) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(obs_action, v, r_action));
  var r_response = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc) {
    return function(slot, me, new$, old, c) {
      return tiltontec.util.base.call_trc.call(null, ":r-response", new$);
    };
  }(obs_action, v, r_action, r_loc), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
  "r-loc", -1613724426, null))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))], null), cljs.core.list(new cljs.core.Symbol(null, 
  "case", "case", -1510733573, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.cell.evaluate.c_get.call(null, r_loc))) {
        var temp__4425__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
        if (cljs.core.truth_(temp__4425__auto__)) {
          var act = temp__4425__auto__;
          var G__15337 = act instanceof cljs.core.Keyword ? act.fqn : null;
          switch(G__15337) {
            case "knock-knock":
              return "hello, world";
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(act)].join(""));;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc));
  try {
    var values__12844__auto___15342 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, r_response);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15343 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___15342);
    if (cljs.core.truth_(result__12845__auto___15343)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___15342), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___15342);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15338) {
    var t__12882__auto___15344 = e15338;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15344, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
  tiltontec.cell.core.c_reset_BANG_.call(null, r_action, new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__12844__auto___15345 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, r_loc);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__12845__auto___15346 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15345);
    if (cljs.core.truth_(result__12845__auto___15346)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15345), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15345);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15339) {
    var t__12882__auto___15347 = e15339;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
    "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15347, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  return tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
};
tiltontec.cell.hello_cells_test.hello_world.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hello_world;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hello-world", "tiltontec.cell.hello-cells-test/hello-world", -896604635, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hello-world", "hello-world", 852100064, null), "test/tiltontec/cell/hello_cells_test.cljc", 
21, 1, 130, 130, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hello_world) ? tiltontec.cell.hello_cells_test.hello_world.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.hello_world_2 = function tiltontec$cell$hello_cells_test$hello_world_2() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hello_world_2.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hello_world_2.cljs$lang$test = function() {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "--go------------------", "--go------------------", 69945111));
  var obs_action = function(slot, me, new$, old, c) {
    if (cljs.core.truth_(new$)) {
      return tiltontec.util.base.call_trc.call(null, "visitor-did", new$);
    } else {
      return null;
    }
  };
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "obs", "obs", -664011444), obs_action)], null);
  var r_action = tiltontec.cell.core.c_in.call(null, null);
  var r_loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action) {
    return function(slot, me, new$, old, c) {
      if (cljs.core.truth_(new$)) {
        return tiltontec.util.base.call_trc.call(null, ":honey-im", new$);
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-action", "r-action", 1526660802, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), 
  new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__15348 = tiltontec.cell.evaluate.c_get.call(null, r_action) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, r_action).fqn : null;
      switch(G__15348) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(obs_action, v, r_action));
  var r_response = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc) {
    return function(slot, me, new$, old, c) {
      if (cljs.core.truth_(new$)) {
        return tiltontec.util.base.call_trc.call(null, ":r-response", new$);
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
  "r-loc", -1613724426, null))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))], null), cljs.core.list(new cljs.core.Symbol(null, 
  "case", "case", -1510733573, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.cell.evaluate.c_get.call(null, r_loc))) {
        var temp__4425__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
        if (cljs.core.truth_(temp__4425__auto__)) {
          var act = temp__4425__auto__;
          var G__15349 = act instanceof cljs.core.Keyword ? act.fqn : null;
          switch(G__15349) {
            case "knock-knock":
              return "hello, world";
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(act)].join(""));;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc));
  var alarm = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc, r_response) {
    return function(slot, me, new$, old, c) {
      return tiltontec.util.base.call_trc.call(null, ":telling-alarm-api", new$);
    };
  }(obs_action, v, r_action, r_loc, r_response), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null))), new cljs.core.Keyword(null, 
  "off", "off", 606440789), new cljs.core.Keyword(null, "on", "on", 173873944))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc, r_response) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.cell.evaluate.c_get.call(null, r_loc))) {
        return new cljs.core.Keyword(null, "off", "off", 606440789);
      } else {
        return new cljs.core.Keyword(null, "on", "on", 173873944);
      }
    };
  }(obs_action, v, r_action, r_loc, r_response));
  var alarm_do = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc, r_response, alarm) {
    return function(slot, me, new$, old, c) {
      var G__15350 = new$ instanceof cljs.core.Keyword ? new$.fqn : null;
      switch(G__15350) {
        case "call-police":
          return tiltontec.util.base.call_trc.call(null, ":auto-dialing-911");
          break;
        default:
          return null;
      }
    };
  }(obs_action, v, r_action, r_loc, r_response, alarm), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "on", "on", 173873944), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null))), cljs.core.list(new cljs.core.Symbol(null, 
  "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "action", "action", 829293503, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, 
  "action", "action", 829293503, null), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646), new cljs.core.Keyword(null, "call-police", "call-police", -2114689981), null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc, r_response, alarm) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "on", "on", 173873944), tiltontec.cell.evaluate.c_get.call(null, alarm))) {
        var temp__4425__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
        if (cljs.core.truth_(temp__4425__auto__)) {
          var action = temp__4425__auto__;
          var G__15351 = action instanceof cljs.core.Keyword ? action.fqn : null;
          switch(G__15351) {
            case "smashing-window":
              return new cljs.core.Keyword(null, "call-police", "call-police", -2114689981);
              break;
            default:
              return null;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc, r_response, alarm));
  tiltontec.cell.evaluate.c_awaken.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [alarm_do, r_response, r_loc, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)], null));
  try {
    var values__12844__auto___15358 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, r_loc));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), new cljs.core.Keyword(null, "missing", "missing", 362507769));
    var result__12845__auto___15359 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15358);
    if (cljs.core.truth_(result__12845__auto___15359)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15358), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15358);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15352) {
    var t__12882__auto___15360 = e15352;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15360, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
  tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646));
  tiltontec.cell.core.c_reset_BANG_.call(null, r_action, new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__12844__auto___15361 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, r_loc);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__12845__auto___15362 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15361);
    if (cljs.core.truth_(result__12845__auto___15362)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15361), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15361);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15353) {
    var t__12882__auto___15363 = e15353;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
    "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15363, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  return tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
};
tiltontec.cell.hello_cells_test.hello_world_2.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hello_world_2;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hello-world-2", "tiltontec.cell.hello-cells-test/hello-world-2", 1570168257, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hello-world-2", "hello-world-2", 1439841158, null), "test/tiltontec/cell/hello_cells_test.cljc", 
23, 1, 157, 157, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hello_world_2) ? tiltontec.cell.hello_cells_test.hello_world_2.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env15364 = cljs.test.empty_env.call(null);
  var summary15365 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env15364, summary15365) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env15364);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__12948__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__12948__auto__, env15364, summary15365) {
          return function() {
            if (env__12948__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__12948__auto__, env15364, summary15365)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hw_01;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-01", "tiltontec.cell.hello-cells-test/hw-01", -1914102464, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-01", "hw-01", -198427897, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        15, 1, 42, 42, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_01) ? tiltontec.cell.hello_cells_test.hw_01.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hw_02;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-02", "tiltontec.cell.hello-cells-test/hw-02", -1923842247, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-02", "hw-02", -1769431692, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        15, 1, 54, 54, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_02) ? tiltontec.cell.hello_cells_test.hw_02.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hw_03;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-03", "tiltontec.cell.hello-cells-test/hw-03", -166136141, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-03", "hw-03", -237693708, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        15, 1, 68, 68, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_03) ? tiltontec.cell.hello_cells_test.hw_03.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hw_04;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-04", "tiltontec.cell.hello-cells-test/hw-04", -1022076846, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-04", "hw-04", -86409835, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        15, 1, 88, 88, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_04) ? tiltontec.cell.hello_cells_test.hw_04.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hw_5;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-5", "tiltontec.cell.hello-cells-test/hw-5", -1695099335, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-5", "hw-5", -2093878022, null), "test/tiltontec/cell/hello_cells_test.cljc", 14, 1, 
        107, 107, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_5) ? tiltontec.cell.hello_cells_test.hw_5.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hello_world;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hello-world", "tiltontec.cell.hello-cells-test/hello-world", -896604635, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hello-world", "hello-world", 852100064, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        21, 1, 130, 130, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hello_world) ? tiltontec.cell.hello_cells_test.hello_world.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hello_world_2;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hello-world-2", "tiltontec.cell.hello-cells-test/hello-world-2", 1570168257, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hello-world-2", "hello-world-2", 1439841158, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        23, 1, 157, 157, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hello_world_2) ? tiltontec.cell.hello_cells_test.hello_world_2.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__12948__auto__, env15364, summary15365) {
          return function() {
            if (env__12948__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__12948__auto__, env15364, summary15365)], null));
      }());
    };
  }(env15364, summary15365), function(env15364, summary15365) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env15364, summary15365)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env15364, summary15365) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary15365, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary15365), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env15364, summary15365)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env15364, summary15365) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env15364);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary15365));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary15365), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env15364, summary15365)], null));
}());
goog.provide("tiltontec.qxia.types");
goog.require("cljs.core");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
tiltontec.qxia.types.qx_type_tree = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "qx.Object", "tiltontec.qxia.types/qx.Object", -1295429520), new cljs.core.Keyword("tiltontec.qxia.types", "m.Form", "tiltontec.qxia.types/m.Form", -409217225), new cljs.core.Keyword("tiltontec.qxia.types", "m.Single", "tiltontec.qxia.types/m.Single", -602074724), new cljs.core.Keyword("tiltontec.qxia.types", "m.DialogManager", "tiltontec.qxia.types/m.DialogManager", 
1877638749), new cljs.core.Keyword("tiltontec.qxia.types", "m.RadioGroup", "tiltontec.qxia.types/m.RadioGroup", 422739743), new cljs.core.Keyword("tiltontec.qxia.types", "m.RadioGroupStub", "tiltontec.qxia.types/m.RadioGroupStub", -179001450), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "m.MValue", "tiltontec.qxia.types/m.MValue", -994870885), new cljs.core.Keyword("tiltontec.qxia.types", "m.TextField", "tiltontec.qxia.types/m.TextField", 
1587442644), new cljs.core.Keyword("tiltontec.qxia.types", "m.NumberField", "tiltontec.qxia.types/m.NumberField", -497385394), new cljs.core.Keyword("tiltontec.qxia.types", "m.Slider", "tiltontec.qxia.types/m.Slider", 1816729103), new cljs.core.Keyword("tiltontec.qxia.types", ".ToggleButton", "tiltontec.qxia.types/.ToggleButton", 1541946326), new cljs.core.Keyword("tiltontec.qxia.types", "m.CheckBox", "tiltontec.qxia.types/m.CheckBox", 143800735), new cljs.core.Keyword("tiltontec.qxia.types", "m.RadioButton", 
"tiltontec.qxia.types/m.RadioButton", 791062207), new cljs.core.Keyword("tiltontec.qxia.types", "m.SelectBox", "tiltontec.qxia.types/m.SelectBox", -663708114)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "Application", "tiltontec.qxia.types/Application", 1827091049), new cljs.core.Keyword("tiltontec.qxia.types", "Mobile", "tiltontec.qxia.types/Mobile", -143490810)], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "ml.Abstract", "tiltontec.qxia.types/ml.Abstract", -80525119), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "ml.AbstractBox", "tiltontec.qxia.types/ml.AbstractBox", -448932332), new cljs.core.Keyword("tiltontec.qxia.types", "ml.HBox", "tiltontec.qxia.types/ml.HBox", -1665012713), new cljs.core.Keyword("tiltontec.qxia.types", 
"ml.VBox", "tiltontec.qxia.types/ml.VBox", -1184375499)], null)], null), new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "m.Widget", "tiltontec.qxia.types/m.Widget", 2103465403), new cljs.core.Keyword("tiltontec.qxia.types", "m.Atom", "tiltontec.qxia.types/m.Atom", 973901835), new cljs.core.Keyword("tiltontec.qxia.types", "m.Image", "tiltontec.qxia.types/m.Image", 336928926), new cljs.core.Keyword("tiltontec.qxia.types", 
"m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword("tiltontec.qxia.types", "m.Button", "tiltontec.qxia.types/m.Button", -668586230), new cljs.core.Keyword("tiltontec.qxia.types", "m.SelectBox", "tiltontec.qxia.types/m.SelectBox", -663708114), new cljs.core.Keyword("tiltontec.qxia.types", "m.Slider", "tiltontec.qxia.types/m.Slider", 1816729103), new cljs.core.Keyword("tiltontec.qxia.types", "m.TextArea", "tiltontec.qxia.types/m.TextArea", 738759823), new cljs.core.Keyword("tiltontec.qxia.types", 
"m.Title", "tiltontec.qxia.types/m.Title", -1818712280), new cljs.core.Keyword("tiltontec.qxia.types", "m.ToggleButton", "tiltontec.qxia.types/m.ToggleButton", -1972394891), new cljs.core.Keyword("tiltontec.qxia.types", "m.Row", "tiltontec.qxia.types/m.Row", 1369168505), new cljs.core.Keyword("tiltontec.qxia.types", "m.List", "tiltontec.qxia.types/m.List", 1585102784), new cljs.core.Keyword("tiltontec.qxia.types", "m.Collapsible", "tiltontec.qxia.types/m.Collapsible", -561923066), new cljs.core.Keyword("tiltontec.qxia.types", 
"m.Html", "tiltontec.qxia.types/m.Html", 112948600), new cljs.core.Keyword("tiltontec.qxia.types", "m.Canvas", "tiltontec.qxia.types/m.Canvas", -1210794783), new cljs.core.Keyword("tiltontec.qxia.types", "m.Popup", "tiltontec.qxia.types/m.Popup", -929520812), new cljs.core.Keyword("tiltontec.qxia.types", "m.Menu", "tiltontec.qxia.types/m.Menu", 459087806), new cljs.core.Keyword("tiltontec.qxia.types", "m.BusyIndicator", "tiltontec.qxia.types/m.BusyIndicator", -330386630), new cljs.core.PersistentVector(null, 
5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "m.Input", "tiltontec.qxia.types/m.Input", -509810846), new cljs.core.Keyword("tiltontec.qxia.types", "m.NumberField", "tiltontec.qxia.types/m.NumberField", -497385394), new cljs.core.Keyword("tiltontec.qxia.types", "m.CheckBox", "tiltontec.qxia.types/m.CheckBox", 143800735), new cljs.core.Keyword("tiltontec.qxia.types", "m.RadioButton", "tiltontec.qxia.types/m.RadioButton", 791062207), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "m.TextField", "tiltontec.qxia.types/m.TextField", 1587442644), new cljs.core.Keyword("tiltontec.qxia.types", "m.PasswordField", "tiltontec.qxia.types/m.PasswordField", -1705460348)], null)], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword("tiltontec.qxia.types", 
"m.Carousel", "tiltontec.qxia.types/m.Carousel", -1672753516), new cljs.core.Keyword("tiltontec.qxia.types", "m.Drawer", "tiltontec.qxia.types/m.Drawer", -1699090239), new cljs.core.Keyword("tiltontec.qxia.types", "m.Picker", "tiltontec.qxia.types/m.Picker", -1343372926), new cljs.core.Keyword("tiltontec.qxia.types", "m.Group", "tiltontec.qxia.types/m.Group", 1395438636), new cljs.core.Keyword("tiltontec.qxia.types", "m.Row", "tiltontec.qxia.types/m.Row", 1369168505), new cljs.core.Keyword("tiltontec.qxia.types", 
"m.Scroll", "tiltontec.qxia.types/m.Scroll", 1087520787), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("tiltontec.qxia.types", "m.Page", "tiltontec.qxia.types/m.Page", 978557493), new cljs.core.Keyword("tiltontec.qxia.types", "m.NavigationPage", "tiltontec.qxia.types/m.NavigationPage", -2091669995)], null)], null)], null)], null);
tiltontec.qxia.types.derive_tree = function tiltontec$qxia$types$derive_tree(super$, tree) {
  var vec__13160 = tiltontec.util.core.ensure_vec.call(null, tree);
  var seq__13161 = cljs.core.seq.call(null, vec__13160);
  var first__13162 = cljs.core.first.call(null, seq__13161);
  var seq__13161__$1 = cljs.core.next.call(null, seq__13161);
  var class$ = first__13162;
  var subs = seq__13161__$1;
  if (cljs.core.truth_(super$)) {
    cljs.core.derive.call(null, class$, super$);
  } else {
  }
  var seq__13163 = cljs.core.seq.call(null, subs);
  var chunk__13164 = null;
  var count__13165 = 0;
  var i__13166 = 0;
  while (true) {
    if (i__13166 < count__13165) {
      var sub = cljs.core._nth.call(null, chunk__13164, i__13166);
      tiltontec$qxia$types$derive_tree.call(null, class$, sub);
      var G__13167 = seq__13163;
      var G__13168 = chunk__13164;
      var G__13169 = count__13165;
      var G__13170 = i__13166 + 1;
      seq__13163 = G__13167;
      chunk__13164 = G__13168;
      count__13165 = G__13169;
      i__13166 = G__13170;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__13163);
      if (temp__4425__auto__) {
        var seq__13163__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13163__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first.call(null, seq__13163__$1);
          var G__13171 = cljs.core.chunk_rest.call(null, seq__13163__$1);
          var G__13172 = c__7021__auto__;
          var G__13173 = cljs.core.count.call(null, c__7021__auto__);
          var G__13174 = 0;
          seq__13163 = G__13171;
          chunk__13164 = G__13172;
          count__13165 = G__13173;
          i__13166 = G__13174;
          continue;
        } else {
          var sub = cljs.core.first.call(null, seq__13163__$1);
          tiltontec$qxia$types$derive_tree.call(null, class$, sub);
          var G__13175 = cljs.core.next.call(null, seq__13163__$1);
          var G__13176 = null;
          var G__13177 = 0;
          var G__13178 = 0;
          seq__13163 = G__13175;
          chunk__13164 = G__13176;
          count__13165 = G__13177;
          i__13166 = G__13178;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
tiltontec.qxia.types.dem_subs = function tiltontec$qxia$types$dem_subs() {
  var reg = qx.Class.$$registry;
  return cljs.core.println.call(null, new cljs.core.Keyword(null, "reg!!!!!!!!!!", "reg!!!!!!!!!!", 1766753606), reg);
};
tiltontec.qxia.types.derive_tree.call(null, null, tiltontec.qxia.types.qx_type_tree);
goog.provide("tiltontec.qxia.base");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.util.core");
goog.require("tiltontec.qxia.types");
goog.require("tiltontec.model.base");
goog.require("tiltontec.model.core");
goog.require("clojure.set");
goog.require("tiltontec.util.base");
tiltontec.qxia.base.qxme = function tiltontec$qxia$base$qxme(me) {
  return (new cljs.core.Keyword(null, "qx-me", "qx-me", -388627059)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
};
cljs.core.enable_console_print_BANG_.call(null);
tiltontec.qxia.base.app_routing = function tiltontec$qxia$base$app_routing() {
  var app = qx.core.Init.getApplication();
  return app.getRouting();
};
tiltontec.qxia.base.qx_data_array = function tiltontec$qxia$base$qx_data_array(items) {
  return new qx.data.Array(cljs.core.clj__GT_js.call(null, items));
};
tiltontec.qxia.base.qxia_type_to_qx_class = function tiltontec$qxia$base$qxia_type_to_qx_class(type) {
  var G__13720 = type instanceof cljs.core.Keyword ? type.fqn : null;
  switch(G__13720) {
    case "tiltontec.qxia.types/m.Drawer":
      return qx.ui.mobile.container.Drawer;
      break;
    case "tiltontec.qxia.types/m.Canvas":
      return qx.ui.mobile.embed.Canvas;
      break;
    case "tiltontec.qxia.types/m.Picker":
      return qx.ui.mobile.control.Picker;
      break;
    case "tiltontec.qxia.types/m.PasswordField":
      return qx.ui.mobile.form.PasswordField;
      break;
    case "tiltontec.qxia.types/Mobile":
      return qx.application.Mobile;
      break;
    case "tiltontec.qxia.types/m.Title":
      return qx.ui.mobile.form.Title;
      break;
    case "tiltontec.qxia.types/m.Button":
      return qx.ui.mobile.form.Button;
      break;
    case "tiltontec.qxia.types/m.Atom":
      return qx.ui.mobile.basic.Atom;
      break;
    case "tiltontec.qxia.types/m.Group":
      return qx.ui.mobile.form.Group;
      break;
    case "tiltontec.qxia.types/m.NumberField":
      return qx.ui.mobile.form.NumberField;
      break;
    case "tiltontec.qxia.types/m.SelectBox":
      return qx.ui.mobile.form.SelectBox;
      break;
    case "tiltontec.qxia.types/m.TextArea":
      return qx.ui.mobile.form.TextArea;
      break;
    case "tiltontec.qxia.types/m.Slider":
      return qx.ui.mobile.form.Slider;
      break;
    case "tiltontec.qxia.types/m.Scroll":
      return qx.ui.mobile.container.Scroll;
      break;
    case "tiltontec.qxia.types/m.Carousel":
      return qx.ui.mobile.container.Carousel;
      break;
    case "tiltontec.qxia.types/m.Label":
      return qx.ui.mobile.basic.Label;
      break;
    case "tiltontec.qxia.types/m.Popup":
      return qx.ui.mobile.dialog.Popup;
      break;
    case "tiltontec.qxia.types/m.TextField":
      return qx.ui.mobile.form.TextField;
      break;
    case "tiltontec.qxia.types/m.ToggleButton":
      return qx.ui.mobile.form.ToggleButton;
      break;
    case "tiltontec.qxia.types/ml.VBox":
      return qx.ui.mobile.layout.VBox;
      break;
    case "tiltontec.qxia.types/m.NavigationPage":
      return identica.NaviBack;
      break;
    case "tiltontec.qxia.types/ml.HBox":
      return qx.ui.mobile.layout.HBox;
      break;
    case "tiltontec.qxia.types/m.Form":
      return qx.ui.mobile.form.Form;
      break;
    case "tiltontec.qxia.types/m.Html":
      return qx.ui.mobile.embed.Html;
      break;
    case "tiltontec.qxia.types/m.Row":
      return qx.ui.mobile.form.Row;
      break;
    case "tiltontec.qxia.types/m.BusyIndicator":
      return qx.ui.mobile.dialog.BusyIndicator;
      break;
    case "tiltontec.qxia.types/m.Composite":
      return qx.ui.mobile.container.Composite;
      break;
    case "tiltontec.qxia.types/m.Single":
      return qx.ui.mobile.form.renderer.Single;
      break;
    case "tiltontec.qxia.types/m.Image":
      return qx.ui.mobile.basic.Image;
      break;
    case "tiltontec.qxia.types/m.Menu":
      return qx.ui.mobile.dialog.Menu;
      break;
    case "tiltontec.qxia.types/m.CheckBox":
      return qx.ui.mobile.form.CheckBox;
      break;
    case "tiltontec.qxia.types/m.RadioButton":
      return qx.ui.mobile.form.RadioButton;
      break;
    case "tiltontec.qxia.types/m.RadioGroup":
      return qx.ui.mobile.form.RadioGroup;
      break;
    default:
      cljs.core.println.call(null, new cljs.core.Keyword(null, "throwing-type-err", "throwing-type-err", 983540428), type);
      throw new Error([cljs.core.str("qxia-type-to-qx-class does not know about "), cljs.core.str(type)].join(""));;
  }
};
tiltontec.qxia.base.qx_class_new = function tiltontec$qxia$base$qx_class_new(type, iargs) {
  var G__13723 = type instanceof cljs.core.Keyword ? type.fqn : null;
  switch(G__13723) {
    case "tiltontec.qxia.types/Mobile":
      return null;
      break;
    case "tiltontec.qxia.types/m.Single":
      return null;
      break;
    case "tiltontec.qxia.types/m.RadioGroupStub":
      return null;
      break;
    default:
      var temp__4423__auto__ = function() {
        var or__6210__auto__ = cljs.core.contains_QMARK_.call(null, iargs, new cljs.core.Keyword(null, "qx-class", "qx-class", 701821141)) ? function() {
          var qx_class = (new cljs.core.Keyword(null, "qx-class", "qx-class", 701821141)).cljs$core$IFn$_invoke$arity$1(iargs);
          if (cljs.core.truth_(qx_class)) {
          } else {
            cljs.core.println.call(null, [cljs.core.str("ERROR! qx-class-new\x3e key class specified but nil "), cljs.core.str("Do we need a new qx class mention in Application.")].join(""));
            throw Error;
          }
          return qx_class;
        }() : null;
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          return tiltontec.qxia.base.qxia_type_to_qx_class.call(null, type);
        }
      }();
      if (cljs.core.truth_(temp__4423__auto__)) {
        var qx_class = temp__4423__auto__;
        tiltontec.util.core.pln.call(null, new cljs.core.Keyword(null, "making", "making", -316301090), new cljs.core.Keyword(null, "qx!!!!!", "qx!!!!!", 1142008348), type, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(iargs), new cljs.core.Keyword(null, "finalclass", "finalclass", 1652107011), qx_class, (new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952)).cljs$core$IFn$_invoke$arity$1(iargs));
        var or__6210__auto__ = cljs.core.apply.call(null, MyTerop.make, qx_class, (new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952)).cljs$core$IFn$_invoke$arity$1(iargs));
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          throw new Error([cljs.core.str("qx-class-new tried making "), cljs.core.str(qx_class), cljs.core.str(" but got back nada.")].join(""));
        }
      } else {
        throw new Error([cljs.core.str("qx-class-new does not know about "), cljs.core.str(type)].join(""));
      }
    ;
  }
};
cljs.core._add_method.call(null, tiltontec.model.base.md_awaken_before, new cljs.core.Keyword("tiltontec.qxia.types", "m.RadioGroupStub", "tiltontec.qxia.types/m.RadioGroupStub", -179001450), function(me) {
  return null;
});
cljs.core._add_method.call(null, tiltontec.model.base.md_awaken_before, new cljs.core.Keyword("tiltontec.qxia.types", "qx.Object", "tiltontec.qxia.types/qx.Object", -1295429520), function(me) {
  if (cljs.core.truth_(tiltontec.qxia.base.qxia_type_to_qx_class.call(null, tiltontec.cell.base.ia_type.call(null, me)))) {
    return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "0-make-qx", "0-make-qx", 1229540278), me], null), function(opcode, defer_info) {
      if (tiltontec.qxia.base.qxme.call(null, me) == null) {
        cljs.core.swap_BANG_.call(null, me, cljs.core.assoc, new cljs.core.Keyword(null, "qx-me", "qx-me", -388627059), tiltontec.qxia.base.qx_class_new.call(null, tiltontec.cell.base.ia_type.call(null, me), cljs.core.deref.call(null, me)));
      } else {
      }
      if (cljs.core.truth_(tiltontec.cell.base.ia_type_QMARK_.call(null, me, new cljs.core.Keyword("tiltontec.qxia.types", "m.Single", "tiltontec.qxia.types/m.Single", -602074724)))) {
      } else {
        if (cljs.core.truth_(tiltontec.qxia.base.qxme.call(null, me))) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("md-awaken-before failed to establish qxme "), cljs.core.str(tiltontec.cell.base.ia_type.call(null, me))].join("")), cljs.core.str("\n"), cljs.core.str("(qxme me)")].join(""));
        }
      }
      tiltontec.qxia.base.qx_initialize.call(null, me);
      return tiltontec.qxia.base.qx_initialize_all.call(null, me);
    });
  } else {
    return null;
  }
});
tiltontec.qxia.base._PLUS_qxl_client_task_priority_PLUS_ = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "0-make-qx", "0-make-qx", 1229540278), new cljs.core.Keyword(null, "1-layout", "1-layout", 603251836), new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), new cljs.core.Keyword(null, "3-post-assembly", "3-post-assembly", -607469254)], null);
tiltontec.qxia.base.qxia_q_handler = function tiltontec$qxia$base$qxia_q_handler(user_q) {
  var seq__13751_13777 = cljs.core.seq.call(null, cljs.core.reverse.call(null, tiltontec.util.core.fifo_data.call(null, user_q)));
  var chunk__13752_13778 = null;
  var count__13753_13779 = 0;
  var i__13754_13780 = 0;
  while (true) {
    if (i__13754_13780 < count__13753_13779) {
      var vec__13755_13781 = cljs.core._nth.call(null, chunk__13752_13778, i__13754_13780);
      var vec__13758_13782 = cljs.core.nth.call(null, vec__13755_13781, 0, null);
      var qx_defer_code_13783 = cljs.core.nth.call(null, vec__13758_13782, 0, null);
      var me_13784 = cljs.core.nth.call(null, vec__13758_13782, 1, null);
      var task_13785 = cljs.core.nth.call(null, vec__13755_13781, 1, null);
      if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([qx_defer_code_13783], true), tiltontec.qxia.base._PLUS_qxl_client_task_priority_PLUS_))) {
      } else {
        throw Error;
      }
      var G__13786 = seq__13751_13777;
      var G__13787 = chunk__13752_13778;
      var G__13788 = count__13753_13779;
      var G__13789 = i__13754_13780 + 1;
      seq__13751_13777 = G__13786;
      chunk__13752_13778 = G__13787;
      count__13753_13779 = G__13788;
      i__13754_13780 = G__13789;
      continue;
    } else {
      var temp__4425__auto___13790 = cljs.core.seq.call(null, seq__13751_13777);
      if (temp__4425__auto___13790) {
        var seq__13751_13791__$1 = temp__4425__auto___13790;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13751_13791__$1)) {
          var c__7021__auto___13792 = cljs.core.chunk_first.call(null, seq__13751_13791__$1);
          var G__13793 = cljs.core.chunk_rest.call(null, seq__13751_13791__$1);
          var G__13794 = c__7021__auto___13792;
          var G__13795 = cljs.core.count.call(null, c__7021__auto___13792);
          var G__13796 = 0;
          seq__13751_13777 = G__13793;
          chunk__13752_13778 = G__13794;
          count__13753_13779 = G__13795;
          i__13754_13780 = G__13796;
          continue;
        } else {
          var vec__13761_13797 = cljs.core.first.call(null, seq__13751_13791__$1);
          var vec__13764_13798 = cljs.core.nth.call(null, vec__13761_13797, 0, null);
          var qx_defer_code_13799 = cljs.core.nth.call(null, vec__13764_13798, 0, null);
          var me_13800 = cljs.core.nth.call(null, vec__13764_13798, 1, null);
          var task_13801 = cljs.core.nth.call(null, vec__13761_13797, 1, null);
          if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([qx_defer_code_13799], true), tiltontec.qxia.base._PLUS_qxl_client_task_priority_PLUS_))) {
          } else {
            throw Error;
          }
          var G__13802 = cljs.core.next.call(null, seq__13751_13791__$1);
          var G__13803 = null;
          var G__13804 = 0;
          var G__13805 = 0;
          seq__13751_13777 = G__13802;
          chunk__13752_13778 = G__13803;
          count__13753_13779 = G__13804;
          i__13754_13780 = G__13805;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var sorted = function() {
    var data = tiltontec.util.core.fifo_data.call(null, user_q);
    return cljs.core.sort_by.call(null, cljs.core.ffirst, data);
  }();
  tiltontec.util.core.fifo_clear.call(null, user_q);
  var seq__13767 = cljs.core.seq.call(null, sorted);
  var chunk__13768 = null;
  var count__13769 = 0;
  var i__13770 = 0;
  while (true) {
    if (i__13770 < count__13769) {
      var vec__13771 = cljs.core._nth.call(null, chunk__13768, i__13770);
      var defer_info = cljs.core.nth.call(null, vec__13771, 0, null);
      var task = cljs.core.nth.call(null, vec__13771, 1, null);
      tiltontec.util.core.pln.call(null, new cljs.core.Keyword(null, "deffo", "deffo", 704035049), cljs.core.first.call(null, defer_info));
      task.call(null, new cljs.core.Keyword(null, "client-q", "client-q", -1752740110), defer_info);
      var G__13806 = seq__13767;
      var G__13807 = chunk__13768;
      var G__13808 = count__13769;
      var G__13809 = i__13770 + 1;
      seq__13767 = G__13806;
      chunk__13768 = G__13807;
      count__13769 = G__13808;
      i__13770 = G__13809;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__13767);
      if (temp__4425__auto__) {
        var seq__13767__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13767__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first.call(null, seq__13767__$1);
          var G__13810 = cljs.core.chunk_rest.call(null, seq__13767__$1);
          var G__13811 = c__7021__auto__;
          var G__13812 = cljs.core.count.call(null, c__7021__auto__);
          var G__13813 = 0;
          seq__13767 = G__13810;
          chunk__13768 = G__13811;
          count__13769 = G__13812;
          i__13770 = G__13813;
          continue;
        } else {
          var vec__13774 = cljs.core.first.call(null, seq__13767__$1);
          var defer_info = cljs.core.nth.call(null, vec__13774, 0, null);
          var task = cljs.core.nth.call(null, vec__13774, 1, null);
          tiltontec.util.core.pln.call(null, new cljs.core.Keyword(null, "deffo", "deffo", 704035049), cljs.core.first.call(null, defer_info));
          task.call(null, new cljs.core.Keyword(null, "client-q", "client-q", -1752740110), defer_info);
          var G__13814 = cljs.core.next.call(null, seq__13767__$1);
          var G__13815 = null;
          var G__13816 = 0;
          var G__13817 = 0;
          seq__13767 = G__13814;
          chunk__13768 = G__13815;
          count__13769 = G__13816;
          i__13770 = G__13817;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.reset_BANG_.call(null, tiltontec.cell.base._PLUS_client_q_handler_PLUS_, tiltontec.qxia.base.qxia_q_handler);
if (typeof tiltontec.qxia.base.qx_initialize !== "undefined") {
} else {
  tiltontec.qxia.base.qx_initialize = function() {
    var method_table__7135__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__7136__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__7137__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__7138__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__7139__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.qxia.base", "qx-initialize"), tiltontec.cell.base.ia_type, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__7139__auto__, method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.qxia.base.qx_initialize, new cljs.core.Keyword(null, "default", "default", -1987822328), function(me) {
  return null;
});
tiltontec.qxia.base.qx_obj_properties = function tiltontec$qxia$base$qx_obj_properties(me) {
  return cljs.core.map.call(null, cljs.core.keyword, qx.Class.getProperties(function() {
    var or__6210__auto__ = (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return tiltontec.qxia.base.qxia_type_to_qx_class.call(null, tiltontec.cell.base.ia_type.call(null, me));
    }
  }()));
};
if (typeof tiltontec.qxia.base.qx_initialize_all !== "undefined") {
} else {
  tiltontec.qxia.base.qx_initialize_all = function() {
    var method_table__7135__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__7136__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__7137__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__7138__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__7139__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.qxia.base", "qx-initialize-all"), tiltontec.cell.base.ia_type, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__7139__auto__, method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.qxia.base.qx_initialize_all, new cljs.core.Keyword("tiltontec.qxia.types", "m.Single", "tiltontec.qxia.types/m.Single", -602074724), function(me) {
  return null;
});
cljs.core._add_method.call(null, tiltontec.qxia.base.qx_initialize_all, new cljs.core.Keyword(null, "default", "default", -1987822328), function(me) {
  var temp__4425__auto___13832 = function() {
    var iter__6990__auto__ = function tiltontec$qxia$base$iter__13818(s__13819) {
      return new cljs.core.LazySeq(null, function() {
        var s__13819__$1 = s__13819;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__13819__$1);
          if (temp__4425__auto__) {
            var s__13819__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__13819__$2)) {
              var c__6988__auto__ = cljs.core.chunk_first.call(null, s__13819__$2);
              var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
              var b__13821 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
              if (function() {
                var i__13820 = 0;
                while (true) {
                  if (i__13820 < size__6989__auto__) {
                    var k = cljs.core._nth.call(null, c__6988__auto__, i__13820);
                    var val = tiltontec.model.core.md_getx.call(null, new cljs.core.Keyword(null, "init-all", "init-all", 482505234), me, k);
                    if (!(val == null)) {
                      cljs.core.chunk_append.call(null, b__13821, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, val], null));
                      var G__13833 = i__13820 + 1;
                      i__13820 = G__13833;
                      continue;
                    } else {
                      var G__13834 = i__13820 + 1;
                      i__13820 = G__13834;
                      continue;
                    }
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13821), tiltontec$qxia$base$iter__13818.call(null, cljs.core.chunk_rest.call(null, s__13819__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13821), null);
              }
            } else {
              var k = cljs.core.first.call(null, s__13819__$2);
              var val = tiltontec.model.core.md_getx.call(null, new cljs.core.Keyword(null, "init-all", "init-all", 482505234), me, k);
              if (!(val == null)) {
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, val], null), tiltontec$qxia$base$iter__13818.call(null, cljs.core.rest.call(null, s__13819__$2)));
              } else {
                var G__13835 = cljs.core.rest.call(null, s__13819__$2);
                s__13819__$1 = G__13835;
                continue;
              }
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6990__auto__.call(null, tiltontec.qxia.base.qx_obj_properties.call(null, me));
  }();
  if (cljs.core.truth_(temp__4425__auto___13832)) {
    var inits_13836 = temp__4425__auto___13832;
    var qx_13837 = tiltontec.qxia.base.qxme.call(null, me);
    if (cljs.core.truth_(qx_13837)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("qx-initialize-all-def\x3e no qxme "), cljs.core.str(tiltontec.cell.base.ia_type.call(null, me))].join("")), cljs.core.str("\n"), cljs.core.str("qx")].join(""));
    }
    qx_13837.set(cljs.core.clj__GT_js.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, inits_13836)));
  } else {
  }
  if (cljs.core.truth_(tiltontec.qxia.base.qxme.call(null, me))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("no qx initall "), cljs.core.str(tiltontec.cell.base.ia_type.call(null, me))].join("")), cljs.core.str("\n"), cljs.core.str("(qxme me)")].join(""));
  }
  var seq__13822 = cljs.core.seq.call(null, tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "listeners", "listeners", 394544445)));
  var chunk__13823 = null;
  var count__13824 = 0;
  var i__13825 = 0;
  while (true) {
    if (i__13825 < count__13824) {
      var vec__13826 = cljs.core._nth.call(null, chunk__13823, i__13825);
      var name = cljs.core.nth.call(null, vec__13826, 0, null);
      var handler = cljs.core.nth.call(null, vec__13826, 1, null);
      var qxme_13838 = tiltontec.qxia.base.qxme.call(null, me);
      qxme_13838.addListener(name, function(seq__13822, chunk__13823, count__13824, i__13825, qxme_13838, vec__13826, name, handler) {
        return function(event) {
          return handler.call(null, event, me);
        };
      }(seq__13822, chunk__13823, count__13824, i__13825, qxme_13838, vec__13826, name, handler));
      var G__13839 = seq__13822;
      var G__13840 = chunk__13823;
      var G__13841 = count__13824;
      var G__13842 = i__13825 + 1;
      seq__13822 = G__13839;
      chunk__13823 = G__13840;
      count__13824 = G__13841;
      i__13825 = G__13842;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__13822);
      if (temp__4425__auto__) {
        var seq__13822__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13822__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first.call(null, seq__13822__$1);
          var G__13843 = cljs.core.chunk_rest.call(null, seq__13822__$1);
          var G__13844 = c__7021__auto__;
          var G__13845 = cljs.core.count.call(null, c__7021__auto__);
          var G__13846 = 0;
          seq__13822 = G__13843;
          chunk__13823 = G__13844;
          count__13824 = G__13845;
          i__13825 = G__13846;
          continue;
        } else {
          var vec__13829 = cljs.core.first.call(null, seq__13822__$1);
          var name = cljs.core.nth.call(null, vec__13829, 0, null);
          var handler = cljs.core.nth.call(null, vec__13829, 1, null);
          var qxme_13847 = tiltontec.qxia.base.qxme.call(null, me);
          qxme_13847.addListener(name, function(seq__13822, chunk__13823, count__13824, i__13825, qxme_13847, vec__13829, name, handler, seq__13822__$1, temp__4425__auto__) {
            return function(event) {
              return handler.call(null, event, me);
            };
          }(seq__13822, chunk__13823, count__13824, i__13825, qxme_13847, vec__13829, name, handler, seq__13822__$1, temp__4425__auto__));
          var G__13848 = cljs.core.next.call(null, seq__13822__$1);
          var G__13849 = null;
          var G__13850 = 0;
          var G__13851 = 0;
          seq__13822 = G__13848;
          chunk__13823 = G__13849;
          count__13824 = G__13850;
          i__13825 = G__13851;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
});
if (typeof tiltontec.qxia.base.qx_property_observe !== "undefined") {
} else {
  tiltontec.qxia.base.qx_property_observe = function() {
    var method_table__7135__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__7136__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__7137__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__7138__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__7139__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.qxia.base", "qx-property-observe"), function(method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__, hierarchy__7139__auto__) {
      return function(slot, me, new$, old, c) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, tiltontec.cell.base.ia_type.call(null, me)], null);
      };
    }(method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__, hierarchy__7139__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__7139__auto__, method_table__7135__auto__, prefer_table__7136__auto__, method_cache__7137__auto__, cached_hierarchy__7138__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.qxia.base.qx_property_observe, new cljs.core.Keyword(null, "default", "default", -1987822328), function(slot, me, new$, old, c) {
  var temp__4425__auto__ = tiltontec.qxia.base.qxme.call(null, me);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var qxme = temp__4425__auto__;
    if (cljs.core.not_EQ_.call(null, old, tiltontec.cell.base.unbound)) {
      var sd = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, slot), new$], null)], null));
      return qxme.set(cljs.core.clj__GT_js.call(null, sd));
    } else {
      return null;
    }
  } else {
    return null;
  }
});
tiltontec.qxia.base.qx_observe_default = function tiltontec$qxia$base$qx_observe_default(slot, me, new$, old, c) {
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = !cljs.core.isa_QMARK_.call(null, tiltontec.cell.base.ia_type.call(null, me), new cljs.core.Keyword("tiltontec.qxia.types", "m.RadioGroupStub", "tiltontec.qxia.types/m.RadioGroupStub", -179001450));
    if (and__6198__auto__) {
      var and__6198__auto____$1 = cljs.core.isa_QMARK_.call(null, tiltontec.cell.base.ia_type.call(null, me), new cljs.core.Keyword("tiltontec.qxia.types", "qx.Object", "tiltontec.qxia.types/qx.Object", -1295429520));
      if (and__6198__auto____$1) {
        return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([slot], true), tiltontec.qxia.base.qx_obj_properties.call(null, me));
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return tiltontec.qxia.base.qx_property_observe.call(null, slot, me, new$, old, c);
  } else {
    return null;
  }
};
cljs.core.reset_BANG_.call(null, tiltontec.cell.observer._PLUS_observe_default_handler_PLUS_, tiltontec.qxia.base.qx_observe_default);
tiltontec.qxia.base.qx_add_kid = function tiltontec$qxia$base$qx_add_kid(me, kid) {
  if (cljs.core.truth_(tiltontec.qxia.base.qxme.call(null, me))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("qx-add-kid\x3eno qxme me"), cljs.core.str(tiltontec.cell.base.ia_type.call(null, me)), cljs.core.str(me)].join("")), cljs.core.str("\n"), cljs.core.str("(qxme me)")].join(""));
  }
  if (cljs.core.truth_(tiltontec.qxia.base.qxme.call(null, kid))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("qx-add-kid\x3e no qxme kid"), cljs.core.str(tiltontec.cell.base.ia_type.call(null, me)), cljs.core.str((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me))), cljs.core.str(tiltontec.cell.base.ia_type.call(null, kid)), cljs.core.str(kid)].join("")), cljs.core.str("\n"), cljs.core.str("(qxme kid)")].join(""));
  }
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "flex", "flex", -1425124628)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, kid));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var flex = temp__4423__auto__;
    return tiltontec.qxia.base.qxme.call(null, me).add(tiltontec.qxia.base.qxme.call(null, kid), {"flex":flex});
  } else {
    return tiltontec.qxia.base.qxme.call(null, me).add(tiltontec.qxia.base.qxme.call(null, kid));
  }
};
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "css-class", "css-class", -919455334), new cljs.core.Keyword("tiltontec.qxia.types", "qx.Object", "tiltontec.qxia.types/qx.Object", -1295429520)], null), function(_, me, new$, old, ___$1) {
  return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), me], null), function(opcode, defer_info) {
    if (cljs.core._EQ_.call(null, old, tiltontec.cell.base.unbound)) {
    } else {
      var oldv_13852 = tiltontec.util.core.ensure_vec.call(null, old);
      var lost_13853 = cljs.core.truth_(new$) ? clojure.set.difference.call(null, cljs.core.set.call(null, oldv_13852), cljs.core.set.call(null, tiltontec.util.core.ensure_vec.call(null, new$))) : oldv_13852;
      if (cljs.core.empty_QMARK_.call(null, lost_13853)) {
      } else {
        tiltontec.qxia.base.qxme.call(null, me).removeCssClasses(cljs.core.clj__GT_js.call(null, cljs.core.vec.call(null, lost_13853)));
      }
    }
    if (cljs.core.truth_(new$)) {
      var newv = tiltontec.util.core.ensure_vec.call(null, new$);
      var gained = cljs.core._EQ_.call(null, old, tiltontec.cell.base.unbound) ? newv : clojure.set.difference.call(null, cljs.core.set.call(null, newv), cljs.core.set.call(null, tiltontec.util.core.ensure_vec.call(null, old)));
      if (cljs.core.empty_QMARK_.call(null, gained)) {
        return null;
      } else {
        return tiltontec.qxia.base.qxme.call(null, me).addCssClasses(cljs.core.clj__GT_js.call(null, cljs.core.vec.call(null, gained)));
      }
    } else {
      return null;
    }
  });
});
goog.provide("tiltontec.qxia.widget");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.qxia.types");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.model.core");
goog.require("tiltontec.model.macros");
goog.require("clojure.set");
goog.require("tiltontec.qxia.base");
goog.require("tiltontec.cell.integrity");
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kids", "kids", 1156670771), new cljs.core.Keyword("tiltontec.qxia.types", "Mobile", "tiltontec.qxia.types/Mobile", -143490810)], null), function(_, me, new$, old, c) {
  return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), me], null), function(opcode, defer_info) {
    var app = (new cljs.core.Keyword(null, "qx-me", "qx-me", -388627059)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
    var shower = (new cljs.core.Keyword(null, "shower", "shower", -1731894586)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
    var pager = (new cljs.core.Keyword(null, "pager", "pager", 1850229940)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
    var routing = app.getRouting();
    if (cljs.core.not_EQ_.call(null, old, tiltontec.cell.base.unbound)) {
      var seq__13856_13864 = cljs.core.seq.call(null, old);
      var chunk__13857_13865 = null;
      var count__13858_13866 = 0;
      var i__13859_13867 = 0;
      while (true) {
        if (i__13859_13867 < count__13858_13866) {
          var page_13868 = cljs.core._nth.call(null, chunk__13857_13865, i__13859_13867);
          var temp__4425__auto___13869 = (new cljs.core.Keyword(null, "end-point", "end-point", -1147460885)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, page_13868));
          if (cljs.core.truth_(temp__4425__auto___13869)) {
            var ept_13870 = temp__4425__auto___13869;
            routing.remove(ept_13870);
          } else {
          }
          pager.removeDetail(tiltontec.qxia.base.qxme.call(null, page_13868));
          var G__13871 = seq__13856_13864;
          var G__13872 = chunk__13857_13865;
          var G__13873 = count__13858_13866;
          var G__13874 = i__13859_13867 + 1;
          seq__13856_13864 = G__13871;
          chunk__13857_13865 = G__13872;
          count__13858_13866 = G__13873;
          i__13859_13867 = G__13874;
          continue;
        } else {
          var temp__4425__auto___13875 = cljs.core.seq.call(null, seq__13856_13864);
          if (temp__4425__auto___13875) {
            var seq__13856_13876__$1 = temp__4425__auto___13875;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__13856_13876__$1)) {
              var c__7021__auto___13877 = cljs.core.chunk_first.call(null, seq__13856_13876__$1);
              var G__13878 = cljs.core.chunk_rest.call(null, seq__13856_13876__$1);
              var G__13879 = c__7021__auto___13877;
              var G__13880 = cljs.core.count.call(null, c__7021__auto___13877);
              var G__13881 = 0;
              seq__13856_13864 = G__13878;
              chunk__13857_13865 = G__13879;
              count__13858_13866 = G__13880;
              i__13859_13867 = G__13881;
              continue;
            } else {
              var page_13882 = cljs.core.first.call(null, seq__13856_13876__$1);
              var temp__4425__auto___13883__$1 = (new cljs.core.Keyword(null, "end-point", "end-point", -1147460885)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, page_13882));
              if (cljs.core.truth_(temp__4425__auto___13883__$1)) {
                var ept_13884 = temp__4425__auto___13883__$1;
                routing.remove(ept_13884);
              } else {
              }
              pager.removeDetail(tiltontec.qxia.base.qxme.call(null, page_13882));
              var G__13885 = cljs.core.next.call(null, seq__13856_13876__$1);
              var G__13886 = null;
              var G__13887 = 0;
              var G__13888 = 0;
              seq__13856_13864 = G__13885;
              chunk__13857_13865 = G__13886;
              count__13858_13866 = G__13887;
              i__13859_13867 = G__13888;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } else {
    }
    var seq__13860 = cljs.core.seq.call(null, new$);
    var chunk__13861 = null;
    var count__13862 = 0;
    var i__13863 = 0;
    while (true) {
      if (i__13863 < count__13862) {
        var page = cljs.core._nth.call(null, chunk__13861, i__13863);
        var qx_page_13889 = tiltontec.qxia.base.qxme.call(null, page);
        pager.addDetail(qx_page_13889);
        var temp__4425__auto___13890 = (new cljs.core.Keyword(null, "end-point", "end-point", -1147460885)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, page));
        if (cljs.core.truth_(temp__4425__auto___13890)) {
          var ept_13891 = temp__4425__auto___13890;
          routing.onGet(ept_13891, shower, qx_page_13889);
        } else {
        }
        var G__13892 = seq__13860;
        var G__13893 = chunk__13861;
        var G__13894 = count__13862;
        var G__13895 = i__13863 + 1;
        seq__13860 = G__13892;
        chunk__13861 = G__13893;
        count__13862 = G__13894;
        i__13863 = G__13895;
        continue;
      } else {
        var temp__4425__auto__ = cljs.core.seq.call(null, seq__13860);
        if (temp__4425__auto__) {
          var seq__13860__$1 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__13860__$1)) {
            var c__7021__auto__ = cljs.core.chunk_first.call(null, seq__13860__$1);
            var G__13896 = cljs.core.chunk_rest.call(null, seq__13860__$1);
            var G__13897 = c__7021__auto__;
            var G__13898 = cljs.core.count.call(null, c__7021__auto__);
            var G__13899 = 0;
            seq__13860 = G__13896;
            chunk__13861 = G__13897;
            count__13862 = G__13898;
            i__13863 = G__13899;
            continue;
          } else {
            var page = cljs.core.first.call(null, seq__13860__$1);
            var qx_page_13900 = tiltontec.qxia.base.qxme.call(null, page);
            pager.addDetail(qx_page_13900);
            var temp__4425__auto___13901__$1 = (new cljs.core.Keyword(null, "end-point", "end-point", -1147460885)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, page));
            if (cljs.core.truth_(temp__4425__auto___13901__$1)) {
              var ept_13902 = temp__4425__auto___13901__$1;
              routing.onGet(ept_13902, shower, qx_page_13900);
            } else {
            }
            var G__13903 = cljs.core.next.call(null, seq__13860__$1);
            var G__13904 = null;
            var G__13905 = 0;
            var G__13906 = 0;
            seq__13860 = G__13903;
            chunk__13861 = G__13904;
            count__13862 = G__13905;
            i__13863 = G__13906;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  });
});
cljs.core._add_method.call(null, tiltontec.qxia.base.qx_initialize, new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), function(me) {
  var temp__4425__auto__ = (new cljs.core.Keyword(null, "layout", "layout", -2120940921)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
  if (cljs.core.truth_(temp__4425__auto__)) {
    var lyo = temp__4425__auto__;
    return tiltontec.qxia.base.qxme.call(null, me).setLayout(lyo);
  } else {
    return null;
  }
});
tiltontec.qxia.widget.form_build_radio_group_stub = function tiltontec$qxia$widget$form_build_radio_group_stub(form, stub) {
  var qx_form = tiltontec.qxia.base.qxme.call(null, form);
  var temp__4425__auto___13915 = (new cljs.core.Keyword(null, "header", "header", 119441134)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, stub));
  if (cljs.core.truth_(temp__4425__auto___13915)) {
    var h_13916 = temp__4425__auto___13915;
    qx_form.addGroupHeader(h_13916);
  } else {
  }
  var group = new qx.ui.mobile.form.RadioGroup;
  group.setAllowEmptySelection(function() {
    var or__6210__auto__ = (new cljs.core.Keyword(null, "allowEmptySelection", "allowEmptySelection", 485851121)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, stub));
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return false;
    }
  }());
  tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "3-post-assembly", "3-post-assembly", -607469254), stub], null), function(group, qx_form) {
    return function(opcode, defer_info) {
      return group.addListener("changeSelection", function(group, qx_form) {
        return function(e) {
          var rb = cljs.core.first.call(null, cljs.core.js__GT_clj.call(null, e.getData()));
          if (cljs.core.truth_(rb)) {
            return tiltontec.model.core.md_reset_BANG_.call(null, stub, new cljs.core.Keyword(null, "selection", "selection", 975998651), cljs.core.keyword.call(null, rb.getModel()));
          } else {
            return null;
          }
        };
      }(group, qx_form));
    };
  }(group, qx_form));
  var seq__13911_13917 = cljs.core.seq.call(null, tiltontec.model.core.md_get.call(null, stub, new cljs.core.Keyword(null, "kids", "kids", 1156670771)));
  var chunk__13912_13918 = null;
  var count__13913_13919 = 0;
  var i__13914_13920 = 0;
  while (true) {
    if (i__13914_13920 < count__13913_13919) {
      var rb_13921 = cljs.core._nth.call(null, chunk__13912_13918, i__13914_13920);
      group.add(tiltontec.qxia.base.qxme.call(null, rb_13921));
      qx_form.add(tiltontec.qxia.base.qxme.call(null, rb_13921), (new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rb_13921)));
      var G__13922 = seq__13911_13917;
      var G__13923 = chunk__13912_13918;
      var G__13924 = count__13913_13919;
      var G__13925 = i__13914_13920 + 1;
      seq__13911_13917 = G__13922;
      chunk__13912_13918 = G__13923;
      count__13913_13919 = G__13924;
      i__13914_13920 = G__13925;
      continue;
    } else {
      var temp__4425__auto___13926 = cljs.core.seq.call(null, seq__13911_13917);
      if (temp__4425__auto___13926) {
        var seq__13911_13927__$1 = temp__4425__auto___13926;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13911_13927__$1)) {
          var c__7021__auto___13928 = cljs.core.chunk_first.call(null, seq__13911_13927__$1);
          var G__13929 = cljs.core.chunk_rest.call(null, seq__13911_13927__$1);
          var G__13930 = c__7021__auto___13928;
          var G__13931 = cljs.core.count.call(null, c__7021__auto___13928);
          var G__13932 = 0;
          seq__13911_13917 = G__13929;
          chunk__13912_13918 = G__13930;
          count__13913_13919 = G__13931;
          i__13914_13920 = G__13932;
          continue;
        } else {
          var rb_13933 = cljs.core.first.call(null, seq__13911_13927__$1);
          group.add(tiltontec.qxia.base.qxme.call(null, rb_13933));
          qx_form.add(tiltontec.qxia.base.qxme.call(null, rb_13933), (new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rb_13933)));
          var G__13934 = cljs.core.next.call(null, seq__13911_13927__$1);
          var G__13935 = null;
          var G__13936 = 0;
          var G__13937 = 0;
          seq__13911_13917 = G__13934;
          chunk__13912_13918 = G__13935;
          count__13913_13919 = G__13936;
          i__13914_13920 = G__13937;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var temp__4423__auto__ = tiltontec.model.core.md_get.call(null, stub, new cljs.core.Keyword(null, "selection", "selection", 975998651));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var s = temp__4423__auto__;
    var gs = cljs.core.filter.call(null, function(s, temp__4423__auto__, group, qx_form) {
      return function(rb) {
        return cljs.core._EQ_.call(null, s, (new cljs.core.Keyword(null, "model", "model", 331153215)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rb)));
      };
    }(s, temp__4423__auto__, group, qx_form), tiltontec.model.core.md_get.call(null, stub, new cljs.core.Keyword(null, "kids", "kids", 1156670771)));
    return group.setSelection(cljs.core.clj__GT_js.call(null, cljs.core.map.call(null, tiltontec.qxia.base.qxme, gs)));
  } else {
    return group.resetSelection();
  }
};
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kids", "kids", 1156670771), new cljs.core.Keyword("tiltontec.qxia.types", "m.Form", "tiltontec.qxia.types/m.Form", -409217225)], null), function(_, me, new$, old, ___$1) {
  return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), me], null), function(opcode, defer_info) {
    var qx_form = tiltontec.qxia.base.qxme.call(null, me);
    if (cljs.core.not_EQ_.call(null, old, tiltontec.cell.base.unbound)) {
      var seq__13938_13948 = cljs.core.seq.call(null, old);
      var chunk__13939_13949 = null;
      var count__13940_13950 = 0;
      var i__13941_13951 = 0;
      while (true) {
        if (i__13941_13951 < count__13940_13950) {
          var k_13952 = cljs.core._nth.call(null, chunk__13939_13949, i__13941_13951);
          var qxk_13953 = tiltontec.qxia.base.qxme.call(null, k_13952);
          var label_13954 = tiltontec.model.core.md_get.call(null, k_13952, new cljs.core.Keyword(null, "label", "label", 1718410804));
          qx_form.remove(qxk_13953);
          var G__13955 = seq__13938_13948;
          var G__13956 = chunk__13939_13949;
          var G__13957 = count__13940_13950;
          var G__13958 = i__13941_13951 + 1;
          seq__13938_13948 = G__13955;
          chunk__13939_13949 = G__13956;
          count__13940_13950 = G__13957;
          i__13941_13951 = G__13958;
          continue;
        } else {
          var temp__4425__auto___13959 = cljs.core.seq.call(null, seq__13938_13948);
          if (temp__4425__auto___13959) {
            var seq__13938_13960__$1 = temp__4425__auto___13959;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__13938_13960__$1)) {
              var c__7021__auto___13961 = cljs.core.chunk_first.call(null, seq__13938_13960__$1);
              var G__13962 = cljs.core.chunk_rest.call(null, seq__13938_13960__$1);
              var G__13963 = c__7021__auto___13961;
              var G__13964 = cljs.core.count.call(null, c__7021__auto___13961);
              var G__13965 = 0;
              seq__13938_13948 = G__13962;
              chunk__13939_13949 = G__13963;
              count__13940_13950 = G__13964;
              i__13941_13951 = G__13965;
              continue;
            } else {
              var k_13966 = cljs.core.first.call(null, seq__13938_13960__$1);
              var qxk_13967 = tiltontec.qxia.base.qxme.call(null, k_13966);
              var label_13968 = tiltontec.model.core.md_get.call(null, k_13966, new cljs.core.Keyword(null, "label", "label", 1718410804));
              qx_form.remove(qxk_13967);
              var G__13969 = cljs.core.next.call(null, seq__13938_13960__$1);
              var G__13970 = null;
              var G__13971 = 0;
              var G__13972 = 0;
              seq__13938_13948 = G__13969;
              chunk__13939_13949 = G__13970;
              count__13940_13950 = G__13971;
              i__13941_13951 = G__13972;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } else {
    }
    var temp__4425__auto__ = new$;
    if (cljs.core.truth_(temp__4425__auto__)) {
      var kids = temp__4425__auto__;
      var seq__13942 = cljs.core.seq.call(null, kids);
      var chunk__13943 = null;
      var count__13944 = 0;
      var i__13945 = 0;
      while (true) {
        if (i__13945 < count__13944) {
          var k = cljs.core._nth.call(null, chunk__13943, i__13945);
          var G__13946_13973 = tiltontec.cell.base.ia_type.call(null, k) instanceof cljs.core.Keyword ? tiltontec.cell.base.ia_type.call(null, k).fqn : null;
          switch(G__13946_13973) {
            case "tiltontec.qxia.types/m.RadioGroupStub":
              tiltontec.qxia.widget.form_build_radio_group_stub.call(null, me, k);
              break;
            default:
              var qxk_13975 = tiltontec.qxia.base.qxme.call(null, k);
              var label_13976 = tiltontec.model.core.md_get.call(null, k, new cljs.core.Keyword(null, "label", "label", 1718410804));
              qx_form.add(qxk_13975, label_13976);
          }
          var G__13977 = seq__13942;
          var G__13978 = chunk__13943;
          var G__13979 = count__13944;
          var G__13980 = i__13945 + 1;
          seq__13942 = G__13977;
          chunk__13943 = G__13978;
          count__13944 = G__13979;
          i__13945 = G__13980;
          continue;
        } else {
          var temp__4425__auto____$1 = cljs.core.seq.call(null, seq__13942);
          if (temp__4425__auto____$1) {
            var seq__13942__$1 = temp__4425__auto____$1;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__13942__$1)) {
              var c__7021__auto__ = cljs.core.chunk_first.call(null, seq__13942__$1);
              var G__13981 = cljs.core.chunk_rest.call(null, seq__13942__$1);
              var G__13982 = c__7021__auto__;
              var G__13983 = cljs.core.count.call(null, c__7021__auto__);
              var G__13984 = 0;
              seq__13942 = G__13981;
              chunk__13943 = G__13982;
              count__13944 = G__13983;
              i__13945 = G__13984;
              continue;
            } else {
              var k = cljs.core.first.call(null, seq__13942__$1);
              var G__13947_13985 = tiltontec.cell.base.ia_type.call(null, k) instanceof cljs.core.Keyword ? tiltontec.cell.base.ia_type.call(null, k).fqn : null;
              switch(G__13947_13985) {
                case "tiltontec.qxia.types/m.RadioGroupStub":
                  tiltontec.qxia.widget.form_build_radio_group_stub.call(null, me, k);
                  break;
                default:
                  var qxk_13987 = tiltontec.qxia.base.qxme.call(null, k);
                  var label_13988 = tiltontec.model.core.md_get.call(null, k, new cljs.core.Keyword(null, "label", "label", 1718410804));
                  qx_form.add(qxk_13987, label_13988);
              }
              var G__13989 = cljs.core.next.call(null, seq__13942__$1);
              var G__13990 = null;
              var G__13991 = 0;
              var G__13992 = 0;
              seq__13942 = G__13989;
              chunk__13943 = G__13990;
              count__13944 = G__13991;
              i__13945 = G__13992;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    } else {
      return null;
    }
  });
});
cljs.core._add_method.call(null, tiltontec.qxia.base.qx_initialize, new cljs.core.Keyword("tiltontec.qxia.types", "m.Single", "tiltontec.qxia.types/m.Single", -602074724), function(me) {
  tiltontec.util.core.pln.call(null, new cljs.core.Keyword(null, "qxme", "qxme", -1288515198), new cljs.core.Keyword(null, "qx-init-single-enqueues-qxme!!!!", "qx-init-single-enqueues-qxme!!!!", -866757605));
  return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), me], null), function(opcode, defer_info) {
    tiltontec.util.core.pln.call(null, new cljs.core.Keyword(null, "qxme", "qxme", -1288515198), new cljs.core.Keyword(null, "qx-init-single-does--qxme!!!!", "qx-init-single-does--qxme!!!!", -770694528));
    var kids = (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me));
    if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, kids))) {
    } else {
      throw new Error("Assert failed: (\x3d 1 (count kids))");
    }
    var form = cljs.core.first.call(null, kids);
    var qx_form = tiltontec.qxia.base.qxme.call(null, form);
    if (cljs.core.truth_(qx_form)) {
    } else {
      throw new Error("Assert failed: qx-form");
    }
    tiltontec.util.core.pln.call(null, new cljs.core.Keyword(null, "qxme", "qxme", -1288515198), new cljs.core.Keyword(null, "qx-init-single-gets-qxme!!!!", "qx-init-single-gets-qxme!!!!", -168440823));
    return cljs.core.swap_BANG_.call(null, me, cljs.core.assoc, new cljs.core.Keyword(null, "qx-me", "qx-me", -388627059), new qx.ui.mobile.form.renderer.Single(qx_form));
  });
});
cljs.core._add_method.call(null, tiltontec.qxia.base.qx_initialize, new cljs.core.Keyword("tiltontec.qxia.types", "m.NavigationPage", "tiltontec.qxia.types/m.NavigationPage", -2091669995), function(page) {
  var qx_page = tiltontec.qxia.base.qxme.call(null, page);
  tiltontec.util.core.pln.call(null, new cljs.core.Keyword(null, "qxme", "qxme", -1288515198), new cljs.core.Keyword(null, "page-deferring", "page-deferring", -18481214));
  return qx_page.addListener("initialize", function(qx_page) {
    return function() {
      tiltontec.util.core.pln.call(null, new cljs.core.Keyword(null, "qxme", "qxme", -1288515198), new cljs.core.Keyword(null, "page-fires", "page-fires", -379326855));
      var temp__4425__auto___13997 = tiltontec.model.core.md_getx.call(null, new cljs.core.Keyword(null, "ini-nav", "ini-nav", 1436917737), page, new cljs.core.Keyword(null, "kids", "kids", 1156670771));
      if (cljs.core.truth_(temp__4425__auto___13997)) {
        var kids_13998 = temp__4425__auto___13997;
        var content_13999 = qx_page.getContent();
        var seq__13993_14000 = cljs.core.seq.call(null, kids_13998);
        var chunk__13994_14001 = null;
        var count__13995_14002 = 0;
        var i__13996_14003 = 0;
        while (true) {
          if (i__13996_14003 < count__13995_14002) {
            var k_14004 = cljs.core._nth.call(null, chunk__13994_14001, i__13996_14003);
            var qxk_14005 = tiltontec.qxia.base.qxme.call(null, k_14004);
            tiltontec.util.core.pln.call(null, new cljs.core.Keyword(null, "qxme", "qxme", -1288515198), new cljs.core.Keyword(null, "navpage-initialize-add", "navpage-initialize-add", 1958684224), tiltontec.cell.base.ia_type.call(null, k_14004));
            content_13999.add(qxk_14005);
            var G__14006 = seq__13993_14000;
            var G__14007 = chunk__13994_14001;
            var G__14008 = count__13995_14002;
            var G__14009 = i__13996_14003 + 1;
            seq__13993_14000 = G__14006;
            chunk__13994_14001 = G__14007;
            count__13995_14002 = G__14008;
            i__13996_14003 = G__14009;
            continue;
          } else {
            var temp__4425__auto___14010__$1 = cljs.core.seq.call(null, seq__13993_14000);
            if (temp__4425__auto___14010__$1) {
              var seq__13993_14011__$1 = temp__4425__auto___14010__$1;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__13993_14011__$1)) {
                var c__7021__auto___14012 = cljs.core.chunk_first.call(null, seq__13993_14011__$1);
                var G__14013 = cljs.core.chunk_rest.call(null, seq__13993_14011__$1);
                var G__14014 = c__7021__auto___14012;
                var G__14015 = cljs.core.count.call(null, c__7021__auto___14012);
                var G__14016 = 0;
                seq__13993_14000 = G__14013;
                chunk__13994_14001 = G__14014;
                count__13995_14002 = G__14015;
                i__13996_14003 = G__14016;
                continue;
              } else {
                var k_14017 = cljs.core.first.call(null, seq__13993_14011__$1);
                var qxk_14018 = tiltontec.qxia.base.qxme.call(null, k_14017);
                tiltontec.util.core.pln.call(null, new cljs.core.Keyword(null, "qxme", "qxme", -1288515198), new cljs.core.Keyword(null, "navpage-initialize-add", "navpage-initialize-add", 1958684224), tiltontec.cell.base.ia_type.call(null, k_14017));
                content_13999.add(qxk_14018);
                var G__14019 = cljs.core.next.call(null, seq__13993_14011__$1);
                var G__14020 = null;
                var G__14021 = 0;
                var G__14022 = 0;
                seq__13993_14000 = G__14019;
                chunk__13994_14001 = G__14020;
                count__13995_14002 = G__14021;
                i__13996_14003 = G__14022;
                continue;
              }
            } else {
            }
          }
          break;
        }
      } else {
      }
      return qx_page;
    };
  }(qx_page));
});
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kids", "kids", 1156670771), new cljs.core.Keyword("tiltontec.qxia.types", "m.NavigationPage", "tiltontec.qxia.types/m.NavigationPage", -2091669995)], null), function(_, page, newk, oldk, ___$1) {
  tiltontec.util.core.pln.call(null, new cljs.core.Keyword(null, "addk", "addk", -135835531), new cljs.core.Keyword(null, "nav-page-grabs-kids-obs", "nav-page-grabs-kids-obs", 2045747190));
  if (cljs.core.not_EQ_.call(null, oldk, tiltontec.cell.base.unbound)) {
    return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), page], null), function(opcode, defer_info) {
      var qx_page = tiltontec.qxia.base.qxme.call(null, page);
      var content = qx_page.getContent();
      content.removeAll();
      var seq__14023 = cljs.core.seq.call(null, newk);
      var chunk__14024 = null;
      var count__14025 = 0;
      var i__14026 = 0;
      while (true) {
        if (i__14026 < count__14025) {
          var k = cljs.core._nth.call(null, chunk__14024, i__14026);
          var qxk_14027 = tiltontec.qxia.base.qxme.call(null, k);
          content.add(qxk_14027);
          var G__14028 = seq__14023;
          var G__14029 = chunk__14024;
          var G__14030 = count__14025;
          var G__14031 = i__14026 + 1;
          seq__14023 = G__14028;
          chunk__14024 = G__14029;
          count__14025 = G__14030;
          i__14026 = G__14031;
          continue;
        } else {
          var temp__4425__auto__ = cljs.core.seq.call(null, seq__14023);
          if (temp__4425__auto__) {
            var seq__14023__$1 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__14023__$1)) {
              var c__7021__auto__ = cljs.core.chunk_first.call(null, seq__14023__$1);
              var G__14032 = cljs.core.chunk_rest.call(null, seq__14023__$1);
              var G__14033 = c__7021__auto__;
              var G__14034 = cljs.core.count.call(null, c__7021__auto__);
              var G__14035 = 0;
              seq__14023 = G__14032;
              chunk__14024 = G__14033;
              count__14025 = G__14034;
              i__14026 = G__14035;
              continue;
            } else {
              var k = cljs.core.first.call(null, seq__14023__$1);
              var qxk_14036 = tiltontec.qxia.base.qxme.call(null, k);
              content.add(qxk_14036);
              var G__14037 = cljs.core.next.call(null, seq__14023__$1);
              var G__14038 = null;
              var G__14039 = 0;
              var G__14040 = 0;
              seq__14023 = G__14037;
              chunk__14024 = G__14038;
              count__14025 = G__14039;
              i__14026 = G__14040;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    });
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "validator-fn", "validator-fn", -1098691070), new cljs.core.Keyword("tiltontec.qxia.types", "m.Input", "tiltontec.qxia.types/m.Input", -509810846)], null), function(_, me, new_fn, old, ___$1) {
  return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), me], null), function(opcode, defer_info) {
    if (cljs.core.truth_(new_fn)) {
      var form = tiltontec.qxia.base.qxme.call(null, tiltontec.model.core.qx_par.call(null, me));
      if (cljs.core.truth_(form)) {
      } else {
        throw new Error("Assert failed: form");
      }
      var vmgr = form.getValidationManager();
      tiltontec.util.core.pln.call(null, new cljs.core.Keyword(null, "validmgr-add", "validmgr-add", 101529472), tiltontec.cell.base.ia_type.call(null, me));
      return vmgr.add(tiltontec.qxia.base.qxme.call(null, me), new_fn);
    } else {
      return null;
    }
  });
});
cljs.core._add_method.call(null, tiltontec.qxia.base.qx_property_observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "selection", "selection", 975998651), new cljs.core.Keyword("tiltontec.qxia.types", "m.SelectBox", "tiltontec.qxia.types/m.SelectBox", -663708114)], null), function(_, me, new$, ___$1, ___$2) {
  if (cljs.core.truth_(new$)) {
    return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "3-post-assembly", "3-post-assembly", -607469254), me], null), function(opcode, defer_info) {
      if (cljs.core.truth_(tiltontec.qxia.base.qxme.call(null, me).getModel())) {
      } else {
        throw new Error("Assert failed: (.getModel (qxme me))");
      }
      return tiltontec.qxia.base.qxme.call(null, me).setSelection(new$);
    });
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kids", "kids", 1156670771), new cljs.core.Keyword("tiltontec.qxia.types", "qx.Object", "tiltontec.qxia.types/qx.Object", -1295429520)], null), function(_, me, newk, oldk, ___$1) {
  var G__14041 = tiltontec.cell.base.ia_type.call(null, me) instanceof cljs.core.Keyword ? tiltontec.cell.base.ia_type.call(null, me).fqn : null;
  switch(G__14041) {
    case "tiltontec.qxia.types/m.Single":
      return null;
      break;
    case "tiltontec.qxia.types/m.RadioGroupStub":
      return null;
      break;
    default:
      return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), me], null), function(G__14041) {
        return function(opcode, defer_info) {
          return tiltontec.qxia.widget.kids_refresh.call(null, me, newk, oldk);
        };
      }(G__14041));
  }
});
tiltontec.qxia.widget.kids_refresh = function tiltontec$qxia$widget$kids_refresh(me, newk, oldk) {
  if (cljs.core._EQ_.call(null, oldk, tiltontec.cell.base.unbound)) {
  } else {
    var lostks_14059 = clojure.set.difference.call(null, cljs.core.set.call(null, oldk), cljs.core.set.call(null, newk));
    if (cljs.core.empty_QMARK_.call(null, lostks_14059)) {
    } else {
      var seq__14051_14060 = cljs.core.seq.call(null, lostks_14059);
      var chunk__14052_14061 = null;
      var count__14053_14062 = 0;
      var i__14054_14063 = 0;
      while (true) {
        if (i__14054_14063 < count__14053_14062) {
          var kid_14064 = cljs.core._nth.call(null, chunk__14052_14061, i__14054_14063);
          var qxk_14065 = tiltontec.qxia.base.qxme.call(null, kid_14064);
          if (cljs.core.truth_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.cell.base.ia_type_QMARK_, kid_14064, new cljs.core.Keyword("tiltontec.qxia.widget", "m.Form", "tiltontec.qxia.widget/m.Form", -664926146)], null))) {
          } else {
            tiltontec.qxia.base.qxme.call(null, me).drop(qxk_14065);
          }
          qxk_14065.destroy();
          tiltontec.cell.evaluate.not_to_be.call(null, kid_14064);
          var G__14066 = seq__14051_14060;
          var G__14067 = chunk__14052_14061;
          var G__14068 = count__14053_14062;
          var G__14069 = i__14054_14063 + 1;
          seq__14051_14060 = G__14066;
          chunk__14052_14061 = G__14067;
          count__14053_14062 = G__14068;
          i__14054_14063 = G__14069;
          continue;
        } else {
          var temp__4425__auto___14070 = cljs.core.seq.call(null, seq__14051_14060);
          if (temp__4425__auto___14070) {
            var seq__14051_14071__$1 = temp__4425__auto___14070;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__14051_14071__$1)) {
              var c__7021__auto___14072 = cljs.core.chunk_first.call(null, seq__14051_14071__$1);
              var G__14073 = cljs.core.chunk_rest.call(null, seq__14051_14071__$1);
              var G__14074 = c__7021__auto___14072;
              var G__14075 = cljs.core.count.call(null, c__7021__auto___14072);
              var G__14076 = 0;
              seq__14051_14060 = G__14073;
              chunk__14052_14061 = G__14074;
              count__14053_14062 = G__14075;
              i__14054_14063 = G__14076;
              continue;
            } else {
              var kid_14077 = cljs.core.first.call(null, seq__14051_14071__$1);
              var qxk_14078 = tiltontec.qxia.base.qxme.call(null, kid_14077);
              if (cljs.core.truth_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.cell.base.ia_type_QMARK_, kid_14077, new cljs.core.Keyword("tiltontec.qxia.widget", "m.Form", "tiltontec.qxia.widget/m.Form", -664926146)], null))) {
              } else {
                tiltontec.qxia.base.qxme.call(null, me).drop(qxk_14078);
              }
              qxk_14078.destroy();
              tiltontec.cell.evaluate.not_to_be.call(null, kid_14077);
              var G__14079 = cljs.core.next.call(null, seq__14051_14071__$1);
              var G__14080 = null;
              var G__14081 = 0;
              var G__14082 = 0;
              seq__14051_14060 = G__14079;
              chunk__14052_14061 = G__14080;
              count__14053_14062 = G__14081;
              i__14054_14063 = G__14082;
              continue;
            }
          } else {
          }
        }
        break;
      }
    }
  }
  var new_ks = cljs.core._EQ_.call(null, oldk, tiltontec.cell.base.unbound) ? newk : clojure.set.difference.call(null, cljs.core.set.call(null, newk), cljs.core.set.call(null, oldk));
  if (cljs.core.empty_QMARK_.call(null, new_ks)) {
    return null;
  } else {
    tiltontec.util.core.pln.call(null, new cljs.core.Keyword(null, "addk", "addk", -135835531), new cljs.core.Keyword(null, "compo-newks!!!!!!!", "compo-newks!!!!!!!", 1607733632), tiltontec.cell.base.ia_type.call(null, me), cljs.core.count.call(null, new_ks));
    var seq__14055 = cljs.core.seq.call(null, new_ks);
    var chunk__14056 = null;
    var count__14057 = 0;
    var i__14058 = 0;
    while (true) {
      if (i__14058 < count__14057) {
        var k = cljs.core._nth.call(null, chunk__14056, i__14058);
        if (cljs.core.truth_(tiltontec.cell.base.ia_type_QMARK_.call(null, k, new cljs.core.Keyword("tiltontec.qxia.widget", "m.Form", "tiltontec.qxia.widget/m.Form", -664926146)))) {
        } else {
          tiltontec.util.core.pln.call(null, new cljs.core.Keyword(null, "addk", "addk", -135835531), new cljs.core.Keyword(null, "compo-newk-add", "compo-newk-add", 1109141498), tiltontec.cell.base.ia_type.call(null, me), tiltontec.cell.base.ia_type.call(null, k));
          tiltontec.qxia.base.qx_add_kid.call(null, me, k);
        }
        var G__14083 = seq__14055;
        var G__14084 = chunk__14056;
        var G__14085 = count__14057;
        var G__14086 = i__14058 + 1;
        seq__14055 = G__14083;
        chunk__14056 = G__14084;
        count__14057 = G__14085;
        i__14058 = G__14086;
        continue;
      } else {
        var temp__4425__auto__ = cljs.core.seq.call(null, seq__14055);
        if (temp__4425__auto__) {
          var seq__14055__$1 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__14055__$1)) {
            var c__7021__auto__ = cljs.core.chunk_first.call(null, seq__14055__$1);
            var G__14087 = cljs.core.chunk_rest.call(null, seq__14055__$1);
            var G__14088 = c__7021__auto__;
            var G__14089 = cljs.core.count.call(null, c__7021__auto__);
            var G__14090 = 0;
            seq__14055 = G__14087;
            chunk__14056 = G__14088;
            count__14057 = G__14089;
            i__14058 = G__14090;
            continue;
          } else {
            var k = cljs.core.first.call(null, seq__14055__$1);
            if (cljs.core.truth_(tiltontec.cell.base.ia_type_QMARK_.call(null, k, new cljs.core.Keyword("tiltontec.qxia.widget", "m.Form", "tiltontec.qxia.widget/m.Form", -664926146)))) {
            } else {
              tiltontec.util.core.pln.call(null, new cljs.core.Keyword(null, "addk", "addk", -135835531), new cljs.core.Keyword(null, "compo-newk-add", "compo-newk-add", 1109141498), tiltontec.cell.base.ia_type.call(null, me), tiltontec.cell.base.ia_type.call(null, k));
              tiltontec.qxia.base.qx_add_kid.call(null, me, k);
            }
            var G__14091 = cljs.core.next.call(null, seq__14055__$1);
            var G__14092 = null;
            var G__14093 = 0;
            var G__14094 = 0;
            seq__14055 = G__14091;
            chunk__14056 = G__14092;
            count__14057 = G__14093;
            i__14058 = G__14094;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }
};
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot-data", "slot-data", 1146367809), new cljs.core.Keyword("tiltontec.qxia.types", "m.Picker", "tiltontec.qxia.types/m.Picker", -1343372926)], null), function(_, me, new$, old, c) {
  return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), me], null), function(opcode, defer_info) {
    var p = tiltontec.qxia.base.qxme.call(null, me);
    if (cljs.core.not_EQ_.call(null, old, tiltontec.cell.base.unbound)) {
      var seq__14095_14103 = cljs.core.seq.call(null, cljs.core.range.call(null, cljs.core.count.call(null, old)));
      var chunk__14096_14104 = null;
      var count__14097_14105 = 0;
      var i__14098_14106 = 0;
      while (true) {
        if (i__14098_14106 < count__14097_14105) {
          var n_14107 = cljs.core._nth.call(null, chunk__14096_14104, i__14098_14106);
          p.removeSlot(n_14107);
          var G__14108 = seq__14095_14103;
          var G__14109 = chunk__14096_14104;
          var G__14110 = count__14097_14105;
          var G__14111 = i__14098_14106 + 1;
          seq__14095_14103 = G__14108;
          chunk__14096_14104 = G__14109;
          count__14097_14105 = G__14110;
          i__14098_14106 = G__14111;
          continue;
        } else {
          var temp__4425__auto___14112 = cljs.core.seq.call(null, seq__14095_14103);
          if (temp__4425__auto___14112) {
            var seq__14095_14113__$1 = temp__4425__auto___14112;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__14095_14113__$1)) {
              var c__7021__auto___14114 = cljs.core.chunk_first.call(null, seq__14095_14113__$1);
              var G__14115 = cljs.core.chunk_rest.call(null, seq__14095_14113__$1);
              var G__14116 = c__7021__auto___14114;
              var G__14117 = cljs.core.count.call(null, c__7021__auto___14114);
              var G__14118 = 0;
              seq__14095_14103 = G__14115;
              chunk__14096_14104 = G__14116;
              count__14097_14105 = G__14117;
              i__14098_14106 = G__14118;
              continue;
            } else {
              var n_14119 = cljs.core.first.call(null, seq__14095_14113__$1);
              p.removeSlot(n_14119);
              var G__14120 = cljs.core.next.call(null, seq__14095_14113__$1);
              var G__14121 = null;
              var G__14122 = 0;
              var G__14123 = 0;
              seq__14095_14103 = G__14120;
              chunk__14096_14104 = G__14121;
              count__14097_14105 = G__14122;
              i__14098_14106 = G__14123;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } else {
    }
    var seq__14099 = cljs.core.seq.call(null, new$);
    var chunk__14100 = null;
    var count__14101 = 0;
    var i__14102 = 0;
    while (true) {
      if (i__14102 < count__14101) {
        var sd = cljs.core._nth.call(null, chunk__14100, i__14102);
        var da_14124 = new qx.data.Array(cljs.core.clj__GT_js.call(null, sd));
        p.addSlot(da_14124);
        var G__14125 = seq__14099;
        var G__14126 = chunk__14100;
        var G__14127 = count__14101;
        var G__14128 = i__14102 + 1;
        seq__14099 = G__14125;
        chunk__14100 = G__14126;
        count__14101 = G__14127;
        i__14102 = G__14128;
        continue;
      } else {
        var temp__4425__auto__ = cljs.core.seq.call(null, seq__14099);
        if (temp__4425__auto__) {
          var seq__14099__$1 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__14099__$1)) {
            var c__7021__auto__ = cljs.core.chunk_first.call(null, seq__14099__$1);
            var G__14129 = cljs.core.chunk_rest.call(null, seq__14099__$1);
            var G__14130 = c__7021__auto__;
            var G__14131 = cljs.core.count.call(null, c__7021__auto__);
            var G__14132 = 0;
            seq__14099 = G__14129;
            chunk__14100 = G__14130;
            count__14101 = G__14131;
            i__14102 = G__14132;
            continue;
          } else {
            var sd = cljs.core.first.call(null, seq__14099__$1);
            var da_14133 = new qx.data.Array(cljs.core.clj__GT_js.call(null, sd));
            p.addSlot(da_14133);
            var G__14134 = cljs.core.next.call(null, seq__14099__$1);
            var G__14135 = null;
            var G__14136 = 0;
            var G__14137 = 0;
            seq__14099 = G__14134;
            chunk__14100 = G__14135;
            count__14101 = G__14136;
            i__14102 = G__14137;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  });
});
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "validator-fn", "validator-fn", -1098691070), new cljs.core.Keyword("tiltontec.qxia.types", "m.Input", "tiltontec.qxia.types/m.Input", -509810846)], null), function(_, me, new_fn, old, ___$1) {
  return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), me], null), function(opcode, defer_info) {
    if (cljs.core.truth_(new_fn)) {
      var form = tiltontec.qxia.base.qxme.call(null, tiltontec.model.core.qx_par.call(null, me));
      if (cljs.core.truth_(form)) {
      } else {
        throw new Error("Assert failed: form");
      }
      var vmgr = form.getValidationManager();
      return vmgr.add(tiltontec.qxia.base.qxme.call(null, me), new_fn);
    } else {
      return null;
    }
  });
});
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword("tiltontec.qxia.types", "m.MValue", "tiltontec.qxia.types/m.MValue", -994870885)], null), function(_, me, new$, old, ___$1) {
  return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), me], null), function(opcode, defer_info) {
    return tiltontec.qxia.base.qxme.call(null, me).setValue(new$);
  });
});
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "drawing", "drawing", 1181749528), new cljs.core.Keyword("tiltontec.qxia.types", "m.Canvas", "tiltontec.qxia.types/m.Canvas", -1210794783)], null), function(_, me, new_fn, ___$1, ___$2) {
  if (cljs.core.truth_(new_fn)) {
    return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), me], null), function(opcode, defer_info) {
      return new_fn.call(null, me);
    });
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "anchor", "anchor", 1549638489), new cljs.core.Keyword("tiltontec.qxia.types", "m.Widget", "tiltontec.qxia.types/m.Widget", 2103465403)], null), function(_, me, new_anchor, ___$1) {
  return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "2-post-make-qx", "2-post-make-qx", 57273184), me], null), function(opcode, defer_info) {
    if (cljs.core.truth_(new_anchor)) {
      return tiltontec.qxia.base.qxme.call(null, me).setAnchor(tiltontec.qxia.base.qxme.call(null, new_anchor));
    } else {
      return null;
    }
  });
});
goog.provide("tiltontec.qxia.core");
goog.require("cljs.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.model.core");
goog.require("tiltontec.qxia.types");
goog.require("tiltontec.qxia.base");
goog.require("tiltontec.qxia.widget");
tiltontec.qxia.core.routing_get = function tiltontec$qxia$core$routing_get(end_point) {
  return tiltontec.qxia.base.app_routing.call(null).executeGet(end_point);
};
tiltontec.qxia.core.qx_make = function tiltontec$qxia$core$qx_make(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___14142 = arguments.length;
  var i__7286__auto___14143 = 0;
  while (true) {
    if (i__7286__auto___14143 < len__7285__auto___14142) {
      args__7292__auto__.push(arguments[i__7286__auto___14143]);
      var G__14144 = i__7286__auto___14143 + 1;
      i__7286__auto___14143 = G__14144;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 1 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(1), 0, null) : null;
  return tiltontec.qxia.core.qx_make.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7293__auto__);
};
tiltontec.qxia.core.qx_make.cljs$core$IFn$_invoke$arity$variadic = function(type, iargs) {
  if (cljs.core.isa_QMARK_.call(null, type, new cljs.core.Keyword("tiltontec.qxia.types", "qx.Object", "tiltontec.qxia.types/qx.Object", -1295429520))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("First argument to qx-make "), cljs.core.str(type), cljs.core.str(" is not a descendant of qx.Object")].join("")), cljs.core.str("\n"), cljs.core.str("(isa? type :tiltontec.qxia.types/qx.Object)")].join(""));
  }
  if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, iargs))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("arglist after type "), cljs.core.str(type), cljs.core.str(" is not of even length: "), cljs.core.str(iargs)].join("")), cljs.core.str("\n"), cljs.core.str("(even? (count iargs))")].join(""));
  }
  return cljs.core.apply.call(null, tiltontec.model.core.make, new cljs.core.Keyword(null, "type", "type", 1174270348), type, iargs);
};
tiltontec.qxia.core.qx_make.cljs$lang$maxFixedArity = 1;
tiltontec.qxia.core.qx_make.cljs$lang$applyTo = function(seq14140) {
  var G__14141 = cljs.core.first.call(null, seq14140);
  var seq14140__$1 = cljs.core.next.call(null, seq14140);
  return tiltontec.qxia.core.qx_make.cljs$core$IFn$_invoke$arity$variadic(G__14141, seq14140__$1);
};
tiltontec.qxia.core.image = function tiltontec$qxia$core$image(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___14147 = arguments.length;
  var i__7286__auto___14148 = 0;
  while (true) {
    if (i__7286__auto___14148 < len__7285__auto___14147) {
      args__7292__auto__.push(arguments[i__7286__auto___14148]);
      var G__14149 = i__7286__auto___14148 + 1;
      i__7286__auto___14148 = G__14149;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 1 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(1), 0, null) : null;
  return tiltontec.qxia.core.image.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7293__auto__);
};
tiltontec.qxia.core.image.cljs$core$IFn$_invoke$arity$variadic = function(source, iargs) {
  return cljs.core.apply.call(null, tiltontec.qxia.core.qx_make, new cljs.core.Keyword("tiltontec.qxia.types", "m.Image", "tiltontec.qxia.types/m.Image", 336928926), new cljs.core.Keyword(null, "source", "source", -433931539), source, iargs);
};
tiltontec.qxia.core.image.cljs$lang$maxFixedArity = 1;
tiltontec.qxia.core.image.cljs$lang$applyTo = function(seq14145) {
  var G__14146 = cljs.core.first.call(null, seq14145);
  var seq14145__$1 = cljs.core.next.call(null, seq14145);
  return tiltontec.qxia.core.image.cljs$core$IFn$_invoke$arity$variadic(G__14146, seq14145__$1);
};
tiltontec.qxia.core.button = function tiltontec$qxia$core$button(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___14152 = arguments.length;
  var i__7286__auto___14153 = 0;
  while (true) {
    if (i__7286__auto___14153 < len__7285__auto___14152) {
      args__7292__auto__.push(arguments[i__7286__auto___14153]);
      var G__14154 = i__7286__auto___14153 + 1;
      i__7286__auto___14153 = G__14154;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 1 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(1), 0, null) : null;
  return tiltontec.qxia.core.button.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7293__auto__);
};
tiltontec.qxia.core.button.cljs$core$IFn$_invoke$arity$variadic = function(label_icon, iargs) {
  return cljs.core.apply.call(null, tiltontec.model.core.make, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Button", "tiltontec.qxia.types/m.Button", -668586230), new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952), cljs.core.coll_QMARK_.call(null, label_icon) ? label_icon : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [label_icon], null), iargs);
};
tiltontec.qxia.core.button.cljs$lang$maxFixedArity = 1;
tiltontec.qxia.core.button.cljs$lang$applyTo = function(seq14150) {
  var G__14151 = cljs.core.first.call(null, seq14150);
  var seq14150__$1 = cljs.core.next.call(null, seq14150);
  return tiltontec.qxia.core.button.cljs$core$IFn$_invoke$arity$variadic(G__14151, seq14150__$1);
};
tiltontec.qxia.core.text_field = function tiltontec$qxia$core$text_field(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___14157 = arguments.length;
  var i__7286__auto___14158 = 0;
  while (true) {
    if (i__7286__auto___14158 < len__7285__auto___14157) {
      args__7292__auto__.push(arguments[i__7286__auto___14158]);
      var G__14159 = i__7286__auto___14158 + 1;
      i__7286__auto___14158 = G__14159;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 1 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(1), 0, null) : null;
  return tiltontec.qxia.core.text_field.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7293__auto__);
};
tiltontec.qxia.core.text_field.cljs$core$IFn$_invoke$arity$variadic = function(label, iargs) {
  return cljs.core.apply.call(null, tiltontec.model.core.make, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.TextField", "tiltontec.qxia.types/m.TextField", 1587442644), new cljs.core.Keyword(null, "label", "label", 1718410804), label, iargs);
};
tiltontec.qxia.core.text_field.cljs$lang$maxFixedArity = 1;
tiltontec.qxia.core.text_field.cljs$lang$applyTo = function(seq14155) {
  var G__14156 = cljs.core.first.call(null, seq14155);
  var seq14155__$1 = cljs.core.next.call(null, seq14155);
  return tiltontec.qxia.core.text_field.cljs$core$IFn$_invoke$arity$variadic(G__14156, seq14155__$1);
};
tiltontec.qxia.core.number_field = function tiltontec$qxia$core$number_field(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___14162 = arguments.length;
  var i__7286__auto___14163 = 0;
  while (true) {
    if (i__7286__auto___14163 < len__7285__auto___14162) {
      args__7292__auto__.push(arguments[i__7286__auto___14163]);
      var G__14164 = i__7286__auto___14163 + 1;
      i__7286__auto___14163 = G__14164;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 1 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(1), 0, null) : null;
  return tiltontec.qxia.core.number_field.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7293__auto__);
};
tiltontec.qxia.core.number_field.cljs$core$IFn$_invoke$arity$variadic = function(label, iargs) {
  return cljs.core.apply.call(null, tiltontec.model.core.make, new cljs.core.Keyword("tiltontec.qxia.types", "m.NumberField", "tiltontec.qxia.types/m.NumberField", -497385394), new cljs.core.Keyword(null, "label", "label", 1718410804), label, new cljs.core.Keyword(null, "validator-fn", "validator-fn", -1098691070), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), 
  new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "qm", "qm", -816906244, null), cljs.core.list(new cljs.core.Symbol(null, "qxme", "qxme", 352016329, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)), 
  new cljs.core.Symbol(null, "min", "min", 2085523049, null), cljs.core.list(new cljs.core.Symbol(null, ".getMinimum", ".getMinimum", 2000963370, null), new cljs.core.Symbol(null, "qm", "qm", -816906244, null)), new cljs.core.Symbol(null, "max", "max", 1701898075, null), cljs.core.list(new cljs.core.Symbol(null, ".getMaximum", ".getMaximum", -1881263029, null), new cljs.core.Symbol(null, "qm", "qm", -816906244, null)), new cljs.core.Symbol(null, "stp", "stp", 975219562, null), cljs.core.list(new cljs.core.Symbol(null, 
  ".getStep", ".getStep", -1335493753, null), new cljs.core.Symbol(null, "qm", "qm", -816906244, null)), new cljs.core.Symbol(null, "emsg", "emsg", 1057202547, null), cljs.core.list(new cljs.core.Symbol(null, "cond", "cond", 1606708055, null), cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "min", "min", 2085523049, null)), "Too low!", cljs.core.list(new cljs.core.Symbol(null, "\x3e", 
  "\x3e", 1085014381, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "max", "max", 1701898075, null)), "Too high!", cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol(null, "mod", "mod", 1510044207, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "stp", "stp", 975219562, 
  null)))), "Out of step!")], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "emsg", "emsg", 1057202547, null), cljs.core.list(new cljs.core.Symbol(null, ".setInvalidMessage", ".setInvalidMessage", 1874623209, null), new cljs.core.Symbol(null, "qm", "qm", -816906244, null), new cljs.core.Symbol(null, "emsg", "emsg", 1057202547, null))), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, 
  "emsg", "emsg", 1057202547, null))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return function(me, cache) {
      return function(val) {
        var qm = tiltontec.qxia.base.qxme.call(null, me);
        var min = qm.getMinimum();
        var max = qm.getMaximum();
        var stp = qm.getStep();
        var emsg = val < min ? "Too low!" : val > max ? "Too high!" : !(cljs.core.mod.call(null, val, stp) === 0) ? "Out of step!" : null;
        if (cljs.core.truth_(emsg)) {
          qm.setInvalidMessage(emsg);
        } else {
        }
        return emsg == null;
      };
    }(me, cache);
  }), iargs);
};
tiltontec.qxia.core.number_field.cljs$lang$maxFixedArity = 1;
tiltontec.qxia.core.number_field.cljs$lang$applyTo = function(seq14160) {
  var G__14161 = cljs.core.first.call(null, seq14160);
  var seq14160__$1 = cljs.core.next.call(null, seq14160);
  return tiltontec.qxia.core.number_field.cljs$core$IFn$_invoke$arity$variadic(G__14161, seq14160__$1);
};
tiltontec.qxia.core.label = function tiltontec$qxia$core$label(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___14167 = arguments.length;
  var i__7286__auto___14168 = 0;
  while (true) {
    if (i__7286__auto___14168 < len__7285__auto___14167) {
      args__7292__auto__.push(arguments[i__7286__auto___14168]);
      var G__14169 = i__7286__auto___14168 + 1;
      i__7286__auto___14168 = G__14169;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 1 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(1), 0, null) : null;
  return tiltontec.qxia.core.label.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7293__auto__);
};
tiltontec.qxia.core.label.cljs$core$IFn$_invoke$arity$variadic = function(value, iargs) {
  return cljs.core.apply.call(null, tiltontec.model.core.make, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Label", "tiltontec.qxia.types/m.Label", 908319540), new cljs.core.Keyword(null, "value", "value", 305978217), value, iargs);
};
tiltontec.qxia.core.label.cljs$lang$maxFixedArity = 1;
tiltontec.qxia.core.label.cljs$lang$applyTo = function(seq14165) {
  var G__14166 = cljs.core.first.call(null, seq14165);
  var seq14165__$1 = cljs.core.next.call(null, seq14165);
  return tiltontec.qxia.core.label.cljs$core$IFn$_invoke$arity$variadic(G__14166, seq14165__$1);
};
goog.provide("tiltontec.qxia.macros");
goog.require("cljs.core");
tiltontec.qxia.macros.hbox = function tiltontec$qxia$macros$hbox(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___14740 = arguments.length;
  var i__7286__auto___14741 = 0;
  while (true) {
    if (i__7286__auto___14741 < len__7285__auto___14740) {
      args__7292__auto__.push(arguments[i__7286__auto___14741]);
      var G__14742 = i__7286__auto___14741 + 1;
      i__7286__auto___14741 = G__14742;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 3 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(3), 0, null) : null;
  return tiltontec.qxia.macros.hbox.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7293__auto__);
};
tiltontec.qxia.macros.hbox.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__14736, kids) {
  var vec__14737 = p__14736;
  var seq__14738 = cljs.core.seq.call(null, vec__14737);
  var hbox_args = seq__14738;
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "layout", "layout", -2120940921)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "new", "new", -444906321, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("js", "qx.ui.mobile.layout.HBox", "js/qx.ui.mobile.layout.HBox", 499740199, null)))));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), hbox_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "c?kids", "tiltontec.model.core/c?kids", -799249638, null)), kids)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.qxia.macros.hbox.cljs$lang$maxFixedArity = 3;
tiltontec.qxia.macros.hbox.cljs$lang$applyTo = function(seq14732) {
  var G__14733 = cljs.core.first.call(null, seq14732);
  var seq14732__$1 = cljs.core.next.call(null, seq14732);
  var G__14734 = cljs.core.first.call(null, seq14732__$1);
  var seq14732__$2 = cljs.core.next.call(null, seq14732__$1);
  var G__14735 = cljs.core.first.call(null, seq14732__$2);
  var seq14732__$3 = cljs.core.next.call(null, seq14732__$2);
  return tiltontec.qxia.macros.hbox.cljs$core$IFn$_invoke$arity$variadic(G__14733, G__14734, G__14735, seq14732__$3);
};
tiltontec.qxia.macros.hbox.cljs$lang$macro = true;
tiltontec.qxia.macros.vbox = function tiltontec$qxia$macros$vbox(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___14751 = arguments.length;
  var i__7286__auto___14752 = 0;
  while (true) {
    if (i__7286__auto___14752 < len__7285__auto___14751) {
      args__7292__auto__.push(arguments[i__7286__auto___14752]);
      var G__14753 = i__7286__auto___14752 + 1;
      i__7286__auto___14752 = G__14753;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 3 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(3), 0, null) : null;
  return tiltontec.qxia.macros.vbox.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7293__auto__);
};
tiltontec.qxia.macros.vbox.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__14747, kids) {
  var vec__14748 = p__14747;
  var seq__14749 = cljs.core.seq.call(null, vec__14748);
  var hbox_args = seq__14749;
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "layout", "layout", -2120940921)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "new", "new", -444906321, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("js", "qx.ui.mobile.layout.VBox", "js/qx.ui.mobile.layout.VBox", -1527506437, null)))));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), hbox_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "c?kids", "tiltontec.model.core/c?kids", -799249638, null)), kids)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.qxia.macros.vbox.cljs$lang$maxFixedArity = 3;
tiltontec.qxia.macros.vbox.cljs$lang$applyTo = function(seq14743) {
  var G__14744 = cljs.core.first.call(null, seq14743);
  var seq14743__$1 = cljs.core.next.call(null, seq14743);
  var G__14745 = cljs.core.first.call(null, seq14743__$1);
  var seq14743__$2 = cljs.core.next.call(null, seq14743__$1);
  var G__14746 = cljs.core.first.call(null, seq14743__$2);
  var seq14743__$3 = cljs.core.next.call(null, seq14743__$2);
  return tiltontec.qxia.macros.vbox.cljs$core$IFn$_invoke$arity$variadic(G__14744, G__14745, G__14746, seq14743__$3);
};
tiltontec.qxia.macros.vbox.cljs$lang$macro = true;
tiltontec.qxia.macros.group = function tiltontec$qxia$macros$group(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___14762 = arguments.length;
  var i__7286__auto___14763 = 0;
  while (true) {
    if (i__7286__auto___14763 < len__7285__auto___14762) {
      args__7292__auto__.push(arguments[i__7286__auto___14763]);
      var G__14764 = i__7286__auto___14763 + 1;
      i__7286__auto___14763 = G__14764;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 3 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(3), 0, null) : null;
  return tiltontec.qxia.macros.group.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7293__auto__);
};
tiltontec.qxia.macros.group.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__14758, kids) {
  var vec__14759 = p__14758;
  var seq__14760 = cljs.core.seq.call(null, vec__14759);
  var my_args = seq__14760;
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Group", "tiltontec.qxia.types/m.Group", 1395438636)), 
  my_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "c?kids", "tiltontec.model.core/c?kids", -799249638, null)), kids)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.qxia.macros.group.cljs$lang$maxFixedArity = 3;
tiltontec.qxia.macros.group.cljs$lang$applyTo = function(seq14754) {
  var G__14755 = cljs.core.first.call(null, seq14754);
  var seq14754__$1 = cljs.core.next.call(null, seq14754);
  var G__14756 = cljs.core.first.call(null, seq14754__$1);
  var seq14754__$2 = cljs.core.next.call(null, seq14754__$1);
  var G__14757 = cljs.core.first.call(null, seq14754__$2);
  var seq14754__$3 = cljs.core.next.call(null, seq14754__$2);
  return tiltontec.qxia.macros.group.cljs$core$IFn$_invoke$arity$variadic(G__14755, G__14756, G__14757, seq14754__$3);
};
tiltontec.qxia.macros.group.cljs$lang$macro = true;
tiltontec.qxia.macros.navigation_page = function tiltontec$qxia$macros$navigation_page(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___14778 = arguments.length;
  var i__7286__auto___14779 = 0;
  while (true) {
    if (i__7286__auto___14779 < len__7285__auto___14778) {
      args__7292__auto__.push(arguments[i__7286__auto___14779]);
      var G__14780 = i__7286__auto___14779 + 1;
      i__7286__auto___14779 = G__14780;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 4 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(4), 0, null) : null;
  return tiltontec.qxia.macros.navigation_page.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7293__auto__);
};
tiltontec.qxia.macros.navigation_page.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__14770, p__14771, kids) {
  var vec__14772 = p__14770;
  var title = cljs.core.nth.call(null, vec__14772, 0, null);
  var end_point = cljs.core.nth.call(null, vec__14772, 1, null);
  var vec__14775 = p__14771;
  var seq__14776 = cljs.core.seq.call(null, vec__14775);
  var top_args = seq__14776;
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.NavigationPage", "tiltontec.qxia.types/m.NavigationPage", 
  -2091669995)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "end-point", "end-point", -1147460885)), function() {
    var x__7044__auto__ = end_point;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "title", "title", 636505583)), function() {
    var x__7044__auto__ = title;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), top_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "c?kids", "tiltontec.model.core/c?kids", -799249638, null)), kids)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.qxia.macros.navigation_page.cljs$lang$maxFixedArity = 4;
tiltontec.qxia.macros.navigation_page.cljs$lang$applyTo = function(seq14765) {
  var G__14766 = cljs.core.first.call(null, seq14765);
  var seq14765__$1 = cljs.core.next.call(null, seq14765);
  var G__14767 = cljs.core.first.call(null, seq14765__$1);
  var seq14765__$2 = cljs.core.next.call(null, seq14765__$1);
  var G__14768 = cljs.core.first.call(null, seq14765__$2);
  var seq14765__$3 = cljs.core.next.call(null, seq14765__$2);
  var G__14769 = cljs.core.first.call(null, seq14765__$3);
  var seq14765__$4 = cljs.core.next.call(null, seq14765__$3);
  return tiltontec.qxia.macros.navigation_page.cljs$core$IFn$_invoke$arity$variadic(G__14766, G__14767, G__14768, G__14769, seq14765__$4);
};
tiltontec.qxia.macros.navigation_page.cljs$lang$macro = true;
tiltontec.qxia.macros.form = function tiltontec$qxia$macros$form(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___14794 = arguments.length;
  var i__7286__auto___14795 = 0;
  while (true) {
    if (i__7286__auto___14795 < len__7285__auto___14794) {
      args__7292__auto__.push(arguments[i__7286__auto___14795]);
      var G__14796 = i__7286__auto___14795 + 1;
      i__7286__auto___14795 = G__14796;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 4 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(4), 0, null) : null;
  return tiltontec.qxia.macros.form.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7293__auto__);
};
tiltontec.qxia.macros.form.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__14786, p__14787, kids) {
  var vec__14788 = p__14786;
  var seq__14789 = cljs.core.seq.call(null, vec__14788);
  var top_args = seq__14789;
  var vec__14791 = p__14787;
  var seq__14792 = cljs.core.seq.call(null, vec__14791);
  var form_args = seq__14792;
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Single", "tiltontec.qxia.types/m.Single", -602074724)), 
  top_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "c?kids", "tiltontec.model.core/c?kids", -799249638, null)), function() {
      var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Form", "tiltontec.qxia.types/m.Form", 
      -409217225)), form_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), function() {
        var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "c?kids", "tiltontec.model.core/c?kids", -799249638, null)), kids)));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }())));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }())));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.qxia.macros.form.cljs$lang$maxFixedArity = 4;
tiltontec.qxia.macros.form.cljs$lang$applyTo = function(seq14781) {
  var G__14782 = cljs.core.first.call(null, seq14781);
  var seq14781__$1 = cljs.core.next.call(null, seq14781);
  var G__14783 = cljs.core.first.call(null, seq14781__$1);
  var seq14781__$2 = cljs.core.next.call(null, seq14781__$1);
  var G__14784 = cljs.core.first.call(null, seq14781__$2);
  var seq14781__$3 = cljs.core.next.call(null, seq14781__$2);
  var G__14785 = cljs.core.first.call(null, seq14781__$3);
  var seq14781__$4 = cljs.core.next.call(null, seq14781__$3);
  return tiltontec.qxia.macros.form.cljs$core$IFn$_invoke$arity$variadic(G__14782, G__14783, G__14784, G__14785, seq14781__$4);
};
tiltontec.qxia.macros.form.cljs$lang$macro = true;
tiltontec.qxia.macros.carousel = function tiltontec$qxia$macros$carousel(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___14805 = arguments.length;
  var i__7286__auto___14806 = 0;
  while (true) {
    if (i__7286__auto___14806 < len__7285__auto___14805) {
      args__7292__auto__.push(arguments[i__7286__auto___14806]);
      var G__14807 = i__7286__auto___14806 + 1;
      i__7286__auto___14806 = G__14807;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 3 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(3), 0, null) : null;
  return tiltontec.qxia.macros.carousel.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7293__auto__);
};
tiltontec.qxia.macros.carousel.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__14801, kids) {
  var vec__14802 = p__14801;
  var seq__14803 = cljs.core.seq.call(null, vec__14802);
  var top_args = seq__14803;
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Carousel", "tiltontec.qxia.types/m.Carousel", -1672753516)), 
  top_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "c?kids", "tiltontec.model.core/c?kids", -799249638, null)), kids)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.qxia.macros.carousel.cljs$lang$maxFixedArity = 3;
tiltontec.qxia.macros.carousel.cljs$lang$applyTo = function(seq14797) {
  var G__14798 = cljs.core.first.call(null, seq14797);
  var seq14797__$1 = cljs.core.next.call(null, seq14797);
  var G__14799 = cljs.core.first.call(null, seq14797__$1);
  var seq14797__$2 = cljs.core.next.call(null, seq14797__$1);
  var G__14800 = cljs.core.first.call(null, seq14797__$2);
  var seq14797__$3 = cljs.core.next.call(null, seq14797__$2);
  return tiltontec.qxia.macros.carousel.cljs$core$IFn$_invoke$arity$variadic(G__14798, G__14799, G__14800, seq14797__$3);
};
tiltontec.qxia.macros.carousel.cljs$lang$macro = true;
tiltontec.qxia.macros.drawer = function tiltontec$qxia$macros$drawer(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___14817 = arguments.length;
  var i__7286__auto___14818 = 0;
  while (true) {
    if (i__7286__auto___14818 < len__7285__auto___14817) {
      args__7292__auto__.push(arguments[i__7286__auto___14818]);
      var G__14819 = i__7286__auto___14818 + 1;
      i__7286__auto___14818 = G__14819;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 4 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(4), 0, null) : null;
  return tiltontec.qxia.macros.drawer.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7293__auto__);
};
tiltontec.qxia.macros.drawer.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, orientation, p__14813, kids) {
  var vec__14814 = p__14813;
  var seq__14815 = cljs.core.seq.call(null, vec__14814);
  var top_args = seq__14815;
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "qx-class", "qx-class", 701821141)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("js", "qx.ui.mobile.container.Drawer", "js/qx.ui.mobile.container.Drawer", -1115926667, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952)), function() {
    var x__7044__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "*par*", "tiltontec.model.core/*par*", 1276645059, null))))));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "orientation", "orientation", 623557579)), function() {
    var x__7044__auto__ = orientation;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), top_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "c?kids", "tiltontec.model.core/c?kids", -799249638, null)), kids)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.qxia.macros.drawer.cljs$lang$maxFixedArity = 4;
tiltontec.qxia.macros.drawer.cljs$lang$applyTo = function(seq14808) {
  var G__14809 = cljs.core.first.call(null, seq14808);
  var seq14808__$1 = cljs.core.next.call(null, seq14808);
  var G__14810 = cljs.core.first.call(null, seq14808__$1);
  var seq14808__$2 = cljs.core.next.call(null, seq14808__$1);
  var G__14811 = cljs.core.first.call(null, seq14808__$2);
  var seq14808__$3 = cljs.core.next.call(null, seq14808__$2);
  var G__14812 = cljs.core.first.call(null, seq14808__$3);
  var seq14808__$4 = cljs.core.next.call(null, seq14808__$3);
  return tiltontec.qxia.macros.drawer.cljs$core$IFn$_invoke$arity$variadic(G__14809, G__14810, G__14811, G__14812, seq14808__$4);
};
tiltontec.qxia.macros.drawer.cljs$lang$macro = true;
tiltontec.qxia.macros.collapsible = function tiltontec$qxia$macros$collapsible(var_args) {
  var args__7292__auto__ = [];
  var len__7285__auto___14829 = arguments.length;
  var i__7286__auto___14830 = 0;
  while (true) {
    if (i__7286__auto___14830 < len__7285__auto___14829) {
      args__7292__auto__.push(arguments[i__7286__auto___14830]);
      var G__14831 = i__7286__auto___14830 + 1;
      i__7286__auto___14830 = G__14831;
      continue;
    } else {
    }
    break;
  }
  var argseq__7293__auto__ = 4 < args__7292__auto__.length ? new cljs.core.IndexedSeq(args__7292__auto__.slice(4), 0, null) : null;
  return tiltontec.qxia.macros.collapsible.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7293__auto__);
};
tiltontec.qxia.macros.collapsible.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, title, p__14825, kids) {
  var vec__14826 = p__14825;
  var seq__14827 = cljs.core.seq.call(null, vec__14826);
  var top_args = seq__14827;
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "type", "type", 1174270348)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "qx-class", "qx-class", 701821141)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("js", "qx.ui.mobile.container.Collapsible", "js/qx.ui.mobile.container.Collapsible", 1030659332, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952)), function() {
    var x__7044__auto__ = cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, function() {
      var x__7044__auto__ = title;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }()))));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }(), top_args, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), function() {
    var x__7044__auto__ = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.core", "c?kids", "tiltontec.model.core/c?kids", -799249638, null)), kids)));
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
  }())));
};
tiltontec.qxia.macros.collapsible.cljs$lang$maxFixedArity = 4;
tiltontec.qxia.macros.collapsible.cljs$lang$applyTo = function(seq14820) {
  var G__14821 = cljs.core.first.call(null, seq14820);
  var seq14820__$1 = cljs.core.next.call(null, seq14820);
  var G__14822 = cljs.core.first.call(null, seq14820__$1);
  var seq14820__$2 = cljs.core.next.call(null, seq14820__$1);
  var G__14823 = cljs.core.first.call(null, seq14820__$2);
  var seq14820__$3 = cljs.core.next.call(null, seq14820__$2);
  var G__14824 = cljs.core.first.call(null, seq14820__$3);
  var seq14820__$4 = cljs.core.next.call(null, seq14820__$3);
  return tiltontec.qxia.macros.collapsible.cljs$core$IFn$_invoke$arity$variadic(G__14821, G__14822, G__14823, G__14824, seq14820__$4);
};
tiltontec.qxia.macros.collapsible.cljs$lang$macro = true;
goog.provide("hello_mobile.dialog_demos");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.model.core");
goog.require("tiltontec.util.core");
goog.require("tiltontec.qxia.core");
goog.require("tiltontec.qxia.types");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.qxia.base");
goog.require("tiltontec.cell.integrity");
goog.require("clojure.string");
goog.require("tiltontec.qxia.macros");
hello_mobile.dialog_demos.mood_face = function hello_mobile$dialog_demos$mood_face(me) {
  var mood = tiltontec.model.core.md_get.call(null, (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me)), new cljs.core.Keyword(null, "mood", "mood", -616134094));
  return function(mood) {
    return function(me__$1) {
      var ctx = tiltontec.qxia.base.qxme.call(null, me__$1).getContext2d();
      ctx.clearRect(0, 0, 300, 300);
      ctx["strokeStyle"] = function() {
        var G__14836 = mood instanceof cljs.core.Keyword ? mood.fqn : null;
        switch(G__14836) {
          case "happy":
            return "#FF0";
            break;
          case "sad":
            return "#F00";
            break;
          case "whatever":
            return "#000";
            break;
          default:
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(mood)].join(""));;
        }
      }();
      ctx["lineWidth"] = 3;
      ctx.beginPath();
      ctx.arc(75, 85, 50, 0, 2 * Math.PI, true);
      var G__14837_14839 = mood instanceof cljs.core.Keyword ? mood.fqn : null;
      switch(G__14837_14839) {
        case "sad":
          ctx.moveTo(60, 110);
          ctx.arc(75, 110, 15, Math.PI, 0, false);
          break;
        case "whatever":
          ctx.moveTo(55, 110);
          ctx.lineTo(95, 110);
          break;
        case "happy":
          ctx.moveTo(110, 85);
          ctx.arc(75, 85, 35, 0, Math.PI, false);
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(mood)].join(""));;
      }
      ctx.moveTo(65, 75);
      ctx.arc(60, 75, 5, 0, 2 * Math.PI, true);
      ctx.moveTo(95, 75);
      ctx.arc(90, 75, 5, 0, 2 * Math.PI, true);
      return ctx.stroke();
    };
  }(mood);
};
hello_mobile.dialog_demos.make_dialog_demos = function hello_mobile$dialog_demos$make_dialog_demos() {
  return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.VBox, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", 
  "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "group", "group", -2071839637, null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "showBorder", "showBorder", 1740360318), true, new cljs.core.Keyword(null, "mood", "mood", -616134094), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), new cljs.core.Keyword(null, "whatever", "whatever", -1293903397))], 
  null), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.Html", "tiltontec.qxia.types/m.Html", 112948600), new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "face-label", new cljs.core.Keyword(null, "html", "html", -998796897), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "m", "m", -1021758608, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), cljs.core.list(new cljs.core.Keyword(null, "par", "par", -61778778), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), new cljs.core.Keyword(null, "mood", "mood", -616134094))], null), cljs.core.list(new cljs.core.Symbol(null, 
  "case", "case", -1510733573, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null), new cljs.core.Keyword(null, "happy", "happy", 2026698856), "\x3ch1\x3eHi mom!\x3c/\x3e", new cljs.core.Keyword(null, "sad", "sad", 427137188), "\x3ci\x3eUh-oh\x3c/\x3e", "\x3ch3\x3ehmmm...\x3c/\x3e")))), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.Canvas", "tiltontec.qxia.types/m.Canvas", -1210794783), new cljs.core.Keyword(null, 
  "name", "name", 1843675177), new cljs.core.Keyword(null, "picasso", "picasso", -1388478491), new cljs.core.Keyword(null, "width", "width", -384071477), 175, new cljs.core.Keyword(null, "height", "height", 1025178622), 150, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", 
  -1846886512, null), cljs.core.list(new cljs.core.Keyword(null, "par", "par", -61778778), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), new cljs.core.Keyword(null, "mood", "mood", -616134094)), new cljs.core.Keyword(null, "sad", "sad", 427137188), "cool", new cljs.core.Keyword(null, "happy", "happy", 2026698856), "hot", new cljs.core.Keyword(null, "whatever", "whatever", -1293903397), 
  "mild")), new cljs.core.Keyword(null, "drawing", "drawing", 1181749528), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "mood-face", "mood-face", -1056372237, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["click", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "e", "e", -1273166571, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "md-reset!", "md-reset!", 1664918226, null), cljs.core.list(new cljs.core.Keyword(null, "par", "par", -61778778), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), new cljs.core.Keyword(null, 
  "mood", "mood", -616134094), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), cljs.core.list(new cljs.core.Keyword(null, "par", "par", -61778778), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), new cljs.core.Keyword(null, "mood", "mood", -616134094)), new cljs.core.Keyword(null, 
  "sad", "sad", 427137188), new cljs.core.Keyword(null, "happy", "happy", 2026698856), new cljs.core.Keyword(null, "happy", "happy", 2026698856), new cljs.core.Keyword(null, "whatever", "whatever", -1293903397), new cljs.core.Keyword(null, "whatever", "whatever", -1293903397), new cljs.core.Keyword(null, "sad", "sad", 427137188))))], null)), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "(Hint: click my face)"), cljs.core.list(new cljs.core.Symbol(null, "group", "group", 
  -2071839637, null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "dlgz", "dlgz", -144826244), new cljs.core.Keyword(null, "showBorder", "showBorder", 1740360318), true, new cljs.core.Keyword(null, "popper", "popper", -1817987657), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.Popup", "tiltontec.qxia.types/m.Popup", -929520812), new cljs.core.Keyword(null, "anchor", "anchor", 1549638489), new cljs.core.Symbol(null, "me", "me", 1501524834, 
  null), new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol(null, "c?kids", "c?kids", -1889993626, null), cljs.core.list(new cljs.core.Symbol(null, "vbox", "vbox", 1147743762, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "\x3ch2\x3eTold ya!\x3c/\x3e"), cljs.core.list(new cljs.core.Symbol(null, "button", "button", -1197855826, null), "Bang", new cljs.core.Keyword(null, "listeners", 
  "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["click", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "e", "e", -1273166571, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, ".hide", ".hide", 2094488282, null), cljs.core.list(new cljs.core.Symbol(null, "qxme", "qxme", 352016329, 
  null), cljs.core.list(new cljs.core.Keyword(null, "popper", "popper", -1817987657), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null))))))], null))))))), new cljs.core.Keyword(null, "itemz", "itemz", 991618309), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.Menu", "tiltontec.qxia.types/m.Menu", 459087806), new cljs.core.Keyword(null, "anchor", "anchor", 1549638489), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, null), cljs.core.list(new cljs.core.Symbol(null, "first", "first", 996428481, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)))], null), cljs.core.list(new cljs.core.Symbol(null, "nth", "nth", 1529209554, null), cljs.core.list(new cljs.core.Symbol(null, 
  "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)), 1)), new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null, "new", "new", -444906321, null), new cljs.core.Symbol("js", "qx.data.Array", "js/qx.data.Array", -1194809028, null), cljs.core.list(new cljs.core.Symbol(null, 
  "clj-\x3ejs", "clj-\x3ejs", -1880244676, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["item1", "item2", "item3"], null)))], null), new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["changeSelection", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "evt", "evt", 
  388964660, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "jd", "jd", -1112503864, null), cljs.core.list(new cljs.core.Symbol(null, "js-\x3eclj", "js-\x3eclj", 1544462432, null), cljs.core.list(new cljs.core.Symbol(null, ".getData", ".getData", 661342228, null), new cljs.core.Symbol(null, 
  "evt", "evt", 388964660, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "mo", "mo", -1216379761, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "menu-order", "menu-order", -509401348), new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null), new cljs.core.Keyword(null, "up?", 
  "up?", 77854972), false, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true)], null), cljs.core.list(new cljs.core.Symbol(null, "assert", "assert", 677428501, null), new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null)), cljs.core.list(new cljs.core.Symbol(null, "assert", "assert", 677428501, null), new cljs.core.Symbol(null, "mo", "mo", -1216379761, null)), cljs.core.list(new cljs.core.Symbol(null, "md-reset!", "md-reset!", 1664918226, null), new cljs.core.Symbol(null, 
  "mo", "mo", -1216379761, null), new cljs.core.Keyword(null, "order", "order", -1254677256), cljs.core.list(new cljs.core.Symbol(null, "get", "get", -971253014, null), new cljs.core.Symbol(null, "jd", "jd", -1112503864, null), "item")))))], null))))], null), cljs.core.list(new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.Atom", 
  "tiltontec.qxia.types/m.Atom", 973901835), new cljs.core.Keyword(null, "label", "label", 1718410804), "Careful...", new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["click", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "e", "e", -1273166571, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], 
  null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "dlgz", "dlgz", -144826244), new cljs.core.Symbol(null, "me", "me", 1501524834, null))], null), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "pop", "pop", -94247249, null), cljs.core.list(new cljs.core.Keyword(null, "popper", "popper", -1817987657), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null)))], null), cljs.core.list(new cljs.core.Symbol(null, ".show", ".show", -1684704222, null), cljs.core.list(new cljs.core.Symbol(null, 
  "qxme", "qxme", 352016329, null), new cljs.core.Symbol(null, "pop", "pop", -94247249, null))))))], null)), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.Atom", "tiltontec.qxia.types/m.Atom", 973901835), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "menu-order", "menu-order", -509401348), new cljs.core.Keyword(null, "label", "label", 1718410804), "Choose...", new cljs.core.Keyword(null, 
  "order", "order", -1254677256), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), null), new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["click", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "e", "e", -1273166571, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], 
  null), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "m", "m", -1021758608, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "dlgz", "dlgz", -144826244), new cljs.core.Symbol(null, "me", "me", 1501524834, 
  null)), new cljs.core.Keyword(null, "itemz", "itemz", 991618309))], null), cljs.core.list(new cljs.core.Symbol(null, ".show", ".show", -1684704222, null), cljs.core.list(new cljs.core.Symbol(null, "qxme", "qxme", 352016329, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))], null)), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "if-let", 
  "if-let", 1803593690, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "item", "item", 1889905329, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "menu-order", "menu-order", -509401348), new cljs.core.Symbol(null, "me", "me", 1501524834, null)), new cljs.core.Keyword(null, "order", "order", 
  -1254677256))], null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), " I'll have ", new cljs.core.Symbol(null, "item", "item", 1889905329, null)), "nada, thx")))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_14880 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
        var x__7044__auto__ = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Group", "tiltontec.qxia.types/m.Group", 1395438636), new cljs.core.Keyword(null, "showBorder", "showBorder", 1740360318), true, new cljs.core.Keyword(null, "mood", "mood", -616134094), tiltontec.cell.core.c_in.call(null, new cljs.core.Keyword(null, "whatever", "whatever", -1293903397)), new cljs.core.Keyword(null, "kids", "kids", 
        1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.Html", "tiltontec.qxia.types/m.Html", 112948600), new cljs.core.Keyword(null, "css-class", "css-class", -919455334), 
        "face-label", new cljs.core.Keyword(null, "html", "html", -998796897), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "m", "m", -1021758608, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), cljs.core.list(new cljs.core.Keyword(null, "par", "par", 
        -61778778), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), new cljs.core.Keyword(null, "mood", "mood", -616134094))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null), new cljs.core.Keyword(null, "happy", "happy", 2026698856), "\x3ch1\x3eHi mom!\x3c/\x3e", new cljs.core.Keyword(null, "sad", 
        "sad", 427137188), "\x3ci\x3eUh-oh\x3c/\x3e", "\x3ch3\x3ehmmm...\x3c/\x3e")))), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.Canvas", "tiltontec.qxia.types/m.Canvas", -1210794783), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "picasso", "picasso", -1388478491), new cljs.core.Keyword(null, "width", "width", -384071477), 175, new cljs.core.Keyword(null, "height", "height", 
        1025178622), 150, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), cljs.core.list(new cljs.core.Keyword(null, "par", "par", -61778778), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, 
        "me", "me", 1501524834, null))), new cljs.core.Keyword(null, "mood", "mood", -616134094)), new cljs.core.Keyword(null, "sad", "sad", 427137188), "cool", new cljs.core.Keyword(null, "happy", "happy", 2026698856), "hot", new cljs.core.Keyword(null, "whatever", "whatever", -1293903397), "mild")), new cljs.core.Keyword(null, "drawing", "drawing", 1181749528), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "mood-face", "mood-face", 
        -1056372237, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["click", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "e", "e", -1273166571, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, 
        "md-reset!", "md-reset!", 1664918226, null), cljs.core.list(new cljs.core.Keyword(null, "par", "par", -61778778), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), new cljs.core.Keyword(null, "mood", "mood", -616134094), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), cljs.core.list(new cljs.core.Keyword(null, 
        "par", "par", -61778778), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), new cljs.core.Keyword(null, "mood", "mood", -616134094)), new cljs.core.Keyword(null, "sad", "sad", 427137188), new cljs.core.Keyword(null, "happy", "happy", 2026698856), new cljs.core.Keyword(null, "happy", "happy", 2026698856), new cljs.core.Keyword(null, "whatever", "whatever", -1293903397), new cljs.core.Keyword(null, 
        "whatever", "whatever", -1293903397), new cljs.core.Keyword(null, "sad", "sad", 427137188))))], null)), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "(Hint: click my face)"), cljs.core.list(new cljs.core.Symbol(null, "group", "group", -2071839637, null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "dlgz", "dlgz", -144826244), new cljs.core.Keyword(null, 
        "showBorder", "showBorder", 1740360318), true, new cljs.core.Keyword(null, "popper", "popper", -1817987657), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, 
        "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.Popup", "tiltontec.qxia.types/m.Popup", -929520812), new cljs.core.Keyword(null, "anchor", "anchor", 1549638489), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol(null, "c?kids", "c?kids", -1889993626, null), cljs.core.list(new cljs.core.Symbol(null, "vbox", "vbox", 1147743762, null), cljs.core.PersistentVector.EMPTY, 
        cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "\x3ch2\x3eTold ya!\x3c/\x3e"), cljs.core.list(new cljs.core.Symbol(null, "button", "button", -1197855826, null), "Bang", new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["click", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
        "e", "e", -1273166571, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, ".hide", ".hide", 2094488282, null), cljs.core.list(new cljs.core.Symbol(null, "qxme", "qxme", 352016329, null), cljs.core.list(new cljs.core.Keyword(null, "popper", "popper", -1817987657), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null))))))], 
        null))))))), new cljs.core.Keyword(null, "itemz", "itemz", 991618309), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 
        1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.Menu", "tiltontec.qxia.types/m.Menu", 459087806), new cljs.core.Keyword(null, "anchor", "anchor", 1549638489), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, null), cljs.core.list(new cljs.core.Symbol(null, "first", "first", 996428481, null), cljs.core.list(new cljs.core.Symbol(null, 
        "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)))], null), cljs.core.list(new cljs.core.Symbol(null, "nth", "nth", 1529209554, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)), 1)), new cljs.core.Keyword(null, "qx-new-args", 
        "qx-new-args", -472417952), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null, "new", "new", -444906321, null), new cljs.core.Symbol("js", "qx.data.Array", "js/qx.data.Array", -1194809028, null), cljs.core.list(new cljs.core.Symbol(null, "clj-\x3ejs", "clj-\x3ejs", -1880244676, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["item1", "item2", "item3"], null)))], null), new cljs.core.Keyword(null, 
        "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["changeSelection", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "evt", "evt", 388964660, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 
        5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "jd", "jd", -1112503864, null), cljs.core.list(new cljs.core.Symbol(null, "js-\x3eclj", "js-\x3eclj", 1544462432, null), cljs.core.list(new cljs.core.Symbol(null, ".getData", ".getData", 661342228, null), new cljs.core.Symbol(null, "evt", "evt", 388964660, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
        [new cljs.core.Symbol(null, "mo", "mo", -1216379761, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "menu-order", "menu-order", -509401348), new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null), new cljs.core.Keyword(null, "up?", "up?", 77854972), false, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true)], null), cljs.core.list(new cljs.core.Symbol(null, "assert", "assert", 677428501, null), new cljs.core.Symbol(null, 
        "dlgz", "dlgz", 1495705283, null)), cljs.core.list(new cljs.core.Symbol(null, "assert", "assert", 677428501, null), new cljs.core.Symbol(null, "mo", "mo", -1216379761, null)), cljs.core.list(new cljs.core.Symbol(null, "md-reset!", "md-reset!", 1664918226, null), new cljs.core.Symbol(null, "mo", "mo", -1216379761, null), new cljs.core.Keyword(null, "order", "order", -1254677256), cljs.core.list(new cljs.core.Symbol(null, "get", "get", -971253014, null), new cljs.core.Symbol(null, "jd", "jd", 
        -1112503864, null), "item")))))], null))))], null), cljs.core.list(new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.Atom", "tiltontec.qxia.types/m.Atom", 973901835), new cljs.core.Keyword(null, "label", "label", 1718410804), "Careful...", new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 
        1, ["click", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "e", "e", -1273166571, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, 
        null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "dlgz", "dlgz", -144826244), new cljs.core.Symbol(null, "me", "me", 1501524834, null))], null), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "pop", "pop", -94247249, null), cljs.core.list(new cljs.core.Keyword(null, "popper", "popper", 
        -1817987657), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null)))], null), cljs.core.list(new cljs.core.Symbol(null, ".show", ".show", -1684704222, null), cljs.core.list(new cljs.core.Symbol(null, "qxme", "qxme", 352016329, null), new cljs.core.Symbol(null, "pop", "pop", -94247249, null))))))], null)), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), 
        new cljs.core.Keyword("tiltontec.qxia.types", "m.Atom", "tiltontec.qxia.types/m.Atom", 973901835), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "menu-order", "menu-order", -509401348), new cljs.core.Keyword(null, "label", "label", 1718410804), "Choose...", new cljs.core.Keyword(null, "order", "order", -1254677256), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), null), new cljs.core.Keyword(null, "listeners", "listeners", 
        394544445), new cljs.core.PersistentArrayMap(null, 1, ["click", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "e", "e", -1273166571, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
        [new cljs.core.Symbol(null, "m", "m", -1021758608, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "dlgz", "dlgz", -144826244), new cljs.core.Symbol(null, "me", "me", 1501524834, null)), new cljs.core.Keyword(null, "itemz", "itemz", 991618309))], null), cljs.core.list(new cljs.core.Symbol(null, ".show", ".show", -1684704222, null), cljs.core.list(new cljs.core.Symbol(null, 
        "qxme", "qxme", 352016329, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))], null)), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "item", "item", 1889905329, null), cljs.core.list(new cljs.core.Symbol(null, 
        "md-get", "md-get", -1846886512, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "menu-order", "menu-order", -509401348), new cljs.core.Symbol(null, "me", "me", 1501524834, null)), new cljs.core.Keyword(null, "order", "order", -1254677256))], null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), " I'll have ", new cljs.core.Symbol(null, "item", "item", 1889905329, null)), "nada, thx"))))))), new cljs.core.Keyword(null, 
        "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_14880, me, cache) {
          return function(slot_c_SHARP___$1) {
            var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
            var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
            var _STAR_par_STAR_14900 = tiltontec.model.core._STAR_par_STAR_;
            tiltontec.model.core._STAR_par_STAR_ = me__$1;
            try {
              return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
                var x__7044__auto__ = tiltontec.qxia.core.qx_make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "m.Html", "tiltontec.qxia.types/m.Html", 112948600), new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "face-label", new cljs.core.Keyword(null, "html", "html", -998796897), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), 
                new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "m", "m", -1021758608, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), cljs.core.list(new cljs.core.Keyword(null, "par", "par", -61778778), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), new cljs.core.Keyword(null, "mood", 
                "mood", -616134094))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null), new cljs.core.Keyword(null, "happy", "happy", 2026698856), "\x3ch1\x3eHi mom!\x3c/\x3e", new cljs.core.Keyword(null, "sad", "sad", 427137188), "\x3ci\x3eUh-oh\x3c/\x3e", "\x3ch3\x3ehmmm...\x3c/\x3e"))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", 
                "rule", 729973257), function(_STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache) {
                  return function(slot_c_SHARP___$2) {
                    var me__$2 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$2);
                    var cache__$2 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$2);
                    var m = tiltontec.model.core.md_get.call(null, (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me__$2)), new cljs.core.Keyword(null, "mood", "mood", -616134094));
                    var G__14902 = m instanceof cljs.core.Keyword ? m.fqn : null;
                    switch(G__14902) {
                      case "happy":
                        return "\x3ch1\x3eHi mom!\x3c/\x3e";
                        break;
                      case "sad":
                        return "\x3ci\x3eUh-oh\x3c/\x3e";
                        break;
                      default:
                        return "\x3ch3\x3ehmmm...\x3c/\x3e";
                    }
                  };
                }(_STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache)));
                return cljs.core._conj.call(null, function() {
                  var x__7044__auto____$1 = tiltontec.qxia.core.qx_make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "m.Canvas", "tiltontec.qxia.types/m.Canvas", -1210794783), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "picasso", "picasso", -1388478491), new cljs.core.Keyword(null, "width", "width", -384071477), 175, new cljs.core.Keyword(null, "height", "height", 1025178622), 150, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), 
                  tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), cljs.core.list(new cljs.core.Keyword(null, "par", "par", -61778778), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "me", "me", 
                  1501524834, null))), new cljs.core.Keyword(null, "mood", "mood", -616134094)), new cljs.core.Keyword(null, "sad", "sad", 427137188), "cool", new cljs.core.Keyword(null, "happy", "happy", 2026698856), "hot", new cljs.core.Keyword(null, "whatever", "whatever", -1293903397), "mild")), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, 
                  _STAR_par_STAR_14880, me, cache) {
                    return function(slot_c_SHARP___$2) {
                      var me__$2 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$2);
                      var cache__$2 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$2);
                      var G__14905 = tiltontec.model.core.md_get.call(null, (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me__$2)), new cljs.core.Keyword(null, "mood", "mood", -616134094)) instanceof cljs.core.Keyword ? tiltontec.model.core.md_get.call(null, (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me__$2)), new cljs.core.Keyword(null, "mood", "mood", -616134094)).fqn : 
                      null;
                      switch(G__14905) {
                        case "sad":
                          return "cool";
                          break;
                        case "happy":
                          return "hot";
                          break;
                        case "whatever":
                          return "mild";
                          break;
                        default:
                          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(tiltontec.model.core.md_get.call(null, (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me__$2)), new cljs.core.Keyword(null, "mood", "mood", -616134094)))].join(""));;
                      }
                    };
                  }(x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache)), new cljs.core.Keyword(null, "drawing", "drawing", 1181749528), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "mood-face", "mood-face", -1056372237, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, 
                  new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache) {
                    return function(slot_c_SHARP___$2) {
                      var me__$2 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$2);
                      var cache__$2 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$2);
                      return hello_mobile.dialog_demos.mood_face.call(null, me__$2);
                    };
                  }(x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache)), new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["click", function(x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache) {
                    return function(e, me__$2) {
                      return tiltontec.model.core.md_reset_BANG_.call(null, (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me__$2)), new cljs.core.Keyword(null, "mood", "mood", -616134094), function() {
                        var G__14906 = tiltontec.model.core.md_get.call(null, (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me__$2)), new cljs.core.Keyword(null, "mood", "mood", -616134094)) instanceof cljs.core.Keyword ? tiltontec.model.core.md_get.call(null, (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me__$2)), new cljs.core.Keyword(null, "mood", "mood", -616134094)).fqn : 
                        null;
                        switch(G__14906) {
                          case "sad":
                            return new cljs.core.Keyword(null, "happy", "happy", 2026698856);
                            break;
                          case "happy":
                            return new cljs.core.Keyword(null, "whatever", "whatever", -1293903397);
                            break;
                          case "whatever":
                            return new cljs.core.Keyword(null, "sad", "sad", 427137188);
                            break;
                          default:
                            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(tiltontec.model.core.md_get.call(null, (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me__$2)), new cljs.core.Keyword(null, "mood", "mood", -616134094)))].join(""));;
                        }
                      }());
                    };
                  }(x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache)], null));
                  return cljs.core._conj.call(null, function() {
                    var x__7044__auto____$2 = tiltontec.qxia.core.label.call(null, "(Hint: click my face)");
                    return cljs.core._conj.call(null, function() {
                      var x__7044__auto____$3 = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Group", "tiltontec.qxia.types/m.Group", 1395438636), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "dlgz", "dlgz", -144826244), new cljs.core.Keyword(null, "showBorder", "showBorder", 1740360318), true, new cljs.core.Keyword(null, "popper", "popper", -1817987657), tiltontec.cell.core.make_c_formula.call(null, 
                      new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", 
                      "m.Popup", "tiltontec.qxia.types/m.Popup", -929520812), new cljs.core.Keyword(null, "anchor", "anchor", 1549638489), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol(null, "c?kids", "c?kids", -1889993626, null), cljs.core.list(new cljs.core.Symbol(null, "vbox", "vbox", 1147743762, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", 
                      -936024965, null), "\x3ch2\x3eTold ya!\x3c/\x3e"), cljs.core.list(new cljs.core.Symbol(null, "button", "button", -1197855826, null), "Bang", new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["click", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "e", "e", -1273166571, null), new cljs.core.Symbol(null, 
                      "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, ".hide", ".hide", 2094488282, null), cljs.core.list(new cljs.core.Symbol(null, "qxme", "qxme", 352016329, null), cljs.core.list(new cljs.core.Keyword(null, "popper", "popper", -1817987657), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null))))))], null))))))), new cljs.core.Keyword(null, 
                      "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache) {
                        return function(slot_c_SHARP___$2) {
                          var me__$2 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$2);
                          var cache__$2 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$2);
                          var dlgz = me__$2;
                          return tiltontec.qxia.core.qx_make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "m.Popup", "tiltontec.qxia.types/m.Popup", -929520812), new cljs.core.Keyword(null, "anchor", "anchor", 1549638489), me__$2, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", 
                          -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "vbox", "vbox", 1147743762, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "\x3ch2\x3eTold ya!\x3c/\x3e"), cljs.core.list(new cljs.core.Symbol(null, "button", "button", -1197855826, null), "Bang", new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["click", cljs.core.list(new cljs.core.Symbol(null, 
                          "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "e", "e", -1273166571, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, ".hide", ".hide", 2094488282, null), cljs.core.list(new cljs.core.Symbol(null, "qxme", "qxme", 352016329, null), cljs.core.list(new cljs.core.Keyword(null, "popper", "popper", -1817987657), cljs.core.list(new cljs.core.Symbol("clojure.core", 
                          "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null))))))], null))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(dlgz, me__$2, cache__$2, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache) {
                            return function(slot_c_SHARP___$3) {
                              var me__$3 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$3);
                              var cache__$3 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$3);
                              var _STAR_par_STAR_14913 = tiltontec.model.core._STAR_par_STAR_;
                              tiltontec.model.core._STAR_par_STAR_ = me__$3;
                              try {
                                return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
                                  var x__7044__auto____$3 = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.VBox, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 
                                  1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "\x3ch2\x3eTold ya!\x3c/\x3e"), cljs.core.list(new cljs.core.Symbol(null, "button", "button", -1197855826, null), "Bang", new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["click", 
                                  cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "e", "e", -1273166571, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, ".hide", ".hide", 2094488282, null), cljs.core.list(new cljs.core.Symbol(null, "qxme", "qxme", 352016329, null), cljs.core.list(new cljs.core.Keyword(null, 
                                  "popper", "popper", -1817987657), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null))))))], null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_14913, me__$3, cache__$3, dlgz, me__$2, cache__$2, x__7044__auto____$2, x__7044__auto____$1, 
                                  x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache) {
                                    return function(slot_c_SHARP___$4) {
                                      var me__$4 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$4);
                                      var cache__$4 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$4);
                                      var _STAR_par_STAR_14915 = tiltontec.model.core._STAR_par_STAR_;
                                      tiltontec.model.core._STAR_par_STAR_ = me__$4;
                                      try {
                                        return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
                                          var x__7044__auto____$3 = tiltontec.qxia.core.label.call(null, "\x3ch2\x3eTold ya!\x3c/\x3e");
                                          return cljs.core._conj.call(null, function() {
                                            var x__7044__auto____$4 = tiltontec.qxia.core.button.call(null, "Bang", new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["click", function(x__7044__auto____$3, _STAR_par_STAR_14915, me__$4, cache__$4, _STAR_par_STAR_14913, me__$3, cache__$3, dlgz, me__$2, cache__$2, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache) {
                                              return function(e, me__$5) {
                                                return tiltontec.qxia.base.qxme.call(null, (new cljs.core.Keyword(null, "popper", "popper", -1817987657)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, dlgz))).hide();
                                              };
                                            }(x__7044__auto____$3, _STAR_par_STAR_14915, me__$4, cache__$4, _STAR_par_STAR_14913, me__$3, cache__$3, dlgz, me__$2, cache__$2, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache)], null));
                                            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$4);
                                          }(), x__7044__auto____$3);
                                        }()));
                                      } finally {
                                        tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_14915;
                                      }
                                    };
                                  }(_STAR_par_STAR_14913, me__$3, cache__$3, dlgz, me__$2, cache__$2, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache)));
                                  return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$3);
                                }()));
                              } finally {
                                tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_14913;
                              }
                            };
                          }(dlgz, me__$2, cache__$2, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache)));
                        };
                      }(x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache)), new cljs.core.Keyword(null, "itemz", "itemz", 991618309), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
                      "dlgz", "dlgz", 1495705283, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.Menu", "tiltontec.qxia.types/m.Menu", 459087806), new cljs.core.Keyword(null, "anchor", "anchor", 1549638489), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
                      [new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, null), cljs.core.list(new cljs.core.Symbol(null, "first", "first", 996428481, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)))], null), cljs.core.list(new cljs.core.Symbol(null, "nth", "nth", 1529209554, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", 
                      "md-get", -1846886512, null), new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)), 1)), new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null, "new", "new", -444906321, null), new cljs.core.Symbol("js", "qx.data.Array", "js/qx.data.Array", -1194809028, null), cljs.core.list(new cljs.core.Symbol(null, 
                      "clj-\x3ejs", "clj-\x3ejs", -1880244676, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["item1", "item2", "item3"], null)))], null), new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["changeSelection", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
                      "evt", "evt", 388964660, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "jd", "jd", -1112503864, null), cljs.core.list(new cljs.core.Symbol(null, "js-\x3eclj", "js-\x3eclj", 1544462432, null), cljs.core.list(new cljs.core.Symbol(null, ".getData", ".getData", 661342228, 
                      null), new cljs.core.Symbol(null, "evt", "evt", 388964660, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "mo", "mo", -1216379761, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "menu-order", "menu-order", -509401348), new cljs.core.Symbol(null, "dlgz", "dlgz", 
                      1495705283, null), new cljs.core.Keyword(null, "up?", "up?", 77854972), false, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true)], null), cljs.core.list(new cljs.core.Symbol(null, "assert", "assert", 677428501, null), new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null)), cljs.core.list(new cljs.core.Symbol(null, "assert", "assert", 677428501, null), new cljs.core.Symbol(null, "mo", "mo", -1216379761, null)), cljs.core.list(new cljs.core.Symbol(null, 
                      "md-reset!", "md-reset!", 1664918226, null), new cljs.core.Symbol(null, "mo", "mo", -1216379761, null), new cljs.core.Keyword(null, "order", "order", -1254677256), cljs.core.list(new cljs.core.Symbol(null, "get", "get", -971253014, null), new cljs.core.Symbol(null, "jd", "jd", -1112503864, null), "item")))))], null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto____$2, 
                      x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache) {
                        return function(slot_c_SHARP___$2) {
                          var me__$2 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$2);
                          var cache__$2 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$2);
                          var dlgz = me__$2;
                          return tiltontec.qxia.core.qx_make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "m.Menu", "tiltontec.qxia.types/m.Menu", 459087806), new cljs.core.Keyword(null, "anchor", "anchor", 1549638489), function() {
                            var hbox = cljs.core.first.call(null, tiltontec.model.core.md_get.call(null, dlgz, new cljs.core.Keyword(null, "kids", "kids", 1156670771)));
                            return cljs.core.nth.call(null, tiltontec.model.core.md_get.call(null, hbox, new cljs.core.Keyword(null, "kids", "kids", 1156670771)), 1);
                          }(), new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new qx.data.Array(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["item1", "item2", "item3"], null)))], null), new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["changeSelection", function(dlgz, 
                          me__$2, cache__$2, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache) {
                            return function(evt, me__$3) {
                              var jd = cljs.core.js__GT_clj.call(null, evt.getData());
                              var mo = tiltontec.model.core.fget.call(null, new cljs.core.Keyword(null, "menu-order", "menu-order", -509401348), dlgz, new cljs.core.Keyword(null, "up?", "up?", 77854972), false, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true);
                              if (cljs.core.truth_(dlgz)) {
                              } else {
                                throw new Error("Assert failed: dlgz");
                              }
                              if (cljs.core.truth_(mo)) {
                              } else {
                                throw new Error("Assert failed: mo");
                              }
                              return tiltontec.model.core.md_reset_BANG_.call(null, mo, new cljs.core.Keyword(null, "order", "order", -1254677256), cljs.core.get.call(null, jd, "item"));
                            };
                          }(dlgz, me__$2, cache__$2, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache)], null));
                        };
                      }(x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache)), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, 
                      "hbox", "hbox", 1014079882, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.Atom", "tiltontec.qxia.types/m.Atom", 973901835), new cljs.core.Keyword(null, "label", "label", 1718410804), "Careful...", new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["click", cljs.core.list(new cljs.core.Symbol(null, 
                      "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "e", "e", -1273166571, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null), cljs.core.list(new cljs.core.Symbol(null, 
                      "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "dlgz", "dlgz", -144826244), new cljs.core.Symbol(null, "me", "me", 1501524834, null))], null), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "pop", "pop", -94247249, null), cljs.core.list(new cljs.core.Keyword(null, "popper", "popper", -1817987657), cljs.core.list(new cljs.core.Symbol("clojure.core", 
                      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null)))], null), cljs.core.list(new cljs.core.Symbol(null, ".show", ".show", -1684704222, null), cljs.core.list(new cljs.core.Symbol(null, "qxme", "qxme", 352016329, null), new cljs.core.Symbol(null, "pop", "pop", -94247249, null))))))], null)), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", 
                      "m.Atom", "tiltontec.qxia.types/m.Atom", 973901835), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "menu-order", "menu-order", -509401348), new cljs.core.Keyword(null, "label", "label", 1718410804), "Choose...", new cljs.core.Keyword(null, "order", "order", -1254677256), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), null), new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 
                      1, ["click", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "e", "e", -1273166571, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
                      "m", "m", -1021758608, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "dlgz", "dlgz", -144826244), new cljs.core.Symbol(null, "me", "me", 1501524834, null)), new cljs.core.Keyword(null, "itemz", "itemz", 991618309))], null), cljs.core.list(new cljs.core.Symbol(null, ".show", ".show", -1684704222, null), cljs.core.list(new cljs.core.Symbol(null, 
                      "qxme", "qxme", 352016329, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))], null)), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "item", "item", 1889905329, null), 
                      cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "menu-order", "menu-order", -509401348), new cljs.core.Symbol(null, "me", "me", 1501524834, null)), new cljs.core.Keyword(null, "order", "order", -1254677256))], null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), " I'll have ", new cljs.core.Symbol(null, "item", 
                      "item", 1889905329, null)), "nada, thx")))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache) {
                        return function(slot_c_SHARP___$2) {
                          var me__$2 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$2);
                          var cache__$2 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$2);
                          var _STAR_par_STAR_14916 = tiltontec.model.core._STAR_par_STAR_;
                          tiltontec.model.core._STAR_par_STAR_ = me__$2;
                          try {
                            return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
                              var x__7044__auto____$3 = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.HBox, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), 
                              cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.Atom", "tiltontec.qxia.types/m.Atom", 973901835), new cljs.core.Keyword(null, "label", "label", 1718410804), "Careful...", new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 
                              1, ["click", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "e", "e", -1273166571, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
                              "dlgz", "dlgz", 1495705283, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "dlgz", "dlgz", -144826244), new cljs.core.Symbol(null, "me", "me", 1501524834, null))], null), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "pop", "pop", -94247249, null), cljs.core.list(new cljs.core.Keyword(null, 
                              "popper", "popper", -1817987657), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dlgz", "dlgz", 1495705283, null)))], null), cljs.core.list(new cljs.core.Symbol(null, ".show", ".show", -1684704222, null), cljs.core.list(new cljs.core.Symbol(null, "qxme", "qxme", 352016329, null), new cljs.core.Symbol(null, "pop", "pop", -94247249, null))))))], null)), cljs.core.list(new cljs.core.Symbol(null, 
                              "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.Atom", "tiltontec.qxia.types/m.Atom", 973901835), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "menu-order", "menu-order", -509401348), new cljs.core.Keyword(null, "label", "label", 1718410804), "Choose...", new cljs.core.Keyword(null, "order", "order", -1254677256), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), 
                              null), new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["click", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "e", "e", -1273166571, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, 
                              null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "m", "m", -1021758608, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "dlgz", "dlgz", -144826244), new cljs.core.Symbol(null, "me", "me", 1501524834, null)), new cljs.core.Keyword(null, "itemz", "itemz", 991618309))], 
                              null), cljs.core.list(new cljs.core.Symbol(null, ".show", ".show", -1684704222, null), cljs.core.list(new cljs.core.Symbol(null, "qxme", "qxme", 352016329, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))], null)), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.PersistentVector(null, 
                              2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "item", "item", 1889905329, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "menu-order", "menu-order", -509401348), new cljs.core.Symbol(null, "me", "me", 1501524834, null)), new cljs.core.Keyword(null, "order", "order", -1254677256))], null), cljs.core.list(new cljs.core.Symbol(null, 
                              "str", "str", -1564826950, null), " I'll have ", new cljs.core.Symbol(null, "item", "item", 1889905329, null)), "nada, thx"))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_14916, me__$2, cache__$2, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache) {
                                return function(slot_c_SHARP___$3) {
                                  var me__$3 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$3);
                                  var cache__$3 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$3);
                                  var _STAR_par_STAR_14918 = tiltontec.model.core._STAR_par_STAR_;
                                  tiltontec.model.core._STAR_par_STAR_ = me__$3;
                                  try {
                                    return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
                                      var x__7044__auto____$3 = tiltontec.qxia.core.qx_make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "m.Atom", "tiltontec.qxia.types/m.Atom", 973901835), new cljs.core.Keyword(null, "label", "label", 1718410804), "Careful...", new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["click", function(_STAR_par_STAR_14918, me__$3, cache__$3, _STAR_par_STAR_14916, me__$2, cache__$2, x__7044__auto____$2, 
                                      x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache) {
                                        return function(e, me__$4) {
                                          var dlgz = tiltontec.model.core.fget.call(null, new cljs.core.Keyword(null, "dlgz", "dlgz", -144826244), me__$4);
                                          var temp__4425__auto__ = (new cljs.core.Keyword(null, "popper", "popper", -1817987657)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, dlgz));
                                          if (cljs.core.truth_(temp__4425__auto__)) {
                                            var pop = temp__4425__auto__;
                                            return tiltontec.qxia.base.qxme.call(null, pop).show();
                                          } else {
                                            return null;
                                          }
                                        };
                                      }(_STAR_par_STAR_14918, me__$3, cache__$3, _STAR_par_STAR_14916, me__$2, cache__$2, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache)], null));
                                      return cljs.core._conj.call(null, function() {
                                        var x__7044__auto____$4 = tiltontec.qxia.core.qx_make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "m.Atom", "tiltontec.qxia.types/m.Atom", 973901835), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "menu-order", "menu-order", -509401348), new cljs.core.Keyword(null, "label", "label", 1718410804), "Choose...", new cljs.core.Keyword(null, "order", "order", -1254677256), tiltontec.cell.core.c_in.call(null, null), 
                                        new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["click", function(x__7044__auto____$3, _STAR_par_STAR_14918, me__$3, cache__$3, _STAR_par_STAR_14916, me__$2, cache__$2, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache) {
                                          return function(e, me__$4) {
                                            var temp__4425__auto__ = tiltontec.model.core.md_get.call(null, tiltontec.model.core.fget.call(null, new cljs.core.Keyword(null, "dlgz", "dlgz", -144826244), me__$4), new cljs.core.Keyword(null, "itemz", "itemz", 991618309));
                                            if (cljs.core.truth_(temp__4425__auto__)) {
                                              var m = temp__4425__auto__;
                                              return tiltontec.qxia.base.qxme.call(null, m).show();
                                            } else {
                                              return null;
                                            }
                                          };
                                        }(x__7044__auto____$3, _STAR_par_STAR_14918, me__$3, cache__$3, _STAR_par_STAR_14916, me__$2, cache__$2, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache)], null));
                                        return cljs.core._conj.call(null, function() {
                                          var x__7044__auto____$5 = tiltontec.qxia.core.label.call(null, tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "item", "item", 1889905329, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", 
                                          "md-get", -1846886512, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "menu-order", "menu-order", -509401348), new cljs.core.Symbol(null, "me", "me", 1501524834, null)), new cljs.core.Keyword(null, "order", "order", -1254677256))], null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), " I'll have ", new cljs.core.Symbol(null, "item", "item", 1889905329, null)), "nada, thx")), 
                                          new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto____$4, x__7044__auto____$3, _STAR_par_STAR_14918, me__$3, cache__$3, _STAR_par_STAR_14916, me__$2, cache__$2, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache) {
                                            return function(slot_c_SHARP___$4) {
                                              var me__$4 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$4);
                                              var cache__$4 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$4);
                                              var temp__4423__auto__ = tiltontec.model.core.md_get.call(null, tiltontec.model.core.fget.call(null, new cljs.core.Keyword(null, "menu-order", "menu-order", -509401348), me__$4), new cljs.core.Keyword(null, "order", "order", -1254677256));
                                              if (cljs.core.truth_(temp__4423__auto__)) {
                                                var item = temp__4423__auto__;
                                                return [cljs.core.str(" I'll have "), cljs.core.str(item)].join("");
                                              } else {
                                                return "nada, thx";
                                              }
                                            };
                                          }(x__7044__auto____$4, x__7044__auto____$3, _STAR_par_STAR_14918, me__$3, cache__$3, _STAR_par_STAR_14916, me__$2, cache__$2, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache)));
                                          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$5);
                                        }(), x__7044__auto____$4);
                                      }(), x__7044__auto____$3);
                                    }()));
                                  } finally {
                                    tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_14918;
                                  }
                                };
                              }(_STAR_par_STAR_14916, me__$2, cache__$2, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache)));
                              return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$3);
                            }()));
                          } finally {
                            tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_14916;
                          }
                        };
                      }(x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14900, me__$1, cache__$1, _STAR_par_STAR_14880, me, cache)));
                      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$3);
                    }(), x__7044__auto____$2);
                  }(), x__7044__auto____$1);
                }(), x__7044__auto__);
              }()));
            } finally {
              tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_14900;
            }
          };
        }(_STAR_par_STAR_14880, me, cache)));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }()));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_14880;
    }
  }));
};
goog.provide("tiltontec.util.core_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("clojure.set");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
tiltontec.util.core_test.fake_cl = function tiltontec$util$core_test$fake_cl() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$fake_cl.cljs$lang$var);
};
tiltontec.util.core_test.fake_cl.cljs$lang$test = function() {
  try {
    var values__12844__auto___15376 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = function() {
        var result__8295__auto__ = 42;
        return result__8295__auto__;
      }();
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___15377 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15376);
    if (cljs.core.truth_(result__12845__auto___15377)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "prog1", "utm/prog1", -359814004, null), 42, 43, 44)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core._EQ_, values__12844__auto___15376), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "prog1", "utm/prog1", -359814004, null), 42, 43, 44)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15376);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15368) {
    var t__12882__auto___15378 = e15368;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "prog1", "utm/prog1", -359814004, null), 42, 43, 44)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15378, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15379 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = function() {
        var temp__4425__auto__ = 21 + 21;
        if (cljs.core.truth_(temp__4425__auto__)) {
          var x = temp__4425__auto__;
          return x;
        } else {
          return null;
        }
      }();
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___15380 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15379);
    if (cljs.core.truth_(result__12845__auto___15380)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), cljs.core.list(new cljs.core.Symbol(null, 
      "+", "+", -740910886, null), 21, 21), 42, new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15379), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), cljs.core.list(new cljs.core.Symbol(null, 
      "+", "+", -740910886, null), 21, 21), 42, new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15379);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15369) {
    var t__12882__auto___15381 = e15369;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), cljs.core.list(new cljs.core.Symbol(null, 
    "+", "+", -740910886, null), 21, 21), 42, new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15381, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15382 = function() {
      var x__7044__auto__ = function() {
        var temp__4425__auto__ = false;
        if (temp__4425__auto__) {
          var x = temp__4425__auto__;
          return 42;
        } else {
          return null;
        }
      }();
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15383 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___15382);
    if (cljs.core.truth_(result__12845__auto___15383)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), false, 43, 42)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___15382), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), false, 43, 42)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___15382);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15370) {
    var t__12882__auto___15384 = e15370;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), false, 43, 42)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15384, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15385 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.util.core.cl_find.call(null, 42, cljs.core.list(41, 42, 43));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___15386 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15385);
    if (cljs.core.truth_(result__12845__auto___15386)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(41, 42, 43)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15385), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(41, 42, 43)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15385);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15371) {
    var t__12882__auto___15387 = e15371;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
    null), cljs.core.list(41, 42, 43)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15387, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15388 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.util.core.cl_find.call(null, 42, cljs.core.list(42, 43, 44));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___15389 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15388);
    if (cljs.core.truth_(result__12845__auto___15389)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(42, 43, 44)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15388), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(42, 43, 44)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15388);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15372) {
    var t__12882__auto___15390 = e15372;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
    null), cljs.core.list(42, 43, 44)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15390, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15391 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.util.core.cl_find.call(null, 42, cljs.core.list(40, 41, 42));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___15392 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15391);
    if (cljs.core.truth_(result__12845__auto___15392)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(40, 41, 42)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15391), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(40, 41, 42)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15391);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15373) {
    var t__12882__auto___15393 = e15373;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
    null), cljs.core.list(40, 41, 42)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15393, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15394 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core._EQ_.call(null, 2, 3) ? null : function() {
        return 42;
      }();
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___15395 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15394);
    if (cljs.core.truth_(result__12845__auto___15395)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 
      2, 3), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15394), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 
      2, 3), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15394);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15374) {
    var t__12882__auto___15396 = e15374;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 
    2, 3), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15396, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = function() {
      var x__7044__auto__ = cljs.core._EQ_.call(null, 2, 2) ? null : function() {
        return 42;
      }();
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, 
      2), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, 
      2), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15375) {
    var t__12882__auto__ = e15375;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 
    2, 2), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.fake_cl.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.fake_cl;
}, new cljs.core.Symbol("tiltontec.util.core-test", "fake-cl", "tiltontec.util.core-test/fake-cl", -187163971, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fake-cl", "fake-cl", -506046351, null), "test/tiltontec/util/core_test.cljc", 17, 1, 22, 22, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.fake_cl) ? 
tiltontec.util.core_test.fake_cl.cljs$lang$test : null]));
tiltontec.util.core_test.setify = function tiltontec$util$core_test$setify() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$setify.cljs$lang$var);
};
tiltontec.util.core_test.setify.cljs$lang$test = function() {
  try {
    var values__12844__auto___15404 = function() {
      var x__7044__auto__ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.util.core.set_ify.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 2, 2, 3, 3], null));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15405 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15404);
    if (cljs.core.truth_(result__12845__auto___15405)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 2, 2, 3, 3], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15404), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 2, 2, 3, 3], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15404);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15397) {
    var t__12882__auto___15406 = e15397;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 2, 2, 3, 3], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15406, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15407 = function() {
      var x__7044__auto__ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.util.core.set_ify.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 3), 3), 2), 2), 1), 1));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15408 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15407);
    if (cljs.core.truth_(result__12845__auto___15408)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 1, 2, 2, 3, 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15407), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 1, 2, 2, 3, 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15407);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15398) {
    var t__12882__auto___15409 = e15398;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 1, 2, 2, 3, 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15409, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15410 = function() {
      var x__7044__auto__ = cljs.core.PersistentHashSet.EMPTY;
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.util.core.set_ify.call(null, null);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15411 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15410);
    if (cljs.core.truth_(result__12845__auto___15411)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), null)), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15410), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), null)), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15410);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15399) {
    var t__12882__auto___15412 = e15399;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), null)), new cljs.core.Keyword(null, "actual", "actual", 
    107306363), t__12882__auto___15412, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15413 = function() {
      var x__7044__auto__ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.util.core.set_ify.call(null, 42);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15414 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15413);
    if (cljs.core.truth_(result__12845__auto___15414)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
      174791520, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15413), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
      174791520, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15413);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15400) {
    var t__12882__auto___15415 = e15400;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
    174791520, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15415, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15416 = function() {
      var x__7044__auto__ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["bob", null], null), null);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.util.core.set_ify.call(null, "bob");
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15417 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15416);
    if (cljs.core.truth_(result__12845__auto___15417)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["bob", null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
      174791520, null), "bob")), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15416), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["bob", null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
      174791520, null), "bob")), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15416);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15401) {
    var t__12882__auto___15418 = e15401;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["bob", null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
    174791520, null), "bob")), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15418, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15419 = function() {
      var x__7044__auto__ = cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null)], true);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.util.core.set_ify.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15420 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15419);
    if (cljs.core.truth_(result__12845__auto___15420)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null)], true), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15419), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null)], true), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15419);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15402) {
    var t__12882__auto___15421 = e15402;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null)], true), cljs.core.list(new cljs.core.Symbol(null, 
    "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15421, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = function() {
      var x__7044__auto__ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = clojure.set.difference.call(null, tiltontec.util.core.set_ify.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 42], null)), tiltontec.util.core.set_ify.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), 1)));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol("cset", "difference", 
      "cset/difference", -754182536, null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 42], null)), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 2)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol("cset", "difference", 
      "cset/difference", -754182536, null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 42], null)), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 2)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15403) {
    var t__12882__auto__ = e15403;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol("cset", "difference", 
    "cset/difference", -754182536, null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 42], null)), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 2)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.setify.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.setify;
}, new cljs.core.Symbol("tiltontec.util.core-test", "setify", "tiltontec.util.core-test/setify", -128931653, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "setify", "setify", 86404727, null), "test/tiltontec/util/core_test.cljc", 16, 1, 36, 36, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.setify) ? 
tiltontec.util.core_test.setify.cljs$lang$test : null]));
tiltontec.util.core_test.jj_boom = function tiltontec$util$core_test$jj_boom(ref) {
  return (new cljs.core.Keyword(null, "boom", "boom", 984913816)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.util.core_test.test_rmap = function tiltontec$util$core_test$test_rmap() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$test_rmap.cljs$lang$var);
};
tiltontec.util.core_test.test_rmap.cljs$lang$test = function() {
  var x = tiltontec.util.core.ia_ref.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), 0, new cljs.core.Keyword(null, "boom", "boom", 984913816), 42], null));
  try {
    var values__12844__auto___15427 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.util.core_test.jj_boom.call(null, x);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___15428 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15427);
    if (cljs.core.truth_(result__12845__auto___15428)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "jj-boom", "jj-boom", -75708647, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15427), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "jj-boom", "jj-boom", -75708647, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15427);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15422) {
    var t__12882__auto___15429 = e15422;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "jj-boom", "jj-boom", -75708647, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15429, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15430 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 0);
    var result__12845__auto___15431 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15430);
    if (cljs.core.truth_(result__12845__auto___15431)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15430), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15430);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15423) {
    var t__12882__auto___15432 = e15423;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15432, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), x], null), 42);
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "xxx", "xxx", -1019301908), x, cljs.core.deref.call(null, x), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x)));
  try {
    var values__12844__auto___15433 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___15434 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15433);
    if (cljs.core.truth_(result__12845__auto___15434)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15433), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15433);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15424) {
    var t__12882__auto___15435 = e15424;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15435, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__12847__auto___15436 = function() {
      var j = tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), x], null), 43);
      return cljs.core._EQ_.call(null, 43, j);
    }();
    if (value__12847__auto___15436) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "j", "j", 242556762, null), cljs.core.list(new cljs.core.Symbol(null, 
      "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 43))], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, new cljs.core.Symbol(null, "j", "j", 242556762, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__12847__auto___15436, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "j", "j", 242556762, null), cljs.core.list(new cljs.core.Symbol(null, 
      "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 43))], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, new cljs.core.Symbol(null, "j", "j", 242556762, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__12847__auto___15436, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15425) {
    var t__12882__auto___15437 = e15425;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "j", "j", 242556762, null), cljs.core.list(new cljs.core.Symbol(null, 
    "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 43))], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, new cljs.core.Symbol(null, "j", "j", 242556762, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15437, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), x], null), 44);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 44);
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 44, cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 44))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 44, cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 44))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15426) {
    var t__12882__auto__ = e15426;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 44, cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 44))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.test_rmap.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.test_rmap;
}, new cljs.core.Symbol("tiltontec.util.core-test", "test-rmap", "tiltontec.util.core-test/test-rmap", 589953074, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "test-rmap", "test-rmap", 786413294, null), "test/tiltontec/util/core_test.cljc", 19, 1, 49, 49, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.util.core_test.test_rmap) ? tiltontec.util.core_test.test_rmap.cljs$lang$test : null]));
tiltontec.util.core_test.err_handling = function tiltontec$util$core_test$err_handling() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$err_handling.cljs$lang$var);
};
tiltontec.util.core_test.err_handling.cljs$lang$test = function() {
  try {
    try {
      tiltontec.util.core.err.call(null, "boom");
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, null), "boom")), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e15439) {
      if (e15439 instanceof Error) {
        var e__12871__auto___15452 = e15439;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, null), "boom")), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), e__12871__auto___15452, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        throw e15439;
      }
    }
  } catch (e15438) {
    var t__12882__auto___15453 = e15438;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, null), "boom")), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15453, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    try {
      tiltontec.util.core.err.call(null, "boom");
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /oom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
      null), "boom")), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e15441) {
      if (e15441 instanceof Error) {
        var e__12876__auto___15454 = e15441;
        var m__12877__auto___15455 = e__12876__auto___15454.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /oom/, m__12877__auto___15455))) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /oom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
          null), "boom")), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__12876__auto___15454, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /oom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
          null), "boom")), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__12876__auto___15454, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } else {
        throw e15441;
      }
    }
  } catch (e15440) {
    var t__12882__auto___15456 = e15440;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /oom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
    null), "boom")), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15456, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    try {
      tiltontec.util.core.err.call(null, cljs.core.str, "Hi ", new cljs.core.Symbol(null, "mom", "mom", 320137679, null));
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Hi mom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
      null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "mom", "mom", 320137679, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e15443) {
      if (e15443 instanceof Error) {
        var e__12876__auto___15457 = e15443;
        var m__12877__auto___15458 = e__12876__auto___15457.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /Hi mom/, m__12877__auto___15458))) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Hi mom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
          null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "mom", "mom", 320137679, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__12876__auto___15457, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Hi mom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
          null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "mom", "mom", 320137679, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__12876__auto___15457, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } else {
        throw e15443;
      }
    }
  } catch (e15442) {
    var t__12882__auto___15459 = e15442;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Hi mom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
    null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "mom", "mom", 320137679, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15459, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15460 = function() {
      var x__7044__auto__ = tiltontec.util.core.any_ref_QMARK_.call(null, null);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15461 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___15460);
    if (cljs.core.truth_(result__12845__auto___15461)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core.not, values__12844__auto___15460), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___15460);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15444) {
    var t__12882__auto___15462 = e15444;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15462, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15463 = function() {
      var x__7044__auto__ = tiltontec.util.core.any_ref_QMARK_.call(null, 42);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15464 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___15463);
    if (cljs.core.truth_(result__12845__auto___15464)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core.not, values__12844__auto___15463), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___15463);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15445) {
    var t__12882__auto___15465 = e15445;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15465, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15466 = function() {
      var x__7044__auto__ = tiltontec.util.core.any_ref_QMARK_.call(null, cljs.core.PersistentVector.EMPTY);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15467 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___15466);
    if (cljs.core.truth_(result__12845__auto___15467)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), cljs.core.PersistentVector.EMPTY)), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core.cons.call(null, cljs.core.not, values__12844__auto___15466), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), cljs.core.PersistentVector.EMPTY)), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___15466);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15446) {
    var t__12882__auto___15468 = e15446;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), cljs.core.PersistentVector.EMPTY)), new cljs.core.Keyword(null, "actual", "actual", 
    107306363), t__12882__auto___15468, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = function() {
        var sb__7196__auto__ = new goog.string.StringBuffer;
        var _STAR_print_newline_STAR_15450_15469 = cljs.core._STAR_print_newline_STAR_;
        var _STAR_print_fn_STAR_15451_15470 = cljs.core._STAR_print_fn_STAR_;
        cljs.core._STAR_print_newline_STAR_ = true;
        cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_newline_STAR_15450_15469, _STAR_print_fn_STAR_15451_15470, sb__7196__auto__) {
          return function(x__7197__auto__) {
            return sb__7196__auto__.append(x__7197__auto__);
          };
        }(_STAR_print_newline_STAR_15450_15469, _STAR_print_fn_STAR_15451_15470, sb__7196__auto__);
        try {
          tiltontec.util.core.wtrx_test.call(null, 3);
        } finally {
          cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_15451_15470;
          cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_15450_15469;
        }
        return [cljs.core.str(sb__7196__auto__)].join("");
      }();
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), ". test: 3\n.. test: 2\n... test: 1\n.... test: 0\n");
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), ". test: 3\n.. test: 2\n... test: 1\n.... test: 0\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
      "wtrx-test", "wtrx-test", 1124366211, null), 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), ". test: 3\n.. test: 2\n... test: 1\n.... test: 0\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
      "wtrx-test", "wtrx-test", 1124366211, null), 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15447) {
    var t__12882__auto__ = e15447;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), ". test: 3\n.. test: 2\n... test: 1\n.... test: 0\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
    "wtrx-test", "wtrx-test", 1124366211, null), 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.err_handling.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.err_handling;
}, new cljs.core.Symbol("tiltontec.util.core-test", "err-handling", "tiltontec.util.core-test/err-handling", 432282689, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "err-handling", "err-handling", 751948053, null), "test/tiltontec/util/core_test.cljc", 22, 1, 64, 64, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.util.core_test.err_handling) ? tiltontec.util.core_test.err_handling.cljs$lang$test : null]));
tiltontec.util.core_test.fifo_build = function tiltontec$util$core_test$fifo_build() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$fifo_build.cljs$lang$var);
};
tiltontec.util.core_test.fifo_build.cljs$lang$test = function() {
  var q = tiltontec.util.core.make_fifo_queue.call(null);
  try {
    var values__12844__auto___15484 = function() {
      var x__7044__auto__ = q;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15485 = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__12844__auto___15484);
    if (cljs.core.truth_(result__12845__auto___15485)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__12844__auto___15484), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__12844__auto___15484);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15471) {
    var t__12882__auto___15486 = e15471;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15486, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15487 = function() {
      var x__7044__auto__ = tiltontec.util.core.fifo_peek.call(null, q);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15488 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___15487);
    if (cljs.core.truth_(result__12845__auto___15488)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___15487), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___15487);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15472) {
    var t__12882__auto___15489 = e15472;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15489, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15490 = function() {
      var x__7044__auto__ = tiltontec.util.core.fifo_pop.call(null, q);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15491 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___15490);
    if (cljs.core.truth_(result__12845__auto___15491)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___15490), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___15490);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15473) {
    var t__12882__auto___15492 = e15473;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15492, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15493 = function() {
      var x__7044__auto__ = tiltontec.util.core.fifo_data.call(null, q);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15494 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__12844__auto___15493);
    if (cljs.core.truth_(result__12845__auto___15494)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__12844__auto___15493), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__12844__auto___15493);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15474) {
    var t__12882__auto___15495 = e15474;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15495, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.core.fifo_add.call(null, q, 1);
  try {
    var values__12844__auto___15496 = function() {
      var x__7044__auto__ = tiltontec.util.core.fifo_empty_QMARK_.call(null, q);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15497 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___15496);
    if (cljs.core.truth_(result__12845__auto___15497)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__12844__auto___15496), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___15496);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15475) {
    var t__12882__auto___15498 = e15475;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15498, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15499 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.util.core.fifo_peek.call(null, q);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15500 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15499);
    if (cljs.core.truth_(result__12845__auto___15500)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15499), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15499);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15476) {
    var t__12882__auto___15501 = e15476;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15501, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15502 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.util.core.fifo_pop.call(null, q);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15503 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15502);
    if (cljs.core.truth_(result__12845__auto___15503)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15502), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15502);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15477) {
    var t__12882__auto___15504 = e15477;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15504, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15505 = function() {
      var x__7044__auto__ = q;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15506 = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__12844__auto___15505);
    if (cljs.core.truth_(result__12845__auto___15506)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__12844__auto___15505), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__12844__auto___15505);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15478) {
    var t__12882__auto___15507 = e15478;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15507, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  tiltontec.util.core.fifo_add.call(null, q, 1);
  tiltontec.util.core.fifo_add.call(null, q, 2);
  try {
    var values__12844__auto___15508 = function() {
      var x__7044__auto__ = tiltontec.util.core.fifo_empty_QMARK_.call(null, q);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15509 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___15508);
    if (cljs.core.truth_(result__12845__auto___15509)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__12844__auto___15508), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___15508);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15479) {
    var t__12882__auto___15510 = e15479;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15510, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15511 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.util.core.fifo_peek.call(null, q);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15512 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15511);
    if (cljs.core.truth_(result__12845__auto___15512)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15511), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15511);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15480) {
    var t__12882__auto___15513 = e15480;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15513, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15514 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.util.core.fifo_pop.call(null, q);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15515 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15514);
    if (cljs.core.truth_(result__12845__auto___15515)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15514), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15514);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15481) {
    var t__12882__auto___15516 = e15481;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15516, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15517 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.util.core.fifo_pop.call(null, q);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 2);
    var result__12845__auto___15518 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15517);
    if (cljs.core.truth_(result__12845__auto___15518)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15517), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15517);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15482) {
    var t__12882__auto___15519 = e15482;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15519, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = function() {
      var x__7044__auto__ = q;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto__ = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15483) {
    var t__12882__auto__ = e15483;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.fifo_build.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.fifo_build;
}, new cljs.core.Symbol("tiltontec.util.core-test", "fifo-build", "tiltontec.util.core-test/fifo-build", 1265681264, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fifo-build", "fifo-build", 1577255980, null), "test/tiltontec/util/core_test.cljc", 20, 1, 90, 90, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.util.core_test.fifo_build) ? tiltontec.util.core_test.fifo_build.cljs$lang$test : null]));
tiltontec.util.core_test.fifo_build_test = function tiltontec$util$core_test$fifo_build_test() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$fifo_build_test.cljs$lang$var);
};
tiltontec.util.core_test.fifo_build_test.cljs$lang$test = function() {
  var q = tiltontec.util.core.make_fifo_queue.call(null);
  try {
    var values__12844__auto___15533 = function() {
      var x__7044__auto__ = q;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15534 = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__12844__auto___15533);
    if (cljs.core.truth_(result__12845__auto___15534)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__12844__auto___15533), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__12844__auto___15533);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15520) {
    var t__12882__auto___15535 = e15520;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15535, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15536 = function() {
      var x__7044__auto__ = tiltontec.util.core.fifo_peek.call(null, q);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15537 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___15536);
    if (cljs.core.truth_(result__12845__auto___15537)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___15536), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___15536);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15521) {
    var t__12882__auto___15538 = e15521;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15538, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15539 = function() {
      var x__7044__auto__ = tiltontec.util.core.fifo_pop.call(null, q);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15540 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___15539);
    if (cljs.core.truth_(result__12845__auto___15540)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___15539), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___15539);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15522) {
    var t__12882__auto___15541 = e15522;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15541, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15542 = function() {
      var x__7044__auto__ = tiltontec.util.core.fifo_data.call(null, q);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15543 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__12844__auto___15542);
    if (cljs.core.truth_(result__12845__auto___15543)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__12844__auto___15542), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__12844__auto___15542);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15523) {
    var t__12882__auto___15544 = e15523;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15544, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.core.fifo_add.call(null, q, 1);
  try {
    var values__12844__auto___15545 = function() {
      var x__7044__auto__ = tiltontec.util.core.fifo_empty_QMARK_.call(null, q);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15546 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___15545);
    if (cljs.core.truth_(result__12845__auto___15546)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__12844__auto___15545), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___15545);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15524) {
    var t__12882__auto___15547 = e15524;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15547, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15548 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.util.core.fifo_peek.call(null, q);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15549 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15548);
    if (cljs.core.truth_(result__12845__auto___15549)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15548), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15548);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15525) {
    var t__12882__auto___15550 = e15525;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15550, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15551 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.util.core.fifo_pop.call(null, q);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15552 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15551);
    if (cljs.core.truth_(result__12845__auto___15552)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15551), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15551);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15526) {
    var t__12882__auto___15553 = e15526;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15553, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15554 = function() {
      var x__7044__auto__ = q;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15555 = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__12844__auto___15554);
    if (cljs.core.truth_(result__12845__auto___15555)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__12844__auto___15554), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__12844__auto___15554);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15527) {
    var t__12882__auto___15556 = e15527;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15556, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  tiltontec.util.core.fifo_add.call(null, q, 1);
  tiltontec.util.core.fifo_add.call(null, q, 2);
  try {
    var values__12844__auto___15557 = function() {
      var x__7044__auto__ = tiltontec.util.core.fifo_empty_QMARK_.call(null, q);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15558 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___15557);
    if (cljs.core.truth_(result__12845__auto___15558)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__12844__auto___15557), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___15557);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15528) {
    var t__12882__auto___15559 = e15528;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15559, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15560 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.util.core.fifo_peek.call(null, q);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15561 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15560);
    if (cljs.core.truth_(result__12845__auto___15561)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15560), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15560);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15529) {
    var t__12882__auto___15562 = e15529;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15562, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15563 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.util.core.fifo_pop.call(null, q);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15564 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15563);
    if (cljs.core.truth_(result__12845__auto___15564)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15563), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15563);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15530) {
    var t__12882__auto___15565 = e15530;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15565, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15566 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.util.core.fifo_pop.call(null, q);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 2);
    var result__12845__auto___15567 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15566);
    if (cljs.core.truth_(result__12845__auto___15567)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15566), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15566);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15531) {
    var t__12882__auto___15568 = e15531;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15568, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = function() {
      var x__7044__auto__ = q;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto__ = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15532) {
    var t__12882__auto__ = e15532;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.fifo_build_test.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.fifo_build_test;
}, new cljs.core.Symbol("tiltontec.util.core-test", "fifo-build-test", "tiltontec.util.core-test/fifo-build-test", 1967563513, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fifo-build-test", "fifo-build-test", 1616174349, null), "test/tiltontec/util/core_test.cljc", 25, 1, 112, 112, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.fifo_build_test) ? tiltontec.util.core_test.fifo_build_test.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env15569 = cljs.test.empty_env.call(null);
  var summary15570 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env15569, summary15570) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env15569);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__12948__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__12948__auto__, env15569, summary15570) {
          return function() {
            if (env__12948__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__12948__auto__, env15569, summary15570)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.util.core_test.fake_cl;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "fake-cl", "tiltontec.util.core-test/fake-cl", -187163971, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fake-cl", "fake-cl", -506046351, null), "test/tiltontec/util/core_test.cljc", 17, 1, 22, 22, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.util.core_test.fake_cl) ? tiltontec.util.core_test.fake_cl.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.util.core_test.setify;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "setify", "tiltontec.util.core-test/setify", -128931653, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "setify", "setify", 86404727, null), "test/tiltontec/util/core_test.cljc", 16, 1, 36, 36, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.util.core_test.setify) ? tiltontec.util.core_test.setify.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.util.core_test.test_rmap;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "test-rmap", "tiltontec.util.core-test/test-rmap", 589953074, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "test-rmap", "test-rmap", 786413294, null), "test/tiltontec/util/core_test.cljc", 19, 1, 49, 49, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.util.core_test.test_rmap) ? tiltontec.util.core_test.test_rmap.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.util.core_test.err_handling;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "err-handling", "tiltontec.util.core-test/err-handling", 432282689, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "err-handling", "err-handling", 751948053, null), "test/tiltontec/util/core_test.cljc", 22, 1, 64, 64, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.err_handling) ? tiltontec.util.core_test.err_handling.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.util.core_test.fifo_build;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "fifo-build", "tiltontec.util.core-test/fifo-build", 1265681264, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fifo-build", "fifo-build", 1577255980, null), "test/tiltontec/util/core_test.cljc", 20, 1, 90, 90, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.fifo_build) ? tiltontec.util.core_test.fifo_build.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.util.core_test.fifo_build_test;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "fifo-build-test", "tiltontec.util.core-test/fifo-build-test", 1967563513, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fifo-build-test", "fifo-build-test", 1616174349, null), "test/tiltontec/util/core_test.cljc", 
        25, 1, 112, 112, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.fifo_build_test) ? tiltontec.util.core_test.fifo_build_test.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__12948__auto__, env15569, summary15570) {
          return function() {
            if (env__12948__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__12948__auto__, env15569, summary15570)], null));
      }());
    };
  }(env15569, summary15570), function(env15569, summary15570) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env15569, summary15570)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env15569, summary15570) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary15570, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary15570), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env15569, summary15570)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env15569, summary15570) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env15569);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary15570));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary15570), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env15569, summary15570)], null));
}());
goog.provide("hello_mobile.login_form");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.model.core");
goog.require("tiltontec.util.core");
goog.require("tiltontec.qxia.core");
goog.require("tiltontec.qxia.types");
goog.require("tiltontec.cell.core");
goog.require("hello_mobile.dialog_demos");
goog.require("tiltontec.qxia.base");
goog.require("tiltontec.cell.integrity");
goog.require("clojure.string");
goog.require("tiltontec.qxia.macros");
hello_mobile.login_form.make_login_form = function hello_mobile$login_form$make_login_form() {
  return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Single", "tiltontec.qxia.types/m.Single", -602074724), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), 
  cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "make", "tiltontec.model.core/make", 1982859526, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Form", "tiltontec.qxia.types/m.Form", -409217225), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "login", "login", 55217519), new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", 
  "c?kids", "tiltontec.model.core/c?kids", -799249638, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), cljs.core.list(new cljs.core.Symbol(null, "text-field", "text-field", -699013324, null), "Username", new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "u-name", "u-name", 1737043515), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), "KennY"), 
  new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Just type something", new cljs.core.Keyword(null, "required", "required", 1807647006), true, new cljs.core.Keyword(null, "requiredInvalidMessage", "requiredInvalidMessage", 893496025), "Please share your user name"), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.PasswordField", "tiltontec.qxia.types/m.PasswordField", -1705460348), new cljs.core.Keyword(null, 
  "name", "name", 1843675177), new cljs.core.Keyword(null, "p-word", "p-word", 1531766703), new cljs.core.Keyword(null, "label", "label", 1718410804), "Password", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Just type something", new cljs.core.Keyword(null, "required", "required", 1807647006), true, new cljs.core.Keyword(null, "requiredInvalidMessage", "requiredInvalidMessage", 893496025), "Password is required"), cljs.core.list(new cljs.core.Symbol(null, "number-field", 
  "number-field", 734786087, null), "A 42-ish Quantity", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "something from -42 to 420 divisible by 42", new cljs.core.Keyword(null, "minimum", "minimum", -1621006059), -42, new cljs.core.Keyword(null, "step", "step", 1288888124), 42, new cljs.core.Keyword(null, "maximum", "maximum", 573880714), 420, new cljs.core.Keyword(null, "invalidMessage", "invalidMessage", 1256154383), "NOT Answer to universe", new cljs.core.Keyword(null, 
  "requiredInvalidMessage", "requiredInvalidMessage", 893496025), "Answer to universe is required")), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.RadioGroupStub", "tiltontec.qxia.types/m.RadioGroupStub", -179001450), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "fav-css", "fav-css", 1193141481), new cljs.core.Keyword(null, "header", "header", 119441134), "How's the weather?", 
  new cljs.core.Keyword(null, "allowEmptySelection", "allowEmptySelection", 485851121), true, new cljs.core.Keyword(null, "selection", "selection", 975998651), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), new cljs.core.Keyword(null, "mild", "mild", -147410694)), new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "mrb", "mrb", -39465232, null), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "model", "model", 1971684742, null), new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "label", 
  "label", -936024965, null)], null)], null), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.RadioButton", "tiltontec.qxia.types/m.RadioButton", 791062207), new cljs.core.Keyword(null, "model", "model", 331153215), new cljs.core.Symbol(null, "model", "model", 1971684742, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, "model", "model", 1971684742, null), new cljs.core.Keyword(null, 
  "qx-new-args", "qx-new-args", -472417952), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "model", "model", 1971684742, null)], null), new cljs.core.Keyword(null, "label", "label", 1718410804), cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), new cljs.core.Symbol(null, "label", "label", -936024965, null), cljs.core.list(new cljs.core.Symbol(null, "capitalize", "capitalize", -2143275164, null), cljs.core.list(new cljs.core.Symbol(null, 
  "name", "name", -810760592, null), new cljs.core.Symbol(null, "model", "model", 1971684742, null))))))], null), cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), cljs.core.list(new cljs.core.Symbol(null, "mrb", "mrb", -39465232, null), new cljs.core.Keyword(null, "cool", "cool", -10453819), "Kinda Kool"), cljs.core.list(new cljs.core.Symbol(null, "mrb", "mrb", -39465232, null), new cljs.core.Keyword(null, "mild", "mild", -147410694)), cljs.core.list(new cljs.core.Symbol(null, 
  "mrb", "mrb", -39465232, null), new cljs.core.Keyword(null, "hot", "hot", 1928470441)))))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_14947 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
        var x__7044__auto__ = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Form", "tiltontec.qxia.types/m.Form", -409217225), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "login", "login", 55217519), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", 
        "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), cljs.core.list(new cljs.core.Symbol(null, "text-field", "text-field", -699013324, null), "Username", new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "u-name", "u-name", 1737043515), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), 
        "KennY"), new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Just type something", new cljs.core.Keyword(null, "required", "required", 1807647006), true, new cljs.core.Keyword(null, "requiredInvalidMessage", "requiredInvalidMessage", 893496025), "Please share your user name"), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.PasswordField", "tiltontec.qxia.types/m.PasswordField", -1705460348), 
        new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "p-word", "p-word", 1531766703), new cljs.core.Keyword(null, "label", "label", 1718410804), "Password", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Just type something", new cljs.core.Keyword(null, "required", "required", 1807647006), true, new cljs.core.Keyword(null, "requiredInvalidMessage", "requiredInvalidMessage", 893496025), "Password is required"), cljs.core.list(new cljs.core.Symbol(null, 
        "number-field", "number-field", 734786087, null), "A 42-ish Quantity", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "something from -42 to 420 divisible by 42", new cljs.core.Keyword(null, "minimum", "minimum", -1621006059), -42, new cljs.core.Keyword(null, "step", "step", 1288888124), 42, new cljs.core.Keyword(null, "maximum", "maximum", 573880714), 420, new cljs.core.Keyword(null, "invalidMessage", "invalidMessage", 1256154383), "NOT Answer to universe", new cljs.core.Keyword(null, 
        "requiredInvalidMessage", "requiredInvalidMessage", 893496025), "Answer to universe is required")), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.RadioGroupStub", "tiltontec.qxia.types/m.RadioGroupStub", -179001450), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "fav-css", "fav-css", 1193141481), new cljs.core.Keyword(null, "header", "header", 119441134), "How's the weather?", 
        new cljs.core.Keyword(null, "allowEmptySelection", "allowEmptySelection", 485851121), true, new cljs.core.Keyword(null, "selection", "selection", 975998651), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), new cljs.core.Keyword(null, "mild", "mild", -147410694)), new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), 
        new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "mrb", "mrb", -39465232, null), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "model", "model", 1971684742, null), new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
        [new cljs.core.Symbol(null, "label", "label", -936024965, null)], null)], null), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.RadioButton", "tiltontec.qxia.types/m.RadioButton", 791062207), new cljs.core.Keyword(null, "model", "model", 331153215), new cljs.core.Symbol(null, "model", "model", 1971684742, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, "model", "model", 
        1971684742, null), new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "model", "model", 1971684742, null)], null), new cljs.core.Keyword(null, "label", "label", 1718410804), cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), new cljs.core.Symbol(null, "label", "label", -936024965, null), cljs.core.list(new cljs.core.Symbol(null, "capitalize", 
        "capitalize", -2143275164, null), cljs.core.list(new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "model", "model", 1971684742, null))))))], null), cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), cljs.core.list(new cljs.core.Symbol(null, "mrb", "mrb", -39465232, null), new cljs.core.Keyword(null, "cool", "cool", -10453819), "Kinda Kool"), cljs.core.list(new cljs.core.Symbol(null, "mrb", "mrb", -39465232, null), new cljs.core.Keyword(null, 
        "mild", "mild", -147410694)), cljs.core.list(new cljs.core.Symbol(null, "mrb", "mrb", -39465232, null), new cljs.core.Keyword(null, "hot", "hot", 1928470441)))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_14947, me, cache) {
          return function(slot_c_SHARP___$1) {
            var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
            var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
            var _STAR_par_STAR_14959 = tiltontec.model.core._STAR_par_STAR_;
            tiltontec.model.core._STAR_par_STAR_ = me__$1;
            try {
              return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
                var x__7044__auto__ = function() {
                  var x__7044__auto__ = tiltontec.qxia.core.text_field.call(null, "Username", new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "u-name", "u-name", 1737043515), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.core.c_in.call(null, "KennY"), new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Just type something", new cljs.core.Keyword(null, "required", "required", 1807647006), true, new cljs.core.Keyword(null, 
                  "requiredInvalidMessage", "requiredInvalidMessage", 893496025), "Please share your user name");
                  return cljs.core._conj.call(null, function() {
                    var x__7044__auto____$1 = tiltontec.qxia.core.qx_make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "m.PasswordField", "tiltontec.qxia.types/m.PasswordField", -1705460348), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "p-word", "p-word", 1531766703), new cljs.core.Keyword(null, "label", "label", 1718410804), "Password", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Just type something", new cljs.core.Keyword(null, 
                    "required", "required", 1807647006), true, new cljs.core.Keyword(null, "requiredInvalidMessage", "requiredInvalidMessage", 893496025), "Password is required");
                    return cljs.core._conj.call(null, function() {
                      var x__7044__auto____$2 = tiltontec.qxia.core.number_field.call(null, "A 42-ish Quantity", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "something from -42 to 420 divisible by 42", new cljs.core.Keyword(null, "minimum", "minimum", -1621006059), -42, new cljs.core.Keyword(null, "step", "step", 1288888124), 42, new cljs.core.Keyword(null, "maximum", "maximum", 573880714), 420, new cljs.core.Keyword(null, "invalidMessage", "invalidMessage", 1256154383), 
                      "NOT Answer to universe", new cljs.core.Keyword(null, "requiredInvalidMessage", "requiredInvalidMessage", 893496025), "Answer to universe is required");
                      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$2);
                    }(), x__7044__auto____$1);
                  }(), x__7044__auto__);
                }();
                return cljs.core._conj.call(null, function() {
                  var x__7044__auto____$1 = tiltontec.qxia.core.qx_make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "m.RadioGroupStub", "tiltontec.qxia.types/m.RadioGroupStub", -179001450), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "fav-css", "fav-css", 1193141481), new cljs.core.Keyword(null, "header", "header", 119441134), "How's the weather?", new cljs.core.Keyword(null, "allowEmptySelection", "allowEmptySelection", 485851121), true, new cljs.core.Keyword(null, 
                  "selection", "selection", 975998651), tiltontec.cell.core.c_in.call(null, new cljs.core.Keyword(null, "mild", "mild", -147410694)), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
                  "mrb", "mrb", -39465232, null), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "model", "model", 1971684742, null), new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "label", "label", -936024965, null)], null)], null), cljs.core.list(new cljs.core.Symbol(null, 
                  "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.RadioButton", "tiltontec.qxia.types/m.RadioButton", 791062207), new cljs.core.Keyword(null, "model", "model", 331153215), new cljs.core.Symbol(null, "model", "model", 1971684742, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, "model", "model", 1971684742, null), new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952), new cljs.core.PersistentVector(null, 
                  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "model", "model", 1971684742, null)], null), new cljs.core.Keyword(null, "label", "label", 1718410804), cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), new cljs.core.Symbol(null, "label", "label", -936024965, null), cljs.core.list(new cljs.core.Symbol(null, "capitalize", "capitalize", -2143275164, null), cljs.core.list(new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, 
                  "model", "model", 1971684742, null))))))], null), cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), cljs.core.list(new cljs.core.Symbol(null, "mrb", "mrb", -39465232, null), new cljs.core.Keyword(null, "cool", "cool", -10453819), "Kinda Kool"), cljs.core.list(new cljs.core.Symbol(null, "mrb", "mrb", -39465232, null), new cljs.core.Keyword(null, "mild", "mild", -147410694)), cljs.core.list(new cljs.core.Symbol(null, "mrb", "mrb", -39465232, null), 
                  new cljs.core.Keyword(null, "hot", "hot", 1928470441))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto__, _STAR_par_STAR_14959, me__$1, cache__$1, _STAR_par_STAR_14947, me, cache) {
                    return function(slot_c_SHARP___$2) {
                      var me__$2 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$2);
                      var cache__$2 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$2);
                      var mrb = function(me__$2, cache__$2, x__7044__auto__, _STAR_par_STAR_14959, me__$1, cache__$1, _STAR_par_STAR_14947, me, cache) {
                        return function() {
                          var G__14970__delegate = function(model, p__14965) {
                            var vec__14966 = p__14965;
                            var label = cljs.core.nth.call(null, vec__14966, 0, null);
                            return tiltontec.qxia.core.qx_make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "m.RadioButton", "tiltontec.qxia.types/m.RadioButton", 791062207), new cljs.core.Keyword(null, "model", "model", 331153215), model, new cljs.core.Keyword(null, "name", "name", 1843675177), model, new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [model], null), new cljs.core.Keyword(null, 
                            "label", "label", 1718410804), function() {
                              var or__6210__auto__ = label;
                              if (cljs.core.truth_(or__6210__auto__)) {
                                return or__6210__auto__;
                              } else {
                                return clojure.string.capitalize.call(null, cljs.core.name.call(null, model));
                              }
                            }());
                          };
                          var G__14970 = function(model, var_args) {
                            var p__14965 = null;
                            if (arguments.length > 1) {
                              var G__14971__i = 0, G__14971__a = new Array(arguments.length - 1);
                              while (G__14971__i < G__14971__a.length) {
                                G__14971__a[G__14971__i] = arguments[G__14971__i + 1];
                                ++G__14971__i;
                              }
                              p__14965 = new cljs.core.IndexedSeq(G__14971__a, 0);
                            }
                            return G__14970__delegate.call(this, model, p__14965);
                          };
                          G__14970.cljs$lang$maxFixedArity = 1;
                          G__14970.cljs$lang$applyTo = function(arglist__14972) {
                            var model = cljs.core.first(arglist__14972);
                            var p__14965 = cljs.core.rest(arglist__14972);
                            return G__14970__delegate(model, p__14965);
                          };
                          G__14970.cljs$core$IFn$_invoke$arity$variadic = G__14970__delegate;
                          return G__14970;
                        }();
                      }(me__$2, cache__$2, x__7044__auto__, _STAR_par_STAR_14959, me__$1, cache__$1, _STAR_par_STAR_14947, me, cache);
                      var _STAR_par_STAR_14969 = tiltontec.model.core._STAR_par_STAR_;
                      tiltontec.model.core._STAR_par_STAR_ = me__$2;
                      try {
                        return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
                          var x__7044__auto____$1 = mrb.call(null, new cljs.core.Keyword(null, "cool", "cool", -10453819), "Kinda Kool");
                          return cljs.core._conj.call(null, function() {
                            var x__7044__auto____$2 = mrb.call(null, new cljs.core.Keyword(null, "mild", "mild", -147410694));
                            return cljs.core._conj.call(null, function() {
                              var x__7044__auto____$3 = mrb.call(null, new cljs.core.Keyword(null, "hot", "hot", 1928470441));
                              return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$3);
                            }(), x__7044__auto____$2);
                          }(), x__7044__auto____$1);
                        }()));
                      } finally {
                        tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_14969;
                      }
                    };
                  }(x__7044__auto__, _STAR_par_STAR_14959, me__$1, cache__$1, _STAR_par_STAR_14947, me, cache)));
                  return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
                }(), x__7044__auto__);
              }()));
            } finally {
              tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_14959;
            }
          };
        }(_STAR_par_STAR_14947, me, cache)));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }()));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_14947;
    }
  }));
};
hello_mobile.login_form.make_remembrance = function hello_mobile$login_form$make_remembrance() {
  var x__7044__auto__ = tiltontec.qxia.core.qx_make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "m.CheckBox", "tiltontec.qxia.types/m.CheckBox", 143800735), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "remember-me", "remember-me", -1046194083), new cljs.core.Keyword(null, "label", "label", 1718410804), "Remember you?", new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, 
  "code", "code", 1586293142), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "value", "value", 305978217))], null)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "value", "value", 305978217))], null);
  }), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.core.c_in.call(null, false), new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["changeValue", function(evt, me) {
    var data = evt.getData();
    var jd = cljs.core.js__GT_clj.call(null, data);
    return tiltontec.model.core.md_reset_BANG_.call(null, me, new cljs.core.Keyword(null, "value", "value", 305978217), jd);
  }], null));
  return cljs.core._conj.call(null, function() {
    var x__7044__auto____$1 = tiltontec.qxia.core.qx_make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "m.ToggleButton", "tiltontec.qxia.types/m.ToggleButton", -1972394891), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "really", "really", 155335086), new cljs.core.Keyword(null, "label", "label", 1718410804), "Really?", new cljs.core.Keyword(null, "visibility", "visibility", 1338380893), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, 
    "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "remember-me", "remember-me", -1046194083), new cljs.core.Keyword(null, "value", "value", 305978217)), "visible", "excluded")), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto__) {
      return function(slot_c_SHARP_) {
        var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
        var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
        if (cljs.core.truth_(tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "remember-me", "remember-me", -1046194083), me), new cljs.core.Keyword(null, "value", "value", 305978217)))) {
          return "visible";
        } else {
          return "excluded";
        }
      };
    }(x__7044__auto__)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.core.c_in.call(null, false), new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
    "me", "me", 1501524834, null), new cljs.core.Keyword(null, "value", "value", 305978217)), "Yes", "Nahh"], null)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto__) {
      return function(slot_c_SHARP_) {
        var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
        var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "value", "value", 305978217)), "Yes", "Nahh"], null);
      };
    }(x__7044__auto__)), new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["changeValue", function(x__7044__auto__) {
      return function(evt, me) {
        var data = evt.getData();
        var jd = cljs.core.js__GT_clj.call(null, data);
        return tiltontec.model.core.md_reset_BANG_.call(null, me, new cljs.core.Keyword(null, "value", "value", 305978217), jd);
      };
    }(x__7044__auto__)], null));
    return cljs.core._conj.call(null, function() {
      var x__7044__auto____$2 = tiltontec.qxia.core.qx_make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "m.Slider", "tiltontec.qxia.types/m.Slider", 1816729103), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "time-to-remember", "time-to-remember", -438453172), new cljs.core.Keyword(null, "label", "label", 1718410804), "How long to remember?", new cljs.core.Keyword(null, "displayValue", "displayValue", -1259681547), "value", new cljs.core.Keyword(null, 
      "value", "value", 305978217), tiltontec.cell.core.c_in.call(null, 10), new cljs.core.Keyword(null, "enabled", "enabled", 1195909756), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "remember-me", "remember-me", -1046194083), new cljs.core.Keyword(null, 
      "value", "value", 305978217)), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "really", "really", 155335086), new cljs.core.Keyword(null, "value", "value", 305978217)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto____$1, x__7044__auto__) {
        return function(slot_c_SHARP_) {
          var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
          var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
          var and__6198__auto__ = tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "remember-me", "remember-me", -1046194083), me), new cljs.core.Keyword(null, "value", "value", 305978217));
          if (cljs.core.truth_(and__6198__auto__)) {
            return tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "really", "really", 155335086), me), new cljs.core.Keyword(null, "value", "value", 305978217));
          } else {
            return and__6198__auto__;
          }
        };
      }(x__7044__auto____$1, x__7044__auto__)), new cljs.core.Keyword(null, "minimum", "minimum", -1621006059), 1, new cljs.core.Keyword(null, "maximum", "maximum", 573880714), 30, new cljs.core.Keyword(null, "step", "step", 1288888124), 2, new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["changeValue", function(x__7044__auto____$1, x__7044__auto__) {
        return function(evt, me) {
          var data = evt.getData();
          var jd = cljs.core.js__GT_clj.call(null, data);
          return tiltontec.model.core.md_reset_BANG_.call(null, me, new cljs.core.Keyword(null, "value", "value", 305978217), jd);
        };
      }(x__7044__auto____$1, x__7044__auto__)], null));
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$3 = tiltontec.qxia.core.text_field.call(null, "Remember time", new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__) {
          return function(slot, me, new$, old, c) {
            var temp__4425__auto__ = tiltontec.qxia.base.qxme.call(null, me);
            if (cljs.core.truth_(temp__4425__auto__)) {
              var q = temp__4425__auto__;
              return tiltontec.qxia.base.qxme.call(null, me).setValue(new$);
            } else {
              return null;
            }
          };
        }(x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "r", "r", 1169147337, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "time-to-remember", "time-to-remember", -438453172), 
        new cljs.core.Keyword(null, "value", "value", 305978217))], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "r", "r", 1169147337, null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), new cljs.core.Symbol(null, "r", "r", 1169147337, null), " days")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto____$2, 
        x__7044__auto____$1, x__7044__auto__) {
          return function(slot_c_SHARP_) {
            var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
            var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
            var r = tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "time-to-remember", "time-to-remember", -438453172), me), new cljs.core.Keyword(null, "value", "value", 305978217));
            if (cljs.core.truth_(r)) {
              return [cljs.core.str(r), cljs.core.str(" days")].join("");
            } else {
              return null;
            }
          };
        }(x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__)), new cljs.core.Keyword(null, "readOnly", "readOnly", -1749118317), true);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$3);
      }(), x__7044__auto____$2);
    }(), x__7044__auto____$1);
  }(), x__7044__auto__);
};
goog.provide("hello_mobile.core");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.model.core");
goog.require("tiltontec.util.core");
goog.require("tiltontec.qxia.core");
goog.require("tiltontec.qxia.types");
goog.require("tiltontec.cell.core");
goog.require("hello_mobile.dialog_demos");
goog.require("tiltontec.qxia.base");
goog.require("hello_mobile.login_form");
goog.require("tiltontec.cell.integrity");
goog.require("clojure.string");
goog.require("tiltontec.qxia.macros");
hello_mobile.core.this_app = cljs.core.atom.call(null, null);
hello_mobile.core.appinit = function hello_mobile$core$appinit(this$, pager, shower) {
  return cljs.core.reset_BANG_.call(null, hello_mobile.core.this_app, tiltontec.qxia.core.qx_make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "Mobile", "tiltontec.qxia.types/Mobile", -143490810), new cljs.core.Keyword(null, "qx-me", "qx-me", -388627059), this$, new cljs.core.Keyword(null, "pager", "pager", 1850229940), pager, new cljs.core.Keyword(null, "shower", "shower", -1731894586), shower, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, 
  new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "make-login", "make-login", 2012461006, null)), cljs.core.list(new cljs.core.Symbol(null, "make-overview", "make-overview", -827027252, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, 
  "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_14976 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
        var x__7044__auto__ = hello_mobile.core.make_login.call(null);
        return cljs.core._conj.call(null, function() {
          var x__7044__auto____$1 = hello_mobile.core.make_overview.call(null);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
        }(), x__7044__auto__);
      }()));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_14976;
    }
  })));
};
goog.exportSymbol("hello_mobile.core.appinit", hello_mobile.core.appinit);
hello_mobile.core.make_login = function hello_mobile$core$make_login() {
  return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.NavigationPage", "tiltontec.qxia.types/m.NavigationPage", -2091669995), new cljs.core.Keyword(null, "end-point", "end-point", -1147460885), "/", new cljs.core.Keyword(null, "title", "title", 636505583), "Login", new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", 
  "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "make-login-form", "make-login-form", 1069109923, null)), cljs.core.list(new cljs.core.Symbol(null, "button", "button", -1197855826, null), "Login", new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["tap", cljs.core.list(new cljs.core.Symbol(null, 
  "fn*", "fn*", -752876845, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "login", "login", 1695749046, null), cljs.core.list(new cljs.core.Symbol(null, "qxme", "qxme", 352016329, null), cljs.core.list(new cljs.core.Symbol(null, "fm!", "fm!", -1177678085, null), new cljs.core.Keyword(null, "login", "login", 55217519), new cljs.core.Symbol(null, 
  "me", "me", 1501524834, null))), new cljs.core.Symbol(null, "vmgr", "vmgr", -1333727675, null), cljs.core.list(new cljs.core.Symbol(null, ".getValidationManager", ".getValidationManager", 862968873, null), new cljs.core.Symbol(null, "login", "login", 1695749046, null))], null), cljs.core.list(new cljs.core.Symbol(null, "assert", "assert", 677428501, null), new cljs.core.Symbol(null, "vmgr", "vmgr", -1333727675, null)), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ok", "ok", -1686650533, null), cljs.core.list(new cljs.core.Symbol(null, ".validate", ".validate", 1492446340, null), new cljs.core.Symbol(null, "login", "login", 1695749046, null))], null), cljs.core.list(new cljs.core.Symbol(null, "routing-get", "routing-get", 877560304, null), "/overview"))))], null)), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, 
  null), new cljs.core.Keyword("tiltontec.qxia.types", "m.Row", "tiltontec.qxia.types/m.Row", 1369168505), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "row-me", "row-me", -1623025996), new cljs.core.Keyword(null, "label", "label", 1718410804), "Voila", new cljs.core.Keyword(null, "css-class", "css-class", -919455334), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "rg", "rg", -1798044346, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "fav-css", "fav-css", 1193141481), new cljs.core.Symbol(null, "me", "me", 1501524834, null))], null), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Symbol(null, "css", "css", -1519390606, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "rg", "rg", -1798044346, null), new cljs.core.Keyword(null, "selection", "selection", 975998651))], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "css", "css", -1519390606, null))], 
  null)))), new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol(null, "c?kids", "c?kids", -1889993626, null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Hi Mom", new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "row-me-label", "row-me-label", 642861331)))), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), cljs.core.list(new cljs.core.Symbol(null, "make-picker-test", 
  "make-picker-test", 929225279, null)), cljs.core.list(new cljs.core.Symbol(null, "carousel", "carousel", 1521582614, null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "carousel", "carousel", -118948913), new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "carousel"], null), cljs.core.list(new cljs.core.Symbol(null, "make-dialog-demos", "make-dialog-demos", 
  1643099356, null)), cljs.core.list(new cljs.core.Symbol(null, "group", "group", -2071839637, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "showBorder", "showBorder", 1740360318), true], null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "\x3ch4\x3eTell me a story.\x3c/\x3e"), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", 
  "m.TextArea", "tiltontec.qxia.types/m.TextArea", 738759823), new cljs.core.Keyword(null, "label", "label", 1718410804), "Tell me a story.", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Your story here.", new cljs.core.Keyword(null, "maxLength", "maxLength", -1633020073), 300, new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), null), new cljs.core.Keyword(null, "listeners", "listeners", 
  394544445), new cljs.core.PersistentArrayMap(null, 1, ["changeValue", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "evt", "evt", 388964660, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Symbol(null, "data", "data", 1407862150, null), cljs.core.list(new cljs.core.Symbol(null, ".getData", ".getData", 661342228, null), new cljs.core.Symbol(null, "evt", "evt", 388964660, null)), new cljs.core.Symbol(null, "jd", "jd", -1112503864, null), cljs.core.list(new cljs.core.Symbol(null, "js-\x3eclj", "js-\x3eclj", 1544462432, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null))], null), cljs.core.list(new cljs.core.Symbol(null, "md-reset!", "md-reset!", 1664918226, 
  null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "jd", "jd", -1112503864, null))))], null))), cljs.core.list(new cljs.core.Symbol(null, "group", "group", -2071839637, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "showBorder", "showBorder", 1740360318), true], null), cljs.core.list(new cljs.core.Symbol(null, "collapsible", "collapsible", 
  -36525456, null), "Click for a surprise", cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Surprise."))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_15016 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
        var x__7044__auto__ = hello_mobile.login_form.make_login_form.call(null);
        return cljs.core._conj.call(null, function() {
          var x__7044__auto____$1 = tiltontec.qxia.core.button.call(null, "Login", new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["tap", function(x__7044__auto__, _STAR_par_STAR_15016, me, cache) {
            return function() {
              var login = tiltontec.qxia.base.qxme.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "login", "login", 55217519), me));
              var vmgr = login.getValidationManager();
              if (cljs.core.truth_(vmgr)) {
              } else {
                throw new Error("Assert failed: vmgr");
              }
              var temp__4425__auto__ = login.validate();
              if (cljs.core.truth_(temp__4425__auto__)) {
                var ok = temp__4425__auto__;
                return tiltontec.qxia.core.routing_get.call(null, "/overview");
              } else {
                return null;
              }
            };
          }(x__7044__auto__, _STAR_par_STAR_15016, me, cache)], null));
          return cljs.core._conj.call(null, function() {
            var x__7044__auto____$2 = tiltontec.qxia.core.qx_make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "m.Row", "tiltontec.qxia.types/m.Row", 1369168505), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "row-me", "row-me", -1623025996), new cljs.core.Keyword(null, "label", "label", 1718410804), "Voila", new cljs.core.Keyword(null, "css-class", "css-class", -919455334), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, 
            "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "rg", "rg", -1798044346, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "fav-css", "fav-css", 1193141481), new cljs.core.Symbol(null, "me", "me", 1501524834, null))], null), cljs.core.list(new cljs.core.Symbol(null, 
            "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "css", "css", -1519390606, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "rg", "rg", -1798044346, null), new cljs.core.Keyword(null, "selection", "selection", 975998651))], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null, 
            "name", "name", -810760592, null), new cljs.core.Symbol(null, "css", "css", -1519390606, null))], null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_15016, me, cache) {
              return function(slot_c_SHARP___$1) {
                var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
                var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
                var rg = tiltontec.model.core.fget.call(null, new cljs.core.Keyword(null, "fav-css", "fav-css", 1193141481), me__$1);
                var temp__4425__auto__ = tiltontec.model.core.md_get.call(null, rg, new cljs.core.Keyword(null, "selection", "selection", 975998651));
                if (cljs.core.truth_(temp__4425__auto__)) {
                  var css = temp__4425__auto__;
                  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, css)], null);
                } else {
                  return null;
                }
              };
            }(x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_15016, me, cache)), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Hi Mom", new cljs.core.Keyword(null, 
            "name", "name", 1843675177), new cljs.core.Keyword(null, "row-me-label", "row-me-label", 642861331)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_15016, me, cache) {
              return function(slot_c_SHARP___$1) {
                var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
                var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
                var _STAR_par_STAR_15018 = tiltontec.model.core._STAR_par_STAR_;
                tiltontec.model.core._STAR_par_STAR_ = me__$1;
                try {
                  return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
                    var x__7044__auto____$2 = tiltontec.qxia.core.label.call(null, "Hi Mom", new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "row-me-label", "row-me-label", 642861331));
                    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$2);
                  }()));
                } finally {
                  tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_15018;
                }
              };
            }(x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_15016, me, cache)));
            return cljs.core._conj.call(null, function() {
              var x__7044__auto____$3 = function() {
                var x__7044__auto____$3 = hello_mobile.core.make_picker_test.call(null);
                return cljs.core._conj.call(null, function() {
                  var x__7044__auto____$4 = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Carousel", "tiltontec.qxia.types/m.Carousel", -1672753516), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "carousel", "carousel", -118948913), new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "carousel", new cljs.core.Keyword(null, "kids", "kids", 1156670771), 
                  tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "make-dialog-demos", "make-dialog-demos", 1643099356, null)), cljs.core.list(new cljs.core.Symbol(null, "group", "group", -2071839637, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
                  [new cljs.core.Keyword(null, "showBorder", "showBorder", 1740360318), true], null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "\x3ch4\x3eTell me a story.\x3c/\x3e"), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.TextArea", "tiltontec.qxia.types/m.TextArea", 738759823), new cljs.core.Keyword(null, "label", "label", 1718410804), "Tell me a story.", new cljs.core.Keyword(null, 
                  "placeholder", "placeholder", -104873083), "Your story here.", new cljs.core.Keyword(null, "maxLength", "maxLength", -1633020073), 300, new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), null), new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["changeValue", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 
                  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "evt", "evt", 388964660, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "data", "data", 1407862150, null), cljs.core.list(new cljs.core.Symbol(null, ".getData", ".getData", 661342228, null), new cljs.core.Symbol(null, 
                  "evt", "evt", 388964660, null)), new cljs.core.Symbol(null, "jd", "jd", -1112503864, null), cljs.core.list(new cljs.core.Symbol(null, "js-\x3eclj", "js-\x3eclj", 1544462432, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null))], null), cljs.core.list(new cljs.core.Symbol(null, "md-reset!", "md-reset!", 1664918226, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "jd", 
                  "jd", -1112503864, null))))], null))), cljs.core.list(new cljs.core.Symbol(null, "group", "group", -2071839637, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "showBorder", "showBorder", 1740360318), true], null), cljs.core.list(new cljs.core.Symbol(null, "collapsible", "collapsible", -36525456, null), "Click for a surprise", cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", 
                  "label", -936024965, null), "Surprise."))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto____$3, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_15016, me, cache) {
                    return function(slot_c_SHARP___$1) {
                      var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
                      var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
                      var _STAR_par_STAR_15046 = tiltontec.model.core._STAR_par_STAR_;
                      tiltontec.model.core._STAR_par_STAR_ = me__$1;
                      try {
                        return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
                          var x__7044__auto____$4 = hello_mobile.dialog_demos.make_dialog_demos.call(null);
                          return cljs.core._conj.call(null, function() {
                            var x__7044__auto____$5 = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Group", "tiltontec.qxia.types/m.Group", 1395438636), new cljs.core.Keyword(null, "showBorder", "showBorder", 1740360318), true, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", 
                            "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "\x3ch4\x3eTell me a story.\x3c/\x3e"), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.TextArea", "tiltontec.qxia.types/m.TextArea", 738759823), new cljs.core.Keyword(null, "label", "label", 1718410804), "Tell me a story.", new cljs.core.Keyword(null, 
                            "placeholder", "placeholder", -104873083), "Your story here.", new cljs.core.Keyword(null, "maxLength", "maxLength", -1633020073), 300, new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), null), new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["changeValue", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), 
                            new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "evt", "evt", 388964660, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "data", "data", 1407862150, null), cljs.core.list(new cljs.core.Symbol(null, ".getData", 
                            ".getData", 661342228, null), new cljs.core.Symbol(null, "evt", "evt", 388964660, null)), new cljs.core.Symbol(null, "jd", "jd", -1112503864, null), cljs.core.list(new cljs.core.Symbol(null, "js-\x3eclj", "js-\x3eclj", 1544462432, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null))], null), cljs.core.list(new cljs.core.Symbol(null, "md-reset!", "md-reset!", 1664918226, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
                            "value", "value", 305978217), new cljs.core.Symbol(null, "jd", "jd", -1112503864, null))))], null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto____$4, _STAR_par_STAR_15046, me__$1, cache__$1, x__7044__auto____$3, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_15016, me, cache) {
                              return function(slot_c_SHARP___$2) {
                                var me__$2 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$2);
                                var cache__$2 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$2);
                                var _STAR_par_STAR_15048 = tiltontec.model.core._STAR_par_STAR_;
                                tiltontec.model.core._STAR_par_STAR_ = me__$2;
                                try {
                                  return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
                                    var x__7044__auto____$5 = tiltontec.qxia.core.label.call(null, "\x3ch4\x3eTell me a story.\x3c/\x3e");
                                    return cljs.core._conj.call(null, function() {
                                      var x__7044__auto____$6 = tiltontec.qxia.core.qx_make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "m.TextArea", "tiltontec.qxia.types/m.TextArea", 738759823), new cljs.core.Keyword(null, "label", "label", 1718410804), "Tell me a story.", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Your story here.", new cljs.core.Keyword(null, "maxLength", "maxLength", -1633020073), 300, new cljs.core.Keyword(null, "value", "value", 305978217), 
                                      tiltontec.cell.core.c_in.call(null, null), new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["changeValue", function(x__7044__auto____$5, _STAR_par_STAR_15048, me__$2, cache__$2, x__7044__auto____$4, _STAR_par_STAR_15046, me__$1, cache__$1, x__7044__auto____$3, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_15016, me, cache) {
                                        return function(evt, me__$3) {
                                          var data = evt.getData();
                                          var jd = cljs.core.js__GT_clj.call(null, data);
                                          return tiltontec.model.core.md_reset_BANG_.call(null, me__$3, new cljs.core.Keyword(null, "value", "value", 305978217), jd);
                                        };
                                      }(x__7044__auto____$5, _STAR_par_STAR_15048, me__$2, cache__$2, x__7044__auto____$4, _STAR_par_STAR_15046, me__$1, cache__$1, x__7044__auto____$3, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_15016, me, cache)], null));
                                      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$6);
                                    }(), x__7044__auto____$5);
                                  }()));
                                } finally {
                                  tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_15048;
                                }
                              };
                            }(x__7044__auto____$4, _STAR_par_STAR_15046, me__$1, cache__$1, x__7044__auto____$3, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_15016, me, cache)));
                            return cljs.core._conj.call(null, function() {
                              var x__7044__auto____$6 = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Group", "tiltontec.qxia.types/m.Group", 1395438636), new cljs.core.Keyword(null, "showBorder", "showBorder", 1740360318), true, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", 
                              "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "collapsible", "collapsible", -36525456, null), "Click for a surprise", cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Surprise.")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto____$5, 
                              x__7044__auto____$4, _STAR_par_STAR_15046, me__$1, cache__$1, x__7044__auto____$3, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_15016, me, cache) {
                                return function(slot_c_SHARP___$2) {
                                  var me__$2 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$2);
                                  var cache__$2 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$2);
                                  var _STAR_par_STAR_15052 = tiltontec.model.core._STAR_par_STAR_;
                                  tiltontec.model.core._STAR_par_STAR_ = me__$2;
                                  try {
                                    return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
                                      var x__7044__auto____$6 = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "qx-class", "qx-class", 701821141), qx.ui.mobile.container.Collapsible, new cljs.core.Keyword(null, "qx-new-args", "qx-new-args", -472417952), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
                                      ["Click for a surprise"], null), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Surprise."))), new cljs.core.Keyword(null, "value", 
                                      "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_15052, me__$2, cache__$2, x__7044__auto____$5, x__7044__auto____$4, _STAR_par_STAR_15046, me__$1, cache__$1, x__7044__auto____$3, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_15016, me, cache) {
                                        return function(slot_c_SHARP___$3) {
                                          var me__$3 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$3);
                                          var cache__$3 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$3);
                                          var _STAR_par_STAR_15054 = tiltontec.model.core._STAR_par_STAR_;
                                          tiltontec.model.core._STAR_par_STAR_ = me__$3;
                                          try {
                                            return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
                                              var x__7044__auto____$6 = tiltontec.qxia.core.label.call(null, "Surprise.");
                                              return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$6);
                                            }()));
                                          } finally {
                                            tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_15054;
                                          }
                                        };
                                      }(_STAR_par_STAR_15052, me__$2, cache__$2, x__7044__auto____$5, x__7044__auto____$4, _STAR_par_STAR_15046, me__$1, cache__$1, x__7044__auto____$3, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_15016, me, cache)));
                                      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$6);
                                    }()));
                                  } finally {
                                    tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_15052;
                                  }
                                };
                              }(x__7044__auto____$5, x__7044__auto____$4, _STAR_par_STAR_15046, me__$1, cache__$1, x__7044__auto____$3, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_15016, me, cache)));
                              return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$6);
                            }(), x__7044__auto____$5);
                          }(), x__7044__auto____$4);
                        }()));
                      } finally {
                        tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_15046;
                      }
                    };
                  }(x__7044__auto____$3, x__7044__auto____$2, x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_15016, me, cache)));
                  return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$4);
                }(), x__7044__auto____$3);
              }();
              return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$3);
            }(), x__7044__auto____$2);
          }(), x__7044__auto____$1);
        }(), x__7044__auto__);
      }()));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_15016;
    }
  }));
};
hello_mobile.core.make_picker_test = function hello_mobile$core$make_picker_test() {
  return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.VBox, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "picker-vbox", "picker-vbox", 1597167133), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, 
  new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Symbol(null, "myp", "myp", -299765765, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "my-pick", "my-pick", 1133502620), new cljs.core.Symbol(null, "me", "me", 1501524834, null))], null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Latest pick ", cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "myp", "myp", -299765765, null), 
  new cljs.core.Keyword(null, "value", "value", 305978217)))))), cljs.core.list(new cljs.core.Symbol(null, "qx-make", "qx-make", 1776576370, null), new cljs.core.Keyword("tiltontec.qxia.types", "m.Picker", "tiltontec.qxia.types/m.Picker", -1343372926), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "my-pick", "my-pick", 1133502620), new cljs.core.Keyword(null, "height", "height", 1025178622), 100, new cljs.core.Keyword(null, "width", "width", -384071477), 200, 
  new cljs.core.Keyword(null, "visibleItems", "visibleItems", 1968268852), 3, new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), "booya"), new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["changeSelection", cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Symbol(null, "evt", "evt", 388964660, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "data", "data", 1407862150, null), cljs.core.list(new cljs.core.Symbol(null, ".getData", ".getData", 661342228, null), new cljs.core.Symbol(null, "evt", "evt", 388964660, null)), new cljs.core.Symbol(null, 
  "jd", "jd", -1112503864, null), cljs.core.list(new cljs.core.Symbol(null, "js-\x3eclj", "js-\x3eclj", 1544462432, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null))], null), cljs.core.list(new cljs.core.Symbol(null, "md-reset!", "md-reset!", 1664918226, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol(null, "get", "get", -971253014, null), cljs.core.list(new cljs.core.Symbol(null, 
  "get", "get", -971253014, null), new cljs.core.Symbol(null, "jd", "jd", -1112503864, null), "item"), "title"))))], null), new cljs.core.Keyword(null, "slot-data", "slot-data", 1146367809), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), "Windows Phone", new cljs.core.Keyword(null, "subtitle", 
  "subtitle", -1614524363), "R.I.P.", new cljs.core.Keyword(null, "image", "image", -58725096), "identica/mmedia/games.png"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "title", "title", 636505583), "iOS", new cljs.core.Keyword(null, "subtitle", "subtitle", -1614524363), "Version 7.1"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Android"], null)], null), new cljs.core.PersistentVector(null, 3, 5, 
  cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Tablet"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Smartphone"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Phablet"], null)], null))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, 
  new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_15056 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
        var x__7044__auto__ = tiltontec.qxia.core.label.call(null, tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "myp", "myp", -299765765, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, 
        "my-pick", "my-pick", 1133502620), new cljs.core.Symbol(null, "me", "me", 1501524834, null))], null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Latest pick ", cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "myp", "myp", -299765765, null), new cljs.core.Keyword(null, "value", "value", 305978217))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, 
        "rule", "rule", 729973257), function(_STAR_par_STAR_15056, me, cache) {
          return function(slot_c_SHARP___$1) {
            var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
            var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
            var myp = tiltontec.model.core.fget.call(null, new cljs.core.Keyword(null, "my-pick", "my-pick", 1133502620), me__$1);
            return [cljs.core.str("Latest pick "), cljs.core.str(tiltontec.model.core.md_get.call(null, myp, new cljs.core.Keyword(null, "value", "value", 305978217)))].join("");
          };
        }(_STAR_par_STAR_15056, me, cache)));
        return cljs.core._conj.call(null, function() {
          var x__7044__auto____$1 = tiltontec.qxia.core.qx_make.call(null, new cljs.core.Keyword("tiltontec.qxia.types", "m.Picker", "tiltontec.qxia.types/m.Picker", -1343372926), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "my-pick", "my-pick", 1133502620), new cljs.core.Keyword(null, "height", "height", 1025178622), 100, new cljs.core.Keyword(null, "width", "width", -384071477), 200, new cljs.core.Keyword(null, "visibleItems", "visibleItems", 1968268852), 
          3, new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.core.c_in.call(null, "booya"), new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["changeSelection", function(x__7044__auto__, _STAR_par_STAR_15056, me, cache) {
            return function(evt, me__$1) {
              var data = evt.getData();
              var jd = cljs.core.js__GT_clj.call(null, data);
              return tiltontec.model.core.md_reset_BANG_.call(null, me__$1, new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.get.call(null, cljs.core.get.call(null, jd, "item"), "title"));
            };
          }(x__7044__auto__, _STAR_par_STAR_15056, me, cache)], null), new cljs.core.Keyword(null, "slot-data", "slot-data", 1146367809), function() {
            var x__7044__auto____$1 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), "Windows Phone", new cljs.core.Keyword(null, "subtitle", "subtitle", -1614524363), "R.I.P.", new cljs.core.Keyword(null, "image", "image", -58725096), "identica/mmedia/games.png"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "title", "title", 636505583), 
            "iOS", new cljs.core.Keyword(null, "subtitle", "subtitle", -1614524363), "Version 7.1"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Android"], null)], null);
            return cljs.core._conj.call(null, function() {
              var x__7044__auto____$2 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Tablet"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Smartphone"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Phablet"], null)], null);
              return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$2);
            }(), x__7044__auto____$1);
          }());
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
        }(), x__7044__auto__);
      }()));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_15056;
    }
  }));
};
hello_mobile.core.make_overview = function hello_mobile$core$make_overview() {
  return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.NavigationPage", "tiltontec.qxia.types/m.NavigationPage", -2091669995), new cljs.core.Keyword(null, "end-point", "end-point", -1147460885), "/overview", new cljs.core.Keyword(null, "title", "title", 636505583), "Overview", new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "oview", "oview", 559018138), new cljs.core.Keyword(null, 
  "showButton", "showButton", -1745795920), true, new cljs.core.Keyword(null, "buttonText", "buttonText", 282861744), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "greet?", "greet?", 1363328291)), 
  "Who's there?", "Knock-Knock")), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    if (cljs.core.truth_(tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "greet?", "greet?", 1363328291)))) {
      return "Who's there?";
    } else {
      return "Knock-Knock";
    }
  }), new cljs.core.Keyword(null, "buttonIcon", "buttonIcon", 1253122060), "identica/mmedia/games.png", new cljs.core.Keyword(null, "showBackButton", "showBackButton", 632746224), true, new cljs.core.Keyword(null, "backButtonText", "backButtonText", 2126160537), "Back", new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, ["action", function(event, me) {
    return tiltontec.model.core.md_reset_BANG_.call(null, me, new cljs.core.Keyword(null, "greet?", "greet?", 1363328291), cljs.core.not.call(null, tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "greet?", "greet?", 1363328291))));
  }], null), new cljs.core.Keyword(null, "greet?", "greet?", 1363328291), tiltontec.cell.core.c_in.call(null, false), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "hbox", "hbox", 1014079882, null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "stuff", "stuff", -2051563643)], null), cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), cljs.core.list(new cljs.core.Symbol(null, "qx-par", "qx-par", 29810498, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)), new cljs.core.Keyword(null, "greet?", 
  "greet?", 1363328291)), cljs.core.list(new cljs.core.Symbol(null, "vbox", "vbox", 1147743762, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "cool"], null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Hello"), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "World")), cljs.core.list(new cljs.core.Symbol(null, "image", "image", 
  1581806431, null), "identica/mmedia/earth-from-moon.jpg", new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "warning"))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_15064 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
        var x__7044__auto__ = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.HBox, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "stuff", "stuff", -2051563643), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, 
        new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), cljs.core.list(new cljs.core.Symbol(null, "qx-par", "qx-par", 29810498, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)), new cljs.core.Keyword(null, 
        "greet?", "greet?", 1363328291)), cljs.core.list(new cljs.core.Symbol(null, "vbox", "vbox", 1147743762, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "cool"], null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Hello"), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "World")), cljs.core.list(new cljs.core.Symbol(null, 
        "image", "image", 1581806431, null), "identica/mmedia/earth-from-moon.jpg", new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "warning")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_15064, me, cache) {
          return function(slot_c_SHARP___$1) {
            var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
            var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
            var _STAR_par_STAR_15068 = tiltontec.model.core._STAR_par_STAR_;
            tiltontec.model.core._STAR_par_STAR_ = me__$1;
            try {
              return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
                var x__7044__auto__ = cljs.core.truth_(tiltontec.model.core.md_get.call(null, tiltontec.model.core.qx_par.call(null, me__$1), new cljs.core.Keyword(null, "greet?", "greet?", 1363328291))) ? tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.VBox, 
                new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "cool", new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Hello"), cljs.core.list(new cljs.core.Symbol(null, 
                "label", "label", -936024965, null), "World"))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_15068, me__$1, cache__$1, _STAR_par_STAR_15064, me, cache) {
                  return function(slot_c_SHARP___$2) {
                    var me__$2 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$2);
                    var cache__$2 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$2);
                    var _STAR_par_STAR_15070 = tiltontec.model.core._STAR_par_STAR_;
                    tiltontec.model.core._STAR_par_STAR_ = me__$2;
                    try {
                      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
                        var x__7044__auto__ = tiltontec.qxia.core.label.call(null, "Hello");
                        return cljs.core._conj.call(null, function() {
                          var x__7044__auto____$1 = tiltontec.qxia.core.label.call(null, "World");
                          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
                        }(), x__7044__auto__);
                      }()));
                    } finally {
                      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_15070;
                    }
                  };
                }(_STAR_par_STAR_15068, me__$1, cache__$1, _STAR_par_STAR_15064, me, cache))) : tiltontec.qxia.core.image.call(null, "identica/mmedia/earth-from-moon.jpg", new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "warning");
                return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
              }()));
            } finally {
              tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_15068;
            }
          };
        }(_STAR_par_STAR_15064, me, cache)));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }()));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_15064;
    }
  }));
};
hello_mobile.core.make_css_test = function hello_mobile$core$make_css_test() {
  return tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.HBox, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", 
  "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "Hello cool222", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 0, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "cool"), cljs.core.list(new cljs.core.Symbol(null, "vbox", "vbox", 1147743762, null), cljs.core.PersistentVector.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "world 2!", 
  new cljs.core.Keyword(null, "flex", "flex", -1425124628), 3, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cool", "coolfont"], null)), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "world 3!", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 3, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), new cljs.core.PersistentVector(null, 2, 
  5, cljs.core.PersistentVector.EMPTY_NODE, ["cool", "coolfont"], null))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_15074 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
        var x__7044__auto__ = tiltontec.qxia.core.label.call(null, "Hello cool222", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 0, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), "cool");
        return cljs.core._conj.call(null, function() {
          var x__7044__auto____$1 = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.qxia.types", "m.Composite", "tiltontec.qxia.types/m.Composite", 1552799163), new cljs.core.Keyword(null, "layout", "layout", -2120940921), new qx.ui.mobile.layout.VBox, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol("tiltontec.model.core", 
          "the-kids", "tiltontec.model.core/the-kids", -1146365346, null), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "world 2!", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 3, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cool", "coolfont"], null)), cljs.core.list(new cljs.core.Symbol(null, "label", "label", -936024965, null), "world 3!", new cljs.core.Keyword(null, 
          "flex", "flex", -1425124628), 3, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cool", "coolfont"], null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto__, _STAR_par_STAR_15074, me, cache) {
            return function(slot_c_SHARP___$1) {
              var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
              var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
              var _STAR_par_STAR_15076 = tiltontec.model.core._STAR_par_STAR_;
              tiltontec.model.core._STAR_par_STAR_ = me__$1;
              try {
                return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
                  var x__7044__auto____$1 = tiltontec.qxia.core.label.call(null, "world 2!", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 3, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cool", "coolfont"], null));
                  return cljs.core._conj.call(null, function() {
                    var x__7044__auto____$2 = tiltontec.qxia.core.label.call(null, "world 3!", new cljs.core.Keyword(null, "flex", "flex", -1425124628), 3, new cljs.core.Keyword(null, "css-class", "css-class", -919455334), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cool", "coolfont"], null));
                    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$2);
                  }(), x__7044__auto____$1);
                }()));
              } finally {
                tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_15076;
              }
            };
          }(x__7044__auto__, _STAR_par_STAR_15074, me, cache)));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
        }(), x__7044__auto__);
      }()));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_15074;
    }
  }));
};
goog.provide("tiltontec.cell.integrity_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
tiltontec.cell.integrity_test.obsdbg = function tiltontec$cell$integrity_test$obsdbg() {
  return null;
};
tiltontec.cell.integrity_test.obs_setf = function tiltontec$cell$integrity_test$obs_setf() {
  return cljs.test.test_var.call(null, tiltontec$cell$integrity_test$obs_setf.cljs$lang$var);
};
tiltontec.cell.integrity_test.obs_setf.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  try {
    var values__12844__auto___15194 = function() {
      var x__7044__auto__ = cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15195 = cljs.core.apply.call(null, cljs.core.zero_QMARK_, values__12844__auto___15194);
    if (cljs.core.truth_(result__12845__auto___15195)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.zero_QMARK_, values__12844__auto___15194), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), values__12844__auto___15194);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15182) {
    var t__12882__auto___15196 = e15182;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15196, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var alarm = tiltontec.cell.core.c_in.call(null, new cljs.core.Keyword(null, "undefined", "undefined", -1970511116), new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.integrity_test.obsdbg.call(null));
  var act = tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.integrity_test.obsdbg.call(null));
  var loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(alarm, act) {
    return function(slot, me, new$, old, c) {
      if (cljs.core._EQ_.call(null, new$, new cljs.core.Keyword(null, "missing", "missing", 362507769))) {
        return null;
      } else {
        if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_), 2)) {
        } else {
          throw new Error("Assert failed: (\x3d (clojure.core/deref +pulse+) 2)");
        }
        if (cljs.core.not.call(null, tiltontec.cell.base._STAR_within_integrity_STAR_)) {
          throw new java.lang.Exception("c-reset-next!\x3e deferred change to %s not under WITH-INTEGRITY supervision.", tiltontec.cell.base.c_slot.call(null, alarm));
        } else {
          return tiltontec.cell.integrity.ufb_add.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "c-reset-next!", "c-reset-next!", -1735615308), function(alarm, act) {
            return function(opcode, defer_info) {
              var c__8146__auto__ = alarm;
              var new_value__8147__auto__ = function() {
                var G__15183 = new$ instanceof cljs.core.Keyword ? new$.fqn : null;
                switch(G__15183) {
                  case "home":
                    return new cljs.core.Keyword(null, "off", "off", 606440789);
                    break;
                  case "away":
                    return new cljs.core.Keyword(null, "on", "on", 173873944);
                    break;
                  default:
                    return tiltontec.util.core.err.call(null, cljs.core.str, "unexpected loc %s", new$);
                }
              }();
              return tiltontec.cell.core.call_c_reset_next_BANG_.call(null, c__8146__auto__, new_value__8147__auto__);
            };
          }(alarm, act)], null));
        }
      }
    };
  }(alarm, act), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, 
  "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(alarm, act) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__15184 = tiltontec.cell.evaluate.c_get.call(null, act) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, act).fqn : null;
      switch(G__15184) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(alarm, act));
  var alarm_speak = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(alarm, act, loc) {
    return function(slot, me, new$, old, c) {
      try {
        var values__12844__auto___15199 = function() {
          var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, alarm);
          return cljs.core._conj.call(null, function() {
            var x__7044__auto____$1 = function() {
              var G__15187 = tiltontec.cell.evaluate.c_get.call(null, act) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, act).fqn : null;
              switch(G__15187) {
                case "return":
                  return new cljs.core.Keyword(null, "off", "off", 606440789);
                  break;
                case "leave":
                  return new cljs.core.Keyword(null, "on", "on", 173873944);
                  break;
                default:
                  return new cljs.core.Keyword(null, "undefined", "undefined", -1970511116);
              }
            }();
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
          }(), x__7044__auto__);
        }();
        var result__12845__auto___15200 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15199);
        if (cljs.core.truth_(result__12845__auto___15200)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15199), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
            var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15199);
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
          }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e15185) {
        var t__12882__auto___15202 = e15185;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
        "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__12882__auto___15202, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__12844__auto__ = function() {
          var x__7044__auto__ = tiltontec.cell.base._PLUS_pulse_PLUS_;
          return cljs.core._conj.call(null, function() {
            var x__7044__auto____$1 = tiltontec.cell.base.c_pulse.call(null, act);
            return cljs.core._conj.call(null, function() {
              var x__7044__auto____$2 = tiltontec.cell.base.c_pulse.call(null, loc);
              return cljs.core._conj.call(null, function() {
                var x__7044__auto____$3 = tiltontec.cell.base.c_pulse.call(null, c);
                return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$3);
              }(), x__7044__auto____$2);
            }(), x__7044__auto____$1);
          }(), x__7044__auto__);
        }();
        var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
        if (cljs.core.truth_(result__12845__auto__)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
          "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", 
          -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
          "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
            var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
          }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return result__12845__auto__;
      } catch (e15188) {
        var t__12882__auto__ = e15188;
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
        "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    };
  }(alarm, act, loc), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "alarm-speak sees act ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(alarm, act, loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return [cljs.core.str("alarm-speak sees act "), cljs.core.str(tiltontec.cell.evaluate.c_get.call(null, act))].join("");
    };
  }(alarm, act, loc));
  try {
    var values__12844__auto___15203 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, alarm);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "undefined", "undefined", -1970511116)), x__7044__auto__);
    }();
    var result__12845__auto___15204 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15203);
    if (cljs.core.truth_(result__12845__auto___15204)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
      "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15203), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
      "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15203);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15189) {
    var t__12882__auto___15205 = e15189;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
    "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15205, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15206 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15207 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15206);
    if (cljs.core.truth_(result__12845__auto___15207)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15206), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15206);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15190) {
    var t__12882__auto___15208 = e15190;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15208, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15209 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, loc);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "missing", "missing", 362507769)), x__7044__auto__);
    }();
    var result__12845__auto___15210 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15209);
    if (cljs.core.truth_(result__12845__auto___15210)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
      "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15209), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
      "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15209);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15191) {
    var t__12882__auto___15211 = e15191;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
    "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15211, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15212 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15213 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15212);
    if (cljs.core.truth_(result__12845__auto___15213)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15212), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15212);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15192) {
    var t__12882__auto___15214 = e15192;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15214, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, act, new cljs.core.Keyword(null, "leave", "leave", 1022579443));
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 3);
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15193) {
    var t__12882__auto__ = e15193;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.integrity_test.obs_setf.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.integrity_test.obs_setf;
}, new cljs.core.Symbol("tiltontec.cell.integrity-test", "obs-setf", "tiltontec.cell.integrity-test/obs-setf", -1903746607, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "obs-setf", "obs-setf", -941176517, null), "test/tiltontec/cell/integrity_test.cljc", 18, 1, 45, 45, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.obs_setf) ? tiltontec.cell.integrity_test.obs_setf.cljs$lang$test : null]));
tiltontec.cell.integrity_test.obs_setf_bad_caught = function tiltontec$cell$integrity_test$obs_setf_bad_caught() {
  return cljs.test.test_var.call(null, tiltontec$cell$integrity_test$obs_setf_bad_caught.cljs$lang$var);
};
tiltontec.cell.integrity_test.obs_setf_bad_caught.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var alarm = tiltontec.cell.core.c_in.call(null, new cljs.core.Keyword(null, "undefined", "undefined", -1970511116), new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.integrity_test.obsdbg.call(null));
  var act = tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.integrity_test.obsdbg.call(null));
  var loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(alarm, act) {
    return function(slot, me, new$, old, c) {
      try {
        try {
          tiltontec.cell.core.c_reset_BANG_.call(null, act, new cljs.core.Keyword(null, "leave", "leave", 1022579443));
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /c-reset!> change/, cljs.core.list(new cljs.core.Symbol(null, "c-reset!", 
          "c-reset!", 561145783, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "leave", "leave", 1022579443))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } catch (e15216) {
          if (e15216 instanceof Error) {
            var e__12876__auto___15227 = e15216;
            var m__12877__auto___15228 = e__12876__auto___15227.message;
            if (cljs.core.truth_(cljs.core.re_find.call(null, /c-reset!> change/, m__12877__auto___15228))) {
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /c-reset!> change/, cljs.core.list(new cljs.core.Symbol(null, "c-reset!", 
              "c-reset!", 561145783, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "leave", "leave", 1022579443))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__12876__auto___15227, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            } else {
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /c-reset!> change/, cljs.core.list(new cljs.core.Symbol(null, "c-reset!", 
              "c-reset!", 561145783, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "leave", "leave", 1022579443))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__12876__auto___15227, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
          } else {
            throw e15216;
          }
        }
      } catch (e15215) {
        var t__12882__auto___15229 = e15215;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /c-reset!> change/, cljs.core.list(new cljs.core.Symbol(null, "c-reset!", 
        "c-reset!", 561145783, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "leave", "leave", 1022579443))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15229, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      if (cljs.core._EQ_.call(null, new$, new cljs.core.Keyword(null, "missing", "missing", 362507769))) {
        return null;
      } else {
        if (cljs.core.not.call(null, tiltontec.cell.base._STAR_within_integrity_STAR_)) {
          throw new java.lang.Exception("c-reset-next!\x3e deferred change to %s not under WITH-INTEGRITY supervision.", tiltontec.cell.base.c_slot.call(null, alarm));
        } else {
          return tiltontec.cell.integrity.ufb_add.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "c-reset-next!", "c-reset-next!", -1735615308), function(alarm, act) {
            return function(opcode, defer_info) {
              var c__8146__auto__ = alarm;
              var new_value__8147__auto__ = function() {
                var G__15217 = new$ instanceof cljs.core.Keyword ? new$.fqn : null;
                switch(G__15217) {
                  case "home":
                    return new cljs.core.Keyword(null, "off", "off", 606440789);
                    break;
                  case "away":
                    return new cljs.core.Keyword(null, "on", "on", 173873944);
                    break;
                  default:
                    return tiltontec.util.core.err.call(null, cljs.core.str, "unexpected loc %s", new$);
                }
              }();
              return tiltontec.cell.core.call_c_reset_next_BANG_.call(null, c__8146__auto__, new_value__8147__auto__);
            };
          }(alarm, act)], null));
        }
      }
    };
  }(alarm, act), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, 
  "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(alarm, act) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__15218 = tiltontec.cell.evaluate.c_get.call(null, act) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, act).fqn : null;
      switch(G__15218) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(alarm, act));
  var alarm_speak = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(alarm, act, loc) {
    return function(slot, me, new$, old, c) {
      tiltontec.util.base.call_trc.call(null, ":alarm-speak", tiltontec.cell.evaluate.c_get.call(null, act), new cljs.core.Keyword(null, "sees", "sees", -135494032), tiltontec.cell.evaluate.c_get.call(null, alarm), tiltontec.cell.evaluate.c_get.call(null, loc));
      try {
        var values__12844__auto___15232 = function() {
          var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, alarm);
          return cljs.core._conj.call(null, function() {
            var x__7044__auto____$1 = function() {
              var G__15221 = tiltontec.cell.evaluate.c_get.call(null, act) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, act).fqn : null;
              switch(G__15221) {
                case "return":
                  return new cljs.core.Keyword(null, "off", "off", 606440789);
                  break;
                case "leave":
                  return new cljs.core.Keyword(null, "on", "on", 173873944);
                  break;
                default:
                  return new cljs.core.Keyword(null, "undefined", "undefined", -1970511116);
              }
            }();
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
          }(), x__7044__auto__);
        }();
        var result__12845__auto___15233 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15232);
        if (cljs.core.truth_(result__12845__auto___15233)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15232), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
            var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15232);
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
          }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e15219) {
        var t__12882__auto___15235 = e15219;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
        "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__12882__auto___15235, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__12844__auto__ = function() {
          var x__7044__auto__ = tiltontec.cell.base._PLUS_pulse_PLUS_;
          return cljs.core._conj.call(null, function() {
            var x__7044__auto____$1 = tiltontec.cell.base.c_pulse.call(null, act);
            return cljs.core._conj.call(null, function() {
              var x__7044__auto____$2 = tiltontec.cell.base.c_pulse.call(null, loc);
              return cljs.core._conj.call(null, function() {
                var x__7044__auto____$3 = tiltontec.cell.base.c_pulse.call(null, c);
                return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$3);
              }(), x__7044__auto____$2);
            }(), x__7044__auto____$1);
          }(), x__7044__auto__);
        }();
        var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
        if (cljs.core.truth_(result__12845__auto__)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
          "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", 
          -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
          "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
            var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
          }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return result__12845__auto__;
      } catch (e15222) {
        var t__12882__auto__ = e15222;
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
        "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    };
  }(alarm, act, loc), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "alarm-speak sees act ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(alarm, act, loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return [cljs.core.str("alarm-speak sees act "), cljs.core.str(tiltontec.cell.evaluate.c_get.call(null, act))].join("");
    };
  }(alarm, act, loc));
  try {
    var values__12844__auto___15236 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, alarm);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "undefined", "undefined", -1970511116)), x__7044__auto__);
    }();
    var result__12845__auto___15237 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15236);
    if (cljs.core.truth_(result__12845__auto___15237)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
      "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15236), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
      "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15236);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15223) {
    var t__12882__auto___15238 = e15223;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
    "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15238, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15239 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15240 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15239);
    if (cljs.core.truth_(result__12845__auto___15240)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15239), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15239);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15224) {
    var t__12882__auto___15241 = e15224;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15241, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15242 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, loc);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "missing", "missing", 362507769)), x__7044__auto__);
    }();
    var result__12845__auto___15243 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15242);
    if (cljs.core.truth_(result__12845__auto___15243)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
      "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15242), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
      "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15242);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15225) {
    var t__12882__auto___15244 = e15225;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
    "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15244, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15226) {
    var t__12882__auto__ = e15226;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.integrity_test.obs_setf_bad_caught.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.integrity_test.obs_setf_bad_caught;
}, new cljs.core.Symbol("tiltontec.cell.integrity-test", "obs-setf-bad-caught", "tiltontec.cell.integrity-test/obs-setf-bad-caught", -1085043785, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "obs-setf-bad-caught", "obs-setf-bad-caught", -936124387, null), "test/tiltontec/cell/integrity_test.cljc", 
29, 1, 85, 85, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.obs_setf_bad_caught) ? tiltontec.cell.integrity_test.obs_setf_bad_caught.cljs$lang$test : null]));
tiltontec.cell.integrity_test.see_into_fn = function tiltontec$cell$integrity_test$see_into_fn() {
  return cljs.test.test_var.call(null, tiltontec$cell$integrity_test$see_into_fn.cljs$lang$var);
};
tiltontec.cell.integrity_test.see_into_fn.cljs$lang$test = function() {
  var sia = tiltontec.cell.core.c_in.call(null, 0);
  var rsic = cljs.core.atom.call(null, false);
  var sic = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "reset!", "reset!", 527275632, null), new cljs.core.Symbol(null, "rsic", "rsic", -1388734565, null), true), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sia", "sia", 737031502, null)))), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(sia, rsic) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.reset_BANG_.call(null, rsic, true);
      return 42 + tiltontec.cell.evaluate.c_get.call(null, sia);
    };
  }(sia, rsic));
  var fsia = function(sia, rsic, sic) {
    return function() {
      return tiltontec.cell.evaluate.c_get.call(null, sia);
    };
  }(sia, rsic, sic);
  var sib = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fsia", "fsia", -1523177093, null))), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)))), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(sia, rsic, sic, fsia) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var or__6210__auto__ = 1 + fsia.call(null);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        return tiltontec.cell.evaluate.c_get.call(null, sic);
      }
    };
  }(sia, rsic, sic, fsia));
  try {
    var values__12844__auto___15250 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, sib);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 1), x__7044__auto__);
    }();
    var result__12845__auto___15251 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15250);
    if (cljs.core.truth_(result__12845__auto___15251)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 1), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15250), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 1), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15250);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15245) {
    var t__12882__auto___15252 = e15245;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 1), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15252, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15253 = function() {
      var x__7044__auto__ = (new cljs.core.Keyword(null, "useds", "useds", 621350967)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, sib));
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = cljs.core.PersistentHashSet.fromArray([sia], true);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15254 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15253);
    if (cljs.core.truth_(result__12845__auto___15254)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "sia", "sia", 737031502, null), null], null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15253), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "sia", "sia", 737031502, null), null], null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15253);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15246) {
    var t__12882__auto___15255 = e15246;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "sia", "sia", 737031502, null), null], null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15255, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15256 = function() {
      var x__7044__auto__ = cljs.core.deref.call(null, rsic);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15257 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___15256);
    if (cljs.core.truth_(result__12845__auto___15257)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "rsic", "rsic", -1388734565, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__12844__auto___15256), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "rsic", "rsic", -1388734565, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___15256);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15247) {
    var t__12882__auto___15258 = e15247;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "rsic", "rsic", -1388734565, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15258, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, sia, 1);
  try {
    var values__12844__auto___15259 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, sib));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 2);
    var result__12845__auto___15260 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15259);
    if (cljs.core.truth_(result__12845__auto___15260)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15259), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15259);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15248) {
    var t__12882__auto___15261 = e15248;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15261, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, sib);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), x__7044__auto__);
    }();
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15249) {
    var t__12882__auto__ = e15249;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.integrity_test.see_into_fn.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.integrity_test.see_into_fn;
}, new cljs.core.Symbol("tiltontec.cell.integrity-test", "see-into-fn", "tiltontec.cell.integrity-test/see-into-fn", 794556004, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "see-into-fn", "see-into-fn", 1996218062, null), "test/tiltontec/cell/integrity_test.cljc", 21, 1, 
125, 125, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.see_into_fn) ? tiltontec.cell.integrity_test.see_into_fn.cljs$lang$test : null]));
tiltontec.cell.integrity_test.no_prop_no_obs = function tiltontec$cell$integrity_test$no_prop_no_obs() {
  return cljs.test.test_var.call(null, tiltontec$cell$integrity_test$no_prop_no_obs.cljs$lang$var);
};
tiltontec.cell.integrity_test.no_prop_no_obs.cljs$lang$test = function() {
  var sia = tiltontec.cell.core.c_in.call(null, 0);
  var obs = cljs.core.atom.call(null, false);
  var sib = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(sia, obs) {
    return function(slot, me, new$, old, c) {
      return cljs.core.reset_BANG_.call(null, obs, true);
    };
  }(sia, obs), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sia", "sia", 737031502, null))), 42, 10)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, 
  "rule", "rule", 729973257), function(sia, obs) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core.even_QMARK_.call(null, tiltontec.cell.evaluate.c_get.call(null, sia))) {
        return 42;
      } else {
        return 10;
      }
    };
  }(sia, obs));
  var run = cljs.core.atom.call(null, false);
  var sic = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "reset!", "reset!", 527275632, null), new cljs.core.Symbol(null, "run", "run", -180635126, null), true), cljs.core.list(new cljs.core.Symbol(null, "/", "/", -1371932971, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 2)), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(sia, obs, sib, run) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.reset_BANG_.call(null, run, true);
      return tiltontec.cell.evaluate.c_get.call(null, sib) / 2;
    };
  }(sia, obs, sib, run));
  try {
    var values__12844__auto___15270 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, sib);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), x__7044__auto__);
    }();
    var result__12845__auto___15271 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15270);
    if (cljs.core.truth_(result__12845__auto___15271)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15270), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15270);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15262) {
    var t__12882__auto___15272 = e15262;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15272, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15273 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, sic);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 21), x__7044__auto__);
    }();
    var result__12845__auto___15274 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15273);
    if (cljs.core.truth_(result__12845__auto___15274)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15273), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15273);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15263) {
    var t__12882__auto___15275 = e15263;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15275, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__12847__auto___15276 = cljs.core.deref.call(null, obs);
    if (cljs.core.truth_(value__12847__auto___15276)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto___15276, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto___15276, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15264) {
    var t__12882__auto___15277 = e15264;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15277, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__12847__auto___15278 = cljs.core.deref.call(null, run);
    if (cljs.core.truth_(value__12847__auto___15278)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto___15278, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto___15278, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15265) {
    var t__12882__auto___15279 = e15265;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15279, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.reset_BANG_.call(null, obs, false);
  cljs.core.reset_BANG_.call(null, run, false);
  tiltontec.cell.core.c_reset_BANG_.call(null, sia, 2);
  try {
    var values__12844__auto___15280 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, sib);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), x__7044__auto__);
    }();
    var result__12845__auto___15281 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15280);
    if (cljs.core.truth_(result__12845__auto___15281)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15280), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15280);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15266) {
    var t__12882__auto___15282 = e15266;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15282, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15283 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, sic);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 21), x__7044__auto__);
    }();
    var result__12845__auto___15284 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15283);
    if (cljs.core.truth_(result__12845__auto___15284)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15283), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15283);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15267) {
    var t__12882__auto___15285 = e15267;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15285, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15286 = function() {
      var x__7044__auto__ = cljs.core.deref.call(null, obs);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15287 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___15286);
    if (cljs.core.truth_(result__12845__auto___15287)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__12844__auto___15286), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___15286);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15268) {
    var t__12882__auto___15288 = e15268;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15288, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = function() {
      var x__7044__auto__ = cljs.core.deref.call(null, run);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core.not, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15269) {
    var t__12882__auto__ = e15269;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.integrity_test.no_prop_no_obs.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.integrity_test.no_prop_no_obs;
}, new cljs.core.Symbol("tiltontec.cell.integrity-test", "no-prop-no-obs", "tiltontec.cell.integrity-test/no-prop-no-obs", 182636463, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "no-prop-no-obs", "no-prop-no-obs", -771561679, null), "test/tiltontec/cell/integrity_test.cljc", 
24, 1, 141, 141, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.no_prop_no_obs) ? tiltontec.cell.integrity_test.no_prop_no_obs.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env15289 = cljs.test.empty_env.call(null);
  var summary15290 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env15289, summary15290) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env15289);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__12948__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__12948__auto__, env15289, summary15290) {
          return function() {
            if (env__12948__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__12948__auto__, env15289, summary15290)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.integrity_test.obs_setf;
        }, new cljs.core.Symbol("tiltontec.cell.integrity-test", "obs-setf", "tiltontec.cell.integrity-test/obs-setf", -1903746607, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "obs-setf", "obs-setf", -941176517, null), "test/tiltontec/cell/integrity_test.cljc", 
        18, 1, 45, 45, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.obs_setf) ? tiltontec.cell.integrity_test.obs_setf.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.integrity_test.obs_setf_bad_caught;
        }, new cljs.core.Symbol("tiltontec.cell.integrity-test", "obs-setf-bad-caught", "tiltontec.cell.integrity-test/obs-setf-bad-caught", -1085043785, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "obs-setf-bad-caught", "obs-setf-bad-caught", -936124387, null), "test/tiltontec/cell/integrity_test.cljc", 
        29, 1, 85, 85, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.obs_setf_bad_caught) ? tiltontec.cell.integrity_test.obs_setf_bad_caught.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.integrity_test.see_into_fn;
        }, new cljs.core.Symbol("tiltontec.cell.integrity-test", "see-into-fn", "tiltontec.cell.integrity-test/see-into-fn", 794556004, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "see-into-fn", "see-into-fn", 1996218062, null), "test/tiltontec/cell/integrity_test.cljc", 
        21, 1, 125, 125, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.see_into_fn) ? tiltontec.cell.integrity_test.see_into_fn.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.integrity_test.no_prop_no_obs;
        }, new cljs.core.Symbol("tiltontec.cell.integrity-test", "no-prop-no-obs", "tiltontec.cell.integrity-test/no-prop-no-obs", 182636463, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "no-prop-no-obs", "no-prop-no-obs", -771561679, null), "test/tiltontec/cell/integrity_test.cljc", 
        24, 1, 141, 141, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.no_prop_no_obs) ? tiltontec.cell.integrity_test.no_prop_no_obs.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__12948__auto__, env15289, summary15290) {
          return function() {
            if (env__12948__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__12948__auto__, env15289, summary15290)], null));
      }());
    };
  }(env15289, summary15290), function(env15289, summary15290) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env15289, summary15290)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env15289, summary15290) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary15290, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary15290), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env15289, summary15290)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env15289, summary15290) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env15289);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary15290));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary15290), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env15289, summary15290)], null));
}());
goog.provide("tiltontec.model.core_test");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.model.core");
goog.require("tiltontec.util.core");
goog.require("cljs.test");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.model.base");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.integrity");
cljs.core._STAR_print_level_STAR_ = 2;
tiltontec.model.core_test.fm_0 = function tiltontec$model$core_test$fm_0() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$fm_0.cljs$lang$var);
};
tiltontec.model.core_test.fm_0.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var u = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "kon", "kon", 437684854), tiltontec.cell.core.c_in.call(null, false, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), 
  cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", 
  "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), 3))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    if (cljs.core.truth_(tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "kon", "kon", 437684854)))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), tiltontec.cell.core.c_in.call(null, 3))], null);
    } else {
      return null;
    }
  }));
  try {
    var values__12844__auto___14175 = function() {
      var x__7044__auto__ = (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14176 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___14175);
    if (cljs.core.truth_(result__12845__auto___14176)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "u", "u", 483896742, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___14175), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "u", "u", 483896742, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___14175);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14172) {
    var t__12882__auto___14177 = e14172;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "u", "u", 483896742, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14177, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var kc = tiltontec.model.base.md_cell.call(null, u, new cljs.core.Keyword(null, "kids", "kids", 1156670771));
  var kon = tiltontec.model.base.md_cell.call(null, u, new cljs.core.Keyword(null, "kon", "kon", 437684854));
  tiltontec.cell.core.c_reset_BANG_.call(null, kon, true);
  try {
    var values__12844__auto___14178 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.count.call(null, (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u)));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___14179 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14178);
    if (cljs.core.truth_(result__12845__auto___14179)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14178), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14178);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14173) {
    var t__12882__auto___14180 = e14173;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14180, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = u;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), x__7044__auto__);
    }(), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423));
    var result__12845__auto__ = cljs.core.apply.call(null, tiltontec.model.core.fget, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("md", "fget", "md/fget", 1054681985, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.core.fget, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("md", "fget", "md/fget", 1054681985, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol("md", "fget", "md/fget", 1054681985, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e14174) {
    var t__12882__auto__ = e14174;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("md", "fget", "md/fget", 1054681985, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.fm_0.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.fm_0;
}, new cljs.core.Symbol("tiltontec.model.core-test", "fm-0", "tiltontec.model.core-test/fm-0", -626823591, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "fm-0", "fm-0", -1904222876, null), "test/tiltontec/model/core_test.cljc", 14, 1, 51, 51, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.fm_0) ? 
tiltontec.model.core_test.fm_0.cljs$lang$test : null]));
tiltontec.model.core_test.fm_2 = function tiltontec$model$core_test$fm_2() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$fm_2.cljs$lang$var);
};
tiltontec.model.core_test.fm_2.cljs$lang$test = function() {
  var u = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "uni", "uni", -1194876440), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, 
  "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, 
  "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bba", "bba", -1624545451)), cljs.core.list(new cljs.core.Symbol("md", 
  "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152)), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), 
    new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), 
    new cljs.core.Keyword(null, "bba", "bba", -1624545451)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), 
    function(me, cache) {
      return function(slot_c_SHARP___$1) {
        var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
        var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me__$1, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bba", "bba", -1624545451)), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me__$1, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbb", 
        "bbb", -1323051640))], null);
      };
    }(me, cache)))], null);
  }));
  var bba = tiltontec.model.core.fget.call(null, new cljs.core.Keyword(null, "bba", "bba", -1624545451), u, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true, new cljs.core.Keyword(null, "must?", "must?", 1639898554), true);
  try {
    var value__12847__auto___14186 = bba;
    if (cljs.core.truth_(value__12847__auto___14186)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto___14186, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__12847__auto___14186, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14181) {
    var t__12882__auto___14187 = e14181;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14187, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14188 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = bba;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "up?", "up?", 77854972)), true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), x__7044__auto__);
    }(), new cljs.core.Keyword(null, "uni", "uni", -1194876440));
    var result__12845__auto___14189 = cljs.core.apply.call(null, tiltontec.model.core.fget, values__12844__auto___14188);
    if (cljs.core.truth_(result__12845__auto___14189)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("md", "fget", "md/fget", 1054681985, null), new cljs.core.Keyword(null, "uni", "uni", -1194876440), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.core.fget, values__12844__auto___14188), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("md", "fget", "md/fget", 1054681985, null), new cljs.core.Keyword(null, "uni", "uni", -1194876440), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol("md", "fget", "md/fget", 1054681985, null), values__12844__auto___14188);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14182) {
    var t__12882__auto___14190 = e14182;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("md", "fget", "md/fget", 1054681985, null), new cljs.core.Keyword(null, "uni", "uni", -1194876440), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14190, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14191 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = bba;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "up?", "up?", 77854972)), false), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), x__7044__auto__);
    }(), new cljs.core.Keyword(null, "aa", "aa", 1986357152));
    var result__12845__auto___14192 = cljs.core.apply.call(null, tiltontec.model.core.fget, values__12844__auto___14191);
    if (cljs.core.truth_(result__12845__auto___14192)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.core.fget, values__12844__auto___14191), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__12844__auto___14191);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14183) {
    var t__12882__auto___14193 = e14183;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
    false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14193, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14194 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = bba;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "up?", "up?", 77854972)), true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), x__7044__auto__);
    }(), new cljs.core.Keyword(null, "bb", "bb", 75940837));
    var result__12845__auto___14195 = cljs.core.apply.call(null, tiltontec.model.core.fget, values__12844__auto___14194);
    if (cljs.core.truth_(result__12845__auto___14195)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.core.fget, values__12844__auto___14194), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__12844__auto___14194);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14184) {
    var t__12882__auto___14196 = e14184;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
    true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14196, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = bba;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "up?", "up?", 77854972)), false), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), x__7044__auto__);
    }(), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640));
    var result__12845__auto__ = cljs.core.apply.call(null, tiltontec.model.core.fget, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.core.fget, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e14185) {
    var t__12882__auto__ = e14185;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.fm_2.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.fm_2;
}, new cljs.core.Symbol("tiltontec.model.core-test", "fm-2", "tiltontec.model.core-test/fm-2", 697958118, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "fm-2", "fm-2", -589475911, null), "test/tiltontec/model/core_test.cljc", 14, 1, 70, 70, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.fm_2) ? 
tiltontec.model.core_test.fm_2.cljs$lang$test : null]));
tiltontec.model.core_test.fm_3 = function tiltontec$model$core_test$fm_3() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$fm_3.cljs$lang$var);
};
tiltontec.model.core_test.fm_3.cljs$lang$test = function() {
  var u = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "u63", "u63", 1660619135), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130)), cljs.core.list(new cljs.core.Symbol(null, 
  "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), me), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130)) + tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), me), new cljs.core.Keyword(null, "bb21", "bb21", 848021780));
  }), new cljs.core.Keyword(null, "kon", "kon", 437684854), tiltontec.cell.core.c_in.call(null, false), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "remove", "remove", 1509103113, null), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), 
  cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 
  2, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), 3)), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
  "me", "me", 1501524834, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 
  517820292, null), 3))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "*", 
  "*", 345799209, null), 7, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912)))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return cljs.core.remove.call(null, cljs.core.nil_QMARK_, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), 
    cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 2, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(me, cache) {
      return function(slot_c_SHARP___$1) {
        var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
        var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
        return 2 * tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), me__$1), new cljs.core.Keyword(null, "bb21", "bb21", 848021780));
      };
    }(me, cache)), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912), tiltontec.cell.core.c_in.call(null, 3)), cljs.core.truth_(tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "kon", "kon", 437684854))) ? tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), tiltontec.cell.core.c_in.call(null, 
    3)) : null, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 7, cljs.core.list(new cljs.core.Symbol(null, 
    "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(me, cache) {
      return function(slot_c_SHARP___$1) {
        var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
        var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
        return 7 * tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), me__$1), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912));
      };
    }(me, cache)))], null));
  }));
  try {
    var values__12844__auto___14205 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.model.core.md_get.call(null, u, new cljs.core.Keyword(null, "u63", "u63", 1660619135));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 63);
    var result__12845__auto___14206 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14205);
    if (cljs.core.truth_(result__12845__auto___14206)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
      "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14205), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
      "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14205);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14197) {
    var t__12882__auto___14207 = e14197;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
    "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14207, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14208 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), u), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___14209 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14208);
    if (cljs.core.truth_(result__12845__auto___14209)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
      "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14208), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
      "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14208);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14198) {
    var t__12882__auto___14210 = e14198;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
    "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14210, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14211 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), u), new cljs.core.Keyword(null, "bb21", "bb21", 848021780));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 21);
    var result__12845__auto___14212 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14211);
    if (cljs.core.truth_(result__12845__auto___14212)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
      "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14211), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
      "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14211);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14199) {
    var t__12882__auto___14213 = e14199;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
    "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14213, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14214 = function() {
      var x__7044__auto__ = tiltontec.model.core.fget.call(null, new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), u, new cljs.core.Keyword(null, "must?", "must?", 1639898554), false);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14215 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___14214);
    if (cljs.core.truth_(result__12845__auto___14215)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
      "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___14214), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
      "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___14214);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14200) {
    var t__12882__auto___14216 = e14200;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
    "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14216, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, tiltontec.model.base.md_cell.call(null, u, new cljs.core.Keyword(null, "kon", "kon", 437684854)), true);
  try {
    var value__12847__auto___14217 = (new cljs.core.Keyword(null, "kon", "kon", 437684854)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u));
    if (cljs.core.truth_(value__12847__auto___14217)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__12847__auto___14217, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__12847__auto___14217, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14201) {
    var t__12882__auto___14218 = e14201;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14218, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14219 = function() {
      var x__7044__auto__ = u;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kon", "kon", 437684854)), x__7044__auto__);
    }();
    var result__12845__auto___14220 = cljs.core.apply.call(null, tiltontec.model.base.md_cell, values__12844__auto___14219);
    if (cljs.core.truth_(result__12845__auto___14220)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core.cons.call(null, tiltontec.model.base.md_cell, values__12844__auto___14219), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), values__12844__auto___14219);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14202) {
    var t__12882__auto___14221 = e14202;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
    t__12882__auto___14221, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14222 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.count.call(null, (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u)));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 3);
    var result__12845__auto___14223 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14222);
    if (cljs.core.truth_(result__12845__auto___14223)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14222), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14222);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14203) {
    var t__12882__auto___14224 = e14203;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14224, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = u;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), x__7044__auto__);
    }(), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423));
    var result__12845__auto__ = cljs.core.apply.call(null, tiltontec.model.core.fget, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.core.fget, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e14204) {
    var t__12882__auto__ = e14204;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.fm_3.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.fm_3;
}, new cljs.core.Symbol("tiltontec.model.core-test", "fm-3", "tiltontec.model.core-test/fm-3", -171788604, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "fm-3", "fm-3", -1601771135, null), "test/tiltontec/model/core_test.cljc", 14, 1, 102, 102, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.fm_3) ? 
tiltontec.model.core_test.fm_3.cljs$lang$test : null]));
tiltontec.model.core_test.fm_3x = function tiltontec$model$core_test$fm_3x() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$fm_3x.cljs$lang$var);
};
tiltontec.model.core_test.fm_3x.cljs$lang$test = function() {
  var u = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "u63", "u63", 1660619135), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130)), cljs.core.list(new cljs.core.Symbol(null, 
  "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), me), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130)) + tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), me), new cljs.core.Keyword(null, "bb21", "bb21", 848021780));
  }), new cljs.core.Keyword(null, "kon", "kon", 437684854), tiltontec.cell.core.c_in.call(null, false), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, 
  "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 2, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912), cljs.core.list(new cljs.core.Symbol(null, 
  "c-in", "c-in", 517820292, null), 3)), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), 
  new cljs.core.Keyword(null, "kzo", "kzo", 29004960), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), 3))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 
  345799209, null), 7, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_14225 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
        var x__7044__auto__ = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 2, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), 
        new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_14225, me, cache) {
          return function(slot_c_SHARP___$1) {
            var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
            var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
            return 2 * tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), me__$1), new cljs.core.Keyword(null, "bb21", "bb21", 848021780));
          };
        }(_STAR_par_STAR_14225, me, cache)), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912), tiltontec.cell.core.c_in.call(null, 3));
        return cljs.core._conj.call(null, function() {
          var x__7044__auto____$1 = cljs.core.truth_(tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "kon", "kon", 437684854))) ? tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), tiltontec.cell.core.c_in.call(null, 3)) : null;
          return cljs.core._conj.call(null, function() {
            var x__7044__auto____$2 = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 7, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), 
            new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14225, me, cache) {
              return function(slot_c_SHARP___$1) {
                var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
                var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
                return 7 * tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), me__$1), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912));
              };
            }(x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14225, me, cache)));
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$2);
          }(), x__7044__auto____$1);
        }(), x__7044__auto__);
      }()));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_14225;
    }
  }));
  try {
    var values__12844__auto___14234 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.model.core.md_get.call(null, u, new cljs.core.Keyword(null, "u63", "u63", 1660619135));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 63);
    var result__12845__auto___14235 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14234);
    if (cljs.core.truth_(result__12845__auto___14235)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
      "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14234), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
      "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14234);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14226) {
    var t__12882__auto___14236 = e14226;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
    "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14236, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14237 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), u), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___14238 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14237);
    if (cljs.core.truth_(result__12845__auto___14238)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
      "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14237), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
      "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14237);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14227) {
    var t__12882__auto___14239 = e14227;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
    "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14239, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14240 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), u), new cljs.core.Keyword(null, "bb21", "bb21", 848021780));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 21);
    var result__12845__auto___14241 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14240);
    if (cljs.core.truth_(result__12845__auto___14241)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
      "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14240), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
      "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14240);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14228) {
    var t__12882__auto___14242 = e14228;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
    "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14242, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14243 = function() {
      var x__7044__auto__ = tiltontec.model.core.fget.call(null, new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), u, new cljs.core.Keyword(null, "must?", "must?", 1639898554), false);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14244 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___14243);
    if (cljs.core.truth_(result__12845__auto___14244)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
      "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___14243), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
      "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___14243);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14229) {
    var t__12882__auto___14245 = e14229;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
    "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14245, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, tiltontec.model.base.md_cell.call(null, u, new cljs.core.Keyword(null, "kon", "kon", 437684854)), true);
  try {
    var value__12847__auto___14246 = (new cljs.core.Keyword(null, "kon", "kon", 437684854)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u));
    if (cljs.core.truth_(value__12847__auto___14246)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__12847__auto___14246, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__12847__auto___14246, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14230) {
    var t__12882__auto___14247 = e14230;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14247, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14248 = function() {
      var x__7044__auto__ = u;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kon", "kon", 437684854)), x__7044__auto__);
    }();
    var result__12845__auto___14249 = cljs.core.apply.call(null, tiltontec.model.base.md_cell, values__12844__auto___14248);
    if (cljs.core.truth_(result__12845__auto___14249)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core.cons.call(null, tiltontec.model.base.md_cell, values__12844__auto___14248), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), values__12844__auto___14248);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14231) {
    var t__12882__auto___14250 = e14231;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
    t__12882__auto___14250, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14251 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.count.call(null, (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u)));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 3);
    var result__12845__auto___14252 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14251);
    if (cljs.core.truth_(result__12845__auto___14252)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14251), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14251);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14232) {
    var t__12882__auto___14253 = e14232;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14253, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = u;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), x__7044__auto__);
    }(), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423));
    var result__12845__auto__ = cljs.core.apply.call(null, tiltontec.model.core.fget, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.core.fget, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e14233) {
    var t__12882__auto__ = e14233;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.fm_3x.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.fm_3x;
}, new cljs.core.Symbol("tiltontec.model.core-test", "fm-3x", "tiltontec.model.core-test/fm-3x", -1888958356, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "fm-3x", "fm-3x", 875338153, null), "test/tiltontec/model/core_test.cljc", 15, 1, 134, 134, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.fm_3x) ? 
tiltontec.model.core_test.fm_3x.cljs$lang$test : null]));
tiltontec.model.core_test.fm_picker = function tiltontec$model$core_test$fm_picker() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$fm_picker.cljs$lang$var);
};
tiltontec.model.core_test.fm_picker.cljs$lang$test = function() {
  var u = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "picker", "picker", -659389603), 
  new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), 42), new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, 
  "aax", "aax", -1960235086)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbx", "bbx", 2103477618))))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), cljs.core.list(new cljs.core.Symbol(null, 
  "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p", "p", 1791580836, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "picker", "picker", -659389603), new cljs.core.Symbol(null, "me", "me", 1501524834, null))], null), cljs.core.list(new cljs.core.Symbol(null, "println", 
  "println", -733595439, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), new cljs.core.Symbol(null, "p", "p", 1791580836, null)), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "p", "p", 1791580836, null), new cljs.core.Keyword(null, "value", "value", 305978217))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_14254 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
        var x__7044__auto__ = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "picker", "picker", -659389603), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.core.c_in.call(null, 42), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, 
        "the-kids", "the-kids", 1487890778, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aax", "aax", -1960235086)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbx", "bbx", 2103477618)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, 
        new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_14254, me, cache) {
          return function(slot_c_SHARP___$1) {
            var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
            var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
            var _STAR_par_STAR_14256 = tiltontec.model.core._STAR_par_STAR_;
            tiltontec.model.core._STAR_par_STAR_ = me__$1;
            try {
              return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
                var x__7044__auto__ = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aax", "aax", -1960235086));
                return cljs.core._conj.call(null, function() {
                  var x__7044__auto____$1 = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbx", "bbx", 2103477618));
                  return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
                }(), x__7044__auto__);
              }()));
            } finally {
              tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_14256;
            }
          };
        }(_STAR_par_STAR_14254, me, cache)));
        return cljs.core._conj.call(null, function() {
          var x__7044__auto____$1 = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
          [new cljs.core.Symbol(null, "p", "p", 1791580836, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "picker", "picker", -659389603), new cljs.core.Symbol(null, "me", "me", 1501524834, null))], null), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), new cljs.core.Symbol(null, "p", "p", 1791580836, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "p", "p", 1791580836, null), new cljs.core.Keyword(null, "value", "value", 305978217)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto__, _STAR_par_STAR_14254, me, cache) {
            return function(slot_c_SHARP___$1) {
              var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
              var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
              var p = tiltontec.model.core.fget.call(null, new cljs.core.Keyword(null, "picker", "picker", -659389603), me__$1);
              cljs.core.println.call(null, new cljs.core.Keyword(null, "bingo", "bingo", 719685022), p);
              return tiltontec.model.core.md_get.call(null, p, new cljs.core.Keyword(null, "value", "value", 305978217));
            };
          }(x__7044__auto__, _STAR_par_STAR_14254, me, cache)));
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
        }(), x__7044__auto__);
      }()));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_14254;
    }
  }));
  try {
    var values__12844__auto___14259 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "picker", "picker", -659389603), u), new cljs.core.Keyword(null, "value", "value", 305978217));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___14260 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14259);
    if (cljs.core.truth_(result__12845__auto___14260)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "picker", "picker", -659389603), new cljs.core.Keyword(null, 
      "value", "value", 305978217), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14259), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "picker", "picker", -659389603), new cljs.core.Keyword(null, 
      "value", "value", 305978217), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14259);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14257) {
    var t__12882__auto___14261 = e14257;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "picker", "picker", -659389603), new cljs.core.Keyword(null, 
    "value", "value", 305978217), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14261, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "dd", "dd", -1340437629), u), new cljs.core.Keyword(null, "kzo", "kzo", 29004960));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "kzo", 
      "kzo", 29004960), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "kzo", 
      "kzo", 29004960), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e14258) {
    var t__12882__auto__ = e14258;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, 
    "kzo", "kzo", 29004960), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.fm_picker.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.fm_picker;
}, new cljs.core.Symbol("tiltontec.model.core-test", "fm-picker", "tiltontec.model.core-test/fm-picker", -1148699100, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "fm-picker", "fm-picker", 2001727201, null), "test/tiltontec/model/core_test.cljc", 19, 1, 163, 163, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.model.core_test.fm_picker) ? tiltontec.model.core_test.fm_picker.cljs$lang$test : null]));
cljs.core.derive.call(null, new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", -1267867644), new cljs.core.Keyword("tiltontec.cell.base", "model", "tiltontec.cell.base/model", 284743830));
tiltontec.model.core_test.mm_typed = function tiltontec$model$core_test$mm_typed() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$mm_typed.cljs$lang$var);
};
tiltontec.model.core_test.mm_typed.cljs$lang$test = function() {
  var me = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", -1267867644), new cljs.core.Keyword(null, "x2", "x2", -1362513475), tiltontec.cell.core.c_in.call(null, 2), new cljs.core.Keyword(null, "age", "age", -604307804), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, 
  "*", "*", 345799209, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "x2", "x2", -1362513475)), 21)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "x2", "x2", -1362513475)) * 21;
  }));
  try {
    var values__12844__auto___14264 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "age", "age", -604307804));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___14265 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14264);
    if (cljs.core.truth_(result__12845__auto___14265)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14264), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14264);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14262) {
    var t__12882__auto___14266 = e14262;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
    "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14266, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = function() {
      var x__7044__auto__ = me;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", -1267867644)), x__7044__auto__);
    }();
    var result__12845__auto__ = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", 
      -1267867644)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", 
      -1267867644)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e14263) {
    var t__12882__auto__ = e14263;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", 
    -1267867644)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.mm_typed.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.mm_typed;
}, new cljs.core.Symbol("tiltontec.model.core-test", "mm-typed", "tiltontec.model.core-test/mm-typed", 160483804, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-typed", "mm-typed", 1121916947, null), "test/tiltontec/model/core_test.cljc", 18, 1, 182, 182, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.model.core_test.mm_typed) ? tiltontec.model.core_test.mm_typed.cljs$lang$test : null]));
tiltontec.model.core_test.mm_opti_1 = function tiltontec$model$core_test$mm_opti_1() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$mm_opti_1.cljs$lang$var);
};
tiltontec.model.core_test.mm_opti_1.cljs$lang$test = function() {
  var me = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "x2", "x2", -1362513475), 2, new cljs.core.Keyword(null, "age", "age", -604307804), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 21, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
  "x2", "x2", -1362513475)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return 21 * tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "x2", "x2", -1362513475));
  }));
  cljs.core.println.call(null, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core.meta.call(null, me));
  try {
    var values__12844__auto___14270 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "x2", "x2", -1362513475));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 2);
    var result__12845__auto___14271 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14270);
    if (cljs.core.truth_(result__12845__auto___14271)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "x2", "x2", -1362513475))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14270), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "x2", "x2", -1362513475))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14270);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14267) {
    var t__12882__auto___14272 = e14267;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
    "x2", "x2", -1362513475))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14272, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14273 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "age", "age", -604307804));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___14274 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14273);
    if (cljs.core.truth_(result__12845__auto___14274)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14273), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14273);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14268) {
    var t__12882__auto___14275 = e14268;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
    "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14275, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = function() {
      var x__7044__auto__ = tiltontec.model.base.md_cell.call(null, me, new cljs.core.Keyword(null, "age", "age", -604307804));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e14269) {
    var t__12882__auto__ = e14269;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
    "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.mm_opti_1.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.mm_opti_1;
}, new cljs.core.Symbol("tiltontec.model.core-test", "mm-opti-1", "tiltontec.model.core-test/mm-opti-1", -1273683452, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-opti-1", "mm-opti-1", -1060539455, null), "test/tiltontec/model/core_test.cljc", 19, 1, 191, 191, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.model.core_test.mm_opti_1) ? tiltontec.model.core_test.mm_opti_1.cljs$lang$test : null]));
tiltontec.model.core_test.mm_install_alive = function tiltontec$model$core_test$mm_install_alive() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$mm_install_alive.cljs$lang$var);
};
tiltontec.model.core_test.mm_install_alive.cljs$lang$test = function() {
  var bct = cljs.core.atom.call(null, 0);
  var res = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), "Bob", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true), new cljs.core.Keyword(null, "bogus", "bogus", 637345996), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, 
  "if-let", "if-let", 1803593690, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "be", "be", -1545923187, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242))], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, 
  "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "bingo-e!!!!!!!!", "bingo-e!!!!!!!!", -1781230244), new cljs.core.Symbol(null, "be", "be", -1545923187, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null), new cljs.core.Symbol(null, 
  "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 2, new cljs.core.Symbol(null, "be", "be", -1545923187, null))), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "bogus-no-e", "bogus-no-e", 2095562930), cljs.core.list(new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, 
  "me", "me", 1501524834, null)))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(bct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var temp__4423__auto__ = tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242));
      if (cljs.core.truth_(temp__4423__auto__)) {
        var be = temp__4423__auto__;
        tiltontec.util.base.call_trc.call(null, ":bingo-e!!!!!!!!", be, cljs.core.deref.call(null, bct));
        cljs.core.swap_BANG_.call(null, bct, cljs.core.inc);
        return 2 * be;
      } else {
        return tiltontec.util.base.call_trc.call(null, ":bogus-no-e", (new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me)));
      }
    };
  }(bct)), new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), tiltontec.cell.core.c_in.call(null, 21, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true), new cljs.core.Keyword(null, "loc", "loc", -584284901), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", 
  -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "action", "action", -811238024)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, 
  new cljs.core.Keyword(null, "rule", "rule", 729973257), function(bct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__14278 = tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "action", "action", -811238024)) instanceof cljs.core.Keyword ? tiltontec.model.core.md_get.call(null, me, new cljs.core.Keyword(null, "action", "action", -811238024)).fqn : null;
      switch(G__14278) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(bct)));
  cljs.core.println.call(null, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core.meta.call(null, res));
  try {
    var values__12844__auto___14295 = function() {
      var x__7044__auto__ = (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, res));
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.model.base.md_cz.call(null, res);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___14296 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14295);
    if (cljs.core.truth_(result__12845__auto___14296)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "cz", "cz", 1670864932), cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, 
      "res", "res", 245523648, null))), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14295), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "cz", "cz", 1670864932), cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, 
      "res", "res", 245523648, null))), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14295);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14279) {
    var t__12882__auto___14297 = e14279;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "cz", "cz", 1670864932), cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, 
    "res", "res", 245523648, null))), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14297, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14298 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.count.call(null, tiltontec.model.base.md_cz.call(null, res));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 4);
    var result__12845__auto___14299 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14298);
    if (cljs.core.truth_(result__12845__auto___14299)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, 
      "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14298), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, 
      "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14298);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14280) {
    var t__12882__auto___14300 = e14280;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, 
    "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14300, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14301 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_ref_QMARK_;
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = cljs.core.vals.call(null, tiltontec.model.base.md_cz.call(null, res));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___14302 = cljs.core.apply.call(null, cljs.core.every_QMARK_, values__12844__auto___14301);
    if (cljs.core.truth_(result__12845__auto___14302)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, 
      "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.every_QMARK_, values__12844__auto___14301), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, 
      "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), values__12844__auto___14301);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14281) {
    var t__12882__auto___14303 = e14281;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, 
    "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14303, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14304 = function() {
      var x__7044__auto__ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = cljs.core.set.call(null, cljs.core.keys.call(null, tiltontec.model.base.md_cz.call(null, res)));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___14305 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14304);
    if (cljs.core.truth_(result__12845__auto___14305)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
      "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14304), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
      "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14304);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14282) {
    var t__12882__auto___14306 = e14282;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
    "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14306, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14307 = function() {
      var x__7044__auto__ = function(bct, res) {
        return function(p1__14276_SHARP_) {
          return cljs.core._EQ_.call(null, res, tiltontec.cell.base.c_me.call(null, p1__14276_SHARP_));
        };
      }(bct, res);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = cljs.core.vals.call(null, tiltontec.model.base.md_cz.call(null, res));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___14308 = cljs.core.apply.call(null, cljs.core.every_QMARK_, values__12844__auto___14307);
    if (cljs.core.truth_(result__12845__auto___14308)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p1__14276#", "p1__14276#", 1272541906, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "res", "res", 245523648, null), cljs.core.list(new cljs.core.Symbol(null, "c-me", "c-me", 1049565946, null), new cljs.core.Symbol(null, "p1__14276#", "p1__14276#", 1272541906, null)))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.every_QMARK_, values__12844__auto___14307), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p1__14276#", "p1__14276#", 1272541906, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "res", "res", 245523648, null), cljs.core.list(new cljs.core.Symbol(null, "c-me", "c-me", 1049565946, null), new cljs.core.Symbol(null, "p1__14276#", "p1__14276#", 1272541906, null)))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), values__12844__auto___14307);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14283) {
    var t__12882__auto___14309 = e14283;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
    "p1__14276#", "p1__14276#", 1272541906, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "res", "res", 245523648, null), cljs.core.list(new cljs.core.Symbol(null, "c-me", "c-me", 1049565946, null), new cljs.core.Symbol(null, "p1__14276#", "p1__14276#", 1272541906, null)))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), 
    new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14309, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14310 = function() {
      var x__7044__auto__ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = cljs.core.set.call(null, cljs.core.map.call(null, function(x__7044__auto__, bct, res) {
          return function(p1__14277_SHARP_) {
            return tiltontec.cell.base.c_slot.call(null, p1__14277_SHARP_);
          };
        }(x__7044__auto__, bct, res), cljs.core.vals.call(null, tiltontec.model.base.md_cz.call(null, res))));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___14311 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14310);
    if (cljs.core.truth_(result__12845__auto___14311)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
      "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p1__14277#", "p1__14277#", 1475158057, null)], null), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, "p1__14277#", "p1__14277#", 1475158057, null))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core._EQ_, values__12844__auto___14310), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
      "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p1__14277#", "p1__14277#", 1475158057, null)], null), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, "p1__14277#", "p1__14277#", 1475158057, null))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14310);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14284) {
    var t__12882__auto___14312 = e14284;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
    "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
    "p1__14277#", "p1__14277#", 1475158057, null)], null), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, "p1__14277#", "p1__14277#", 1475158057, null))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14312, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14313 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), "Bob");
    var result__12845__auto___14314 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14313);
    if (cljs.core.truth_(result__12845__auto___14314)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14313), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14313);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14285) {
    var t__12882__auto___14315 = e14285;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14315, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14316 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.model.core.md_name.call(null, res);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), "Bob");
    var result__12845__auto___14317 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14316);
    if (cljs.core.truth_(result__12845__auto___14317)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Symbol(null, "md-name", "md-name", -1172444206, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14316), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Symbol(null, "md-name", "md-name", -1172444206, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14316);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14286) {
    var t__12882__auto___14318 = e14286;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Symbol(null, "md-name", "md-name", -1172444206, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14318, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.println.call(null, new cljs.core.Keyword(null, "res", "res", -1395007879), cljs.core.deref.call(null, res));
  try {
    var values__12844__auto___14319 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = (new cljs.core.Keyword(null, "bogus", "bogus", 637345996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___14320 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14319);
    if (cljs.core.truth_(result__12845__auto___14320)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "bogus", "bogus", 637345996), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14319), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "bogus", "bogus", 637345996), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14319);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14287) {
    var t__12882__auto___14321 = e14287;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "bogus", "bogus", 637345996), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14321, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14322 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = (new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), null);
    var result__12845__auto___14323 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14322);
    if (cljs.core.truth_(result__12845__auto___14323)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14322), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14322);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14288) {
    var t__12882__auto___14324 = e14288;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
    188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14324, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14325 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), null);
    var result__12845__auto___14326 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14325);
    if (cljs.core.truth_(result__12845__auto___14326)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14325), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14325);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14289) {
    var t__12882__auto___14327 = e14289;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
    188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14327, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.println.call(null, new cljs.core.Keyword(null, "loc", "loc", -584284901), (new cljs.core.Keyword(null, "loc", "loc", -584284901)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res)));
  try {
    var values__12844__auto___14328 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = (new cljs.core.Keyword(null, "loc", "loc", -584284901)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), new cljs.core.Keyword(null, "missing", "missing", 362507769));
    var result__12845__auto___14329 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14328);
    if (cljs.core.truth_(result__12845__auto___14329)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14328), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14328);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14290) {
    var t__12882__auto___14330 = e14290;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14330, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14331 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, bct);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___14332 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14331);
    if (cljs.core.truth_(result__12845__auto___14332)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14331), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14331);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14291) {
    var t__12882__auto___14333 = e14291;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14333, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.reset_BANG_.call(null, bct, 0);
  tiltontec.model.core.md_reset_BANG_.call(null, res, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__12844__auto___14334 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = (new cljs.core.Keyword(null, "loc", "loc", -584284901)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__12845__auto___14335 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14334);
    if (cljs.core.truth_(result__12845__auto___14335)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14334), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14334);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14292) {
    var t__12882__auto___14336 = e14292;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14336, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = function() {
      var x__7044__auto__ = cljs.core.deref.call(null, bct);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core.zero_QMARK_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.zero_QMARK_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e14293) {
    var t__12882__auto__ = e14293;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.mm_install_alive.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.mm_install_alive;
}, new cljs.core.Symbol("tiltontec.model.core-test", "mm-install-alive", "tiltontec.model.core-test/mm-install-alive", -206095115, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-install-alive", "mm-install-alive", 1190325296, null), "test/tiltontec/model/core_test.cljc", 
26, 1, 202, 202, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.mm_install_alive) ? tiltontec.model.core_test.mm_install_alive.cljs$lang$test : null]));
tiltontec.model.core_test.hello_model = function tiltontec$model$core_test$hello_model() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$hello_model.cljs$lang$var);
};
tiltontec.model.core_test.hello_model.cljs$lang$test = function() {
  var uni = tiltontec.model.core.make.call(null, new cljs.core.Keyword("tiltontec.model.core", "family", "tiltontec.model.core/family", -623513184), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, 
  "name", "name", 1843675177), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "moniker", "moniker", -1330203766), "World", new cljs.core.Keyword(null, "action", "action", -811238024), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, 
  null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "slot", "slot", 1880761098, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Symbol(null, "new", "new", -444906321, null), new cljs.core.Symbol(null, "old", "old", -184691163, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "new", 
  "new", -444906321, null), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Symbol(null, "visitor-did", "visitor-did", 1352408685, null), new cljs.core.Symbol(null, "new", "new", -444906321, null)))))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "resident", "resident", 1053225840), new cljs.core.Keyword(null, "action", "action", -811238024), 
  cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true), new cljs.core.Keyword(null, "location", "location", 1815599388), cljs.core.list(new cljs.core.Symbol(null, "c?+", "c?+", -133955249, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn-obs", "fn-obs", 305587329, 
  null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "new", "new", -444906321, null), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "honey-im", "honey-im", 546332184), new cljs.core.Symbol(null, "new", "new", -444906321, null))))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, 
  null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "action", "action", -811238024)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "response", "response", -1068424192), cljs.core.list(new cljs.core.Symbol(null, 
  "c?+", "c?+", -133955249, null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn-obs", "fn-obs", 305587329, null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "new", "new", -444906321, null), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "r-response", 
  "r-response", 1211417459), new cljs.core.Symbol(null, "new", "new", -444906321, null)))), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", 
  "me", 1501524834, null), new cljs.core.Keyword(null, "location", "location", 1815599388))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "action", 
  "action", -811238024))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world"))))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "alarm", "alarm", 2066206946), new cljs.core.Keyword(null, "on-off", "on-off", 
  420433376), cljs.core.list(new cljs.core.Symbol(null, "c?+", "c?+", -133955249, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn-obs", "fn-obs", 305587329, null), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "telling-alarm-api", "telling-alarm-api", -905807036), new cljs.core.Symbol(null, "new", "new", 
  -444906321, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388))), new cljs.core.Keyword(null, "off", "off", 606440789), 
  new cljs.core.Keyword(null, "on", "on", 173873944))), new cljs.core.Keyword(null, "activity", "activity", -1179221455), cljs.core.list(new cljs.core.Symbol(null, "c?+", "c?+", -133955249, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn-obs", "fn-obs", 305587329, null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, 
  "new", "new", -444906321, null), new cljs.core.Keyword(null, "call-police", "call-police", -2114689981), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "auto-dialing-911", "auto-dialing-911", -1790610355)), null))], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "on", "on", 173873944), cljs.core.list(new cljs.core.Symbol(null, 
  "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "on-off", "on-off", 420433376))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "action", "action", 829293503, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, 
  "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "action", "action", -811238024))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, "action", "action", 829293503, null), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646), new cljs.core.Keyword(null, "call-police", "call-police", -2114689981), null))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, 
  new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_14337 = tiltontec.model.core._STAR_par_STAR_;
    tiltontec.model.core._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, function() {
        var x__7044__auto__ = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "moniker", "moniker", -1330203766), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(_STAR_par_STAR_14337, 
        me, cache) {
          return function(slot, me__$1, new$, old, c) {
            if (cljs.core.truth_(new$)) {
              return tiltontec.util.base.call_trc.call(null, "visitor-did", new$);
            } else {
              return null;
            }
          };
        }(_STAR_par_STAR_14337, me, cache)));
        return cljs.core._conj.call(null, function() {
          var x__7044__auto____$1 = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "resident", "resident", 1053225840), new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true), new cljs.core.Keyword(null, "location", "location", 1815599388), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, 
          "obs", "obs", -664011444), function(x__7044__auto__, _STAR_par_STAR_14337, me, cache) {
            return function(slot, me__$1, new$, old, c) {
              if (cljs.core.truth_(new$)) {
                return tiltontec.util.base.call_trc.call(null, ":honey-im", new$);
              } else {
                return null;
              }
            };
          }(x__7044__auto__, _STAR_par_STAR_14337, me, cache), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "action", "action", -811238024)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, 
          "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto__, _STAR_par_STAR_14337, me, cache) {
            return function(slot_c_SHARP___$1) {
              var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
              var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
              var G__14340 = tiltontec.model.core.md_get.call(null, me__$1, new cljs.core.Keyword(null, "action", "action", -811238024)) instanceof cljs.core.Keyword ? tiltontec.model.core.md_get.call(null, me__$1, new cljs.core.Keyword(null, "action", "action", -811238024)).fqn : null;
              switch(G__14340) {
                case "leave":
                  return new cljs.core.Keyword(null, "away", "away", 1142420954);
                  break;
                case "return":
                  return new cljs.core.Keyword(null, "home", "home", -74557309);
                  break;
                default:
                  return new cljs.core.Keyword(null, "missing", "missing", 362507769);
              }
            };
          }(x__7044__auto__, _STAR_par_STAR_14337, me, cache)), new cljs.core.Keyword(null, "response", "response", -1068424192), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(x__7044__auto__, _STAR_par_STAR_14337, me, cache) {
            return function(slot, me__$1, new$, old, c) {
              if (cljs.core.truth_(new$)) {
                return tiltontec.util.base.call_trc.call(null, ":r-response", new$);
              } else {
                return null;
              }
            };
          }(x__7044__auto__, _STAR_par_STAR_14337, me, cache), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), 
          new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "location", "location", 1815599388))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), 
          new cljs.core.Keyword(null, "action", "action", -811238024))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto__, _STAR_par_STAR_14337, me, 
          cache) {
            return function(slot_c_SHARP___$1) {
              var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
              var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.model.core.md_get.call(null, me__$1, new cljs.core.Keyword(null, "location", "location", 1815599388)))) {
                var temp__4425__auto__ = tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), me__$1), new cljs.core.Keyword(null, "action", "action", -811238024));
                if (cljs.core.truth_(temp__4425__auto__)) {
                  var act = temp__4425__auto__;
                  var G__14341 = act instanceof cljs.core.Keyword ? act.fqn : null;
                  switch(G__14341) {
                    case "knock-knock":
                      return "hello, world";
                      break;
                    default:
                      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(act)].join(""));;
                  }
                } else {
                  return null;
                }
              } else {
                return null;
              }
            };
          }(x__7044__auto__, _STAR_par_STAR_14337, me, cache)));
          return cljs.core._conj.call(null, function() {
            var x__7044__auto____$2 = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "alarm", "alarm", 2066206946), new cljs.core.Keyword(null, "on-off", "on-off", 420433376), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14337, me, cache) {
              return function(slot, me__$1, new$, old, c) {
                return tiltontec.util.base.call_trc.call(null, ":telling-alarm-api", new$);
              };
            }(x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14337, me, cache), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", "resident", 1053225840), 
            new cljs.core.Keyword(null, "location", "location", 1815599388))), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "on", "on", 173873944))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14337, me, cache) {
              return function(slot_c_SHARP___$1) {
                var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
                var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
                if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "resident", "resident", 1053225840), me__$1), new cljs.core.Keyword(null, "location", "location", 1815599388)))) {
                  return new cljs.core.Keyword(null, "off", "off", 606440789);
                } else {
                  return new cljs.core.Keyword(null, "on", "on", 173873944);
                }
              };
            }(x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14337, me, cache)), new cljs.core.Keyword(null, "activity", "activity", -1179221455), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14337, me, cache) {
              return function(slot, me__$1, new$, old, c) {
                var G__14344 = new$ instanceof cljs.core.Keyword ? new$.fqn : null;
                switch(G__14344) {
                  case "call-police":
                    return tiltontec.util.base.call_trc.call(null, ":auto-dialing-911");
                    break;
                  default:
                    return null;
                }
              };
            }(x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14337, me, cache), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "on", "on", 173873944), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), 
            new cljs.core.Keyword(null, "on-off", "on-off", 420433376))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "action", "action", 829293503, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "action", "action", -811238024))], 
            null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, "action", "action", 829293503, null), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646), new cljs.core.Keyword(null, "call-police", "call-police", -2114689981), null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(x__7044__auto____$1, x__7044__auto__, 
            _STAR_par_STAR_14337, me, cache) {
              return function(slot_c_SHARP___$1) {
                var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
                var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
                if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "on", "on", 173873944), tiltontec.model.core.md_get.call(null, me__$1, new cljs.core.Keyword(null, "on-off", "on-off", 420433376)))) {
                  var temp__4425__auto__ = tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), me__$1), new cljs.core.Keyword(null, "action", "action", -811238024));
                  if (cljs.core.truth_(temp__4425__auto__)) {
                    var action = temp__4425__auto__;
                    var G__14345 = action instanceof cljs.core.Keyword ? action.fqn : null;
                    switch(G__14345) {
                      case "smashing-window":
                        return new cljs.core.Keyword(null, "call-police", "call-police", -2114689981);
                        break;
                      default:
                        return null;
                    }
                  } else {
                    return null;
                  }
                } else {
                  return null;
                }
              };
            }(x__7044__auto____$1, x__7044__auto__, _STAR_par_STAR_14337, me, cache)));
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$2);
          }(), x__7044__auto____$1);
        }(), x__7044__auto__);
      }()));
    } finally {
      tiltontec.model.core._STAR_par_STAR_ = _STAR_par_STAR_14337;
    }
  }));
  var viz = tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), uni);
  var rez = tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "resident", "resident", 1053225840), uni);
  try {
    var values__12844__auto___14356 = function() {
      var x__7044__auto__ = viz == null;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14357 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___14356);
    if (cljs.core.truth_(result__12845__auto___14357)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "viz", "viz", -1183834940, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__12844__auto___14356), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "viz", "viz", -1183834940, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___14356);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14346) {
    var t__12882__auto___14358 = e14346;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "viz", "viz", -1183834940, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14358, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14359 = function() {
      var x__7044__auto__ = rez == null;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14360 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___14359);
    if (cljs.core.truth_(result__12845__auto___14360)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "rez", "rez", 574832853, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__12844__auto___14359), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "rez", "rez", 574832853, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___14359);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14347) {
    var t__12882__auto___14361 = e14347;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "rez", "rez", 574832853, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__12882__auto___14361, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14362 = function() {
      var x__7044__auto__ = tiltontec.model.base.md_cell.call(null, rez, new cljs.core.Keyword(null, "action", "action", -811238024)) == null;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14363 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___14362);
    if (cljs.core.truth_(result__12845__auto___14363)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
      "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__12844__auto___14362), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
      "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___14362);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14348) {
    var t__12882__auto___14364 = e14348;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
    "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14364, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14365 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "resident", "resident", 1053225840), uni), new cljs.core.Keyword(null, "location", "location", 1815599388));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), new cljs.core.Keyword(null, "missing", "missing", 362507769));
    var result__12845__auto___14366 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14365);
    if (cljs.core.truth_(result__12845__auto___14366)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, 
      "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14365), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, 
      "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14365);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14349) {
    var t__12882__auto___14367 = e14349;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, 
    "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14367, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.model.core.md_reset_BANG_.call(null, viz, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
  tiltontec.model.core.md_reset_BANG_.call(null, viz, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646));
  try {
    var values__12844__auto___14368 = function() {
      var x__7044__auto__ = tiltontec.model.base.md_cell.call(null, rez, new cljs.core.Keyword(null, "action", "action", -811238024)) == null;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14369 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___14368);
    if (cljs.core.truth_(result__12845__auto___14369)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
      "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__12844__auto___14368), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
      "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___14368);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14350) {
    var t__12882__auto___14370 = e14350;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
    "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14370, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.model.core.md_reset_BANG_.call(null, rez, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__12844__auto___14371 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.model.core.md_get.call(null, tiltontec.model.core.fm_BANG_.call(null, new cljs.core.Keyword(null, "resident", "resident", 1053225840), uni), new cljs.core.Keyword(null, "location", "location", 1815599388));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__12845__auto___14372 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14371);
    if (cljs.core.truth_(result__12845__auto___14372)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", 
      "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14371), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", 
      "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14371);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14351) {
    var t__12882__auto___14373 = e14351;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", 
    "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14373, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  return tiltontec.model.core.md_reset_BANG_.call(null, viz, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
};
tiltontec.model.core_test.hello_model.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.hello_model;
}, new cljs.core.Symbol("tiltontec.model.core-test", "hello-model", "tiltontec.model.core-test/hello-model", 1793459768, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "hello-model", "hello-model", 287487483, null), "test/tiltontec/model/core_test.cljc", 21, 1, 244, 244, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.model.core_test.hello_model) ? tiltontec.model.core_test.hello_model.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env14374 = cljs.test.empty_env.call(null);
  var summary14375 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env14374, summary14375) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env14374);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__12948__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__12948__auto__, env14374, summary14375) {
          return function() {
            if (env__12948__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__12948__auto__, env14374, summary14375)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.model.core_test.fm_0;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "fm-0", "tiltontec.model.core-test/fm-0", -626823591, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "fm-0", "fm-0", -1904222876, null), "test/tiltontec/model/core_test.cljc", 14, 1, 51, 51, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.model.core_test.fm_0) ? tiltontec.model.core_test.fm_0.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.fm_2;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "fm-2", "tiltontec.model.core-test/fm-2", 697958118, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "fm-2", "fm-2", -589475911, null), "test/tiltontec/model/core_test.cljc", 14, 1, 70, 70, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.model.core_test.fm_2) ? tiltontec.model.core_test.fm_2.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.fm_3;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "fm-3", "tiltontec.model.core-test/fm-3", -171788604, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "fm-3", "fm-3", -1601771135, null), "test/tiltontec/model/core_test.cljc", 14, 1, 102, 102, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.model.core_test.fm_3) ? tiltontec.model.core_test.fm_3.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.fm_3x;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "fm-3x", "tiltontec.model.core-test/fm-3x", -1888958356, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "fm-3x", "fm-3x", 875338153, null), "test/tiltontec/model/core_test.cljc", 15, 1, 134, 134, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.model.core_test.fm_3x) ? tiltontec.model.core_test.fm_3x.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.fm_picker;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "fm-picker", "tiltontec.model.core-test/fm-picker", -1148699100, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "fm-picker", "fm-picker", 2001727201, null), "test/tiltontec/model/core_test.cljc", 19, 1, 163, 163, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.fm_picker) ? tiltontec.model.core_test.fm_picker.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.mm_typed;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "mm-typed", "tiltontec.model.core-test/mm-typed", 160483804, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-typed", "mm-typed", 1121916947, null), "test/tiltontec/model/core_test.cljc", 18, 1, 182, 182, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.mm_typed) ? tiltontec.model.core_test.mm_typed.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.mm_opti_1;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "mm-opti-1", "tiltontec.model.core-test/mm-opti-1", -1273683452, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-opti-1", "mm-opti-1", -1060539455, null), "test/tiltontec/model/core_test.cljc", 19, 1, 191, 191, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.mm_opti_1) ? tiltontec.model.core_test.mm_opti_1.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.mm_install_alive;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "mm-install-alive", "tiltontec.model.core-test/mm-install-alive", -206095115, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-install-alive", "mm-install-alive", 1190325296, null), "test/tiltontec/model/core_test.cljc", 
        26, 1, 202, 202, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.mm_install_alive) ? tiltontec.model.core_test.mm_install_alive.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.hello_model;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "hello-model", "tiltontec.model.core-test/hello-model", 1793459768, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "hello-model", "hello-model", 287487483, null), "test/tiltontec/model/core_test.cljc", 21, 
        1, 244, 244, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.hello_model) ? tiltontec.model.core_test.hello_model.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__12948__auto__, env14374, summary14375) {
          return function() {
            if (env__12948__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__12948__auto__, env14374, summary14375)], null));
      }());
    };
  }(env14374, summary14375), function(env14374, summary14375) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env14374, summary14375)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env14374, summary14375) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary14375, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary14375), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env14374, summary14375)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env14374, summary14375) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env14374);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary14375));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary14375), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env14374, summary14375)], null));
}());
goog.provide("testrun");
goog.require("cljs.core");
goog.require("cljs.test");
cljs.core.enable_console_print_BANG_.call(null);
testrun.run = function testrun$run() {
  return cljs.test.run_block.call(null, function() {
    var env15575 = /tiltontec.util.*-test/;
    var summary15576 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
    return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env15575, summary15576) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env15575);
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "testrun", "testrun", 252374431, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
        return cljs.test.block.call(null, function() {
          var env__12948__auto__ = cljs.test.get_current_env.call(null);
          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__12948__auto__, env15575, summary15576) {
            return function() {
              if (env__12948__auto__ == null) {
                cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
              } else {
              }
              return null;
            };
          }(env__12948__auto__, env15575, summary15576)], null), cljs.test.test_vars_block.call(null, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__12948__auto__, env15575, summary15576) {
            return function() {
              if (env__12948__auto__ == null) {
                return cljs.test.clear_env_BANG_.call(null);
              } else {
                return null;
              }
            };
          }(env__12948__auto__, env15575, summary15576)], null));
        }());
      };
    }(env15575, summary15576), function(env15575, summary15576) {
      return function() {
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "testrun", "testrun", 252374431, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
      };
    }(env15575, summary15576)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env15575, summary15576) {
      return function() {
        return cljs.core._vreset_BANG_.call(null, summary15576, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary15576), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
      };
    }(env15575, summary15576)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env15575, summary15576) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env15575);
        cljs.test.do_report.call(null, cljs.core.deref.call(null, summary15576));
        cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary15576), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
        return cljs.test.clear_env_BANG_.call(null);
      };
    }(env15575, summary15576)], null));
  }());
};
goog.exportSymbol("testrun.run", testrun.run);
goog.provide("tiltontec.cell.lazy_cells_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
tiltontec.cell.lazy_cells_test.solid_lazy = function tiltontec$cell$lazy_cells_test$solid_lazy() {
  return cljs.test.test_var.call(null, tiltontec$cell$lazy_cells_test$solid_lazy.cljs$lang$var);
};
tiltontec.cell.lazy_cells_test.solid_lazy.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var xo = cljs.core.atom.call(null, 0);
  var a = tiltontec.cell.core.c_in.call(null, 0);
  var x = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(xo, a) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, xo, cljs.core.inc);
    };
  }(xo, a), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null)), 40)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "lazy", "lazy", -424547181), true, new cljs.core.Keyword(null, "rule", "rule", 729973257), 
  function(xo, a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return tiltontec.cell.evaluate.c_get.call(null, a) + 40;
    };
  }(xo, a));
  try {
    var values__12844__auto___15087 = function() {
      var x__7044__auto__ = tiltontec.cell.base.unbound;
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15088 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15087);
    if (cljs.core.truth_(result__12845__auto___15088)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15087), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15087);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15079) {
    var t__12882__auto___15089 = e15079;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15089, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15090 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, xo);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 0);
    var result__12845__auto___15091 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15090);
    if (cljs.core.truth_(result__12845__auto___15091)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15090), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15090);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15080) {
    var t__12882__auto___15092 = e15080;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15092, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15093 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, x);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 40);
    var result__12845__auto___15094 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15093);
    if (cljs.core.truth_(result__12845__auto___15094)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15093), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15093);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15081) {
    var t__12882__auto___15095 = e15081;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15095, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15096 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, xo);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15097 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15096);
    if (cljs.core.truth_(result__12845__auto___15097)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15096), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15096);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15082) {
    var t__12882__auto___15098 = e15082;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15098, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, a, 100);
  try {
    var values__12844__auto___15099 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, xo);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15100 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15099);
    if (cljs.core.truth_(result__12845__auto___15100)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15099), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15099);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15083) {
    var t__12882__auto___15101 = e15083;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15101, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15102 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 40);
    var result__12845__auto___15103 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15102);
    if (cljs.core.truth_(result__12845__auto___15103)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15102), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15102);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15084) {
    var t__12882__auto___15104 = e15084;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15104, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15105 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, x);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 140);
    var result__12845__auto___15106 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15105);
    if (cljs.core.truth_(result__12845__auto___15106)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15105), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15105);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15085) {
    var t__12882__auto___15107 = e15085;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15107, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, xo);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 2);
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15086) {
    var t__12882__auto__ = e15086;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.lazy_cells_test.solid_lazy.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.lazy_cells_test.solid_lazy;
}, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "solid-lazy", "tiltontec.cell.lazy-cells-test/solid-lazy", -621454351, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "solid-lazy", "solid-lazy", -1673817790, null), "test/tiltontec/cell/lazy_cells_test.cljc", 
20, 1, 40, 40, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.solid_lazy) ? tiltontec.cell.lazy_cells_test.solid_lazy.cljs$lang$test : null]));
tiltontec.cell.lazy_cells_test.lazy_until_asked = function tiltontec$cell$lazy_cells_test$lazy_until_asked() {
  return cljs.test.test_var.call(null, tiltontec$cell$lazy_cells_test$lazy_until_asked.cljs$lang$var);
};
tiltontec.cell.lazy_cells_test.lazy_until_asked.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var xo = cljs.core.atom.call(null, 0);
  var xr = cljs.core.atom.call(null, 0);
  var a = tiltontec.cell.core.c_in.call(null, 0);
  var x = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(xo, xr, a) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, xo, cljs.core.inc);
    };
  }(xo, xr, a), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null)), 40)), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "lazy", "lazy", -424547181), new cljs.core.Keyword(null, "until-asked", "until-asked", -1449069768), new cljs.core.Keyword(null, "rule", "rule", 729973257), function(xo, xr, a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, xr, cljs.core.inc);
      return tiltontec.cell.evaluate.c_get.call(null, a) + 40;
    };
  }(xo, xr, a));
  try {
    var values__12844__auto___15120 = function() {
      var x__7044__auto__ = tiltontec.cell.base.unbound;
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15121 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15120);
    if (cljs.core.truth_(result__12845__auto___15121)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15120), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15120);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15108) {
    var t__12882__auto___15122 = e15108;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15122, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15123 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, xo);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 0);
    var result__12845__auto___15124 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15123);
    if (cljs.core.truth_(result__12845__auto___15124)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15123), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15123);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15109) {
    var t__12882__auto___15125 = e15109;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15125, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15126 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, xr);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 0);
    var result__12845__auto___15127 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15126);
    if (cljs.core.truth_(result__12845__auto___15127)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15126), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15126);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15110) {
    var t__12882__auto___15128 = e15110;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15128, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15129 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, x);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 40);
    var result__12845__auto___15130 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15129);
    if (cljs.core.truth_(result__12845__auto___15130)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15129), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15129);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15111) {
    var t__12882__auto___15131 = e15111;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15131, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15132 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, xo);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15133 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15132);
    if (cljs.core.truth_(result__12845__auto___15133)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15132), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15132);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15112) {
    var t__12882__auto___15134 = e15112;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15134, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15135 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, xr);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___15136 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15135);
    if (cljs.core.truth_(result__12845__auto___15136)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15135), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15135);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15113) {
    var t__12882__auto___15137 = e15113;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15137, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, a, 100);
  try {
    var values__12844__auto___15138 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, xo);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 2);
    var result__12845__auto___15139 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15138);
    if (cljs.core.truth_(result__12845__auto___15139)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15138), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15138);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15114) {
    var t__12882__auto___15140 = e15114;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15140, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15141 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, xr);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 2);
    var result__12845__auto___15142 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15141);
    if (cljs.core.truth_(result__12845__auto___15142)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15141), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15141);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15115) {
    var t__12882__auto___15143 = e15115;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15143, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15144 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 140);
    var result__12845__auto___15145 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15144);
    if (cljs.core.truth_(result__12845__auto___15145)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15144), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15144);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15116) {
    var t__12882__auto___15146 = e15116;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15146, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15147 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, x);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 140);
    var result__12845__auto___15148 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15147);
    if (cljs.core.truth_(result__12845__auto___15148)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15147), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15147);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15117) {
    var t__12882__auto___15149 = e15117;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15149, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15150 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, xo);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 2);
    var result__12845__auto___15151 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15150);
    if (cljs.core.truth_(result__12845__auto___15151)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15150), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15150);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15118) {
    var t__12882__auto___15152 = e15118;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15152, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, xr);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 2);
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15119) {
    var t__12882__auto__ = e15119;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.lazy_cells_test.lazy_until_asked.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.lazy_cells_test.lazy_until_asked;
}, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "lazy-until-asked", "tiltontec.cell.lazy-cells-test/lazy-until-asked", -1250993920, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "lazy-until-asked", "lazy-until-asked", -63631277, null), "test/tiltontec/cell/lazy_cells_test.cljc", 
26, 1, 57, 57, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.lazy_until_asked) ? tiltontec.cell.lazy_cells_test.lazy_until_asked.cljs$lang$test : null]));
tiltontec.cell.lazy_cells_test.optimize_when_value_t = function tiltontec$cell$lazy_cells_test$optimize_when_value_t() {
  return cljs.test.test_var.call(null, tiltontec$cell$lazy_cells_test$optimize_when_value_t.cljs$lang$var);
};
tiltontec.cell.lazy_cells_test.optimize_when_value_t.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var xo = cljs.core.atom.call(null, 0);
  var xr = cljs.core.atom.call(null, 0);
  var a = tiltontec.cell.core.c_in.call(null, 0, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "aaa", "aaa", 392664825));
  var x = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "xxx", "xxx", -1019301908), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(xo, xr, a) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, xo, cljs.core.inc);
    };
  }(xo, xr, a), new cljs.core.Keyword(null, "optimize", "optimize", -1912349448), new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), null, 
  new cljs.core.Keyword(null, "reading-a!!!", "reading-a!!!", -391404819)), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "av", "av", 1883447185, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null))], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 
  1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "av", "av", 1883447185, null), 1), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), new cljs.core.Symbol(null, "av", "av", 1883447185, null), 40)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(xo, xr, a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, xr, cljs.core.inc);
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "reading-a!!!", "reading-a!!!", -391404819));
      var temp__4425__auto__ = tiltontec.cell.evaluate.c_get.call(null, a);
      if (cljs.core.truth_(temp__4425__auto__)) {
        var av = temp__4425__auto__;
        if (av > 1) {
          return av + 40;
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(xo, xr, a));
  try {
    var values__12844__auto___15160 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, x);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15161 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___15160);
    if (cljs.core.truth_(result__12845__auto___15161)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___15160), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___15160);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15153) {
    var t__12882__auto___15162 = e15153;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__12882__auto___15162, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15163 = function() {
      var x__7044__auto__ = cljs.core.PersistentHashSet.fromArray([a], true);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_useds.call(null, x);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15164 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15163);
    if (cljs.core.truth_(result__12845__auto___15164)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15163), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15163);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15154) {
    var t__12882__auto___15165 = e15154;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15165, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, a, 1);
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "reset-finished!!!!!!!!!!", "reset-finished!!!!!!!!!!", -898693691));
  try {
    var values__12844__auto___15166 = function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, x);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15167 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___15166);
    if (cljs.core.truth_(result__12845__auto___15167)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___15166), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___15166);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15155) {
    var t__12882__auto___15168 = e15155;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__12882__auto___15168, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15169 = function() {
      var x__7044__auto__ = cljs.core.PersistentHashSet.fromArray([a], true);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_useds.call(null, x);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___15170 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15169);
    if (cljs.core.truth_(result__12845__auto___15170)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15169), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15169);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15156) {
    var t__12882__auto___15171 = e15156;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___15171, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "reset-2-beginning!!!!!!!!!!!!", "reset-2-beginning!!!!!!!!!!!!", 206221749));
  tiltontec.cell.core.c_reset_BANG_.call(null, a, 2);
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "reset-2-finished!!!!!!!!!!", "reset-2-finished!!!!!!!!!!", -1742930051));
  try {
    var values__12844__auto___15172 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, x);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___15173 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___15172);
    if (cljs.core.truth_(result__12845__auto___15173)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___15172), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___15172);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15157) {
    var t__12882__auto___15174 = e15157;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15174, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___15175 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_useds.call(null, x);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___15176 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__12844__auto___15175);
    if (cljs.core.truth_(result__12845__auto___15176)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__12844__auto___15175), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__12844__auto___15175);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15158) {
    var t__12882__auto___15177 = e15158;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___15177, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "useds", "useds", 621350967), tiltontec.cell.base.c_useds.call(null, x));
  try {
    var values__12844__auto__ = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_callers.call(null, x);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e15159) {
    var t__12882__auto__ = e15159;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.lazy_cells_test.optimize_when_value_t.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.lazy_cells_test.optimize_when_value_t;
}, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "optimize-when-value-t", "tiltontec.cell.lazy-cells-test/optimize-when-value-t", 919000791, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "optimize-when-value-t", "optimize-when-value-t", 2131697560, null), "test/tiltontec/cell/lazy_cells_test.cljc", 
31, 1, 80, 80, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.optimize_when_value_t) ? tiltontec.cell.lazy_cells_test.optimize_when_value_t.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env15178 = cljs.test.empty_env.call(null);
  var summary15179 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env15178, summary15179) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env15178);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__12948__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__12948__auto__, env15178, summary15179) {
          return function() {
            if (env__12948__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__12948__auto__, env15178, summary15179)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.lazy_cells_test.solid_lazy;
        }, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "solid-lazy", "tiltontec.cell.lazy-cells-test/solid-lazy", -621454351, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "solid-lazy", "solid-lazy", -1673817790, null), "test/tiltontec/cell/lazy_cells_test.cljc", 
        20, 1, 40, 40, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.solid_lazy) ? tiltontec.cell.lazy_cells_test.solid_lazy.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.lazy_cells_test.lazy_until_asked;
        }, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "lazy-until-asked", "tiltontec.cell.lazy-cells-test/lazy-until-asked", -1250993920, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "lazy-until-asked", "lazy-until-asked", -63631277, null), "test/tiltontec/cell/lazy_cells_test.cljc", 
        26, 1, 57, 57, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.lazy_until_asked) ? tiltontec.cell.lazy_cells_test.lazy_until_asked.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.lazy_cells_test.optimize_when_value_t;
        }, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "optimize-when-value-t", "tiltontec.cell.lazy-cells-test/optimize-when-value-t", 919000791, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "optimize-when-value-t", "optimize-when-value-t", 2131697560, 
        null), "test/tiltontec/cell/lazy_cells_test.cljc", 31, 1, 80, 80, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.optimize_when_value_t) ? tiltontec.cell.lazy_cells_test.optimize_when_value_t.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__12948__auto__, env15178, summary15179) {
          return function() {
            if (env__12948__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__12948__auto__, env15178, summary15179)], null));
      }());
    };
  }(env15178, summary15179), function(env15178, summary15179) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env15178, summary15179)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env15178, summary15179) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary15179, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary15179), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env15178, summary15179)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env15178, summary15179) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env15178);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary15179));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary15179), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env15178, summary15179)], null));
}());
goog.provide("tiltontec.cell.core_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.cell.core");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.core_test.test_input = function tiltontec$cell$core_test$test_input() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$test_input.cljs$lang$var);
};
tiltontec.cell.core_test.test_input.cljs$lang$test = function() {
  var c = tiltontec.cell.core.make_cell.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "mol", "mol", -2087943467), new cljs.core.Keyword(null, "value", "value", 305978217), 42);
  try {
    var values__12844__auto___14415 = function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), x__7044__auto__);
    }();
    var result__12845__auto___14416 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto___14415);
    if (cljs.core.truth_(result__12845__auto___14416)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto___14415), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__12844__auto___14415);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14408) {
    var t__12882__auto___14417 = e14408;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14417, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14418 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_value.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), x__7044__auto__);
    }();
    var result__12845__auto___14419 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14418);
    if (cljs.core.truth_(result__12845__auto___14419)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14418), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14418);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14409) {
    var t__12882__auto___14420 = e14409;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14420, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14421 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_value_state.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), x__7044__auto__);
    }();
    var result__12845__auto___14422 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14421);
    if (cljs.core.truth_(result__12845__auto___14422)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14421), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14421);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14410) {
    var t__12882__auto___14423 = e14410;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14423, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14424 = function() {
      var x__7044__auto__ = cljs.core.PersistentHashSet.EMPTY;
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_callers.call(null, c);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___14425 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14424);
    if (cljs.core.truth_(result__12845__auto___14425)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14424), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14424);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14411) {
    var t__12882__auto___14426 = e14411;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14426, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14427 = function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14428 = cljs.core.apply.call(null, tiltontec.cell.base.c_input_QMARK_, values__12844__auto___14427);
    if (cljs.core.truth_(result__12845__auto___14428)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_input_QMARK_, 
      values__12844__auto___14427), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__12844__auto___14427);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14412) {
    var t__12882__auto___14429 = e14412;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14429, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14430 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_model.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14431 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___14430);
    if (cljs.core.truth_(result__12845__auto___14431)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___14430), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___14430);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14413) {
    var t__12882__auto___14432 = e14413;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14432, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.base.c_slot.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), new cljs.core.Keyword(null, "mol", "mol", -2087943467));
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "mol", "mol", -2087943467), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "mol", "mol", -2087943467), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e14414) {
    var t__12882__auto__ = e14414;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "mol", "mol", -2087943467), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.test_input.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.test_input;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "test-input", "tiltontec.cell.core-test/test-input", 584139487, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/core_test.cljc", 20, 1, 45, 45, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.core_test.test_input) ? tiltontec.cell.core_test.test_input.cljs$lang$test : null]));
tiltontec.cell.core_test.test_c_in = function tiltontec$cell$core_test$test_c_in() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$test_c_in.cljs$lang$var);
};
tiltontec.cell.core_test.test_c_in.cljs$lang$test = function() {
  var c = tiltontec.cell.core.c_in.call(null, 42);
  try {
    var values__12844__auto___14440 = function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), x__7044__auto__);
    }();
    var result__12845__auto___14441 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto___14440);
    if (cljs.core.truth_(result__12845__auto___14441)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto___14440), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__12844__auto___14440);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14433) {
    var t__12882__auto___14442 = e14433;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14442, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14443 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_value.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), x__7044__auto__);
    }();
    var result__12845__auto___14444 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14443);
    if (cljs.core.truth_(result__12845__auto___14444)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14443), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14443);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14434) {
    var t__12882__auto___14445 = e14434;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14445, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14446 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_value_state.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), x__7044__auto__);
    }();
    var result__12845__auto___14447 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14446);
    if (cljs.core.truth_(result__12845__auto___14447)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14446), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14446);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14435) {
    var t__12882__auto___14448 = e14435;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14448, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14449 = function() {
      var x__7044__auto__ = cljs.core.PersistentHashSet.EMPTY;
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_callers.call(null, c);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___14450 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14449);
    if (cljs.core.truth_(result__12845__auto___14450)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14449), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14449);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14436) {
    var t__12882__auto___14451 = e14436;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14451, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14452 = function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14453 = cljs.core.apply.call(null, tiltontec.cell.base.c_input_QMARK_, values__12844__auto___14452);
    if (cljs.core.truth_(result__12845__auto___14453)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_input_QMARK_, 
      values__12844__auto___14452), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__12844__auto___14452);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14437) {
    var t__12882__auto___14454 = e14437;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14454, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14455 = function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14456 = cljs.core.apply.call(null, tiltontec.cell.base.c_valid_QMARK_, values__12844__auto___14455);
    if (cljs.core.truth_(result__12845__auto___14456)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_valid_QMARK_, 
      values__12844__auto___14455), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__12844__auto___14455);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14438) {
    var t__12882__auto___14457 = e14438;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14457, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_model.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e14439) {
    var t__12882__auto__ = e14439;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.test_c_in.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.test_c_in;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-in", "tiltontec.cell.core-test/test-c-in", -99212066, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-in", "test-c-in", -885735134, null), "test/tiltontec/cell/core_test.cljc", 19, 1, 58, 58, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.core_test.test_c_in) ? tiltontec.cell.core_test.test_c_in.cljs$lang$test : null]));
tiltontec.cell.core_test.test_c_in_PLUS_ = function tiltontec$cell$core_test$test_c_in_PLUS_() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$test_c_in_PLUS_.cljs$lang$var);
};
tiltontec.cell.core_test.test_c_in_PLUS_.cljs$lang$test = function() {
  var c = tiltontec.cell.core.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "cool", "cool", -10453819));
  try {
    var values__12844__auto___14465 = function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14466 = cljs.core.apply.call(null, tiltontec.cell.base.c_ref_QMARK_, values__12844__auto___14465);
    if (cljs.core.truth_(result__12845__auto___14466)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_ref_QMARK_, 
      values__12844__auto___14465), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), values__12844__auto___14465);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14458) {
    var t__12882__auto___14467 = e14458;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14467, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14468 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_value.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), x__7044__auto__);
    }();
    var result__12845__auto___14469 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14468);
    if (cljs.core.truth_(result__12845__auto___14469)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14468), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14468);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14459) {
    var t__12882__auto___14470 = e14459;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14470, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14471 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_value_state.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), x__7044__auto__);
    }();
    var result__12845__auto___14472 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14471);
    if (cljs.core.truth_(result__12845__auto___14472)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14471), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14471);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14460) {
    var t__12882__auto___14473 = e14460;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14473, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14474 = function() {
      var x__7044__auto__ = cljs.core.PersistentHashSet.EMPTY;
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_callers.call(null, c);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___14475 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14474);
    if (cljs.core.truth_(result__12845__auto___14475)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14474), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14474);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14461) {
    var t__12882__auto___14476 = e14461;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14476, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14477 = function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14478 = cljs.core.apply.call(null, tiltontec.cell.base.c_input_QMARK_, values__12844__auto___14477);
    if (cljs.core.truth_(result__12845__auto___14478)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_input_QMARK_, 
      values__12844__auto___14477), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__12844__auto___14477);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14462) {
    var t__12882__auto___14479 = e14462;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14479, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14480 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_model.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14481 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___14480);
    if (cljs.core.truth_(result__12845__auto___14481)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___14480), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___14480);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14463) {
    var t__12882__auto___14482 = e14463;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14482, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.base.c_slot.call(null, c);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_slot_name.call(null, c);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }(), new cljs.core.Keyword(null, "cool", "cool", -10453819));
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "cool", "cool", -10453819), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "cool", "cool", -10453819), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e14464) {
    var t__12882__auto__ = e14464;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "cool", "cool", -10453819), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.test_c_in_PLUS_.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.test_c_in_PLUS_;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-in+", "tiltontec.cell.core-test/test-c-in+", 856803589, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-in+", "test-c-in+", -1036603951, null), "test/tiltontec/cell/core_test.cljc", 20, 1, 69, 69, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.core_test.test_c_in_PLUS_) ? tiltontec.cell.core_test.test_c_in_PLUS_.cljs$lang$test : null]));
tiltontec.cell.core_test.test_c_formula = function tiltontec$cell$core_test$test_c_formula() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$test_c_formula.cljs$lang$var);
};
tiltontec.cell.core_test.test_c_formula.cljs$lang$test = function() {
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 40, 2)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return 40 + 2;
  });
  try {
    var values__12844__auto___14491 = function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), x__7044__auto__);
    }();
    var result__12845__auto___14492 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto___14491);
    if (cljs.core.truth_(result__12845__auto___14492)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__12844__auto___14491), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__12844__auto___14491);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14483) {
    var t__12882__auto___14493 = e14483;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14493, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14494 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_rule.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14495 = cljs.core.apply.call(null, cljs.core.fn_QMARK_, values__12844__auto___14494);
    if (cljs.core.truth_(result__12845__auto___14495)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.fn_QMARK_, values__12844__auto___14494), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), values__12844__auto___14494);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14484) {
    var t__12882__auto___14496 = e14484;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14496, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14497 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_value.call(null, c);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.unbound;
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___14498 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14497);
    if (cljs.core.truth_(result__12845__auto___14498)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
      "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14497), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
      "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14497);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14485) {
    var t__12882__auto___14499 = e14485;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
    "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14499, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14500 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_value_state.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654)), x__7044__auto__);
    }();
    var result__12845__auto___14501 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14500);
    if (cljs.core.truth_(result__12845__auto___14501)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14500), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14500);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14486) {
    var t__12882__auto___14502 = e14486;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14502, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14503 = function() {
      var x__7044__auto__ = cljs.core.PersistentHashSet.EMPTY;
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_callers.call(null, c);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___14504 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14503);
    if (cljs.core.truth_(result__12845__auto___14504)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14503), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14503);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14487) {
    var t__12882__auto___14505 = e14487;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14505, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14506 = function() {
      var x__7044__auto__ = cljs.core.PersistentHashSet.EMPTY;
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_useds.call(null, c);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___14507 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14506);
    if (cljs.core.truth_(result__12845__auto___14507)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14506), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14506);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14488) {
    var t__12882__auto___14508 = e14488;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14508, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14509 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_input_QMARK_.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14510 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___14509);
    if (cljs.core.truth_(result__12845__auto___14510)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__12844__auto___14509), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___14509);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14489) {
    var t__12882__auto___14511 = e14489;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14511, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_model.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e14490) {
    var t__12882__auto__ = e14490;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.test_c_formula.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.test_c_formula;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-formula", "tiltontec.cell.core-test/test-c-formula", -143714513, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-formula", "test-c-formula", -2076148965, null), "test/tiltontec/cell/core_test.cljc", 24, 1, 80, 80, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.core_test.test_c_formula) ? tiltontec.cell.core_test.test_c_formula.cljs$lang$test : null]));
tiltontec.cell.core_test.t_c_QMARK__PLUS_ = function tiltontec$cell$core_test$t_c_QMARK__PLUS_() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$t_c_QMARK__PLUS_.cljs$lang$var);
};
tiltontec.cell.core_test.t_c_QMARK__PLUS_.cljs$lang$test = function() {
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "optimize", "optimize", -1912349448), false, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), null, new cljs.core.Keyword(null, "cool", "cool", -10453819)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", 
  -740910886, null), 40, 2)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "cool", "cool", -10453819));
    return 40 + 2;
  });
  try {
    var values__12844__auto___14522 = function() {
      var x__7044__auto__ = c;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14523 = cljs.core.apply.call(null, tiltontec.cell.base.c_ref_QMARK_, values__12844__auto___14522);
    if (cljs.core.truth_(result__12845__auto___14523)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_ref_QMARK_, 
      values__12844__auto___14522), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), values__12844__auto___14522);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14512) {
    var t__12882__auto___14524 = e14512;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14524, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14525 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_rule.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14526 = cljs.core.apply.call(null, cljs.core.fn_QMARK_, values__12844__auto___14525);
    if (cljs.core.truth_(result__12845__auto___14526)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.fn_QMARK_, values__12844__auto___14525), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), values__12844__auto___14525);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14513) {
    var t__12882__auto___14527 = e14513;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14527, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14528 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_value.call(null, c);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.unbound;
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___14529 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14528);
    if (cljs.core.truth_(result__12845__auto___14529)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
      "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14528), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
      "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14528);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14514) {
    var t__12882__auto___14530 = e14514;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
    "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14530, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14531 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_value_state.call(null, c);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654)), x__7044__auto__);
    }();
    var result__12845__auto___14532 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14531);
    if (cljs.core.truth_(result__12845__auto___14532)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14531), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14531);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14515) {
    var t__12882__auto___14533 = e14515;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14533, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14534 = function() {
      var x__7044__auto__ = cljs.core.PersistentHashSet.EMPTY;
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_callers.call(null, c);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___14535 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14534);
    if (cljs.core.truth_(result__12845__auto___14535)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14534), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14534);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14516) {
    var t__12882__auto___14536 = e14516;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14536, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14537 = function() {
      var x__7044__auto__ = cljs.core.PersistentHashSet.EMPTY;
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_useds.call(null, c);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }();
    var result__12845__auto___14538 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14537);
    if (cljs.core.truth_(result__12845__auto___14538)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14537), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14537);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14517) {
    var t__12882__auto___14539 = e14517;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14539, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14540 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_input_QMARK_.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14541 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___14540);
    if (cljs.core.truth_(result__12845__auto___14541)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__12844__auto___14540), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___14540);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14518) {
    var t__12882__auto___14542 = e14518;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14542, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14543 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_model.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14544 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___14543);
    if (cljs.core.truth_(result__12845__auto___14544)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___14543), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___14543);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14519) {
    var t__12882__auto___14545 = e14519;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14545, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14546 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_optimize.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14547 = cljs.core.apply.call(null, cljs.core.not, values__12844__auto___14546);
    if (cljs.core.truth_(result__12845__auto___14547)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-optimize", "c-optimize", 1870981226, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__12844__auto___14546), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-optimize", "c-optimize", 1870981226, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__12844__auto___14546);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14520) {
    var t__12882__auto___14548 = e14520;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-optimize", "c-optimize", 1870981226, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14548, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.base.c_slot.call(null, c);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = tiltontec.cell.base.c_slot_name.call(null, c);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }(), new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e14521) {
    var t__12882__auto__ = e14521;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.t_c_QMARK__PLUS_.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.t_c_QMARK__PLUS_;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?+", "tiltontec.cell.core-test/t-c?+", -1190817413, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?+", "t-c?+", 1747367215, null), "test/tiltontec/cell/core_test.cljc", 15, 1, 92, 92, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK__PLUS_) ? 
tiltontec.cell.core_test.t_c_QMARK__PLUS_.cljs$lang$test : null]));
tiltontec.cell.core_test.t_eph_1 = function tiltontec$cell$core_test$t_eph_1() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$t_eph_1.cljs$lang$var);
};
tiltontec.cell.core_test.t_eph_1.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var boct = cljs.core.atom.call(null, 0);
  var b = tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "b", "b", 1482224470), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(boct) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, boct, cljs.core.inc);
    };
  }(boct), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true);
  var crun = cljs.core.atom.call(null, 0);
  var cobs = cljs.core.atom.call(null, 0);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "c", "c", -1763192079), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(boct, b, crun, cobs) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, cobs, cljs.core.inc);
    };
  }(boct, b, crun, cobs), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), null, new cljs.core.Keyword(null, "bingo", "bingo", 719685022)), cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "prog1", "prog1", -359901378, 
  null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), null, new cljs.core.Keyword(null, "cellread!!", "cellread!!", -2142314459), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, 
  "b", "b", -1172211299, null))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(boct, b, crun, cobs) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
      cljs.core.swap_BANG_.call(null, crun, cljs.core.inc);
      var result__8295__auto__ = [cljs.core.str("Hi "), cljs.core.str(tiltontec.cell.evaluate.c_get.call(null, b))].join("");
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "cellread!!", "cellread!!", -2142314459), cljs.core.deref.call(null, b));
      return result__8295__auto__;
    };
  }(boct, b, crun, cobs));
  if (cljs.core.truth_(tiltontec.cell.base.c_rule.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Early no rule"), cljs.core.str("\n"), cljs.core.str("(c-rule c)")].join(""));
  }
  try {
    var values__12844__auto___14568 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_value.call(null, b);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14569 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___14568);
    if (cljs.core.truth_(result__12845__auto___14569)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___14568), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___14568);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14549) {
    var t__12882__auto___14570 = e14549;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14570, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "valstate", "valstate", 283440834), tiltontec.cell.base.c_value_state.call(null, b));
  try {
    var values__12844__auto___14571 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.base.c_value_state.call(null, b);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), new cljs.core.Keyword(null, "valid", "valid", 155614240));
    var result__12845__auto___14572 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14571);
    if (cljs.core.truth_(result__12845__auto___14572)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "valid", "valid", 155614240), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, 
      "b", "b", -1172211299, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14571), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "valid", "valid", 155614240), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, 
      "b", "b", -1172211299, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14571);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14550) {
    var t__12882__auto___14573 = e14550;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "valid", "valid", 155614240), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, 
    "b", "b", -1172211299, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14573, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14574 = function() {
      var x__7044__auto__ = b;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14575 = cljs.core.apply.call(null, tiltontec.cell.base.c_valid_QMARK_, values__12844__auto___14574);
    if (cljs.core.truth_(result__12845__auto___14575)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_valid_QMARK_, 
      values__12844__auto___14574), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__12844__auto___14574);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14551) {
    var t__12882__auto___14576 = e14551;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14576, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  tiltontec.util.base.call_trc.call(null, null, b);
  tiltontec.util.base.call_trc.call(null, null, cljs.core.deref.call(null, b));
  try {
    var values__12844__auto___14577 = function() {
      var x__7044__auto__ = b;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14578 = cljs.core.apply.call(null, tiltontec.cell.base.c_valid_QMARK_, values__12844__auto___14577);
    if (cljs.core.truth_(result__12845__auto___14578)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_valid_QMARK_, 
      values__12844__auto___14577), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__12844__auto___14577);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14552) {
    var t__12882__auto___14579 = e14552;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14579, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14580 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), "Hi ");
    var result__12845__auto___14581 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14580);
    if (cljs.core.truth_(result__12845__auto___14581)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14580), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14580);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14553) {
    var t__12882__auto___14582 = e14553;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14582, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14583 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, boct);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 1);
    var result__12845__auto___14584 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14583);
    if (cljs.core.truth_(result__12845__auto___14584)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14583), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14583);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14554) {
    var t__12882__auto___14585 = e14554;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14585, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14586 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, crun);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = cljs.core.deref.call(null, cobs);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }(), 1);
    var result__12845__auto___14587 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14586);
    if (cljs.core.truth_(result__12845__auto___14587)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
      cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14586), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
      cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14586);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14555) {
    var t__12882__auto___14588 = e14555;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
    cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14588, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14589 = function() {
      var x__7044__auto__ = (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, b));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14590 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___14589);
    if (cljs.core.truth_(result__12845__auto___14590)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___14589), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___14589);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14556) {
    var t__12882__auto___14591 = e14556;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14591, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, "Mom");
  try {
    var values__12844__auto___14592 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), "Hi Mom");
    var result__12845__auto___14593 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14592);
    if (cljs.core.truth_(result__12845__auto___14593)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14592), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14592);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14557) {
    var t__12882__auto___14594 = e14557;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14594, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14595 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, boct);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 2);
    var result__12845__auto___14596 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14595);
    if (cljs.core.truth_(result__12845__auto___14596)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14595), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14595);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14558) {
    var t__12882__auto___14597 = e14558;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14597, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14598 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, crun);
      return cljs.core._conj.call(null, function() {
        var x__7044__auto____$1 = cljs.core.deref.call(null, cobs);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto____$1);
      }(), x__7044__auto__);
    }(), 2);
    var result__12845__auto___14599 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14598);
    if (cljs.core.truth_(result__12845__auto___14599)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
      cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14598), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
      cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14598);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14559) {
    var t__12882__auto___14600 = e14559;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
    cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14600, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14601 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_value.call(null, b);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14602 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___14601);
    if (cljs.core.truth_(result__12845__auto___14602)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___14601), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___14601);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14560) {
    var t__12882__auto___14603 = e14560;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14603, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14604 = function() {
      var x__7044__auto__ = (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, b));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14605 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___14604);
    if (cljs.core.truth_(result__12845__auto___14605)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___14604), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___14604);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14561) {
    var t__12882__auto___14606 = e14561;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14606, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, "Mom");
  try {
    var values__12844__auto___14607 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), "Hi Mom");
    var result__12845__auto___14608 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14607);
    if (cljs.core.truth_(result__12845__auto___14608)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14607), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14607);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14562) {
    var t__12882__auto___14609 = e14562;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14609, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14610 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, boct);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 3);
    var result__12845__auto___14611 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14610);
    if (cljs.core.truth_(result__12845__auto___14611)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14610), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14610);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14563) {
    var t__12882__auto___14612 = e14563;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14612, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14613 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, crun);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 3);
    var result__12845__auto___14614 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14613);
    if (cljs.core.truth_(result__12845__auto___14614)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14613), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14613);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14564) {
    var t__12882__auto___14615 = e14564;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14615, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14616 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = cljs.core.deref.call(null, cobs);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 2);
    var result__12845__auto___14617 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14616);
    if (cljs.core.truth_(result__12845__auto___14617)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14616), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14616);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14565) {
    var t__12882__auto___14618 = e14565;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto___14618, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14619 = function() {
      var x__7044__auto__ = tiltontec.cell.base.c_value.call(null, b);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto___14620 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto___14619);
    if (cljs.core.truth_(result__12845__auto___14620)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto___14619), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto___14619);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14566) {
    var t__12882__auto___14621 = e14566;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14621, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = function() {
      var x__7044__auto__ = (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, b));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }();
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e14567) {
    var t__12882__auto__ = e14567;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.t_eph_1.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.t_eph_1;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "t-eph-1", "tiltontec.cell.core-test/t-eph-1", 1953166092, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-eph-1", "t-eph-1", 655169488, null), "test/tiltontec/cell/core_test.cljc", 17, 1, 108, 108, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.core_test.t_eph_1) ? 
tiltontec.cell.core_test.t_eph_1.cljs$lang$test : null]));
tiltontec.cell.core_test.t_c_QMARK_n = function tiltontec$cell$core_test$t_c_QMARK_n() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$t_c_QMARK_n.cljs$lang$var);
};
tiltontec.cell.core_test.t_c_QMARK_n.cljs$lang$test = function() {
  var a = tiltontec.cell.core.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "aa", "aa", 1986357152));
  var b = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(new cljs.core.Symbol("tiltontec.cell.base", "without-c-dependency", "tiltontec.cell.base/without-c-dependency", -1335265675, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837)], null), cljs.core.list(new cljs.core.Symbol(null, "/", 
  "/", -1371932971, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null)), 2)), new cljs.core.Keyword(null, "input?", "input?", -1792843173), true, new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var _STAR_depender_STAR_14622 = tiltontec.cell.base._STAR_depender_STAR_;
      tiltontec.cell.base._STAR_depender_STAR_ = null;
      try {
        new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837)], null);
        return tiltontec.cell.evaluate.c_get.call(null, a) / 2;
      } finally {
        tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_14622;
      }
    };
  }(a));
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 1, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(a, b) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return 1 + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(a, b));
  try {
    var values__12844__auto___14627 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, b);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 21);
    var result__12845__auto___14628 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14627);
    if (cljs.core.truth_(result__12845__auto___14628)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14627), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14627);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14623) {
    var t__12882__auto___14629 = e14623;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14629, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto___14630 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 22);
    var result__12845__auto___14631 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14630);
    if (cljs.core.truth_(result__12845__auto___14631)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 22, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14630), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 22, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14630);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14624) {
    var t__12882__auto___14632 = e14624;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 22, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14632, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, 42);
  try {
    var values__12844__auto___14633 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, b);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 42);
    var result__12845__auto___14634 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14633);
    if (cljs.core.truth_(result__12845__auto___14634)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14633), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14633);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14625) {
    var t__12882__auto___14635 = e14625;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14635, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__12844__auto__ = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, c);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 43);
    var result__12845__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto__);
    if (cljs.core.truth_(result__12845__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__12845__auto__;
  } catch (e14626) {
    var t__12882__auto__ = e14626;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.t_c_QMARK_n.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.t_c_QMARK_n;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?n", "tiltontec.cell.core-test/t-c?n", 149604314, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?n", "t-c?n", 1065739150, null), "test/tiltontec/cell/core_test.cljc", 15, 1, 156, 156, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK_n) ? 
tiltontec.cell.core_test.t_c_QMARK_n.cljs$lang$test : null]));
tiltontec.cell.core_test.t_c_QMARK_once = function tiltontec$cell$core_test$t_c_QMARK_once() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$t_c_QMARK_once.cljs$lang$var);
};
tiltontec.cell.core_test.t_c_QMARK_once.cljs$lang$test = function() {
  var a = tiltontec.cell.core.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "aa", "aa", 1986357152));
  var b = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(new cljs.core.Symbol("tiltontec.cell.base", "without-c-dependency", "tiltontec.cell.base/without-c-dependency", -1335265675, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837)], null), cljs.core.list(new cljs.core.Symbol(null, "/", 
  "/", -1371932971, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null)), 2)), new cljs.core.Keyword(null, "input?", "input?", -1792843173), null, new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var _STAR_depender_STAR_14636 = tiltontec.cell.base._STAR_depender_STAR_;
      tiltontec.cell.base._STAR_depender_STAR_ = null;
      try {
        new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837)], null);
        return tiltontec.cell.evaluate.c_get.call(null, a) / 2;
      } finally {
        tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_14636;
      }
    };
  }(a));
  try {
    var values__12844__auto___14638 = cljs.core._conj.call(null, function() {
      var x__7044__auto__ = tiltontec.cell.evaluate.c_get.call(null, b);
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
    }(), 21);
    var result__12845__auto___14639 = cljs.core.apply.call(null, cljs.core._EQ_, values__12844__auto___14638);
    if (cljs.core.truth_(result__12845__auto___14639)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__12844__auto___14638), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__7044__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__12844__auto___14638);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__7044__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e14637) {
    var t__12882__auto___14640 = e14637;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__12882__auto___14640, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  return null;
};
tiltontec.cell.core_test.t_c_QMARK_once.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.t_c_QMARK_once;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?once", "tiltontec.cell.core-test/t-c?once", 1148131532, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?once", "t-c?once", 1934477112, null), "test/tiltontec/cell/core_test.cljc", 18, 1, 167, 167, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK_once) ? tiltontec.cell.core_test.t_c_QMARK_once.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env14641 = cljs.test.empty_env.call(null);
  var summary14642 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env14641, summary14642) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env14641);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__12948__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__12948__auto__, env14641, summary14642) {
          return function() {
            if (env__12948__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__12948__auto__, env14641, summary14642)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.core_test.test_input;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "test-input", "tiltontec.cell.core-test/test-input", 584139487, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/core_test.cljc", 20, 1, 45, 45, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.test_input) ? tiltontec.cell.core_test.test_input.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.test_c_in;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-in", "tiltontec.cell.core-test/test-c-in", -99212066, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-in", "test-c-in", -885735134, null), "test/tiltontec/cell/core_test.cljc", 19, 1, 58, 58, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.test_c_in) ? tiltontec.cell.core_test.test_c_in.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.test_c_in_PLUS_;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-in+", "tiltontec.cell.core-test/test-c-in+", 856803589, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-in+", "test-c-in+", -1036603951, null), "test/tiltontec/cell/core_test.cljc", 20, 1, 69, 69, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.test_c_in_PLUS_) ? tiltontec.cell.core_test.test_c_in_PLUS_.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.test_c_formula;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-formula", "tiltontec.cell.core-test/test-c-formula", -143714513, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-formula", "test-c-formula", -2076148965, null), "test/tiltontec/cell/core_test.cljc", 
        24, 1, 80, 80, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.core_test.test_c_formula) ? tiltontec.cell.core_test.test_c_formula.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.t_c_QMARK__PLUS_;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?+", "tiltontec.cell.core-test/t-c?+", -1190817413, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?+", "t-c?+", 1747367215, null), "test/tiltontec/cell/core_test.cljc", 15, 1, 92, 92, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK__PLUS_) ? tiltontec.cell.core_test.t_c_QMARK__PLUS_.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.t_eph_1;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "t-eph-1", "tiltontec.cell.core-test/t-eph-1", 1953166092, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-eph-1", "t-eph-1", 655169488, null), "test/tiltontec/cell/core_test.cljc", 17, 1, 108, 108, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.t_eph_1) ? tiltontec.cell.core_test.t_eph_1.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.t_c_QMARK_n;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?n", "tiltontec.cell.core-test/t-c?n", 149604314, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?n", "t-c?n", 1065739150, null), "test/tiltontec/cell/core_test.cljc", 15, 1, 156, 156, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK_n) ? tiltontec.cell.core_test.t_c_QMARK_n.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.t_c_QMARK_once;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?once", "tiltontec.cell.core-test/t-c?once", 1148131532, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?once", "t-c?once", 1934477112, null), "test/tiltontec/cell/core_test.cljc", 18, 1, 167, 167, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK_once) ? tiltontec.cell.core_test.t_c_QMARK_once.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__12948__auto__, env14641, summary14642) {
          return function() {
            if (env__12948__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__12948__auto__, env14641, summary14642)], null));
      }());
    };
  }(env14641, summary14642), function(env14641, summary14642) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env14641, summary14642)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env14641, summary14642) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary14642, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary14642), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env14641, summary14642)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env14641, summary14642) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env14641);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary14642));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary14642), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env14641, summary14642)], null));
}());
