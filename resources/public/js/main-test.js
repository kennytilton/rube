if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_isModule) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.pathIsModule[path] = !!opt_isModule;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.importModule_ = function(src) {
    var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
    if (goog.importScript_("", bootstrap)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && goog.dependencies_.pathIsModule[path]) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function(source) {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = doc.createElement("script");
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      var isOldIE = goog.IS_OLD_IE_;
      if (opt_sourceText === undefined) {
        if (!isOldIE) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    var loadingModule = false;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        if (!deps.pathIsModule[path]) {
          goog.importScript_(goog.basePath + path);
        } else {
          loadingModule = true;
          goog.importModule_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    var xhr = new goog.global["XMLHttpRequest"];
    xhr.open("get", src, false);
    xhr.send();
    return xhr.responseText;
  }
};
goog.retrieveAndExecModule_ = function(src) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText != null) {
      var execModuleScript = goog.wrapModule_(src, scriptText);
      var isOldIE = goog.IS_OLD_IE_;
      if (isOldIE) {
        goog.dependencies_.deferred[originalPath] = execModuleScript;
        goog.queuedModules_.push(originalPath);
      } else {
        importScript(src, execModuleScript);
      }
    } else {
      throw new Error("load of " + src + "failed");
    }
  }
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = a[i] != b[j];
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.7.48";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_ = "default";
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
if (typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = function cljs$core$_STAR_print_err_fn_STAR_(_) {
    throw new Error("No *print-err-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var G__18243__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__18243 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__18244__i = 0, G__18244__a = new Array(arguments.length - 0);
        while (G__18244__i < G__18244__a.length) {
          G__18244__a[G__18244__i] = arguments[G__18244__i + 0];
          ++G__18244__i;
        }
        args = new cljs.core.IndexedSeq(G__18244__a, 0);
      }
      return G__18243__delegate.call(this, args);
    };
    G__18243.cljs$lang$maxFixedArity = 0;
    G__18243.cljs$lang$applyTo = function(arglist__18245) {
      var args = cljs.core.seq(arglist__18245);
      return G__18243__delegate(args);
    };
    G__18243.cljs$core$IFn$_invoke$arity$variadic = G__18243__delegate;
    return G__18243;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var G__18246__delegate = function(args) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__18246 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__18247__i = 0, G__18247__a = new Array(arguments.length - 0);
        while (G__18247__i < G__18247__a.length) {
          G__18247__a[G__18247__i] = arguments[G__18247__i + 0];
          ++G__18247__i;
        }
        args = new cljs.core.IndexedSeq(G__18247__a, 0);
      }
      return G__18246__delegate.call(this, args);
    };
    G__18246.cljs$lang$maxFixedArity = 0;
    G__18246.cljs$lang$applyTo = function(arglist__18248) {
      var args = cljs.core.seq(arglist__18248);
      return G__18246__delegate(args);
    };
    G__18246.cljs$core$IFn$_invoke$arity$variadic = G__18246__delegate;
    return G__18246;
  }();
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return goog.string.isUnicodeChar(x);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__5571__auto__ = ty;
    if (cljs.core.truth_(and__5571__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__5571__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4423__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4423__auto__)) {
    var s = temp__4423__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.make_array = function cljs$core$make_array() {
  var args18249 = [];
  var len__6622__auto___18252 = arguments.length;
  var i__6623__auto___18253 = 0;
  while (true) {
    if (i__6623__auto___18253 < len__6622__auto___18252) {
      args18249.push(arguments[i__6623__auto___18253]);
      var G__18254 = i__6623__auto___18253 + 1;
      i__6623__auto___18253 = G__18254;
      continue;
    } else {
    }
    break;
  }
  var G__18251 = args18249.length;
  switch(G__18251) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18249.length)].join(""));;
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__6467__auto___18256 = len;
  var i_18257 = 0;
  while (true) {
    if (i_18257 < n__6467__auto___18256) {
      new_arr[i_18257] = arr[i_18257];
      var G__18258 = i_18257 + 1;
      i_18257 = G__18258;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__18259 = i + 1;
      i = G__18259;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget() {
  var args18260 = [];
  var len__6622__auto___18269 = arguments.length;
  var i__6623__auto___18270 = 0;
  while (true) {
    if (i__6623__auto___18270 < len__6622__auto___18269) {
      args18260.push(arguments[i__6623__auto___18270]);
      var G__18271 = i__6623__auto___18270 + 1;
      i__6623__auto___18270 = G__18271;
      continue;
    } else {
    }
    break;
  }
  var G__18265 = args18260.length;
  switch(G__18265) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18260.slice(2), 0);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__18266 = cljs.core.aget;
  var G__18267 = array[i];
  var G__18268 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__18266, G__18267, G__18268) : cljs.core.apply.call(null, G__18266, G__18267, G__18268);
};
cljs.core.aget.cljs$lang$applyTo = function(seq18261) {
  var G__18262 = cljs.core.first(seq18261);
  var seq18261__$1 = cljs.core.next(seq18261);
  var G__18263 = cljs.core.first(seq18261__$1);
  var seq18261__$2 = cljs.core.next(seq18261__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__18262, G__18263, seq18261__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset() {
  var args18273 = [];
  var len__6622__auto___18284 = arguments.length;
  var i__6623__auto___18285 = 0;
  while (true) {
    if (i__6623__auto___18285 < len__6622__auto___18284) {
      args18273.push(arguments[i__6623__auto___18285]);
      var G__18286 = i__6623__auto___18285 + 1;
      i__6623__auto___18285 = G__18286;
      continue;
    } else {
    }
    break;
  }
  var G__18279 = args18273.length;
  switch(G__18279) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18273.slice(3), 0);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__6641__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__18280 = cljs.core.aset;
  var G__18281 = array[idx];
  var G__18282 = idx2;
  var G__18283 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__18280, G__18281, G__18282, G__18283) : cljs.core.apply.call(null, G__18280, G__18281, G__18282, G__18283);
};
cljs.core.aset.cljs$lang$applyTo = function(seq18274) {
  var G__18275 = cljs.core.first(seq18274);
  var seq18274__$1 = cljs.core.next(seq18274);
  var G__18276 = cljs.core.first(seq18274__$1);
  var seq18274__$2 = cljs.core.next(seq18274__$1);
  var G__18277 = cljs.core.first(seq18274__$2);
  var seq18274__$3 = cljs.core.next(seq18274__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__18275, G__18276, G__18277, seq18274__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array() {
  var args18288 = [];
  var len__6622__auto___18294 = arguments.length;
  var i__6623__auto___18295 = 0;
  while (true) {
    if (i__6623__auto___18295 < len__6622__auto___18294) {
      args18288.push(arguments[i__6623__auto___18295]);
      var G__18296 = i__6623__auto___18295 + 1;
      i__6623__auto___18295 = G__18296;
      continue;
    } else {
    }
    break;
  }
  var G__18290 = args18288.length;
  switch(G__18290) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18288.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__18291 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__18292 = [];
  var G__18293 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__18291, G__18292, G__18293) : cljs.core.reduce.call(null, G__18291, G__18292, G__18293);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke() {
  var args__6629__auto__ = [];
  var len__6622__auto___18301 = arguments.length;
  var i__6623__auto___18302 = 0;
  while (true) {
    if (i__6623__auto___18302 < len__6622__auto___18301) {
      args__6629__auto__.push(arguments[i__6623__auto___18302]);
      var G__18303 = i__6623__auto___18302 + 1;
      i__6623__auto___18302 = G__18303;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 2 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(2), 0) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6630__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq18298) {
  var G__18299 = cljs.core.first(seq18298);
  var seq18298__$1 = cljs.core.next(seq18298);
  var G__18300 = cljs.core.first(seq18298__$1);
  var seq18298__$2 = cljs.core.next(seq18298__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__18299, G__18300, seq18298__$2);
};
cljs.core.Fn = {};
cljs.core.IFn = {};
cljs.core._invoke = function cljs$core$_invoke() {
  var args18308 = [];
  var len__6622__auto___18311 = arguments.length;
  var i__6623__auto___18312 = 0;
  while (true) {
    if (i__6623__auto___18312 < len__6622__auto___18311) {
      args18308.push(arguments[i__6623__auto___18312]);
      var G__18313 = i__6623__auto___18312 + 1;
      i__6623__auto___18312 = G__18313;
      continue;
    } else {
    }
    break;
  }
  var G__18310 = args18308.length;
  switch(G__18310) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18308.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__6220__auto__.call(null, this$);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__6220__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__6220__auto__.call(null, this$, a);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__6220__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__6220__auto__.call(null, this$, a, b);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__6220__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$4 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__6220__auto__.call(null, this$, a, b, c);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__6220__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$5 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__6220__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__6220__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$6 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__6220__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__6220__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$7 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__6220__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__6220__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$8 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__6220__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__6220__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$9 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__6220__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__6220__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$10 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__6220__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__6220__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$11 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__6220__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__6220__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$12 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__6220__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__6220__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$13 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__6220__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__6220__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$14 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__6220__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__6220__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$15 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__6220__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__6220__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$16 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__6220__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__6220__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$17 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__6220__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__6220__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$18 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__6220__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__6220__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$19 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__6220__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__6220__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$20 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__6220__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__6220__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$21 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__6220__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__6220__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._invoke[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$22 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__6220__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__6220__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__6220__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = {};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__6219__auto__ = value == null ? null : value;
    var m__6220__auto__ = cljs.core._clone[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__6220__auto__.call(null, value);
    } else {
      var m__6220__auto____$1 = cljs.core._clone["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__6220__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = {};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._count[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto__.call(null, coll);
    } else {
      var m__6220__auto____$1 = cljs.core._count["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._empty[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto__.call(null, coll);
    } else {
      var m__6220__auto____$1 = cljs.core._empty["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._conj[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__6220__auto__.call(null, coll, o);
    } else {
      var m__6220__auto____$1 = cljs.core._conj["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__6220__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function cljs$core$_nth() {
  var args18325 = [];
  var len__6622__auto___18328 = arguments.length;
  var i__6623__auto___18329 = 0;
  while (true) {
    if (i__6623__auto___18329 < len__6622__auto___18328) {
      args18325.push(arguments[i__6623__auto___18329]);
      var G__18330 = i__6623__auto___18329 + 1;
      i__6623__auto___18329 = G__18330;
      continue;
    } else {
    }
    break;
  }
  var G__18327 = args18325.length;
  switch(G__18327) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18325.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._nth[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__6220__auto__.call(null, coll, n);
    } else {
      var m__6220__auto____$1 = cljs.core._nth["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__6220__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._nth[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__6220__auto__.call(null, coll, n, not_found);
    } else {
      var m__6220__auto____$1 = cljs.core._nth["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__6220__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._first[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto__.call(null, coll);
    } else {
      var m__6220__auto____$1 = cljs.core._first["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._rest[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto__.call(null, coll);
    } else {
      var m__6220__auto____$1 = cljs.core._rest["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = {};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._next[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto__.call(null, coll);
    } else {
      var m__6220__auto____$1 = cljs.core._next["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function cljs$core$_lookup() {
  var args18340 = [];
  var len__6622__auto___18343 = arguments.length;
  var i__6623__auto___18344 = 0;
  while (true) {
    if (i__6623__auto___18344 < len__6622__auto___18343) {
      args18340.push(arguments[i__6623__auto___18344]);
      var G__18345 = i__6623__auto___18344 + 1;
      i__6623__auto___18344 = G__18345;
      continue;
    } else {
    }
    break;
  }
  var G__18342 = args18340.length;
  switch(G__18342) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18340.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__6219__auto__ = o == null ? null : o;
    var m__6220__auto__ = cljs.core._lookup[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__6220__auto__.call(null, o, k);
    } else {
      var m__6220__auto____$1 = cljs.core._lookup["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__6220__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__6219__auto__ = o == null ? null : o;
    var m__6220__auto__ = cljs.core._lookup[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__6220__auto__.call(null, o, k, not_found);
    } else {
      var m__6220__auto____$1 = cljs.core._lookup["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__6220__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__6220__auto__.call(null, coll, k);
    } else {
      var m__6220__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__6220__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._assoc[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__6220__auto__.call(null, coll, k, v);
    } else {
      var m__6220__auto____$1 = cljs.core._assoc["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__6220__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._dissoc[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__6220__auto__.call(null, coll, k);
    } else {
      var m__6220__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__6220__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._key[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto__.call(null, coll);
    } else {
      var m__6220__auto____$1 = cljs.core._key["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._val[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto__.call(null, coll);
    } else {
      var m__6220__auto____$1 = cljs.core._val["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._disjoin[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__6220__auto__.call(null, coll, v);
    } else {
      var m__6220__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__6220__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = {};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._peek[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto__.call(null, coll);
    } else {
      var m__6220__auto____$1 = cljs.core._peek["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._pop[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto__.call(null, coll);
    } else {
      var m__6220__auto____$1 = cljs.core._pop["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._assoc_n[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__6220__auto__.call(null, coll, n, val);
    } else {
      var m__6220__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__6220__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__6219__auto__ = o == null ? null : o;
    var m__6220__auto__ = cljs.core._deref[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__6220__auto__.call(null, o);
    } else {
      var m__6220__auto____$1 = cljs.core._deref["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__6220__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__6219__auto__ = o == null ? null : o;
    var m__6220__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__6220__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__6220__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__6220__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__6219__auto__ = o == null ? null : o;
    var m__6220__auto__ = cljs.core._meta[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__6220__auto__.call(null, o);
    } else {
      var m__6220__auto____$1 = cljs.core._meta["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__6220__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__6219__auto__ = o == null ? null : o;
    var m__6220__auto__ = cljs.core._with_meta[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__6220__auto__.call(null, o, meta);
    } else {
      var m__6220__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__6220__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function cljs$core$_reduce() {
  var args18369 = [];
  var len__6622__auto___18372 = arguments.length;
  var i__6623__auto___18373 = 0;
  while (true) {
    if (i__6623__auto___18373 < len__6622__auto___18372) {
      args18369.push(arguments[i__6623__auto___18373]);
      var G__18374 = i__6623__auto___18373 + 1;
      i__6623__auto___18373 = G__18374;
      continue;
    } else {
    }
    break;
  }
  var G__18371 = args18369.length;
  switch(G__18371) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18369.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._reduce[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__6220__auto__.call(null, coll, f);
    } else {
      var m__6220__auto____$1 = cljs.core._reduce["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__6220__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._reduce[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__6220__auto__.call(null, coll, f, start);
    } else {
      var m__6220__auto____$1 = cljs.core._reduce["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__6220__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._kv_reduce[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__6220__auto__.call(null, coll, f, init);
    } else {
      var m__6220__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__6220__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__6219__auto__ = o == null ? null : o;
    var m__6220__auto__ = cljs.core._equiv[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__6220__auto__.call(null, o, other);
    } else {
      var m__6220__auto____$1 = cljs.core._equiv["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__6220__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = {};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__6219__auto__ = o == null ? null : o;
    var m__6220__auto__ = cljs.core._hash[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__6220__auto__.call(null, o);
    } else {
      var m__6220__auto____$1 = cljs.core._hash["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__6220__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__6219__auto__ = o == null ? null : o;
    var m__6220__auto__ = cljs.core._seq[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__6220__auto__.call(null, o);
    } else {
      var m__6220__auto____$1 = cljs.core._seq["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__6220__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._rseq[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto__.call(null, coll);
    } else {
      var m__6220__auto____$1 = cljs.core._rseq["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._sorted_seq[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__6220__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__6220__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__6220__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__6220__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__6220__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__6220__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._entry_key[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__6220__auto__.call(null, coll, entry);
    } else {
      var m__6220__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__6220__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._comparator[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto__.call(null, coll);
    } else {
      var m__6220__auto____$1 = cljs.core._comparator["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = {};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__6219__auto__ = writer == null ? null : writer;
    var m__6220__auto__ = cljs.core._write[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__6220__auto__.call(null, writer, s);
    } else {
      var m__6220__auto____$1 = cljs.core._write["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__6220__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__6219__auto__ = writer == null ? null : writer;
    var m__6220__auto__ = cljs.core._flush[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__6220__auto__.call(null, writer);
    } else {
      var m__6220__auto____$1 = cljs.core._flush["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__6220__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = {};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__6219__auto__ = o == null ? null : o;
    var m__6220__auto__ = cljs.core._pr_writer[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__6220__auto__.call(null, o, writer, opts);
    } else {
      var m__6220__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__6220__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (!(d == null) && !(d.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__6219__auto__ = d == null ? null : d;
    var m__6220__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(d) : m__6220__auto__.call(null, d);
    } else {
      var m__6220__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(d) : m__6220__auto____$1.call(null, d);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", d);
      }
    }
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._notify_watches[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__6220__auto__.call(null, this$, oldval, newval);
    } else {
      var m__6220__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__6220__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._add_watch[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__6220__auto__.call(null, this$, key, f);
    } else {
      var m__6220__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__6220__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__6219__auto__ = this$ == null ? null : this$;
    var m__6220__auto__ = cljs.core._remove_watch[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__6220__auto__.call(null, this$, key);
    } else {
      var m__6220__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__6220__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._as_transient[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto__.call(null, coll);
    } else {
      var m__6220__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__6219__auto__ = tcoll == null ? null : tcoll;
    var m__6220__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__6220__auto__.call(null, tcoll, val);
    } else {
      var m__6220__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__6220__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__6219__auto__ = tcoll == null ? null : tcoll;
    var m__6220__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__6220__auto__.call(null, tcoll);
    } else {
      var m__6220__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__6220__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__6219__auto__ = tcoll == null ? null : tcoll;
    var m__6220__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__6220__auto__.call(null, tcoll, key, val);
    } else {
      var m__6220__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__6220__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__6219__auto__ = tcoll == null ? null : tcoll;
    var m__6220__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__6220__auto__.call(null, tcoll, key);
    } else {
      var m__6220__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__6220__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__6219__auto__ = tcoll == null ? null : tcoll;
    var m__6220__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__6220__auto__.call(null, tcoll, n, val);
    } else {
      var m__6220__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__6220__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__6219__auto__ = tcoll == null ? null : tcoll;
    var m__6220__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__6220__auto__.call(null, tcoll);
    } else {
      var m__6220__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__6220__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__6219__auto__ = tcoll == null ? null : tcoll;
    var m__6220__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__6220__auto__.call(null, tcoll, v);
    } else {
      var m__6220__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__6220__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__6219__auto__ = x == null ? null : x;
    var m__6220__auto__ = cljs.core._compare[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__6220__auto__.call(null, x, y);
    } else {
      var m__6220__auto____$1 = cljs.core._compare["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__6220__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._drop_first[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto__.call(null, coll);
    } else {
      var m__6220__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._chunked_first[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto__.call(null, coll);
    } else {
      var m__6220__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._chunked_rest[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto__.call(null, coll);
    } else {
      var m__6220__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._chunked_next[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto__.call(null, coll);
    } else {
      var m__6220__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = {};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__6219__auto__ = x == null ? null : x;
    var m__6220__auto__ = cljs.core._name[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__6220__auto__.call(null, x);
    } else {
      var m__6220__auto____$1 = cljs.core._name["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__6220__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__6219__auto__ = x == null ? null : x;
    var m__6220__auto__ = cljs.core._namespace[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__6220__auto__.call(null, x);
    } else {
      var m__6220__auto____$1 = cljs.core._namespace["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__6220__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = {};
cljs.core.IReset = {};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__6219__auto__ = o == null ? null : o;
    var m__6220__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__6220__auto__.call(null, o, new_value);
    } else {
      var m__6220__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__6220__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = {};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_() {
  var args18430 = [];
  var len__6622__auto___18433 = arguments.length;
  var i__6623__auto___18434 = 0;
  while (true) {
    if (i__6623__auto___18434 < len__6622__auto___18433) {
      args18430.push(arguments[i__6623__auto___18434]);
      var G__18435 = i__6623__auto___18434 + 1;
      i__6623__auto___18434 = G__18435;
      continue;
    } else {
    }
    break;
  }
  var G__18432 = args18430.length;
  switch(G__18432) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18430.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__6219__auto__ = o == null ? null : o;
    var m__6220__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__6220__auto__.call(null, o, f);
    } else {
      var m__6220__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__6220__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__6219__auto__ = o == null ? null : o;
    var m__6220__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__6220__auto__.call(null, o, f, a);
    } else {
      var m__6220__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__6220__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__6219__auto__ = o == null ? null : o;
    var m__6220__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$4 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__6220__auto__.call(null, o, f, a, b);
    } else {
      var m__6220__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__6220__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__6219__auto__ = o == null ? null : o;
    var m__6220__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$5 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__6220__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__6220__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__6220__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = {};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__6219__auto__ = o == null ? null : o;
    var m__6220__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__6220__auto__.call(null, o, new_value);
    } else {
      var m__6220__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__6220__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = {};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__6219__auto__ = coll == null ? null : coll;
    var m__6220__auto__ = cljs.core._iterator[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto__.call(null, coll);
    } else {
      var m__6220__auto____$1 = cljs.core._iterator["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6220__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__18441 = i + 2;
        var G__18442 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__18441;
        h1 = G__18442;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__18445 = i + 1;
          var G__18446 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__18445;
          hash = G__18446;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__5571__auto__ = cljs.core.not(a.ns);
      if (and__5571__auto__) {
        return b.ns;
      } else {
        return and__5571__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__18459 = a.ns;
            var G__18460 = b.ns;
            return goog.array.defaultCompare(G__18459, G__18460);
          }();
          if (0 === nsc) {
            var G__18461 = a.name;
            var G__18462 = b.name;
            return goog.array.defaultCompare(G__18461, G__18462);
          } else {
            return nsc;
          }
        }
      } else {
        var G__18463 = a.name;
        var G__18464 = b.name;
        return goog.array.defaultCompare(G__18463, G__18464);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__18466 = null;
  var G__18466__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
  };
  var G__18466__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
  };
  G__18466 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18466__2.call(this, self__, coll);
      case 3:
        return G__18466__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18466.cljs$core$IFn$_invoke$arity$2 = G__18466__2;
  G__18466.cljs$core$IFn$_invoke$arity$3 = G__18466__3;
  return G__18466;
}();
cljs.core.Symbol.prototype.apply = function(self__, args18465) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args18465)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__5999__auto__ = self__._hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol() {
  var args18467 = [];
  var len__6622__auto___18470 = arguments.length;
  var i__6623__auto___18471 = 0;
  while (true) {
    if (i__6623__auto___18471 < len__6622__auto___18470) {
      args18467.push(arguments[i__6623__auto___18471]);
      var G__18472 = i__6623__auto___18471 + 1;
      i__6623__auto___18471 = G__18472;
      continue;
    } else {
    }
    break;
  }
  var G__18469 = args18467.length;
  switch(G__18469) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18467.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx === -1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2523137;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    var G__18475 = this$__$1.sym;
    var G__18476 = other.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__18475, G__18476) : cljs.core._EQ_.call(null, G__18475, G__18476);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__18521 = null;
  var G__18521__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
  };
  var G__18521__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
  };
  var G__18521__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
  };
  var G__18521__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
  };
  var G__18521__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
  };
  var G__18521__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
  };
  var G__18521__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
  };
  var G__18521__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
  };
  var G__18521__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
  };
  var G__18521__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__18521__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__18521__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__18521__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__18521__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__18521__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__18521__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__18521__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__18521__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__18521__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__18521__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__18521__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__18521__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__18477 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    var G__18478 = a;
    var G__18479 = b;
    var G__18480 = c;
    var G__18481 = d;
    var G__18482 = e;
    var G__18483 = f;
    var G__18484 = g;
    var G__18485 = h;
    var G__18486 = i;
    var G__18487 = j;
    var G__18488 = k;
    var G__18489 = l;
    var G__18490 = m;
    var G__18491 = n;
    var G__18492 = o;
    var G__18493 = p;
    var G__18494 = q;
    var G__18495 = r;
    var G__18496 = s;
    var G__18497 = t;
    var G__18498 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18477, G__18478, G__18479, G__18480, G__18481, G__18482, G__18483, G__18484, G__18485, G__18486, G__18487, G__18488, G__18489, G__18490, G__18491, G__18492, G__18493, G__18494, G__18495, G__18496, G__18497, G__18498) : cljs.core.apply.call(null, G__18477, G__18478, G__18479, G__18480, G__18481, G__18482, G__18483, G__18484, G__18485, G__18486, G__18487, G__18488, G__18489, G__18490, G__18491, 
    G__18492, G__18493, G__18494, G__18495, G__18496, G__18497, G__18498);
  };
  G__18521 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__18521__1.call(this, self__);
      case 2:
        return G__18521__2.call(this, self__, a);
      case 3:
        return G__18521__3.call(this, self__, a, b);
      case 4:
        return G__18521__4.call(this, self__, a, b, c);
      case 5:
        return G__18521__5.call(this, self__, a, b, c, d);
      case 6:
        return G__18521__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__18521__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__18521__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__18521__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__18521__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__18521__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__18521__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__18521__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__18521__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__18521__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__18521__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__18521__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__18521__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__18521__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__18521__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__18521__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__18521__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18521.cljs$core$IFn$_invoke$arity$1 = G__18521__1;
  G__18521.cljs$core$IFn$_invoke$arity$2 = G__18521__2;
  G__18521.cljs$core$IFn$_invoke$arity$3 = G__18521__3;
  G__18521.cljs$core$IFn$_invoke$arity$4 = G__18521__4;
  G__18521.cljs$core$IFn$_invoke$arity$5 = G__18521__5;
  G__18521.cljs$core$IFn$_invoke$arity$6 = G__18521__6;
  G__18521.cljs$core$IFn$_invoke$arity$7 = G__18521__7;
  G__18521.cljs$core$IFn$_invoke$arity$8 = G__18521__8;
  G__18521.cljs$core$IFn$_invoke$arity$9 = G__18521__9;
  G__18521.cljs$core$IFn$_invoke$arity$10 = G__18521__10;
  G__18521.cljs$core$IFn$_invoke$arity$11 = G__18521__11;
  G__18521.cljs$core$IFn$_invoke$arity$12 = G__18521__12;
  G__18521.cljs$core$IFn$_invoke$arity$13 = G__18521__13;
  G__18521.cljs$core$IFn$_invoke$arity$14 = G__18521__14;
  G__18521.cljs$core$IFn$_invoke$arity$15 = G__18521__15;
  G__18521.cljs$core$IFn$_invoke$arity$16 = G__18521__16;
  G__18521.cljs$core$IFn$_invoke$arity$17 = G__18521__17;
  G__18521.cljs$core$IFn$_invoke$arity$18 = G__18521__18;
  G__18521.cljs$core$IFn$_invoke$arity$19 = G__18521__19;
  G__18521.cljs$core$IFn$_invoke$arity$20 = G__18521__20;
  G__18521.cljs$core$IFn$_invoke$arity$21 = G__18521__21;
  G__18521.cljs$core$IFn$_invoke$arity$22 = G__18521__22;
  return G__18521;
}();
cljs.core.Var.prototype.apply = function(self__, args18474) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args18474)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__18499 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  var G__18500 = a;
  var G__18501 = b;
  var G__18502 = c;
  var G__18503 = d;
  var G__18504 = e;
  var G__18505 = f;
  var G__18506 = g;
  var G__18507 = h;
  var G__18508 = i;
  var G__18509 = j;
  var G__18510 = k;
  var G__18511 = l;
  var G__18512 = m;
  var G__18513 = n;
  var G__18514 = o;
  var G__18515 = p;
  var G__18516 = q;
  var G__18517 = r;
  var G__18518 = s;
  var G__18519 = t;
  var G__18520 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18499, G__18500, G__18501, G__18502, G__18503, G__18504, G__18505, G__18506, G__18507, G__18508, G__18509, G__18510, G__18511, G__18512, G__18513, G__18514, G__18515, G__18516, G__18517, G__18518, G__18519, G__18520) : cljs.core.apply.call(null, G__18499, G__18500, G__18501, G__18502, G__18503, G__18504, G__18505, G__18506, G__18507, G__18508, G__18509, G__18510, G__18511, G__18512, G__18513, 
  G__18514, G__18515, G__18516, G__18517, G__18518, G__18519, G__18520);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_() {
  var args18534 = [];
  var len__6622__auto___18540 = arguments.length;
  var i__6623__auto___18541 = 0;
  while (true) {
    if (i__6623__auto___18541 < len__6622__auto___18540) {
      args18534.push(arguments[i__6623__auto___18541]);
      var G__18542 = i__6623__auto___18541 + 1;
      i__6623__auto___18541 = G__18542;
      continue;
    } else {
    }
    break;
  }
  var G__18539 = args18534.length;
  switch(G__18539) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18534.slice(2), 0);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__18544 = y;
        var G__18545 = cljs.core.first(more);
        var G__18546 = cljs.core.next(more);
        x = G__18544;
        y = G__18545;
        more = G__18546;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq18535) {
  var G__18536 = cljs.core.first(seq18535);
  var seq18535__$1 = cljs.core.next(seq18535);
  var G__18537 = cljs.core.first(seq18535__$1);
  var seq18535__$2 = cljs.core.next(seq18535__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__18536, G__18537, seq18535__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__18547 = n + 1;
      var G__18548 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__18549 = cljs.core.next(coll__$1);
      n = G__18547;
      hash_code = G__18548;
      coll__$1 = G__18549;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__18550 = n + 1;
      var G__18551 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__18552 = cljs.core.next(coll__$1);
      n = G__18550;
      hash_code = G__18551;
      coll__$1 = G__18552;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__18553 = this$__$1.valueOf();
    var G__18554 = other.valueOf();
    return goog.array.defaultCompare(G__18553, G__18554);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce() {
  var args18555 = [];
  var len__6622__auto___18564 = arguments.length;
  var i__6623__auto___18565 = 0;
  while (true) {
    if (i__6623__auto___18565 < len__6622__auto___18564) {
      args18555.push(arguments[i__6623__auto___18565]);
      var G__18566 = i__6623__auto___18565 + 1;
      i__6623__auto___18565 = G__18566;
      continue;
    } else {
    }
    break;
  }
  var G__18557 = args18555.length;
  switch(G__18557) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18555.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__18558 = val;
          var G__18559 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18558, G__18559) : f.call(null, G__18558, G__18559);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__18568 = nval;
          var G__18569 = n + 1;
          val = G__18568;
          n = G__18569;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__18560 = val__$1;
        var G__18561 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18560, G__18561) : f.call(null, G__18560, G__18561);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__18570 = nval;
        var G__18571 = n + 1;
        val__$1 = G__18570;
        n = G__18571;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__18562 = val__$1;
        var G__18563 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18562, G__18563) : f.call(null, G__18562, G__18563);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__18572 = nval;
        var G__18573 = n + 1;
        val__$1 = G__18572;
        n = G__18573;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce() {
  var args18574 = [];
  var len__6622__auto___18583 = arguments.length;
  var i__6623__auto___18584 = 0;
  while (true) {
    if (i__6623__auto___18584 < len__6622__auto___18583) {
      args18574.push(arguments[i__6623__auto___18584]);
      var G__18585 = i__6623__auto___18584 + 1;
      i__6623__auto___18584 = G__18585;
      continue;
    } else {
    }
    break;
  }
  var G__18576 = args18574.length;
  switch(G__18576) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18574.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__18577 = val;
          var G__18578 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18577, G__18578) : f.call(null, G__18577, G__18578);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__18587 = nval;
          var G__18588 = n + 1;
          val = G__18587;
          n = G__18588;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__18579 = val__$1;
        var G__18580 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18579, G__18580) : f.call(null, G__18579, G__18580);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__18589 = nval;
        var G__18590 = n + 1;
        val__$1 = G__18589;
        n = G__18590;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__18581 = val__$1;
        var G__18582 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18581, G__18582) : f.call(null, G__18581, G__18582);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__18591 = nval;
        var G__18592 = n + 1;
        val__$1 = G__18591;
        n = G__18592;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__5895__auto__ = 0;
  var y__5896__auto__ = self__.arr.length - self__.i;
  return x__5895__auto__ > y__5896__auto__ ? x__5895__auto__ : y__5896__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq() {
  var args18597 = [];
  var len__6622__auto___18600 = arguments.length;
  var i__6623__auto___18601 = 0;
  while (true) {
    if (i__6623__auto___18601 < len__6622__auto___18600) {
      args18597.push(arguments[i__6623__auto___18601]);
      var G__18602 = i__6623__auto___18601 + 1;
      i__6623__auto___18601 = G__18602;
      continue;
    } else {
    }
    break;
  }
  var G__18599 = args18597.length;
  switch(G__18599) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18597.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq() {
  var args18604 = [];
  var len__6622__auto___18607 = arguments.length;
  var i__6623__auto___18608 = 0;
  while (true) {
    if (i__6623__auto___18608 < len__6622__auto___18607) {
      args18604.push(arguments[i__6623__auto___18608]);
      var G__18609 = i__6623__auto___18608 + 1;
      i__6623__auto___18608 = G__18609;
      continue;
    } else {
    }
    break;
  }
  var G__18606 = args18604.length;
  switch(G__18606) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18604.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__18611 = cljs.core.List.EMPTY;
  var G__18612 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__18611, G__18612) : cljs.core.with_meta.call(null, G__18611, G__18612);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__18613 = sn;
      s = G__18613;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj() {
  var args18614 = [];
  var len__6622__auto___18620 = arguments.length;
  var i__6623__auto___18621 = 0;
  while (true) {
    if (i__6623__auto___18621 < len__6622__auto___18620) {
      args18614.push(arguments[i__6623__auto___18621]);
      var G__18622 = i__6623__auto___18621 + 1;
      i__6623__auto___18621 = G__18622;
      continue;
    } else {
    }
    break;
  }
  var G__18619 = args18614.length;
  switch(G__18619) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18614.slice(2), 0);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, x);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__18624 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__18625 = cljs.core.first(xs);
      var G__18626 = cljs.core.next(xs);
      coll = G__18624;
      x = G__18625;
      xs = G__18626;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq18615) {
  var G__18616 = cljs.core.first(seq18615);
  var seq18615__$1 = cljs.core.next(seq18615);
  var G__18617 = cljs.core.first(seq18615__$1);
  var seq18615__$2 = cljs.core.next(seq18615__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__18616, G__18617, seq18615__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__18627 = cljs.core.next(s);
      var G__18628 = acc + 1;
      s = G__18627;
      acc = G__18628;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth() {
  var args18633 = [];
  var len__6622__auto___18636 = arguments.length;
  var i__6623__auto___18637 = 0;
  while (true) {
    if (i__6623__auto___18637 < len__6622__auto___18636) {
      args18633.push(arguments[i__6623__auto___18637]);
      var G__18638 = i__6623__auto___18637 + 1;
      i__6623__auto___18637 = G__18638;
      continue;
    } else {
    }
    break;
  }
  var G__18635 = args18633.length;
  switch(G__18635) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18633.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__18640 = cljs.core.next(coll);
            var G__18641 = n - 1;
            coll = G__18640;
            n = G__18641;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__18642 = cljs.core.next(coll);
            var G__18643 = n - 1;
            var G__18644 = not_found;
            coll = G__18642;
            n = G__18643;
            not_found = G__18644;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth() {
  var args18645 = [];
  var len__6622__auto___18652 = arguments.length;
  var i__6623__auto___18653 = 0;
  while (true) {
    if (i__6623__auto___18653 < len__6622__auto___18652) {
      args18645.push(arguments[i__6623__auto___18653]);
      var G__18654 = i__6623__auto___18653 + 1;
      i__6623__auto___18653 = G__18654;
      continue;
    } else {
    }
    break;
  }
  var G__18647 = args18645.length;
  switch(G__18647) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18645.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return null;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__18656 = n__$1 - 1;
      var G__18657 = cljs.core.rest(xs);
      n__$1 = G__18656;
      xs = G__18657;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get() {
  var args18658 = [];
  var len__6622__auto___18663 = arguments.length;
  var i__6623__auto___18664 = 0;
  while (true) {
    if (i__6623__auto___18664 < len__6622__auto___18663) {
      args18658.push(arguments[i__6623__auto___18664]);
      var G__18665 = i__6623__auto___18664 + 1;
      i__6623__auto___18664 = G__18665;
      continue;
    } else {
    }
    break;
  }
  var G__18660 = args18658.length;
  switch(G__18660) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18658.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc() {
  var args18667 = [];
  var len__6622__auto___18674 = arguments.length;
  var i__6623__auto___18675 = 0;
  while (true) {
    if (i__6623__auto___18675 < len__6622__auto___18674) {
      args18667.push(arguments[i__6623__auto___18675]);
      var G__18676 = i__6623__auto___18675 + 1;
      i__6623__auto___18675 = G__18676;
      continue;
    } else {
    }
    break;
  }
  var G__18673 = args18667.length;
  switch(G__18673) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18667.slice(3), 0);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__6641__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__18678 = ret;
      var G__18679 = cljs.core.first(kvs);
      var G__18680 = cljs.core.second(kvs);
      var G__18681 = cljs.core.nnext(kvs);
      coll = G__18678;
      k = G__18679;
      v = G__18680;
      kvs = G__18681;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq18668) {
  var G__18669 = cljs.core.first(seq18668);
  var seq18668__$1 = cljs.core.next(seq18668);
  var G__18670 = cljs.core.first(seq18668__$1);
  var seq18668__$2 = cljs.core.next(seq18668__$1);
  var G__18671 = cljs.core.first(seq18668__$2);
  var seq18668__$3 = cljs.core.next(seq18668__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__18669, G__18670, G__18671, seq18668__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc() {
  var args18682 = [];
  var len__6622__auto___18688 = arguments.length;
  var i__6623__auto___18689 = 0;
  while (true) {
    if (i__6623__auto___18689 < len__6622__auto___18688) {
      args18682.push(arguments[i__6623__auto___18689]);
      var G__18690 = i__6623__auto___18689 + 1;
      i__6623__auto___18689 = G__18690;
      continue;
    } else {
    }
    break;
  }
  var G__18687 = args18682.length;
  switch(G__18687) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18682.slice(2), 0);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__18692 = ret;
        var G__18693 = cljs.core.first(ks);
        var G__18694 = cljs.core.next(ks);
        coll = G__18692;
        k = G__18693;
        ks = G__18694;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq18683) {
  var G__18684 = cljs.core.first(seq18683);
  var seq18683__$1 = cljs.core.next(seq18683);
  var G__18685 = cljs.core.first(seq18683__$1);
  var seq18683__$2 = cljs.core.next(seq18683__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__18684, G__18685, seq18683__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__5583__auto__ = goog.isFunction(f);
  if (or__5583__auto__) {
    return or__5583__auto__;
  } else {
    if (!(f == null)) {
      if (false || f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__18700 = null;
  var G__18700__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__18700__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__18700__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__18700__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__18700__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__18700__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__18700__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__18700__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__18700__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__18700__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__18700__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__18700__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__18700__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__18700__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__18700__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__18700__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__18700__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__18700__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__18700__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__18700__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__18700__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__18700__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__18700 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__18700__1.call(this, self__);
      case 2:
        return G__18700__2.call(this, self__, a);
      case 3:
        return G__18700__3.call(this, self__, a, b);
      case 4:
        return G__18700__4.call(this, self__, a, b, c);
      case 5:
        return G__18700__5.call(this, self__, a, b, c, d);
      case 6:
        return G__18700__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__18700__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__18700__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__18700__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__18700__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__18700__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__18700__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__18700__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__18700__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__18700__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__18700__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__18700__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__18700__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__18700__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__18700__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__18700__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__18700__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18700.cljs$core$IFn$_invoke$arity$1 = G__18700__1;
  G__18700.cljs$core$IFn$_invoke$arity$2 = G__18700__2;
  G__18700.cljs$core$IFn$_invoke$arity$3 = G__18700__3;
  G__18700.cljs$core$IFn$_invoke$arity$4 = G__18700__4;
  G__18700.cljs$core$IFn$_invoke$arity$5 = G__18700__5;
  G__18700.cljs$core$IFn$_invoke$arity$6 = G__18700__6;
  G__18700.cljs$core$IFn$_invoke$arity$7 = G__18700__7;
  G__18700.cljs$core$IFn$_invoke$arity$8 = G__18700__8;
  G__18700.cljs$core$IFn$_invoke$arity$9 = G__18700__9;
  G__18700.cljs$core$IFn$_invoke$arity$10 = G__18700__10;
  G__18700.cljs$core$IFn$_invoke$arity$11 = G__18700__11;
  G__18700.cljs$core$IFn$_invoke$arity$12 = G__18700__12;
  G__18700.cljs$core$IFn$_invoke$arity$13 = G__18700__13;
  G__18700.cljs$core$IFn$_invoke$arity$14 = G__18700__14;
  G__18700.cljs$core$IFn$_invoke$arity$15 = G__18700__15;
  G__18700.cljs$core$IFn$_invoke$arity$16 = G__18700__16;
  G__18700.cljs$core$IFn$_invoke$arity$17 = G__18700__17;
  G__18700.cljs$core$IFn$_invoke$arity$18 = G__18700__18;
  G__18700.cljs$core$IFn$_invoke$arity$19 = G__18700__19;
  G__18700.cljs$core$IFn$_invoke$arity$20 = G__18700__20;
  G__18700.cljs$core$IFn$_invoke$arity$21 = G__18700__21;
  G__18700.cljs$core$IFn$_invoke$arity$22 = G__18700__22;
  return G__18700;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args18699) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args18699)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__5571__auto__ = !(o == null);
    if (and__5571__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__5571__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj() {
  var args18705 = [];
  var len__6622__auto___18711 = arguments.length;
  var i__6623__auto___18712 = 0;
  while (true) {
    if (i__6623__auto___18712 < len__6622__auto___18711) {
      args18705.push(arguments[i__6623__auto___18712]);
      var G__18713 = i__6623__auto___18712 + 1;
      i__6623__auto___18712 = G__18713;
      continue;
    } else {
    }
    break;
  }
  var G__18710 = args18705.length;
  switch(G__18710) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18705.slice(2), 0);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__18715 = ret;
        var G__18716 = cljs.core.first(ks);
        var G__18717 = cljs.core.next(ks);
        coll = G__18715;
        k = G__18716;
        ks = G__18717;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq18706) {
  var G__18707 = cljs.core.first(seq18706);
  var seq18706__$1 = cljs.core.next(seq18706);
  var G__18708 = cljs.core.first(seq18706__$1);
  var seq18706__$2 = cljs.core.next(seq18706__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__18707, G__18708, seq18706__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj() {
  var args18738 = [];
  var len__6622__auto___18744 = arguments.length;
  var i__6623__auto___18745 = 0;
  while (true) {
    if (i__6623__auto___18745 < len__6622__auto___18744) {
      args18738.push(arguments[i__6623__auto___18745]);
      var G__18746 = i__6623__auto___18745 + 1;
      i__6623__auto___18745 = G__18746;
      continue;
    } else {
    }
    break;
  }
  var G__18741 = args18738.length;
  switch(G__18741) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18738.slice(0), 0);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__6641__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq18739) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq18739));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__18750_18752 = obj;
  var G__18751_18753 = function(G__18750_18752, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__18750_18752, keys);
  goog.object.forEach(G__18750_18752, G__18751_18753);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__18754 = i__$1 + 1;
      var G__18755 = j__$1 + 1;
      var G__18756 = len__$1 - 1;
      i__$1 = G__18754;
      j__$1 = G__18755;
      len__$1 = G__18756;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__18757 = i__$1 - 1;
      var G__18758 = j__$1 - 1;
      var G__18759 = len__$1 - 1;
      i__$1 = G__18757;
      j__$1 = G__18758;
      len__$1 = G__18759;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  if (!(s == null)) {
    if (s.cljs$lang$protocol_mask$partition0$ & 8388608 || s.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!s.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__5583__auto__ = cljs.core.fn_QMARK_(f);
  if (or__5583__auto__) {
    return or__5583__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_() {
  var args18770 = [];
  var len__6622__auto___18776 = arguments.length;
  var i__6623__auto___18777 = 0;
  while (true) {
    if (i__6623__auto___18777 < len__6622__auto___18776) {
      args18770.push(arguments[i__6623__auto___18777]);
      var G__18778 = i__6623__auto___18777 + 1;
      i__6623__auto___18777 = G__18778;
      continue;
    } else {
    }
    break;
  }
  var G__18775 = args18770.length;
  switch(G__18775) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18770.slice(2), 0);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__18780 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__18781 = etc;
          s = G__18780;
          xs = G__18781;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq18771) {
  var G__18772 = cljs.core.first(seq18771);
  var seq18771__$1 = cljs.core.next(seq18771);
  var G__18773 = cljs.core.first(seq18771__$1);
  var seq18771__$2 = cljs.core.next(seq18771__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__18772, G__18773, seq18771__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed() {
  var args18784 = [];
  var len__6622__auto___18787 = arguments.length;
  var i__6623__auto___18788 = 0;
  while (true) {
    if (i__6623__auto___18788 < len__6622__auto___18787) {
      args18784.push(arguments[i__6623__auto___18788]);
      var G__18789 = i__6623__auto___18788 + 1;
      i__6623__auto___18788 = G__18789;
      continue;
    } else {
    }
    break;
  }
  var G__18786 = args18784.length;
  switch(G__18786) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18784.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__18791 = xs;
      var G__18792 = ys;
      var G__18793 = len;
      var G__18794 = n + 1;
      xs = G__18791;
      ys = G__18792;
      len = G__18793;
      n = G__18794;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort() {
  var args18795 = [];
  var len__6622__auto___18800 = arguments.length;
  var i__6623__auto___18801 = 0;
  while (true) {
    if (i__6623__auto___18801 < len__6622__auto___18800) {
      args18795.push(arguments[i__6623__auto___18801]);
      var G__18802 = i__6623__auto___18801 + 1;
      i__6623__auto___18801 = G__18802;
      continue;
    } else {
    }
    break;
  }
  var G__18797 = args18795.length;
  switch(G__18797) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18795.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
    var G__18798_18804 = a;
    var G__18799_18805 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__18798_18804, G__18799_18805);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by() {
  var args18806 = [];
  var len__6622__auto___18809 = arguments.length;
  var i__6623__auto___18810 = 0;
  while (true) {
    if (i__6623__auto___18810 < len__6622__auto___18809) {
      args18806.push(arguments[i__6623__auto___18810]);
      var G__18811 = i__6623__auto___18810 + 1;
      i__6623__auto___18810 = G__18811;
      continue;
    } else {
    }
    break;
  }
  var G__18808 = args18806.length;
  switch(G__18808) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18806.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce() {
  var args18813 = [];
  var len__6622__auto___18821 = arguments.length;
  var i__6623__auto___18822 = 0;
  while (true) {
    if (i__6623__auto___18822 < len__6622__auto___18821) {
      args18813.push(arguments[i__6623__auto___18822]);
      var G__18823 = i__6623__auto___18822 + 1;
      i__6623__auto___18822 = G__18823;
      continue;
    } else {
    }
    break;
  }
  var G__18815 = args18813.length;
  switch(G__18815) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18813.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4423__auto__ = cljs.core.seq(coll);
  if (temp__4423__auto__) {
    var s = temp__4423__auto__;
    var G__18816 = f;
    var G__18817 = cljs.core.first(s);
    var G__18818 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__18816, G__18817, G__18818) : cljs.core.reduce.call(null, G__18816, G__18817, G__18818);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__18819 = val__$1;
        var G__18820 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18819, G__18820) : f.call(null, G__18819, G__18820);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__18825 = nval;
        var G__18826 = cljs.core.next(coll__$1);
        val__$1 = G__18825;
        coll__$1 = G__18826;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function cljs$core$reduce() {
  var args18827 = [];
  var len__6622__auto___18832 = arguments.length;
  var i__6623__auto___18833 = 0;
  while (true) {
    if (i__6623__auto___18833 < len__6622__auto___18832) {
      args18827.push(arguments[i__6623__auto___18833]);
      var G__18834 = i__6623__auto___18833 + 1;
      i__6623__auto___18833 = G__18834;
      continue;
    } else {
    }
    break;
  }
  var G__18829 = args18827.length;
  switch(G__18829) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18827.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing() {
  var args18836 = [];
  var len__6622__auto___18839 = arguments.length;
  var i__6623__auto___18840 = 0;
  while (true) {
    if (i__6623__auto___18840 < len__6622__auto___18839) {
      args18836.push(arguments[i__6623__auto___18840]);
      var G__18841 = i__6623__auto___18840 + 1;
      i__6623__auto___18840 = G__18841;
      continue;
    } else {
    }
    break;
  }
  var G__18838 = args18836.length;
  switch(G__18838) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18836.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__18843 = null;
    var G__18843__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__18843__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__18843__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__18843 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__18843__0.call(this);
        case 1:
          return G__18843__1.call(this, x);
        case 2:
          return G__18843__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__18843.cljs$core$IFn$_invoke$arity$0 = G__18843__0;
    G__18843.cljs$core$IFn$_invoke$arity$1 = G__18843__1;
    G__18843.cljs$core$IFn$_invoke$arity$2 = G__18843__2;
    return G__18843;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce() {
  var args18844 = [];
  var len__6622__auto___18847 = arguments.length;
  var i__6623__auto___18848 = 0;
  while (true) {
    if (i__6623__auto___18848 < len__6622__auto___18847) {
      args18844.push(arguments[i__6623__auto___18848]);
      var G__18849 = i__6623__auto___18848 + 1;
      i__6623__auto___18848 = G__18849;
      continue;
    } else {
    }
    break;
  }
  var G__18846 = args18844.length;
  switch(G__18846) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18844.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_() {
  var args18851 = [];
  var len__6622__auto___18857 = arguments.length;
  var i__6623__auto___18858 = 0;
  while (true) {
    if (i__6623__auto___18858 < len__6622__auto___18857) {
      args18851.push(arguments[i__6623__auto___18858]);
      var G__18859 = i__6623__auto___18858 + 1;
      i__6623__auto___18858 = G__18859;
      continue;
    } else {
    }
    break;
  }
  var G__18856 = args18851.length;
  switch(G__18856) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18851.slice(2), 0);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq18852) {
  var G__18853 = cljs.core.first(seq18852);
  var seq18852__$1 = cljs.core.next(seq18852);
  var G__18854 = cljs.core.first(seq18852__$1);
  var seq18852__$2 = cljs.core.next(seq18852__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__18853, G__18854, seq18852__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_() {
  var args18861 = [];
  var len__6622__auto___18867 = arguments.length;
  var i__6623__auto___18868 = 0;
  while (true) {
    if (i__6623__auto___18868 < len__6622__auto___18867) {
      args18861.push(arguments[i__6623__auto___18868]);
      var G__18869 = i__6623__auto___18868 + 1;
      i__6623__auto___18868 = G__18869;
      continue;
    } else {
    }
    break;
  }
  var G__18866 = args18861.length;
  switch(G__18866) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18861.slice(2), 0);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq18862) {
  var G__18863 = cljs.core.first(seq18862);
  var seq18862__$1 = cljs.core.next(seq18862);
  var G__18864 = cljs.core.first(seq18862__$1);
  var seq18862__$2 = cljs.core.next(seq18862__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__18863, G__18864, seq18862__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_() {
  var args18871 = [];
  var len__6622__auto___18877 = arguments.length;
  var i__6623__auto___18878 = 0;
  while (true) {
    if (i__6623__auto___18878 < len__6622__auto___18877) {
      args18871.push(arguments[i__6623__auto___18878]);
      var G__18879 = i__6623__auto___18878 + 1;
      i__6623__auto___18878 = G__18879;
      continue;
    } else {
    }
    break;
  }
  var G__18876 = args18871.length;
  switch(G__18876) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18871.slice(2), 0);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq18872) {
  var G__18873 = cljs.core.first(seq18872);
  var seq18872__$1 = cljs.core.next(seq18872);
  var G__18874 = cljs.core.first(seq18872__$1);
  var seq18872__$2 = cljs.core.next(seq18872__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__18873, G__18874, seq18872__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_() {
  var args18881 = [];
  var len__6622__auto___18887 = arguments.length;
  var i__6623__auto___18888 = 0;
  while (true) {
    if (i__6623__auto___18888 < len__6622__auto___18887) {
      args18881.push(arguments[i__6623__auto___18888]);
      var G__18889 = i__6623__auto___18888 + 1;
      i__6623__auto___18888 = G__18889;
      continue;
    } else {
    }
    break;
  }
  var G__18886 = args18881.length;
  switch(G__18886) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18881.slice(2), 0);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq18882) {
  var G__18883 = cljs.core.first(seq18882);
  var seq18882__$1 = cljs.core.next(seq18882);
  var G__18884 = cljs.core.first(seq18882__$1);
  var seq18882__$2 = cljs.core.next(seq18882__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__18883, G__18884, seq18882__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_() {
  var args18891 = [];
  var len__6622__auto___18897 = arguments.length;
  var i__6623__auto___18898 = 0;
  while (true) {
    if (i__6623__auto___18898 < len__6622__auto___18897) {
      args18891.push(arguments[i__6623__auto___18898]);
      var G__18899 = i__6623__auto___18898 + 1;
      i__6623__auto___18898 = G__18899;
      continue;
    } else {
    }
    break;
  }
  var G__18896 = args18891.length;
  switch(G__18896) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18891.slice(2), 0);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__18901 = y;
        var G__18902 = cljs.core.first(more);
        var G__18903 = cljs.core.next(more);
        x = G__18901;
        y = G__18902;
        more = G__18903;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq18892) {
  var G__18893 = cljs.core.first(seq18892);
  var seq18892__$1 = cljs.core.next(seq18892);
  var G__18894 = cljs.core.first(seq18892__$1);
  var seq18892__$2 = cljs.core.next(seq18892__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__18893, G__18894, seq18892__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_() {
  var args18904 = [];
  var len__6622__auto___18910 = arguments.length;
  var i__6623__auto___18911 = 0;
  while (true) {
    if (i__6623__auto___18911 < len__6622__auto___18910) {
      args18904.push(arguments[i__6623__auto___18911]);
      var G__18912 = i__6623__auto___18911 + 1;
      i__6623__auto___18911 = G__18912;
      continue;
    } else {
    }
    break;
  }
  var G__18909 = args18904.length;
  switch(G__18909) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18904.slice(2), 0);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__18914 = y;
        var G__18915 = cljs.core.first(more);
        var G__18916 = cljs.core.next(more);
        x = G__18914;
        y = G__18915;
        more = G__18916;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq18905) {
  var G__18906 = cljs.core.first(seq18905);
  var seq18905__$1 = cljs.core.next(seq18905);
  var G__18907 = cljs.core.first(seq18905__$1);
  var seq18905__$2 = cljs.core.next(seq18905__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__18906, G__18907, seq18905__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_() {
  var args18917 = [];
  var len__6622__auto___18923 = arguments.length;
  var i__6623__auto___18924 = 0;
  while (true) {
    if (i__6623__auto___18924 < len__6622__auto___18923) {
      args18917.push(arguments[i__6623__auto___18924]);
      var G__18925 = i__6623__auto___18924 + 1;
      i__6623__auto___18924 = G__18925;
      continue;
    } else {
    }
    break;
  }
  var G__18922 = args18917.length;
  switch(G__18922) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18917.slice(2), 0);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__18927 = y;
        var G__18928 = cljs.core.first(more);
        var G__18929 = cljs.core.next(more);
        x = G__18927;
        y = G__18928;
        more = G__18929;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq18918) {
  var G__18919 = cljs.core.first(seq18918);
  var seq18918__$1 = cljs.core.next(seq18918);
  var G__18920 = cljs.core.first(seq18918__$1);
  var seq18918__$2 = cljs.core.next(seq18918__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__18919, G__18920, seq18918__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_() {
  var args18930 = [];
  var len__6622__auto___18936 = arguments.length;
  var i__6623__auto___18937 = 0;
  while (true) {
    if (i__6623__auto___18937 < len__6622__auto___18936) {
      args18930.push(arguments[i__6623__auto___18937]);
      var G__18938 = i__6623__auto___18937 + 1;
      i__6623__auto___18937 = G__18938;
      continue;
    } else {
    }
    break;
  }
  var G__18935 = args18930.length;
  switch(G__18935) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18930.slice(2), 0);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__18940 = y;
        var G__18941 = cljs.core.first(more);
        var G__18942 = cljs.core.next(more);
        x = G__18940;
        y = G__18941;
        more = G__18942;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq18931) {
  var G__18932 = cljs.core.first(seq18931);
  var seq18931__$1 = cljs.core.next(seq18931);
  var G__18933 = cljs.core.first(seq18931__$1);
  var seq18931__$2 = cljs.core.next(seq18931__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__18932, G__18933, seq18931__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max() {
  var args18943 = [];
  var len__6622__auto___18949 = arguments.length;
  var i__6623__auto___18950 = 0;
  while (true) {
    if (i__6623__auto___18950 < len__6622__auto___18949) {
      args18943.push(arguments[i__6623__auto___18950]);
      var G__18951 = i__6623__auto___18950 + 1;
      i__6623__auto___18950 = G__18951;
      continue;
    } else {
    }
    break;
  }
  var G__18948 = args18943.length;
  switch(G__18948) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18943.slice(2), 0);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__5895__auto__ = x;
  var y__5896__auto__ = y;
  return x__5895__auto__ > y__5896__auto__ ? x__5895__auto__ : y__5896__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__5895__auto__ = x;
    var y__5896__auto__ = y;
    return x__5895__auto__ > y__5896__auto__ ? x__5895__auto__ : y__5896__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq18944) {
  var G__18945 = cljs.core.first(seq18944);
  var seq18944__$1 = cljs.core.next(seq18944);
  var G__18946 = cljs.core.first(seq18944__$1);
  var seq18944__$2 = cljs.core.next(seq18944__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__18945, G__18946, seq18944__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min() {
  var args18953 = [];
  var len__6622__auto___18959 = arguments.length;
  var i__6623__auto___18960 = 0;
  while (true) {
    if (i__6623__auto___18960 < len__6622__auto___18959) {
      args18953.push(arguments[i__6623__auto___18960]);
      var G__18961 = i__6623__auto___18960 + 1;
      i__6623__auto___18960 = G__18961;
      continue;
    } else {
    }
    break;
  }
  var G__18958 = args18953.length;
  switch(G__18958) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18953.slice(2), 0);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__5902__auto__ = x;
  var y__5903__auto__ = y;
  return x__5902__auto__ < y__5903__auto__ ? x__5902__auto__ : y__5903__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__5902__auto__ = x;
    var y__5903__auto__ = y;
    return x__5902__auto__ < y__5903__auto__ ? x__5902__auto__ : y__5903__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq18954) {
  var G__18955 = cljs.core.first(seq18954);
  var seq18954__$1 = cljs.core.next(seq18954);
  var G__18956 = cljs.core.first(seq18954__$1);
  var seq18954__$2 = cljs.core.next(seq18954__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__18955, G__18956, seq18954__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add() {
  var args18963 = [];
  var len__6622__auto___18969 = arguments.length;
  var i__6623__auto___18970 = 0;
  while (true) {
    if (i__6623__auto___18970 < len__6622__auto___18969) {
      args18963.push(arguments[i__6623__auto___18970]);
      var G__18971 = i__6623__auto___18970 + 1;
      i__6623__auto___18970 = G__18971;
      continue;
    } else {
    }
    break;
  }
  var G__18968 = args18963.length;
  switch(G__18968) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18963.slice(2), 0);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq18964) {
  var G__18965 = cljs.core.first(seq18964);
  var seq18964__$1 = cljs.core.next(seq18964);
  var G__18966 = cljs.core.first(seq18964__$1);
  var seq18964__$2 = cljs.core.next(seq18964__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__18965, G__18966, seq18964__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int() {
  var args18973 = [];
  var len__6622__auto___18979 = arguments.length;
  var i__6623__auto___18980 = 0;
  while (true) {
    if (i__6623__auto___18980 < len__6622__auto___18979) {
      args18973.push(arguments[i__6623__auto___18980]);
      var G__18981 = i__6623__auto___18980 + 1;
      i__6623__auto___18980 = G__18981;
      continue;
    } else {
    }
    break;
  }
  var G__18978 = args18973.length;
  switch(G__18978) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18973.slice(2), 0);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq18974) {
  var G__18975 = cljs.core.first(seq18974);
  var seq18974__$1 = cljs.core.next(seq18974);
  var G__18976 = cljs.core.first(seq18974__$1);
  var seq18974__$2 = cljs.core.next(seq18974__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__18975, G__18976, seq18974__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int() {
  var args18983 = [];
  var len__6622__auto___18989 = arguments.length;
  var i__6623__auto___18990 = 0;
  while (true) {
    if (i__6623__auto___18990 < len__6622__auto___18989) {
      args18983.push(arguments[i__6623__auto___18990]);
      var G__18991 = i__6623__auto___18990 + 1;
      i__6623__auto___18990 = G__18991;
      continue;
    } else {
    }
    break;
  }
  var G__18988 = args18983.length;
  switch(G__18988) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18983.slice(2), 0);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq18984) {
  var G__18985 = cljs.core.first(seq18984);
  var seq18984__$1 = cljs.core.next(seq18984);
  var G__18986 = cljs.core.first(seq18984__$1);
  var seq18984__$2 = cljs.core.next(seq18984__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__18985, G__18986, seq18984__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply() {
  var args18993 = [];
  var len__6622__auto___18999 = arguments.length;
  var i__6623__auto___19000 = 0;
  while (true) {
    if (i__6623__auto___19000 < len__6622__auto___18999) {
      args18993.push(arguments[i__6623__auto___19000]);
      var G__19001 = i__6623__auto___19000 + 1;
      i__6623__auto___19000 = G__19001;
      continue;
    } else {
    }
    break;
  }
  var G__18998 = args18993.length;
  switch(G__18998) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18993.slice(2), 0);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq18994) {
  var G__18995 = cljs.core.first(seq18994);
  var seq18994__$1 = cljs.core.next(seq18994);
  var G__18996 = cljs.core.first(seq18994__$1);
  var seq18994__$2 = cljs.core.next(seq18994__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__18995, G__18996, seq18994__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int() {
  var args19003 = [];
  var len__6622__auto___19009 = arguments.length;
  var i__6623__auto___19010 = 0;
  while (true) {
    if (i__6623__auto___19010 < len__6622__auto___19009) {
      args19003.push(arguments[i__6623__auto___19010]);
      var G__19011 = i__6623__auto___19010 + 1;
      i__6623__auto___19010 = G__19011;
      continue;
    } else {
    }
    break;
  }
  var G__19008 = args19003.length;
  switch(G__19008) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19003.slice(2), 0);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq19004) {
  var G__19005 = cljs.core.first(seq19004);
  var seq19004__$1 = cljs.core.next(seq19004);
  var G__19006 = cljs.core.first(seq19004__$1);
  var seq19004__$2 = cljs.core.next(seq19004__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__19005, G__19006, seq19004__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract() {
  var args19013 = [];
  var len__6622__auto___19019 = arguments.length;
  var i__6623__auto___19020 = 0;
  while (true) {
    if (i__6623__auto___19020 < len__6622__auto___19019) {
      args19013.push(arguments[i__6623__auto___19020]);
      var G__19021 = i__6623__auto___19020 + 1;
      i__6623__auto___19020 = G__19021;
      continue;
    } else {
    }
    break;
  }
  var G__19018 = args19013.length;
  switch(G__19018) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19013.slice(2), 0);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq19014) {
  var G__19015 = cljs.core.first(seq19014);
  var seq19014__$1 = cljs.core.next(seq19014);
  var G__19016 = cljs.core.first(seq19014__$1);
  var seq19014__$2 = cljs.core.next(seq19014__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__19015, G__19016, seq19014__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int() {
  var args19023 = [];
  var len__6622__auto___19029 = arguments.length;
  var i__6623__auto___19030 = 0;
  while (true) {
    if (i__6623__auto___19030 < len__6622__auto___19029) {
      args19023.push(arguments[i__6623__auto___19030]);
      var G__19031 = i__6623__auto___19030 + 1;
      i__6623__auto___19030 = G__19031;
      continue;
    } else {
    }
    break;
  }
  var G__19028 = args19023.length;
  switch(G__19028) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19023.slice(2), 0);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq19024) {
  var G__19025 = cljs.core.first(seq19024);
  var seq19024__$1 = cljs.core.next(seq19024);
  var G__19026 = cljs.core.first(seq19024__$1);
  var seq19024__$2 = cljs.core.next(seq19024__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__19025, G__19026, seq19024__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor() {
  var args19033 = [];
  var len__6622__auto___19039 = arguments.length;
  var i__6623__auto___19040 = 0;
  while (true) {
    if (i__6623__auto___19040 < len__6622__auto___19039) {
      args19033.push(arguments[i__6623__auto___19040]);
      var G__19041 = i__6623__auto___19040 + 1;
      i__6623__auto___19040 = G__19041;
      continue;
    } else {
    }
    break;
  }
  var G__19038 = args19033.length;
  switch(G__19038) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19033.slice(2), 0);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq19034) {
  var G__19035 = cljs.core.first(seq19034);
  var seq19034__$1 = cljs.core.next(seq19034);
  var G__19036 = cljs.core.first(seq19034__$1);
  var seq19034__$2 = cljs.core.next(seq19034__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__19035, G__19036, seq19034__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and() {
  var args19043 = [];
  var len__6622__auto___19049 = arguments.length;
  var i__6623__auto___19050 = 0;
  while (true) {
    if (i__6623__auto___19050 < len__6622__auto___19049) {
      args19043.push(arguments[i__6623__auto___19050]);
      var G__19051 = i__6623__auto___19050 + 1;
      i__6623__auto___19050 = G__19051;
      continue;
    } else {
    }
    break;
  }
  var G__19048 = args19043.length;
  switch(G__19048) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19043.slice(2), 0);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq19044) {
  var G__19045 = cljs.core.first(seq19044);
  var seq19044__$1 = cljs.core.next(seq19044);
  var G__19046 = cljs.core.first(seq19044__$1);
  var seq19044__$2 = cljs.core.next(seq19044__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__19045, G__19046, seq19044__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or() {
  var args19053 = [];
  var len__6622__auto___19059 = arguments.length;
  var i__6623__auto___19060 = 0;
  while (true) {
    if (i__6623__auto___19060 < len__6622__auto___19059) {
      args19053.push(arguments[i__6623__auto___19060]);
      var G__19061 = i__6623__auto___19060 + 1;
      i__6623__auto___19060 = G__19061;
      continue;
    } else {
    }
    break;
  }
  var G__19058 = args19053.length;
  switch(G__19058) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19053.slice(2), 0);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq19054) {
  var G__19055 = cljs.core.first(seq19054);
  var seq19054__$1 = cljs.core.next(seq19054);
  var G__19056 = cljs.core.first(seq19054__$1);
  var seq19054__$2 = cljs.core.next(seq19054__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__19055, G__19056, seq19054__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not() {
  var args19063 = [];
  var len__6622__auto___19069 = arguments.length;
  var i__6623__auto___19070 = 0;
  while (true) {
    if (i__6623__auto___19070 < len__6622__auto___19069) {
      args19063.push(arguments[i__6623__auto___19070]);
      var G__19071 = i__6623__auto___19070 + 1;
      i__6623__auto___19070 = G__19071;
      continue;
    } else {
    }
    break;
  }
  var G__19068 = args19063.length;
  switch(G__19068) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19063.slice(2), 0);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq19064) {
  var G__19065 = cljs.core.first(seq19064);
  var seq19064__$1 = cljs.core.next(seq19064);
  var G__19066 = cljs.core.first(seq19064__$1);
  var seq19064__$2 = cljs.core.next(seq19064__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__19065, G__19066, seq19064__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_() {
  var args19073 = [];
  var len__6622__auto___19079 = arguments.length;
  var i__6623__auto___19080 = 0;
  while (true) {
    if (i__6623__auto___19080 < len__6622__auto___19079) {
      args19073.push(arguments[i__6623__auto___19080]);
      var G__19081 = i__6623__auto___19080 + 1;
      i__6623__auto___19080 = G__19081;
      continue;
    } else {
    }
    break;
  }
  var G__19078 = args19073.length;
  switch(G__19078) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19073.slice(2), 0);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__19083 = y;
        var G__19084 = cljs.core.first(more);
        var G__19085 = cljs.core.next(more);
        x = G__19083;
        y = G__19084;
        more = G__19085;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq19074) {
  var G__19075 = cljs.core.first(seq19074);
  var seq19074__$1 = cljs.core.next(seq19074);
  var G__19076 = cljs.core.first(seq19074__$1);
  var seq19074__$2 = cljs.core.next(seq19074__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__19075, G__19076, seq19074__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__19086 = n__$1 - 1;
      var G__19087 = cljs.core.next(xs);
      n__$1 = G__19086;
      xs = G__19087;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str() {
  var args19088 = [];
  var len__6622__auto___19093 = arguments.length;
  var i__6623__auto___19094 = 0;
  while (true) {
    if (i__6623__auto___19094 < len__6622__auto___19093) {
      args19088.push(arguments[i__6623__auto___19094]);
      var G__19095 = i__6623__auto___19094 + 1;
      i__6623__auto___19094 = G__19095;
      continue;
    } else {
    }
    break;
  }
  var G__19092 = args19088.length;
  switch(G__19092) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19088.slice(1), 0);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__6641__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__19097 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__19098 = cljs.core.next(more);
      sb = G__19097;
      more = G__19098;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq19089) {
  var G__19090 = cljs.core.first(seq19089);
  var seq19089__$1 = cljs.core.next(seq19089);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__19090, seq19089__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs() {
  var args19099 = [];
  var len__6622__auto___19102 = arguments.length;
  var i__6623__auto___19103 = 0;
  while (true) {
    if (i__6623__auto___19103 < len__6622__auto___19102) {
      args19099.push(arguments[i__6623__auto___19103]);
      var G__19104 = i__6623__auto___19103 + 1;
      i__6623__auto___19103 = G__19104;
      continue;
    } else {
    }
    break;
  }
  var G__19101 = args19099.length;
  switch(G__19101) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19099.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__19106 = cljs.core.next(xs);
            var G__19107 = cljs.core.next(ys);
            xs = G__19106;
            ys = G__19107;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__19108 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__19109 = cljs.core.next(s);
        res = G__19108;
        s = G__19109;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__19110 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__19111 = cljs.core.next(s);
      h = G__19110;
      s = G__19111;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__19112 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__19113 = cljs.core.next(s__$1);
      h = G__19112;
      s__$1 = G__19113;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__19120_19126 = cljs.core.seq(fn_map);
  var chunk__19121_19127 = null;
  var count__19122_19128 = 0;
  var i__19123_19129 = 0;
  while (true) {
    if (i__19123_19129 < count__19122_19128) {
      var vec__19124_19130 = chunk__19121_19127.cljs$core$IIndexed$_nth$arity$2(null, i__19123_19129);
      var key_name_19131 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19124_19130, 0, null);
      var f_19132 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19124_19130, 1, null);
      var str_name_19133 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_19131) : cljs.core.name.call(null, key_name_19131);
      obj[str_name_19133] = f_19132;
      var G__19134 = seq__19120_19126;
      var G__19135 = chunk__19121_19127;
      var G__19136 = count__19122_19128;
      var G__19137 = i__19123_19129 + 1;
      seq__19120_19126 = G__19134;
      chunk__19121_19127 = G__19135;
      count__19122_19128 = G__19136;
      i__19123_19129 = G__19137;
      continue;
    } else {
      var temp__4425__auto___19138 = cljs.core.seq(seq__19120_19126);
      if (temp__4425__auto___19138) {
        var seq__19120_19139__$1 = temp__4425__auto___19138;
        if (cljs.core.chunked_seq_QMARK_(seq__19120_19139__$1)) {
          var c__6367__auto___19140 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__19120_19139__$1) : cljs.core.chunk_first.call(null, seq__19120_19139__$1);
          var G__19141 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__19120_19139__$1) : cljs.core.chunk_rest.call(null, seq__19120_19139__$1);
          var G__19142 = c__6367__auto___19140;
          var G__19143 = cljs.core.count(c__6367__auto___19140);
          var G__19144 = 0;
          seq__19120_19126 = G__19141;
          chunk__19121_19127 = G__19142;
          count__19122_19128 = G__19143;
          i__19123_19129 = G__19144;
          continue;
        } else {
          var vec__19125_19145 = cljs.core.first(seq__19120_19139__$1);
          var key_name_19146 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19125_19145, 0, null);
          var f_19147 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19125_19145, 1, null);
          var str_name_19148 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_19146) : cljs.core.name.call(null, key_name_19146);
          obj[str_name_19148] = f_19147;
          var G__19149 = cljs.core.next(seq__19120_19139__$1);
          var G__19150 = null;
          var G__19151 = 0;
          var G__19152 = 0;
          seq__19120_19126 = G__19149;
          chunk__19121_19127 = G__19150;
          count__19122_19128 = G__19151;
          i__19123_19129 = G__19152;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list() {
  var args__6629__auto__ = [];
  var len__6622__auto___19158 = arguments.length;
  var i__6623__auto___19159 = 0;
  while (true) {
    if (i__6623__auto___19159 < len__6622__auto___19158) {
      args__6629__auto__.push(arguments[i__6623__auto___19159]);
      var G__19160 = i__6623__auto___19159 + 1;
      i__6623__auto___19159 = G__19160;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 0 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(0), 0) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__6630__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__19161 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__19161;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__19162 = i - 1;
      var G__19163 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__19162;
      r = G__19163;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq19157) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19157));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__5583__auto__ = coll == null;
    if (or__5583__auto__) {
      return or__5583__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__5571__auto__ = cljs.core.not(a.ns);
      if (and__5571__auto__) {
        return b.ns;
      } else {
        return and__5571__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__19174 = a.ns;
            var G__19175 = b.ns;
            return goog.array.defaultCompare(G__19174, G__19175);
          }();
          if (0 === nsc) {
            var G__19176 = a.name;
            var G__19177 = b.name;
            return goog.array.defaultCompare(G__19176, G__19177);
          } else {
            return nsc;
          }
        }
      } else {
        var G__19178 = a.name;
        var G__19179 = b.name;
        return goog.array.defaultCompare(G__19178, G__19179);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__19181 = null;
  var G__19181__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__19181__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__19181 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19181__2.call(this, self__, coll);
      case 3:
        return G__19181__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19181.cljs$core$IFn$_invoke$arity$2 = G__19181__2;
  G__19181.cljs$core$IFn$_invoke$arity$3 = G__19181__3;
  return G__19181;
}();
cljs.core.Keyword.prototype.apply = function(self__, args19180) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19180)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__5999__auto__ = self__._hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword() {
  var args19184 = [];
  var len__6622__auto___19187 = arguments.length;
  var i__6623__auto___19188 = 0;
  while (true) {
    if (i__6623__auto___19188 < len__6622__auto___19187) {
      args19184.push(arguments[i__6623__auto___19188]);
      var G__19189 = i__6623__auto___19188 + 1;
      i__6623__auto___19188 = G__19189;
      continue;
    } else {
    }
    break;
  }
  var G__19186 = args19184.length;
  switch(G__19186) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19184.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__19191 = ls.sval();
        ls = G__19191;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk() {
  var args19192 = [];
  var len__6622__auto___19195 = arguments.length;
  var i__6623__auto___19196 = 0;
  while (true) {
    if (i__6623__auto___19196 < len__6622__auto___19195) {
      args19192.push(arguments[i__6623__auto___19196]);
      var G__19197 = i__6623__auto___19196 + 1;
      i__6623__auto___19196 = G__19197;
      continue;
    } else {
    }
    break;
  }
  var G__19194 = args19192.length;
  switch(G__19194) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19192.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__19201 = cljs.core.next(s__$1);
      s__$1 = G__19201;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_19202 = 0;
  var xs_19203 = cljs.core.seq(coll);
  while (true) {
    if (xs_19203) {
      ret[i_19202] = cljs.core.to_array(cljs.core.first(xs_19203));
      var G__19204 = i_19202 + 1;
      var G__19205 = cljs.core.next(xs_19203);
      i_19202 = G__19204;
      xs_19203 = G__19205;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array() {
  var args19206 = [];
  var len__6622__auto___19209 = arguments.length;
  var i__6623__auto___19210 = 0;
  while (true) {
    if (i__6623__auto___19210 < len__6622__auto___19209) {
      args19206.push(arguments[i__6623__auto___19210]);
      var G__19211 = i__6623__auto___19210 + 1;
      i__6623__auto___19210 = G__19211;
      continue;
    } else {
    }
    break;
  }
  var G__19208 = args19206.length;
  switch(G__19208) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19206.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__19213 = i + 1;
        var G__19214 = cljs.core.next(s__$1);
        i = G__19213;
        s__$1 = G__19214;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__6467__auto___19215 = size;
    var i_19216 = 0;
    while (true) {
      if (i_19216 < n__6467__auto___19215) {
        a[i_19216] = init_val_or_seq;
        var G__19217 = i_19216 + 1;
        i_19216 = G__19217;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array() {
  var args19218 = [];
  var len__6622__auto___19221 = arguments.length;
  var i__6623__auto___19222 = 0;
  while (true) {
    if (i__6623__auto___19222 < len__6622__auto___19221) {
      args19218.push(arguments[i__6623__auto___19222]);
      var G__19223 = i__6623__auto___19222 + 1;
      i__6623__auto___19222 = G__19223;
      continue;
    } else {
    }
    break;
  }
  var G__19220 = args19218.length;
  switch(G__19220) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19218.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__19225 = i + 1;
        var G__19226 = cljs.core.next(s__$1);
        i = G__19225;
        s__$1 = G__19226;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__6467__auto___19227 = size;
    var i_19228 = 0;
    while (true) {
      if (i_19228 < n__6467__auto___19227) {
        a[i_19228] = init_val_or_seq;
        var G__19229 = i_19228 + 1;
        i_19228 = G__19229;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array() {
  var args19230 = [];
  var len__6622__auto___19233 = arguments.length;
  var i__6623__auto___19234 = 0;
  while (true) {
    if (i__6623__auto___19234 < len__6622__auto___19233) {
      args19230.push(arguments[i__6623__auto___19234]);
      var G__19235 = i__6623__auto___19234 + 1;
      i__6623__auto___19234 = G__19235;
      continue;
    } else {
    }
    break;
  }
  var G__19232 = args19230.length;
  switch(G__19232) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19230.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__19237 = i + 1;
        var G__19238 = cljs.core.next(s__$1);
        i = G__19237;
        s__$1 = G__19238;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__6467__auto___19239 = size;
    var i_19240 = 0;
    while (true) {
      if (i_19240 < n__6467__auto___19239) {
        a[i_19240] = init_val_or_seq;
        var G__19241 = i_19240 + 1;
        i_19240 = G__19241;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array() {
  var args19242 = [];
  var len__6622__auto___19245 = arguments.length;
  var i__6623__auto___19246 = 0;
  while (true) {
    if (i__6623__auto___19246 < len__6622__auto___19245) {
      args19242.push(arguments[i__6623__auto___19246]);
      var G__19247 = i__6623__auto___19246 + 1;
      i__6623__auto___19246 = G__19247;
      continue;
    } else {
    }
    break;
  }
  var G__19244 = args19242.length;
  switch(G__19244) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19242.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__19249 = i + 1;
        var G__19250 = cljs.core.next(s__$1);
        i = G__19249;
        s__$1 = G__19250;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__6467__auto___19251 = size;
    var i_19252 = 0;
    while (true) {
      if (i_19252 < n__6467__auto___19251) {
        a[i_19252] = init_val_or_seq;
        var G__19253 = i_19252 + 1;
        i_19252 = G__19253;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__19254 = cljs.core.next(s__$1);
        var G__19255 = i - 1;
        var G__19256 = sum + 1;
        s__$1 = G__19254;
        i = G__19255;
        sum = G__19256;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat() {
  var args19258 = [];
  var len__6622__auto___19270 = arguments.length;
  var i__6623__auto___19271 = 0;
  while (true) {
    if (i__6623__auto___19271 < len__6622__auto___19270) {
      args19258.push(arguments[i__6623__auto___19271]);
      var G__19272 = i__6623__auto___19271 + 1;
      i__6623__auto___19271 = G__19272;
      continue;
    } else {
    }
    break;
  }
  var G__19263 = args19258.length;
  switch(G__19263) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19258.slice(2), 0);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq19259) {
  var G__19260 = cljs.core.first(seq19259);
  var seq19259__$1 = cljs.core.next(seq19259);
  var G__19261 = cljs.core.first(seq19259__$1);
  var seq19259__$2 = cljs.core.next(seq19259__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__19260, G__19261, seq19259__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_() {
  var args19274 = [];
  var len__6622__auto___19282 = arguments.length;
  var i__6623__auto___19283 = 0;
  while (true) {
    if (i__6623__auto___19283 < len__6622__auto___19282) {
      args19274.push(arguments[i__6623__auto___19283]);
      var G__19284 = i__6623__auto___19283 + 1;
      i__6623__auto___19283 = G__19284;
      continue;
    } else {
    }
    break;
  }
  var G__19281 = args19274.length;
  switch(G__19281) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19274.slice(4), 0);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__6641__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq19275) {
  var G__19276 = cljs.core.first(seq19275);
  var seq19275__$1 = cljs.core.next(seq19275);
  var G__19277 = cljs.core.first(seq19275__$1);
  var seq19275__$2 = cljs.core.next(seq19275__$1);
  var G__19278 = cljs.core.first(seq19275__$2);
  var seq19275__$3 = cljs.core.next(seq19275__$2);
  var G__19279 = cljs.core.first(seq19275__$3);
  var seq19275__$4 = cljs.core.next(seq19275__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__19276, G__19277, G__19278, G__19279, seq19275__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_() {
  var args19286 = [];
  var len__6622__auto___19292 = arguments.length;
  var i__6623__auto___19293 = 0;
  while (true) {
    if (i__6623__auto___19293 < len__6622__auto___19292) {
      args19286.push(arguments[i__6623__auto___19293]);
      var G__19294 = i__6623__auto___19293 + 1;
      i__6623__auto___19293 = G__19294;
      continue;
    } else {
    }
    break;
  }
  var G__19291 = args19286.length;
  switch(G__19291) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19286.slice(2), 0);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__19296 = ntcoll;
      var G__19297 = cljs.core.first(vals);
      var G__19298 = cljs.core.next(vals);
      tcoll = G__19296;
      val = G__19297;
      vals = G__19298;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq19287) {
  var G__19288 = cljs.core.first(seq19287);
  var seq19287__$1 = cljs.core.next(seq19287);
  var G__19289 = cljs.core.first(seq19287__$1);
  var seq19287__$2 = cljs.core.next(seq19287__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__19288, G__19289, seq19287__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_() {
  var args19299 = [];
  var len__6622__auto___19306 = arguments.length;
  var i__6623__auto___19307 = 0;
  while (true) {
    if (i__6623__auto___19307 < len__6622__auto___19306) {
      args19299.push(arguments[i__6623__auto___19307]);
      var G__19308 = i__6623__auto___19307 + 1;
      i__6623__auto___19307 = G__19308;
      continue;
    } else {
    }
    break;
  }
  var G__19305 = args19299.length;
  switch(G__19305) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19299.slice(3), 0);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__6641__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__19310 = ntcoll;
      var G__19311 = cljs.core.first(kvs);
      var G__19312 = cljs.core.second(kvs);
      var G__19313 = cljs.core.nnext(kvs);
      tcoll = G__19310;
      key = G__19311;
      val = G__19312;
      kvs = G__19313;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq19300) {
  var G__19301 = cljs.core.first(seq19300);
  var seq19300__$1 = cljs.core.next(seq19300);
  var G__19302 = cljs.core.first(seq19300__$1);
  var seq19300__$2 = cljs.core.next(seq19300__$1);
  var G__19303 = cljs.core.first(seq19300__$2);
  var seq19300__$3 = cljs.core.next(seq19300__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__19301, G__19302, G__19303, seq19300__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_() {
  var args19314 = [];
  var len__6622__auto___19320 = arguments.length;
  var i__6623__auto___19321 = 0;
  while (true) {
    if (i__6623__auto___19321 < len__6622__auto___19320) {
      args19314.push(arguments[i__6623__auto___19321]);
      var G__19322 = i__6623__auto___19321 + 1;
      i__6623__auto___19321 = G__19322;
      continue;
    } else {
    }
    break;
  }
  var G__19319 = args19314.length;
  switch(G__19319) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19314.slice(2), 0);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__19324 = ntcoll;
      var G__19325 = cljs.core.first(ks);
      var G__19326 = cljs.core.next(ks);
      tcoll = G__19324;
      key = G__19325;
      ks = G__19326;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq19315) {
  var G__19316 = cljs.core.first(seq19315);
  var seq19315__$1 = cljs.core.next(seq19315);
  var G__19317 = cljs.core.first(seq19315__$1);
  var seq19315__$2 = cljs.core.next(seq19315__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__19316, G__19317, seq19315__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_() {
  var args19327 = [];
  var len__6622__auto___19333 = arguments.length;
  var i__6623__auto___19334 = 0;
  while (true) {
    if (i__6623__auto___19334 < len__6622__auto___19333) {
      args19327.push(arguments[i__6623__auto___19334]);
      var G__19335 = i__6623__auto___19334 + 1;
      i__6623__auto___19334 = G__19335;
      continue;
    } else {
    }
    break;
  }
  var G__19332 = args19327.length;
  switch(G__19332) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19327.slice(2), 0);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__19337 = ntcoll;
      var G__19338 = cljs.core.first(vals);
      var G__19339 = cljs.core.next(vals);
      tcoll = G__19337;
      val = G__19338;
      vals = G__19339;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq19328) {
  var G__19329 = cljs.core.first(seq19328);
  var seq19328__$1 = cljs.core.next(seq19328);
  var G__19330 = cljs.core.first(seq19328__$1);
  var seq19328__$2 = cljs.core.next(seq19328__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__19329, G__19330, seq19328__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a6511 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a6511);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a6511) : f.call(null, a6511);
      }
    } else {
      var b6512 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a6511, b6512);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a6511, b6512) : f.call(null, a6511, b6512);
        }
      } else {
        var c6513 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a6511, b6512, c6513);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a6511, b6512, c6513) : f.call(null, a6511, b6512, c6513);
          }
        } else {
          var d6514 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a6511, b6512, c6513, d6514);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a6511, b6512, c6513, d6514) : f.call(null, a6511, b6512, c6513, d6514);
            }
          } else {
            var e6515 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a6511, b6512, c6513, d6514, e6515);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a6511, b6512, c6513, d6514, e6515) : f.call(null, a6511, b6512, c6513, d6514, e6515);
              }
            } else {
              var f6516 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a6511, b6512, c6513, d6514, e6515, f6516);
                } else {
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a6511, b6512, c6513, d6514, e6515, f6516) : f.call(null, a6511, b6512, c6513, d6514, e6515, f6516);
                }
              } else {
                var g6517 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a6511, b6512, c6513, d6514, e6515, f6516, g6517);
                  } else {
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a6511, b6512, c6513, d6514, e6515, f6516, g6517) : f.call(null, a6511, b6512, c6513, d6514, e6515, f6516, g6517);
                  }
                } else {
                  var h6518 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518);
                    } else {
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518) : f.call(null, a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518);
                    }
                  } else {
                    var i6519 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519);
                      } else {
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519) : f.call(null, a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519);
                      }
                    } else {
                      var j6520 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520);
                        } else {
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520) : f.call(null, a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520);
                        }
                      } else {
                        var k6521 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521);
                          } else {
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521) : f.call(null, a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521);
                          }
                        } else {
                          var l6522 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522);
                            } else {
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522) : f.call(null, a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522);
                            }
                          } else {
                            var m6523 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523);
                              } else {
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523) : f.call(null, a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523);
                              }
                            } else {
                              var n6524 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524);
                                } else {
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524) : f.call(null, a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524);
                                }
                              } else {
                                var o6525 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524, o6525);
                                  } else {
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524, o6525) : f.call(null, a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524, o6525);
                                  }
                                } else {
                                  var p6526 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524, o6525, p6526);
                                    } else {
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524, o6525, p6526) : f.call(null, a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524, o6525, p6526);
                                    }
                                  } else {
                                    var q6527 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524, o6525, p6526, q6527);
                                      } else {
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524, o6525, p6526, q6527) : f.call(null, a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524, o6525, p6526, q6527);
                                      }
                                    } else {
                                      var r6528 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524, o6525, p6526, q6527, r6528);
                                        } else {
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524, o6525, p6526, q6527, r6528) : f.call(null, a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524, o6525, p6526, q6527, r6528);
                                        }
                                      } else {
                                        var s6529 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524, o6525, p6526, q6527, r6528, s6529);
                                          } else {
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524, o6525, p6526, q6527, r6528, s6529) : f.call(null, a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524, o6525, p6526, q6527, r6528, s6529);
                                          }
                                        } else {
                                          var t6530 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524, o6525, p6526, q6527, r6528, s6529, t6530);
                                            } else {
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524, o6525, p6526, q6527, r6528, s6529, t6530) : f.call(null, a6511, b6512, c6513, d6514, e6515, f6516, g6517, h6518, i6519, j6520, k6521, l6522, m6523, n6524, o6525, p6526, q6527, r6528, s6529, t6530);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply() {
  var args19340 = [];
  var len__6622__auto___19349 = arguments.length;
  var i__6623__auto___19350 = 0;
  while (true) {
    if (i__6623__auto___19350 < len__6622__auto___19349) {
      args19340.push(arguments[i__6623__auto___19350]);
      var G__19351 = i__6623__auto___19350 + 1;
      i__6623__auto___19350 = G__19351;
      continue;
    } else {
    }
    break;
  }
  var G__19348 = args19340.length;
  switch(G__19348) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19340.slice(5), 0);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__6641__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq19341) {
  var G__19342 = cljs.core.first(seq19341);
  var seq19341__$1 = cljs.core.next(seq19341);
  var G__19343 = cljs.core.first(seq19341__$1);
  var seq19341__$2 = cljs.core.next(seq19341__$1);
  var G__19344 = cljs.core.first(seq19341__$2);
  var seq19341__$3 = cljs.core.next(seq19341__$2);
  var G__19345 = cljs.core.first(seq19341__$3);
  var seq19341__$4 = cljs.core.next(seq19341__$3);
  var G__19346 = cljs.core.first(seq19341__$4);
  var seq19341__$5 = cljs.core.next(seq19341__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__19342, G__19343, G__19344, G__19345, G__19346, seq19341__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta() {
  var args19353 = [];
  var len__6622__auto___19378 = arguments.length;
  var i__6623__auto___19379 = 0;
  while (true) {
    if (i__6623__auto___19379 < len__6622__auto___19378) {
      args19353.push(arguments[i__6623__auto___19379]);
      var G__19380 = i__6623__auto___19379 + 1;
      i__6623__auto___19379 = G__19380;
      continue;
    } else {
    }
    break;
  }
  var G__19362 = args19353.length;
  switch(G__19362) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19353.slice(6), 0);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__6641__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__19363 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19363) : f.call(null, G__19363);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__19364 = cljs.core.meta(obj);
    var G__19365 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19364, G__19365) : f.call(null, G__19364, G__19365);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__19366 = cljs.core.meta(obj);
    var G__19367 = a;
    var G__19368 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19366, G__19367, G__19368) : f.call(null, G__19366, G__19367, G__19368);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__19369 = cljs.core.meta(obj);
    var G__19370 = a;
    var G__19371 = b;
    var G__19372 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19369, G__19370, G__19371, G__19372) : f.call(null, G__19369, G__19370, G__19371, G__19372);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__19373 = cljs.core.meta(obj);
    var G__19374 = a;
    var G__19375 = b;
    var G__19376 = c;
    var G__19377 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19373, G__19374, G__19375, G__19376, G__19377) : f.call(null, G__19373, G__19374, G__19375, G__19376, G__19377);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq19354) {
  var G__19355 = cljs.core.first(seq19354);
  var seq19354__$1 = cljs.core.next(seq19354);
  var G__19356 = cljs.core.first(seq19354__$1);
  var seq19354__$2 = cljs.core.next(seq19354__$1);
  var G__19357 = cljs.core.first(seq19354__$2);
  var seq19354__$3 = cljs.core.next(seq19354__$2);
  var G__19358 = cljs.core.first(seq19354__$3);
  var seq19354__$4 = cljs.core.next(seq19354__$3);
  var G__19359 = cljs.core.first(seq19354__$4);
  var seq19354__$5 = cljs.core.next(seq19354__$4);
  var G__19360 = cljs.core.first(seq19354__$5);
  var seq19354__$6 = cljs.core.next(seq19354__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__19355, G__19356, G__19357, G__19358, G__19359, G__19360, seq19354__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_() {
  var args19382 = [];
  var len__6622__auto___19388 = arguments.length;
  var i__6623__auto___19389 = 0;
  while (true) {
    if (i__6623__auto___19389 < len__6622__auto___19388) {
      args19382.push(arguments[i__6623__auto___19389]);
      var G__19390 = i__6623__auto___19389 + 1;
      i__6623__auto___19389 = G__19390;
      continue;
    } else {
    }
    break;
  }
  var G__19387 = args19382.length;
  switch(G__19387) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19382.slice(2), 0);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq19383) {
  var G__19384 = cljs.core.first(seq19383);
  var seq19383__$1 = cljs.core.next(seq19383);
  var G__19385 = cljs.core.first(seq19383__$1);
  var seq19383__$2 = cljs.core.next(seq19383__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__19384, G__19385, seq19383__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t19395 !== "undefined") {
  } else {
    cljs.core.t19395 = function(nil_iter, meta19396) {
      this.nil_iter = nil_iter;
      this.meta19396 = meta19396;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t19395.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19397, meta19396__$1) {
      var self__ = this;
      var _19397__$1 = this;
      return new cljs.core.t19395(self__.nil_iter, meta19396__$1);
    };
    cljs.core.t19395.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19397) {
      var self__ = this;
      var _19397__$1 = this;
      return self__.meta19396;
    };
    cljs.core.t19395.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t19395.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t19395.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t19395.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), new cljs.core.Symbol(null, "meta19396", "meta19396", -354418722, null)], 
      null);
    };
    cljs.core.t19395.cljs$lang$type = true;
    cljs.core.t19395.cljs$lang$ctorStr = "cljs.core/t19395";
    cljs.core.t19395.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
      return cljs.core._write(writer__6163__auto__, "cljs.core/t19395");
    };
    cljs.core.__GT_t19395 = function cljs$core$nil_iter_$___GT_t19395(nil_iter__$1, meta19396) {
      return new cljs.core.t19395(nil_iter__$1, meta19396);
    };
  }
  return new cljs.core.t19395(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.truth_(cljs.core.iterable_QMARK_(coll))) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__5571__auto__ = !(lt.stepper == null);
      if (and__5571__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__5571__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__19398 = lt;
        var G__19399 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__19398, G__19399) : self__.xform.call(null, G__19398, G__19399);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__19400 = cljs.core.next(iters__$1);
        iters__$1 = G__19400;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__6467__auto___19401 = self__.iters.length;
  var i_19402 = 0;
  while (true) {
    if (i_19402 < n__6467__auto___19401) {
      self__.nexts[i_19402] = self__.iters[i_19402].next();
      var G__19403 = i_19402 + 1;
      i_19402 = G__19403;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__5571__auto__ = !(lt.stepper == null);
      if (and__5571__auto__) {
        return this$.hasNext();
      } else {
        return and__5571__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper() {
  var args19404 = [];
  var len__6622__auto___19407 = arguments.length;
  var i__6623__auto___19408 = 0;
  while (true) {
    if (i__6623__auto___19408 < len__6622__auto___19407) {
      args19404.push(arguments[i__6623__auto___19408]);
      var G__19409 = i__6623__auto___19408 + 1;
      i__6623__auto___19408 = G__19409;
      continue;
    } else {
    }
    break;
  }
  var G__19406 = args19404.length;
  switch(G__19406) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19404.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__19411_19415 = cljs.core.seq(colls);
  var chunk__19412_19416 = null;
  var count__19413_19417 = 0;
  var i__19414_19418 = 0;
  while (true) {
    if (i__19414_19418 < count__19413_19417) {
      var coll_19419 = chunk__19412_19416.cljs$core$IIndexed$_nth$arity$2(null, i__19414_19418);
      iters.push(cljs.core.iter(coll_19419));
      var G__19420 = seq__19411_19415;
      var G__19421 = chunk__19412_19416;
      var G__19422 = count__19413_19417;
      var G__19423 = i__19414_19418 + 1;
      seq__19411_19415 = G__19420;
      chunk__19412_19416 = G__19421;
      count__19413_19417 = G__19422;
      i__19414_19418 = G__19423;
      continue;
    } else {
      var temp__4425__auto___19424 = cljs.core.seq(seq__19411_19415);
      if (temp__4425__auto___19424) {
        var seq__19411_19425__$1 = temp__4425__auto___19424;
        if (cljs.core.chunked_seq_QMARK_(seq__19411_19425__$1)) {
          var c__6367__auto___19426 = cljs.core.chunk_first(seq__19411_19425__$1);
          var G__19427 = cljs.core.chunk_rest(seq__19411_19425__$1);
          var G__19428 = c__6367__auto___19426;
          var G__19429 = cljs.core.count(c__6367__auto___19426);
          var G__19430 = 0;
          seq__19411_19415 = G__19427;
          chunk__19412_19416 = G__19428;
          count__19413_19417 = G__19429;
          i__19414_19418 = G__19430;
          continue;
        } else {
          var coll_19431 = cljs.core.first(seq__19411_19425__$1);
          iters.push(cljs.core.iter(coll_19431));
          var G__19432 = cljs.core.next(seq__19411_19425__$1);
          var G__19433 = null;
          var G__19434 = 0;
          var G__19435 = 0;
          seq__19411_19415 = G__19432;
          chunk__19412_19416 = G__19433;
          count__19413_19417 = G__19434;
          i__19414_19418 = G__19435;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence() {
  var args19436 = [];
  var len__6622__auto___19442 = arguments.length;
  var i__6623__auto___19443 = 0;
  while (true) {
    if (i__6623__auto___19443 < len__6622__auto___19442) {
      args19436.push(arguments[i__6623__auto___19443]);
      var G__19444 = i__6623__auto___19443 + 1;
      i__6623__auto___19443 = G__19444;
      continue;
    } else {
    }
    break;
  }
  var G__19441 = args19436.length;
  switch(G__19441) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19436.slice(2), 0);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__5583__auto__ = cljs.core.seq(coll);
    if (or__5583__auto__) {
      return or__5583__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq19437) {
  var G__19438 = cljs.core.first(seq19437);
  var seq19437__$1 = cljs.core.next(seq19437);
  var G__19439 = cljs.core.first(seq19437__$1);
  var seq19437__$2 = cljs.core.next(seq19437__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__19438, G__19439, seq19437__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__19447 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19447) : pred.call(null, G__19447);
      }())) {
        var G__19448 = pred;
        var G__19449 = cljs.core.next(coll);
        pred = G__19448;
        coll = G__19449;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__5583__auto__ = function() {
        var G__19453 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19453) : pred.call(null, G__19453);
      }();
      if (cljs.core.truth_(or__5583__auto__)) {
        return or__5583__auto__;
      } else {
        var G__19454 = pred;
        var G__19455 = cljs.core.next(coll);
        pred = G__19454;
        coll = G__19455;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__19456 = null;
    var G__19456__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__19456__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__19456__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__19456__3 = function() {
      var G__19457__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__19457 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__19458__i = 0, G__19458__a = new Array(arguments.length - 2);
          while (G__19458__i < G__19458__a.length) {
            G__19458__a[G__19458__i] = arguments[G__19458__i + 2];
            ++G__19458__i;
          }
          zs = new cljs.core.IndexedSeq(G__19458__a, 0);
        }
        return G__19457__delegate.call(this, x, y, zs);
      };
      G__19457.cljs$lang$maxFixedArity = 2;
      G__19457.cljs$lang$applyTo = function(arglist__19459) {
        var x = cljs.core.first(arglist__19459);
        arglist__19459 = cljs.core.next(arglist__19459);
        var y = cljs.core.first(arglist__19459);
        var zs = cljs.core.rest(arglist__19459);
        return G__19457__delegate(x, y, zs);
      };
      G__19457.cljs$core$IFn$_invoke$arity$variadic = G__19457__delegate;
      return G__19457;
    }();
    G__19456 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__19456__0.call(this);
        case 1:
          return G__19456__1.call(this, x);
        case 2:
          return G__19456__2.call(this, x, y);
        default:
          var G__19460 = null;
          if (arguments.length > 2) {
            var G__19461__i = 0, G__19461__a = new Array(arguments.length - 2);
            while (G__19461__i < G__19461__a.length) {
              G__19461__a[G__19461__i] = arguments[G__19461__i + 2];
              ++G__19461__i;
            }
            G__19460 = new cljs.core.IndexedSeq(G__19461__a, 0);
          }
          return G__19456__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__19460);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19456.cljs$lang$maxFixedArity = 2;
    G__19456.cljs$lang$applyTo = G__19456__3.cljs$lang$applyTo;
    G__19456.cljs$core$IFn$_invoke$arity$0 = G__19456__0;
    G__19456.cljs$core$IFn$_invoke$arity$1 = G__19456__1;
    G__19456.cljs$core$IFn$_invoke$arity$2 = G__19456__2;
    G__19456.cljs$core$IFn$_invoke$arity$variadic = G__19456__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__19456;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__19462__delegate = function(args) {
      return x;
    };
    var G__19462 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__19463__i = 0, G__19463__a = new Array(arguments.length - 0);
        while (G__19463__i < G__19463__a.length) {
          G__19463__a[G__19463__i] = arguments[G__19463__i + 0];
          ++G__19463__i;
        }
        args = new cljs.core.IndexedSeq(G__19463__a, 0);
      }
      return G__19462__delegate.call(this, args);
    };
    G__19462.cljs$lang$maxFixedArity = 0;
    G__19462.cljs$lang$applyTo = function(arglist__19464) {
      var args = cljs.core.seq(arglist__19464);
      return G__19462__delegate(args);
    };
    G__19462.cljs$core$IFn$_invoke$arity$variadic = G__19462__delegate;
    return G__19462;
  }();
};
cljs.core.comp = function cljs$core$comp() {
  var args19465 = [];
  var len__6622__auto___19492 = arguments.length;
  var i__6623__auto___19493 = 0;
  while (true) {
    if (i__6623__auto___19493 < len__6622__auto___19492) {
      args19465.push(arguments[i__6623__auto___19493]);
      var G__19494 = i__6623__auto___19493 + 1;
      i__6623__auto___19493 = G__19494;
      continue;
    } else {
    }
    break;
  }
  var G__19471 = args19465.length;
  switch(G__19471) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19465.slice(3), 0);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__6641__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__19496 = null;
    var G__19496__0 = function() {
      var G__19472 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19472) : f.call(null, G__19472);
    };
    var G__19496__1 = function(x) {
      var G__19473 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19473) : f.call(null, G__19473);
    };
    var G__19496__2 = function(x, y) {
      var G__19474 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19474) : f.call(null, G__19474);
    };
    var G__19496__3 = function(x, y, z) {
      var G__19475 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19475) : f.call(null, G__19475);
    };
    var G__19496__4 = function() {
      var G__19497__delegate = function(x, y, z, args) {
        var G__19476 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19476) : f.call(null, G__19476);
      };
      var G__19497 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19498__i = 0, G__19498__a = new Array(arguments.length - 3);
          while (G__19498__i < G__19498__a.length) {
            G__19498__a[G__19498__i] = arguments[G__19498__i + 3];
            ++G__19498__i;
          }
          args = new cljs.core.IndexedSeq(G__19498__a, 0);
        }
        return G__19497__delegate.call(this, x, y, z, args);
      };
      G__19497.cljs$lang$maxFixedArity = 3;
      G__19497.cljs$lang$applyTo = function(arglist__19499) {
        var x = cljs.core.first(arglist__19499);
        arglist__19499 = cljs.core.next(arglist__19499);
        var y = cljs.core.first(arglist__19499);
        arglist__19499 = cljs.core.next(arglist__19499);
        var z = cljs.core.first(arglist__19499);
        var args = cljs.core.rest(arglist__19499);
        return G__19497__delegate(x, y, z, args);
      };
      G__19497.cljs$core$IFn$_invoke$arity$variadic = G__19497__delegate;
      return G__19497;
    }();
    G__19496 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__19496__0.call(this);
        case 1:
          return G__19496__1.call(this, x);
        case 2:
          return G__19496__2.call(this, x, y);
        case 3:
          return G__19496__3.call(this, x, y, z);
        default:
          var G__19500 = null;
          if (arguments.length > 3) {
            var G__19501__i = 0, G__19501__a = new Array(arguments.length - 3);
            while (G__19501__i < G__19501__a.length) {
              G__19501__a[G__19501__i] = arguments[G__19501__i + 3];
              ++G__19501__i;
            }
            G__19500 = new cljs.core.IndexedSeq(G__19501__a, 0);
          }
          return G__19496__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19500);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19496.cljs$lang$maxFixedArity = 3;
    G__19496.cljs$lang$applyTo = G__19496__4.cljs$lang$applyTo;
    G__19496.cljs$core$IFn$_invoke$arity$0 = G__19496__0;
    G__19496.cljs$core$IFn$_invoke$arity$1 = G__19496__1;
    G__19496.cljs$core$IFn$_invoke$arity$2 = G__19496__2;
    G__19496.cljs$core$IFn$_invoke$arity$3 = G__19496__3;
    G__19496.cljs$core$IFn$_invoke$arity$variadic = G__19496__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__19496;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__19502 = null;
    var G__19502__0 = function() {
      var G__19478 = function() {
        var G__19479 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19479) : g.call(null, G__19479);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19478) : f.call(null, G__19478);
    };
    var G__19502__1 = function(x) {
      var G__19481 = function() {
        var G__19482 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19482) : g.call(null, G__19482);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19481) : f.call(null, G__19481);
    };
    var G__19502__2 = function(x, y) {
      var G__19484 = function() {
        var G__19485 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19485) : g.call(null, G__19485);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19484) : f.call(null, G__19484);
    };
    var G__19502__3 = function(x, y, z) {
      var G__19487 = function() {
        var G__19488 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19488) : g.call(null, G__19488);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19487) : f.call(null, G__19487);
    };
    var G__19502__4 = function() {
      var G__19503__delegate = function(x, y, z, args) {
        var G__19490 = function() {
          var G__19491 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19491) : g.call(null, G__19491);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19490) : f.call(null, G__19490);
      };
      var G__19503 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19504__i = 0, G__19504__a = new Array(arguments.length - 3);
          while (G__19504__i < G__19504__a.length) {
            G__19504__a[G__19504__i] = arguments[G__19504__i + 3];
            ++G__19504__i;
          }
          args = new cljs.core.IndexedSeq(G__19504__a, 0);
        }
        return G__19503__delegate.call(this, x, y, z, args);
      };
      G__19503.cljs$lang$maxFixedArity = 3;
      G__19503.cljs$lang$applyTo = function(arglist__19505) {
        var x = cljs.core.first(arglist__19505);
        arglist__19505 = cljs.core.next(arglist__19505);
        var y = cljs.core.first(arglist__19505);
        arglist__19505 = cljs.core.next(arglist__19505);
        var z = cljs.core.first(arglist__19505);
        var args = cljs.core.rest(arglist__19505);
        return G__19503__delegate(x, y, z, args);
      };
      G__19503.cljs$core$IFn$_invoke$arity$variadic = G__19503__delegate;
      return G__19503;
    }();
    G__19502 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__19502__0.call(this);
        case 1:
          return G__19502__1.call(this, x);
        case 2:
          return G__19502__2.call(this, x, y);
        case 3:
          return G__19502__3.call(this, x, y, z);
        default:
          var G__19506 = null;
          if (arguments.length > 3) {
            var G__19507__i = 0, G__19507__a = new Array(arguments.length - 3);
            while (G__19507__i < G__19507__a.length) {
              G__19507__a[G__19507__i] = arguments[G__19507__i + 3];
              ++G__19507__i;
            }
            G__19506 = new cljs.core.IndexedSeq(G__19507__a, 0);
          }
          return G__19502__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19506);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19502.cljs$lang$maxFixedArity = 3;
    G__19502.cljs$lang$applyTo = G__19502__4.cljs$lang$applyTo;
    G__19502.cljs$core$IFn$_invoke$arity$0 = G__19502__0;
    G__19502.cljs$core$IFn$_invoke$arity$1 = G__19502__1;
    G__19502.cljs$core$IFn$_invoke$arity$2 = G__19502__2;
    G__19502.cljs$core$IFn$_invoke$arity$3 = G__19502__3;
    G__19502.cljs$core$IFn$_invoke$arity$variadic = G__19502__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__19502;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__19508__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__19509 = cljs.core.first(fs__$2).call(null, ret);
            var G__19510 = cljs.core.next(fs__$2);
            ret = G__19509;
            fs__$2 = G__19510;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__19508 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__19511__i = 0, G__19511__a = new Array(arguments.length - 0);
          while (G__19511__i < G__19511__a.length) {
            G__19511__a[G__19511__i] = arguments[G__19511__i + 0];
            ++G__19511__i;
          }
          args = new cljs.core.IndexedSeq(G__19511__a, 0);
        }
        return G__19508__delegate.call(this, args);
      };
      G__19508.cljs$lang$maxFixedArity = 0;
      G__19508.cljs$lang$applyTo = function(arglist__19512) {
        var args = cljs.core.seq(arglist__19512);
        return G__19508__delegate(args);
      };
      G__19508.cljs$core$IFn$_invoke$arity$variadic = G__19508__delegate;
      return G__19508;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq19466) {
  var G__19467 = cljs.core.first(seq19466);
  var seq19466__$1 = cljs.core.next(seq19466);
  var G__19468 = cljs.core.first(seq19466__$1);
  var seq19466__$2 = cljs.core.next(seq19466__$1);
  var G__19469 = cljs.core.first(seq19466__$2);
  var seq19466__$3 = cljs.core.next(seq19466__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__19467, G__19468, G__19469, seq19466__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial() {
  var args19513 = [];
  var len__6622__auto___19521 = arguments.length;
  var i__6623__auto___19522 = 0;
  while (true) {
    if (i__6623__auto___19522 < len__6622__auto___19521) {
      args19513.push(arguments[i__6623__auto___19522]);
      var G__19523 = i__6623__auto___19522 + 1;
      i__6623__auto___19522 = G__19523;
      continue;
    } else {
    }
    break;
  }
  var G__19520 = args19513.length;
  switch(G__19520) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19513.slice(4), 0);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__6641__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__19525 = null;
    var G__19525__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__19525__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__19525__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__19525__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__19525__4 = function() {
      var G__19526__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__19526 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19527__i = 0, G__19527__a = new Array(arguments.length - 3);
          while (G__19527__i < G__19527__a.length) {
            G__19527__a[G__19527__i] = arguments[G__19527__i + 3];
            ++G__19527__i;
          }
          args = new cljs.core.IndexedSeq(G__19527__a, 0);
        }
        return G__19526__delegate.call(this, x, y, z, args);
      };
      G__19526.cljs$lang$maxFixedArity = 3;
      G__19526.cljs$lang$applyTo = function(arglist__19528) {
        var x = cljs.core.first(arglist__19528);
        arglist__19528 = cljs.core.next(arglist__19528);
        var y = cljs.core.first(arglist__19528);
        arglist__19528 = cljs.core.next(arglist__19528);
        var z = cljs.core.first(arglist__19528);
        var args = cljs.core.rest(arglist__19528);
        return G__19526__delegate(x, y, z, args);
      };
      G__19526.cljs$core$IFn$_invoke$arity$variadic = G__19526__delegate;
      return G__19526;
    }();
    G__19525 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__19525__0.call(this);
        case 1:
          return G__19525__1.call(this, x);
        case 2:
          return G__19525__2.call(this, x, y);
        case 3:
          return G__19525__3.call(this, x, y, z);
        default:
          var G__19529 = null;
          if (arguments.length > 3) {
            var G__19530__i = 0, G__19530__a = new Array(arguments.length - 3);
            while (G__19530__i < G__19530__a.length) {
              G__19530__a[G__19530__i] = arguments[G__19530__i + 3];
              ++G__19530__i;
            }
            G__19529 = new cljs.core.IndexedSeq(G__19530__a, 0);
          }
          return G__19525__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19529);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19525.cljs$lang$maxFixedArity = 3;
    G__19525.cljs$lang$applyTo = G__19525__4.cljs$lang$applyTo;
    G__19525.cljs$core$IFn$_invoke$arity$0 = G__19525__0;
    G__19525.cljs$core$IFn$_invoke$arity$1 = G__19525__1;
    G__19525.cljs$core$IFn$_invoke$arity$2 = G__19525__2;
    G__19525.cljs$core$IFn$_invoke$arity$3 = G__19525__3;
    G__19525.cljs$core$IFn$_invoke$arity$variadic = G__19525__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__19525;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__19531 = null;
    var G__19531__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__19531__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__19531__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__19531__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__19531__4 = function() {
      var G__19532__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__19532 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19533__i = 0, G__19533__a = new Array(arguments.length - 3);
          while (G__19533__i < G__19533__a.length) {
            G__19533__a[G__19533__i] = arguments[G__19533__i + 3];
            ++G__19533__i;
          }
          args = new cljs.core.IndexedSeq(G__19533__a, 0);
        }
        return G__19532__delegate.call(this, x, y, z, args);
      };
      G__19532.cljs$lang$maxFixedArity = 3;
      G__19532.cljs$lang$applyTo = function(arglist__19534) {
        var x = cljs.core.first(arglist__19534);
        arglist__19534 = cljs.core.next(arglist__19534);
        var y = cljs.core.first(arglist__19534);
        arglist__19534 = cljs.core.next(arglist__19534);
        var z = cljs.core.first(arglist__19534);
        var args = cljs.core.rest(arglist__19534);
        return G__19532__delegate(x, y, z, args);
      };
      G__19532.cljs$core$IFn$_invoke$arity$variadic = G__19532__delegate;
      return G__19532;
    }();
    G__19531 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__19531__0.call(this);
        case 1:
          return G__19531__1.call(this, x);
        case 2:
          return G__19531__2.call(this, x, y);
        case 3:
          return G__19531__3.call(this, x, y, z);
        default:
          var G__19535 = null;
          if (arguments.length > 3) {
            var G__19536__i = 0, G__19536__a = new Array(arguments.length - 3);
            while (G__19536__i < G__19536__a.length) {
              G__19536__a[G__19536__i] = arguments[G__19536__i + 3];
              ++G__19536__i;
            }
            G__19535 = new cljs.core.IndexedSeq(G__19536__a, 0);
          }
          return G__19531__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19535);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19531.cljs$lang$maxFixedArity = 3;
    G__19531.cljs$lang$applyTo = G__19531__4.cljs$lang$applyTo;
    G__19531.cljs$core$IFn$_invoke$arity$0 = G__19531__0;
    G__19531.cljs$core$IFn$_invoke$arity$1 = G__19531__1;
    G__19531.cljs$core$IFn$_invoke$arity$2 = G__19531__2;
    G__19531.cljs$core$IFn$_invoke$arity$3 = G__19531__3;
    G__19531.cljs$core$IFn$_invoke$arity$variadic = G__19531__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__19531;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__19537 = null;
    var G__19537__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__19537__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__19537__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__19537__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__19537__4 = function() {
      var G__19538__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__19538 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19539__i = 0, G__19539__a = new Array(arguments.length - 3);
          while (G__19539__i < G__19539__a.length) {
            G__19539__a[G__19539__i] = arguments[G__19539__i + 3];
            ++G__19539__i;
          }
          args = new cljs.core.IndexedSeq(G__19539__a, 0);
        }
        return G__19538__delegate.call(this, x, y, z, args);
      };
      G__19538.cljs$lang$maxFixedArity = 3;
      G__19538.cljs$lang$applyTo = function(arglist__19540) {
        var x = cljs.core.first(arglist__19540);
        arglist__19540 = cljs.core.next(arglist__19540);
        var y = cljs.core.first(arglist__19540);
        arglist__19540 = cljs.core.next(arglist__19540);
        var z = cljs.core.first(arglist__19540);
        var args = cljs.core.rest(arglist__19540);
        return G__19538__delegate(x, y, z, args);
      };
      G__19538.cljs$core$IFn$_invoke$arity$variadic = G__19538__delegate;
      return G__19538;
    }();
    G__19537 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__19537__0.call(this);
        case 1:
          return G__19537__1.call(this, x);
        case 2:
          return G__19537__2.call(this, x, y);
        case 3:
          return G__19537__3.call(this, x, y, z);
        default:
          var G__19541 = null;
          if (arguments.length > 3) {
            var G__19542__i = 0, G__19542__a = new Array(arguments.length - 3);
            while (G__19542__i < G__19542__a.length) {
              G__19542__a[G__19542__i] = arguments[G__19542__i + 3];
              ++G__19542__i;
            }
            G__19541 = new cljs.core.IndexedSeq(G__19542__a, 0);
          }
          return G__19537__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19541);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19537.cljs$lang$maxFixedArity = 3;
    G__19537.cljs$lang$applyTo = G__19537__4.cljs$lang$applyTo;
    G__19537.cljs$core$IFn$_invoke$arity$0 = G__19537__0;
    G__19537.cljs$core$IFn$_invoke$arity$1 = G__19537__1;
    G__19537.cljs$core$IFn$_invoke$arity$2 = G__19537__2;
    G__19537.cljs$core$IFn$_invoke$arity$3 = G__19537__3;
    G__19537.cljs$core$IFn$_invoke$arity$variadic = G__19537__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__19537;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__19543__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__19543 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__19544__i = 0, G__19544__a = new Array(arguments.length - 0);
        while (G__19544__i < G__19544__a.length) {
          G__19544__a[G__19544__i] = arguments[G__19544__i + 0];
          ++G__19544__i;
        }
        args = new cljs.core.IndexedSeq(G__19544__a, 0);
      }
      return G__19543__delegate.call(this, args);
    };
    G__19543.cljs$lang$maxFixedArity = 0;
    G__19543.cljs$lang$applyTo = function(arglist__19545) {
      var args = cljs.core.seq(arglist__19545);
      return G__19543__delegate(args);
    };
    G__19543.cljs$core$IFn$_invoke$arity$variadic = G__19543__delegate;
    return G__19543;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq19514) {
  var G__19515 = cljs.core.first(seq19514);
  var seq19514__$1 = cljs.core.next(seq19514);
  var G__19516 = cljs.core.first(seq19514__$1);
  var seq19514__$2 = cljs.core.next(seq19514__$1);
  var G__19517 = cljs.core.first(seq19514__$2);
  var seq19514__$3 = cljs.core.next(seq19514__$2);
  var G__19518 = cljs.core.first(seq19514__$3);
  var seq19514__$4 = cljs.core.next(seq19514__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__19515, G__19516, G__19517, G__19518, seq19514__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil() {
  var args19546 = [];
  var len__6622__auto___19565 = arguments.length;
  var i__6623__auto___19566 = 0;
  while (true) {
    if (i__6623__auto___19566 < len__6622__auto___19565) {
      args19546.push(arguments[i__6623__auto___19566]);
      var G__19567 = i__6623__auto___19566 + 1;
      i__6623__auto___19566 = G__19567;
      continue;
    } else {
    }
    break;
  }
  var G__19548 = args19546.length;
  switch(G__19548) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19546.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__19569 = null;
    var G__19569__1 = function(a) {
      var G__19549 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19549) : f.call(null, G__19549);
    };
    var G__19569__2 = function(a, b) {
      var G__19550 = a == null ? x : a;
      var G__19551 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19550, G__19551) : f.call(null, G__19550, G__19551);
    };
    var G__19569__3 = function(a, b, c) {
      var G__19552 = a == null ? x : a;
      var G__19553 = b;
      var G__19554 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19552, G__19553, G__19554) : f.call(null, G__19552, G__19553, G__19554);
    };
    var G__19569__4 = function() {
      var G__19570__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__19570 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__19571__i = 0, G__19571__a = new Array(arguments.length - 3);
          while (G__19571__i < G__19571__a.length) {
            G__19571__a[G__19571__i] = arguments[G__19571__i + 3];
            ++G__19571__i;
          }
          ds = new cljs.core.IndexedSeq(G__19571__a, 0);
        }
        return G__19570__delegate.call(this, a, b, c, ds);
      };
      G__19570.cljs$lang$maxFixedArity = 3;
      G__19570.cljs$lang$applyTo = function(arglist__19572) {
        var a = cljs.core.first(arglist__19572);
        arglist__19572 = cljs.core.next(arglist__19572);
        var b = cljs.core.first(arglist__19572);
        arglist__19572 = cljs.core.next(arglist__19572);
        var c = cljs.core.first(arglist__19572);
        var ds = cljs.core.rest(arglist__19572);
        return G__19570__delegate(a, b, c, ds);
      };
      G__19570.cljs$core$IFn$_invoke$arity$variadic = G__19570__delegate;
      return G__19570;
    }();
    G__19569 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__19569__1.call(this, a);
        case 2:
          return G__19569__2.call(this, a, b);
        case 3:
          return G__19569__3.call(this, a, b, c);
        default:
          var G__19573 = null;
          if (arguments.length > 3) {
            var G__19574__i = 0, G__19574__a = new Array(arguments.length - 3);
            while (G__19574__i < G__19574__a.length) {
              G__19574__a[G__19574__i] = arguments[G__19574__i + 3];
              ++G__19574__i;
            }
            G__19573 = new cljs.core.IndexedSeq(G__19574__a, 0);
          }
          return G__19569__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__19573);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19569.cljs$lang$maxFixedArity = 3;
    G__19569.cljs$lang$applyTo = G__19569__4.cljs$lang$applyTo;
    G__19569.cljs$core$IFn$_invoke$arity$1 = G__19569__1;
    G__19569.cljs$core$IFn$_invoke$arity$2 = G__19569__2;
    G__19569.cljs$core$IFn$_invoke$arity$3 = G__19569__3;
    G__19569.cljs$core$IFn$_invoke$arity$variadic = G__19569__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__19569;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__19575 = null;
    var G__19575__2 = function(a, b) {
      var G__19555 = a == null ? x : a;
      var G__19556 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19555, G__19556) : f.call(null, G__19555, G__19556);
    };
    var G__19575__3 = function(a, b, c) {
      var G__19557 = a == null ? x : a;
      var G__19558 = b == null ? y : b;
      var G__19559 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19557, G__19558, G__19559) : f.call(null, G__19557, G__19558, G__19559);
    };
    var G__19575__4 = function() {
      var G__19576__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__19576 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__19577__i = 0, G__19577__a = new Array(arguments.length - 3);
          while (G__19577__i < G__19577__a.length) {
            G__19577__a[G__19577__i] = arguments[G__19577__i + 3];
            ++G__19577__i;
          }
          ds = new cljs.core.IndexedSeq(G__19577__a, 0);
        }
        return G__19576__delegate.call(this, a, b, c, ds);
      };
      G__19576.cljs$lang$maxFixedArity = 3;
      G__19576.cljs$lang$applyTo = function(arglist__19578) {
        var a = cljs.core.first(arglist__19578);
        arglist__19578 = cljs.core.next(arglist__19578);
        var b = cljs.core.first(arglist__19578);
        arglist__19578 = cljs.core.next(arglist__19578);
        var c = cljs.core.first(arglist__19578);
        var ds = cljs.core.rest(arglist__19578);
        return G__19576__delegate(a, b, c, ds);
      };
      G__19576.cljs$core$IFn$_invoke$arity$variadic = G__19576__delegate;
      return G__19576;
    }();
    G__19575 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__19575__2.call(this, a, b);
        case 3:
          return G__19575__3.call(this, a, b, c);
        default:
          var G__19579 = null;
          if (arguments.length > 3) {
            var G__19580__i = 0, G__19580__a = new Array(arguments.length - 3);
            while (G__19580__i < G__19580__a.length) {
              G__19580__a[G__19580__i] = arguments[G__19580__i + 3];
              ++G__19580__i;
            }
            G__19579 = new cljs.core.IndexedSeq(G__19580__a, 0);
          }
          return G__19575__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__19579);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19575.cljs$lang$maxFixedArity = 3;
    G__19575.cljs$lang$applyTo = G__19575__4.cljs$lang$applyTo;
    G__19575.cljs$core$IFn$_invoke$arity$2 = G__19575__2;
    G__19575.cljs$core$IFn$_invoke$arity$3 = G__19575__3;
    G__19575.cljs$core$IFn$_invoke$arity$variadic = G__19575__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__19575;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__19581 = null;
    var G__19581__2 = function(a, b) {
      var G__19560 = a == null ? x : a;
      var G__19561 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19560, G__19561) : f.call(null, G__19560, G__19561);
    };
    var G__19581__3 = function(a, b, c) {
      var G__19562 = a == null ? x : a;
      var G__19563 = b == null ? y : b;
      var G__19564 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19562, G__19563, G__19564) : f.call(null, G__19562, G__19563, G__19564);
    };
    var G__19581__4 = function() {
      var G__19582__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__19582 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__19583__i = 0, G__19583__a = new Array(arguments.length - 3);
          while (G__19583__i < G__19583__a.length) {
            G__19583__a[G__19583__i] = arguments[G__19583__i + 3];
            ++G__19583__i;
          }
          ds = new cljs.core.IndexedSeq(G__19583__a, 0);
        }
        return G__19582__delegate.call(this, a, b, c, ds);
      };
      G__19582.cljs$lang$maxFixedArity = 3;
      G__19582.cljs$lang$applyTo = function(arglist__19584) {
        var a = cljs.core.first(arglist__19584);
        arglist__19584 = cljs.core.next(arglist__19584);
        var b = cljs.core.first(arglist__19584);
        arglist__19584 = cljs.core.next(arglist__19584);
        var c = cljs.core.first(arglist__19584);
        var ds = cljs.core.rest(arglist__19584);
        return G__19582__delegate(a, b, c, ds);
      };
      G__19582.cljs$core$IFn$_invoke$arity$variadic = G__19582__delegate;
      return G__19582;
    }();
    G__19581 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__19581__2.call(this, a, b);
        case 3:
          return G__19581__3.call(this, a, b, c);
        default:
          var G__19585 = null;
          if (arguments.length > 3) {
            var G__19586__i = 0, G__19586__a = new Array(arguments.length - 3);
            while (G__19586__i < G__19586__a.length) {
              G__19586__a[G__19586__i] = arguments[G__19586__i + 3];
              ++G__19586__i;
            }
            G__19585 = new cljs.core.IndexedSeq(G__19586__a, 0);
          }
          return G__19581__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__19585);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19581.cljs$lang$maxFixedArity = 3;
    G__19581.cljs$lang$applyTo = G__19581__4.cljs$lang$applyTo;
    G__19581.cljs$core$IFn$_invoke$arity$2 = G__19581__2;
    G__19581.cljs$core$IFn$_invoke$arity$3 = G__19581__3;
    G__19581.cljs$core$IFn$_invoke$arity$variadic = G__19581__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__19581;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed() {
  var args19587 = [];
  var len__6622__auto___19620 = arguments.length;
  var i__6623__auto___19621 = 0;
  while (true) {
    if (i__6623__auto___19621 < len__6622__auto___19620) {
      args19587.push(arguments[i__6623__auto___19621]);
      var G__19622 = i__6623__auto___19621 + 1;
      i__6623__auto___19621 = G__19622;
      continue;
    } else {
    }
    break;
  }
  var G__19589 = args19587.length;
  switch(G__19589) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19587.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1);
    return function(i) {
      return function() {
        var G__19624 = null;
        var G__19624__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__19624__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__19624__2 = function(result, input) {
          var G__19592 = result;
          var G__19593 = function() {
            var G__19594 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__19595 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19594, G__19595) : f.call(null, G__19594, G__19595);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19592, G__19593) : rf.call(null, G__19592, G__19593);
        };
        G__19624 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19624__0.call(this);
            case 1:
              return G__19624__1.call(this, result);
            case 2:
              return G__19624__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19624.cljs$core$IFn$_invoke$arity$0 = G__19624__0;
        G__19624.cljs$core$IFn$_invoke$arity$1 = G__19624__1;
        G__19624.cljs$core$IFn$_invoke$arity$2 = G__19624__2;
        return G__19624;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__6467__auto___19625 = size;
          var i_19626 = 0;
          while (true) {
            if (i_19626 < n__6467__auto___19625) {
              cljs.core.chunk_append(b, function() {
                var G__19616 = idx + i_19626;
                var G__19617 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19626);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19616, G__19617) : f.call(null, G__19616, G__19617);
              }());
              var G__19627 = i_19626 + 1;
              i_19626 = G__19627;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__19618 = idx;
            var G__19619 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19618, G__19619) : f.call(null, G__19618, G__19619);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep() {
  var args19628 = [];
  var len__6622__auto___19633 = arguments.length;
  var i__6623__auto___19634 = 0;
  while (true) {
    if (i__6623__auto___19634 < len__6622__auto___19633) {
      args19628.push(arguments[i__6623__auto___19634]);
      var G__19635 = i__6623__auto___19634 + 1;
      i__6623__auto___19634 = G__19635;
      continue;
    } else {
    }
    break;
  }
  var G__19630 = args19628.length;
  switch(G__19630) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19628.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__19637 = null;
      var G__19637__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__19637__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__19637__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__19637 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__19637__0.call(this);
          case 1:
            return G__19637__1.call(this, result);
          case 2:
            return G__19637__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19637.cljs$core$IFn$_invoke$arity$0 = G__19637__0;
      G__19637.cljs$core$IFn$_invoke$arity$1 = G__19637__1;
      G__19637.cljs$core$IFn$_invoke$arity$2 = G__19637__2;
      return G__19637;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__6467__auto___19638 = size;
        var i_19639 = 0;
        while (true) {
          if (i_19639 < n__6467__auto___19638) {
            var x_19640 = function() {
              var G__19631 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19639);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19631) : f.call(null, G__19631);
            }();
            if (x_19640 == null) {
            } else {
              cljs.core.chunk_append(b, x_19640);
            }
            var G__19641 = i_19639 + 1;
            i_19639 = G__19641;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__19632 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19632) : f.call(null, G__19632);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__19642 = cljs.core.seq(self__.watches);
  var chunk__19643 = null;
  var count__19644 = 0;
  var i__19645 = 0;
  while (true) {
    if (i__19645 < count__19644) {
      var vec__19646 = chunk__19643.cljs$core$IIndexed$_nth$arity$2(null, i__19645);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19646, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19646, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__19648 = seq__19642;
      var G__19649 = chunk__19643;
      var G__19650 = count__19644;
      var G__19651 = i__19645 + 1;
      seq__19642 = G__19648;
      chunk__19643 = G__19649;
      count__19644 = G__19650;
      i__19645 = G__19651;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__19642);
      if (temp__4425__auto__) {
        var seq__19642__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__19642__$1)) {
          var c__6367__auto__ = cljs.core.chunk_first(seq__19642__$1);
          var G__19652 = cljs.core.chunk_rest(seq__19642__$1);
          var G__19653 = c__6367__auto__;
          var G__19654 = cljs.core.count(c__6367__auto__);
          var G__19655 = 0;
          seq__19642 = G__19652;
          chunk__19643 = G__19653;
          count__19644 = G__19654;
          i__19645 = G__19655;
          continue;
        } else {
          var vec__19647 = cljs.core.first(seq__19642__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19647, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19647, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__19656 = cljs.core.next(seq__19642__$1);
          var G__19657 = null;
          var G__19658 = 0;
          var G__19659 = 0;
          seq__19642 = G__19656;
          chunk__19643 = G__19657;
          count__19644 = G__19658;
          i__19645 = G__19659;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom() {
  var args19660 = [];
  var len__6622__auto___19668 = arguments.length;
  var i__6623__auto___19669 = 0;
  while (true) {
    if (i__6623__auto___19669 < len__6622__auto___19668) {
      args19660.push(arguments[i__6623__auto___19669]);
      var G__19670 = i__6623__auto___19669 + 1;
      i__6623__auto___19669 = G__19670;
      continue;
    } else {
    }
    break;
  }
  var G__19664 = args19660.length;
  switch(G__19664) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19660.slice(1), 0);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__6641__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__19665) {
  var map__19666 = p__19665;
  var map__19666__$1 = (!(map__19666 == null) ? map__19666.cljs$lang$protocol_mask$partition0$ & 64 || map__19666.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__19666) : map__19666;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19666__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19666__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq19661) {
  var G__19662 = cljs.core.first(seq19661);
  var seq19661__$1 = cljs.core.next(seq19661);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__19662, seq19661__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__19673 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__19673) : cljs.core.pr_str.call(null, G__19673);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_() {
  var args19674 = [];
  var len__6622__auto___19688 = arguments.length;
  var i__6623__auto___19689 = 0;
  while (true) {
    if (i__6623__auto___19689 < len__6622__auto___19688) {
      args19674.push(arguments[i__6623__auto___19689]);
      var G__19690 = i__6623__auto___19689 + 1;
      i__6623__auto___19689 = G__19690;
      continue;
    } else {
    }
    break;
  }
  var G__19681 = args19674.length;
  switch(G__19681) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19674.slice(4), 0);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__6641__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__19682 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19682) : f.call(null, G__19682);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__19683 = a.state;
      var G__19684 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19683, G__19684) : f.call(null, G__19683, G__19684);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__19685 = a.state;
      var G__19686 = x;
      var G__19687 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19685, G__19686, G__19687) : f.call(null, G__19685, G__19686, G__19687);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq19675) {
  var G__19676 = cljs.core.first(seq19675);
  var seq19675__$1 = cljs.core.next(seq19675);
  var G__19677 = cljs.core.first(seq19675__$1);
  var seq19675__$2 = cljs.core.next(seq19675__$1);
  var G__19678 = cljs.core.first(seq19675__$2);
  var seq19675__$3 = cljs.core.next(seq19675__$2);
  var G__19679 = cljs.core.first(seq19675__$3);
  var seq19675__$4 = cljs.core.next(seq19675__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__19676, G__19677, G__19678, G__19679, seq19675__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed() {
  var args19692 = [];
  var len__6622__auto___19723 = arguments.length;
  var i__6623__auto___19724 = 0;
  while (true) {
    if (i__6623__auto___19724 < len__6622__auto___19723) {
      args19692.push(arguments[i__6623__auto___19724]);
      var G__19725 = i__6623__auto___19724 + 1;
      i__6623__auto___19724 = G__19725;
      continue;
    } else {
    }
    break;
  }
  var G__19694 = args19692.length;
  switch(G__19694) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19692.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__19727 = null;
        var G__19727__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__19727__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__19727__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__19727 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19727__0.call(this);
            case 1:
              return G__19727__1.call(this, result);
            case 2:
              return G__19727__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19727.cljs$core$IFn$_invoke$arity$0 = G__19727__0;
        G__19727.cljs$core$IFn$_invoke$arity$1 = G__19727__1;
        G__19727.cljs$core$IFn$_invoke$arity$2 = G__19727__2;
        return G__19727;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__6467__auto___19728 = size;
          var i_19729 = 0;
          while (true) {
            if (i_19729 < n__6467__auto___19728) {
              var x_19730 = function() {
                var G__19719 = idx + i_19729;
                var G__19720 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19729);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19719, G__19720) : f.call(null, G__19719, G__19720);
              }();
              if (x_19730 == null) {
              } else {
                cljs.core.chunk_append(b, x_19730);
              }
              var G__19731 = i_19729 + 1;
              i_19729 = G__19731;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__19721 = idx;
            var G__19722 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19721, G__19722) : f.call(null, G__19721, G__19722);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred() {
  var args19738 = [];
  var len__6622__auto___19745 = arguments.length;
  var i__6623__auto___19746 = 0;
  while (true) {
    if (i__6623__auto___19746 < len__6622__auto___19745) {
      args19738.push(arguments[i__6623__auto___19746]);
      var G__19747 = i__6623__auto___19746 + 1;
      i__6623__auto___19746 = G__19747;
      continue;
    } else {
    }
    break;
  }
  var G__19744 = args19738.length;
  switch(G__19744) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19738.slice(3), 0);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__6641__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__5571__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__5571__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__5571__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__5571__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__5571__auto__)) {
          var and__5571__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__5571__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__5571__auto____$1;
          }
        } else {
          return and__5571__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__19749__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__5571__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__5571__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__5571__auto__;
          }
        }());
      };
      var G__19749 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19750__i = 0, G__19750__a = new Array(arguments.length - 3);
          while (G__19750__i < G__19750__a.length) {
            G__19750__a[G__19750__i] = arguments[G__19750__i + 3];
            ++G__19750__i;
          }
          args = new cljs.core.IndexedSeq(G__19750__a, 0);
        }
        return G__19749__delegate.call(this, x, y, z, args);
      };
      G__19749.cljs$lang$maxFixedArity = 3;
      G__19749.cljs$lang$applyTo = function(arglist__19751) {
        var x = cljs.core.first(arglist__19751);
        arglist__19751 = cljs.core.next(arglist__19751);
        var y = cljs.core.first(arglist__19751);
        arglist__19751 = cljs.core.next(arglist__19751);
        var z = cljs.core.first(arglist__19751);
        var args = cljs.core.rest(arglist__19751);
        return G__19749__delegate(x, y, z, args);
      };
      G__19749.cljs$core$IFn$_invoke$arity$variadic = G__19749__delegate;
      return G__19749;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__19752 = null;
          if (arguments.length > 3) {
            var G__19753__i = 0, G__19753__a = new Array(arguments.length - 3);
            while (G__19753__i < G__19753__a.length) {
              G__19753__a[G__19753__i] = arguments[G__19753__i + 3];
              ++G__19753__i;
            }
            G__19752 = new cljs.core.IndexedSeq(G__19753__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19752);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__5571__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__5571__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__5571__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__5571__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__5571__auto__)) {
          var and__5571__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__5571__auto____$1)) {
            var and__5571__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__5571__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__5571__auto____$2;
            }
          } else {
            return and__5571__auto____$1;
          }
        } else {
          return and__5571__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__5571__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__5571__auto__)) {
          var and__5571__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__5571__auto____$1)) {
            var and__5571__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__5571__auto____$2)) {
              var and__5571__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__5571__auto____$3)) {
                var and__5571__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__5571__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__5571__auto____$4;
                }
              } else {
                return and__5571__auto____$3;
              }
            } else {
              return and__5571__auto____$2;
            }
          } else {
            return and__5571__auto____$1;
          }
        } else {
          return and__5571__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__19754__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__5571__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__5571__auto__)) {
            return cljs.core.every_QMARK_(function(and__5571__auto__) {
              return function(p1__19732_SHARP_) {
                var and__5571__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__19732_SHARP_) : p1.call(null, p1__19732_SHARP_);
                if (cljs.core.truth_(and__5571__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__19732_SHARP_) : p2.call(null, p1__19732_SHARP_);
                } else {
                  return and__5571__auto____$1;
                }
              };
            }(and__5571__auto__), args);
          } else {
            return and__5571__auto__;
          }
        }());
      };
      var G__19754 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19755__i = 0, G__19755__a = new Array(arguments.length - 3);
          while (G__19755__i < G__19755__a.length) {
            G__19755__a[G__19755__i] = arguments[G__19755__i + 3];
            ++G__19755__i;
          }
          args = new cljs.core.IndexedSeq(G__19755__a, 0);
        }
        return G__19754__delegate.call(this, x, y, z, args);
      };
      G__19754.cljs$lang$maxFixedArity = 3;
      G__19754.cljs$lang$applyTo = function(arglist__19756) {
        var x = cljs.core.first(arglist__19756);
        arglist__19756 = cljs.core.next(arglist__19756);
        var y = cljs.core.first(arglist__19756);
        arglist__19756 = cljs.core.next(arglist__19756);
        var z = cljs.core.first(arglist__19756);
        var args = cljs.core.rest(arglist__19756);
        return G__19754__delegate(x, y, z, args);
      };
      G__19754.cljs$core$IFn$_invoke$arity$variadic = G__19754__delegate;
      return G__19754;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__19757 = null;
          if (arguments.length > 3) {
            var G__19758__i = 0, G__19758__a = new Array(arguments.length - 3);
            while (G__19758__i < G__19758__a.length) {
              G__19758__a[G__19758__i] = arguments[G__19758__i + 3];
              ++G__19758__i;
            }
            G__19757 = new cljs.core.IndexedSeq(G__19758__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19757);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__5571__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__5571__auto__)) {
          var and__5571__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__5571__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__5571__auto____$1;
          }
        } else {
          return and__5571__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__5571__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__5571__auto__)) {
          var and__5571__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__5571__auto____$1)) {
            var and__5571__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__5571__auto____$2)) {
              var and__5571__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__5571__auto____$3)) {
                var and__5571__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__5571__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__5571__auto____$4;
                }
              } else {
                return and__5571__auto____$3;
              }
            } else {
              return and__5571__auto____$2;
            }
          } else {
            return and__5571__auto____$1;
          }
        } else {
          return and__5571__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__5571__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__5571__auto__)) {
          var and__5571__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__5571__auto____$1)) {
            var and__5571__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__5571__auto____$2)) {
              var and__5571__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__5571__auto____$3)) {
                var and__5571__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__5571__auto____$4)) {
                  var and__5571__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__5571__auto____$5)) {
                    var and__5571__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__5571__auto____$6)) {
                      var and__5571__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__5571__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__5571__auto____$7;
                      }
                    } else {
                      return and__5571__auto____$6;
                    }
                  } else {
                    return and__5571__auto____$5;
                  }
                } else {
                  return and__5571__auto____$4;
                }
              } else {
                return and__5571__auto____$3;
              }
            } else {
              return and__5571__auto____$2;
            }
          } else {
            return and__5571__auto____$1;
          }
        } else {
          return and__5571__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__19759__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__5571__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__5571__auto__)) {
            return cljs.core.every_QMARK_(function(and__5571__auto__) {
              return function(p1__19733_SHARP_) {
                var and__5571__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__19733_SHARP_) : p1.call(null, p1__19733_SHARP_);
                if (cljs.core.truth_(and__5571__auto____$1)) {
                  var and__5571__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__19733_SHARP_) : p2.call(null, p1__19733_SHARP_);
                  if (cljs.core.truth_(and__5571__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__19733_SHARP_) : p3.call(null, p1__19733_SHARP_);
                  } else {
                    return and__5571__auto____$2;
                  }
                } else {
                  return and__5571__auto____$1;
                }
              };
            }(and__5571__auto__), args);
          } else {
            return and__5571__auto__;
          }
        }());
      };
      var G__19759 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19760__i = 0, G__19760__a = new Array(arguments.length - 3);
          while (G__19760__i < G__19760__a.length) {
            G__19760__a[G__19760__i] = arguments[G__19760__i + 3];
            ++G__19760__i;
          }
          args = new cljs.core.IndexedSeq(G__19760__a, 0);
        }
        return G__19759__delegate.call(this, x, y, z, args);
      };
      G__19759.cljs$lang$maxFixedArity = 3;
      G__19759.cljs$lang$applyTo = function(arglist__19761) {
        var x = cljs.core.first(arglist__19761);
        arglist__19761 = cljs.core.next(arglist__19761);
        var y = cljs.core.first(arglist__19761);
        arglist__19761 = cljs.core.next(arglist__19761);
        var z = cljs.core.first(arglist__19761);
        var args = cljs.core.rest(arglist__19761);
        return G__19759__delegate(x, y, z, args);
      };
      G__19759.cljs$core$IFn$_invoke$arity$variadic = G__19759__delegate;
      return G__19759;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__19762 = null;
          if (arguments.length > 3) {
            var G__19763__i = 0, G__19763__a = new Array(arguments.length - 3);
            while (G__19763__i < G__19763__a.length) {
              G__19763__a[G__19763__i] = arguments[G__19763__i + 3];
              ++G__19763__i;
            }
            G__19762 = new cljs.core.IndexedSeq(G__19763__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19762);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__19734_SHARP_) {
            return p1__19734_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19734_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__19734_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__19735_SHARP_) {
            var and__5571__auto__ = p1__19735_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19735_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__19735_SHARP_.call(null, x);
            if (cljs.core.truth_(and__5571__auto__)) {
              return p1__19735_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19735_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__19735_SHARP_.call(null, y);
            } else {
              return and__5571__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__19736_SHARP_) {
            var and__5571__auto__ = p1__19736_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19736_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__19736_SHARP_.call(null, x);
            if (cljs.core.truth_(and__5571__auto__)) {
              var and__5571__auto____$1 = p1__19736_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19736_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__19736_SHARP_.call(null, y);
              if (cljs.core.truth_(and__5571__auto____$1)) {
                return p1__19736_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19736_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__19736_SHARP_.call(null, z);
              } else {
                return and__5571__auto____$1;
              }
            } else {
              return and__5571__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__19764__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__5571__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__5571__auto__)) {
              return cljs.core.every_QMARK_(function(and__5571__auto__, ps__$1) {
                return function(p1__19737_SHARP_) {
                  return cljs.core.every_QMARK_(p1__19737_SHARP_, args);
                };
              }(and__5571__auto__, ps__$1), ps__$1);
            } else {
              return and__5571__auto__;
            }
          }());
        };
        var G__19764 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19765__i = 0, G__19765__a = new Array(arguments.length - 3);
            while (G__19765__i < G__19765__a.length) {
              G__19765__a[G__19765__i] = arguments[G__19765__i + 3];
              ++G__19765__i;
            }
            args = new cljs.core.IndexedSeq(G__19765__a, 0);
          }
          return G__19764__delegate.call(this, x, y, z, args);
        };
        G__19764.cljs$lang$maxFixedArity = 3;
        G__19764.cljs$lang$applyTo = function(arglist__19766) {
          var x = cljs.core.first(arglist__19766);
          arglist__19766 = cljs.core.next(arglist__19766);
          var y = cljs.core.first(arglist__19766);
          arglist__19766 = cljs.core.next(arglist__19766);
          var z = cljs.core.first(arglist__19766);
          var args = cljs.core.rest(arglist__19766);
          return G__19764__delegate(x, y, z, args);
        };
        G__19764.cljs$core$IFn$_invoke$arity$variadic = G__19764__delegate;
        return G__19764;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__19767 = null;
            if (arguments.length > 3) {
              var G__19768__i = 0, G__19768__a = new Array(arguments.length - 3);
              while (G__19768__i < G__19768__a.length) {
                G__19768__a[G__19768__i] = arguments[G__19768__i + 3];
                ++G__19768__i;
              }
              G__19767 = new cljs.core.IndexedSeq(G__19768__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19767);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq19739) {
  var G__19740 = cljs.core.first(seq19739);
  var seq19739__$1 = cljs.core.next(seq19739);
  var G__19741 = cljs.core.first(seq19739__$1);
  var seq19739__$2 = cljs.core.next(seq19739__$1);
  var G__19742 = cljs.core.first(seq19739__$2);
  var seq19739__$3 = cljs.core.next(seq19739__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__19740, G__19741, G__19742, seq19739__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn() {
  var args19775 = [];
  var len__6622__auto___19782 = arguments.length;
  var i__6623__auto___19783 = 0;
  while (true) {
    if (i__6623__auto___19783 < len__6622__auto___19782) {
      args19775.push(arguments[i__6623__auto___19783]);
      var G__19784 = i__6623__auto___19783 + 1;
      i__6623__auto___19783 = G__19784;
      continue;
    } else {
    }
    break;
  }
  var G__19781 = args19775.length;
  switch(G__19781) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19775.slice(3), 0);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__6641__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__5583__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__5583__auto__)) {
        return or__5583__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__5583__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__5583__auto__)) {
        return or__5583__auto__;
      } else {
        var or__5583__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__5583__auto____$1)) {
          return or__5583__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__19786__delegate = function(x, y, z, args) {
        var or__5583__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__5583__auto__)) {
          return or__5583__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__19786 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19787__i = 0, G__19787__a = new Array(arguments.length - 3);
          while (G__19787__i < G__19787__a.length) {
            G__19787__a[G__19787__i] = arguments[G__19787__i + 3];
            ++G__19787__i;
          }
          args = new cljs.core.IndexedSeq(G__19787__a, 0);
        }
        return G__19786__delegate.call(this, x, y, z, args);
      };
      G__19786.cljs$lang$maxFixedArity = 3;
      G__19786.cljs$lang$applyTo = function(arglist__19788) {
        var x = cljs.core.first(arglist__19788);
        arglist__19788 = cljs.core.next(arglist__19788);
        var y = cljs.core.first(arglist__19788);
        arglist__19788 = cljs.core.next(arglist__19788);
        var z = cljs.core.first(arglist__19788);
        var args = cljs.core.rest(arglist__19788);
        return G__19786__delegate(x, y, z, args);
      };
      G__19786.cljs$core$IFn$_invoke$arity$variadic = G__19786__delegate;
      return G__19786;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__19789 = null;
          if (arguments.length > 3) {
            var G__19790__i = 0, G__19790__a = new Array(arguments.length - 3);
            while (G__19790__i < G__19790__a.length) {
              G__19790__a[G__19790__i] = arguments[G__19790__i + 3];
              ++G__19790__i;
            }
            G__19789 = new cljs.core.IndexedSeq(G__19790__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19789);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__5583__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__5583__auto__)) {
        return or__5583__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__5583__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__5583__auto__)) {
        return or__5583__auto__;
      } else {
        var or__5583__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__5583__auto____$1)) {
          return or__5583__auto____$1;
        } else {
          var or__5583__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__5583__auto____$2)) {
            return or__5583__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__5583__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__5583__auto__)) {
        return or__5583__auto__;
      } else {
        var or__5583__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__5583__auto____$1)) {
          return or__5583__auto____$1;
        } else {
          var or__5583__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__5583__auto____$2)) {
            return or__5583__auto____$2;
          } else {
            var or__5583__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__5583__auto____$3)) {
              return or__5583__auto____$3;
            } else {
              var or__5583__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__5583__auto____$4)) {
                return or__5583__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__19791__delegate = function(x, y, z, args) {
        var or__5583__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__5583__auto__)) {
          return or__5583__auto__;
        } else {
          return cljs.core.some(function(or__5583__auto__) {
            return function(p1__19769_SHARP_) {
              var or__5583__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__19769_SHARP_) : p1.call(null, p1__19769_SHARP_);
              if (cljs.core.truth_(or__5583__auto____$1)) {
                return or__5583__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__19769_SHARP_) : p2.call(null, p1__19769_SHARP_);
              }
            };
          }(or__5583__auto__), args);
        }
      };
      var G__19791 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19792__i = 0, G__19792__a = new Array(arguments.length - 3);
          while (G__19792__i < G__19792__a.length) {
            G__19792__a[G__19792__i] = arguments[G__19792__i + 3];
            ++G__19792__i;
          }
          args = new cljs.core.IndexedSeq(G__19792__a, 0);
        }
        return G__19791__delegate.call(this, x, y, z, args);
      };
      G__19791.cljs$lang$maxFixedArity = 3;
      G__19791.cljs$lang$applyTo = function(arglist__19793) {
        var x = cljs.core.first(arglist__19793);
        arglist__19793 = cljs.core.next(arglist__19793);
        var y = cljs.core.first(arglist__19793);
        arglist__19793 = cljs.core.next(arglist__19793);
        var z = cljs.core.first(arglist__19793);
        var args = cljs.core.rest(arglist__19793);
        return G__19791__delegate(x, y, z, args);
      };
      G__19791.cljs$core$IFn$_invoke$arity$variadic = G__19791__delegate;
      return G__19791;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__19794 = null;
          if (arguments.length > 3) {
            var G__19795__i = 0, G__19795__a = new Array(arguments.length - 3);
            while (G__19795__i < G__19795__a.length) {
              G__19795__a[G__19795__i] = arguments[G__19795__i + 3];
              ++G__19795__i;
            }
            G__19794 = new cljs.core.IndexedSeq(G__19795__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19794);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__5583__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__5583__auto__)) {
        return or__5583__auto__;
      } else {
        var or__5583__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__5583__auto____$1)) {
          return or__5583__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__5583__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__5583__auto__)) {
        return or__5583__auto__;
      } else {
        var or__5583__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__5583__auto____$1)) {
          return or__5583__auto____$1;
        } else {
          var or__5583__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__5583__auto____$2)) {
            return or__5583__auto____$2;
          } else {
            var or__5583__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__5583__auto____$3)) {
              return or__5583__auto____$3;
            } else {
              var or__5583__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__5583__auto____$4)) {
                return or__5583__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__5583__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__5583__auto__)) {
        return or__5583__auto__;
      } else {
        var or__5583__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__5583__auto____$1)) {
          return or__5583__auto____$1;
        } else {
          var or__5583__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__5583__auto____$2)) {
            return or__5583__auto____$2;
          } else {
            var or__5583__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__5583__auto____$3)) {
              return or__5583__auto____$3;
            } else {
              var or__5583__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__5583__auto____$4)) {
                return or__5583__auto____$4;
              } else {
                var or__5583__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__5583__auto____$5)) {
                  return or__5583__auto____$5;
                } else {
                  var or__5583__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__5583__auto____$6)) {
                    return or__5583__auto____$6;
                  } else {
                    var or__5583__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__5583__auto____$7)) {
                      return or__5583__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__19796__delegate = function(x, y, z, args) {
        var or__5583__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__5583__auto__)) {
          return or__5583__auto__;
        } else {
          return cljs.core.some(function(or__5583__auto__) {
            return function(p1__19770_SHARP_) {
              var or__5583__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__19770_SHARP_) : p1.call(null, p1__19770_SHARP_);
              if (cljs.core.truth_(or__5583__auto____$1)) {
                return or__5583__auto____$1;
              } else {
                var or__5583__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__19770_SHARP_) : p2.call(null, p1__19770_SHARP_);
                if (cljs.core.truth_(or__5583__auto____$2)) {
                  return or__5583__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__19770_SHARP_) : p3.call(null, p1__19770_SHARP_);
                }
              }
            };
          }(or__5583__auto__), args);
        }
      };
      var G__19796 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__19797__i = 0, G__19797__a = new Array(arguments.length - 3);
          while (G__19797__i < G__19797__a.length) {
            G__19797__a[G__19797__i] = arguments[G__19797__i + 3];
            ++G__19797__i;
          }
          args = new cljs.core.IndexedSeq(G__19797__a, 0);
        }
        return G__19796__delegate.call(this, x, y, z, args);
      };
      G__19796.cljs$lang$maxFixedArity = 3;
      G__19796.cljs$lang$applyTo = function(arglist__19798) {
        var x = cljs.core.first(arglist__19798);
        arglist__19798 = cljs.core.next(arglist__19798);
        var y = cljs.core.first(arglist__19798);
        arglist__19798 = cljs.core.next(arglist__19798);
        var z = cljs.core.first(arglist__19798);
        var args = cljs.core.rest(arglist__19798);
        return G__19796__delegate(x, y, z, args);
      };
      G__19796.cljs$core$IFn$_invoke$arity$variadic = G__19796__delegate;
      return G__19796;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__19799 = null;
          if (arguments.length > 3) {
            var G__19800__i = 0, G__19800__a = new Array(arguments.length - 3);
            while (G__19800__i < G__19800__a.length) {
              G__19800__a[G__19800__i] = arguments[G__19800__i + 3];
              ++G__19800__i;
            }
            G__19799 = new cljs.core.IndexedSeq(G__19800__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19799);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__19771_SHARP_) {
            return p1__19771_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19771_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__19771_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__19772_SHARP_) {
            var or__5583__auto__ = p1__19772_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19772_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__19772_SHARP_.call(null, x);
            if (cljs.core.truth_(or__5583__auto__)) {
              return or__5583__auto__;
            } else {
              return p1__19772_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19772_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__19772_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__19773_SHARP_) {
            var or__5583__auto__ = p1__19773_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19773_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__19773_SHARP_.call(null, x);
            if (cljs.core.truth_(or__5583__auto__)) {
              return or__5583__auto__;
            } else {
              var or__5583__auto____$1 = p1__19773_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19773_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__19773_SHARP_.call(null, y);
              if (cljs.core.truth_(or__5583__auto____$1)) {
                return or__5583__auto____$1;
              } else {
                return p1__19773_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19773_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__19773_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__19801__delegate = function(x, y, z, args) {
          var or__5583__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__5583__auto__)) {
            return or__5583__auto__;
          } else {
            return cljs.core.some(function(or__5583__auto__, ps__$1) {
              return function(p1__19774_SHARP_) {
                return cljs.core.some(p1__19774_SHARP_, args);
              };
            }(or__5583__auto__, ps__$1), ps__$1);
          }
        };
        var G__19801 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19802__i = 0, G__19802__a = new Array(arguments.length - 3);
            while (G__19802__i < G__19802__a.length) {
              G__19802__a[G__19802__i] = arguments[G__19802__i + 3];
              ++G__19802__i;
            }
            args = new cljs.core.IndexedSeq(G__19802__a, 0);
          }
          return G__19801__delegate.call(this, x, y, z, args);
        };
        G__19801.cljs$lang$maxFixedArity = 3;
        G__19801.cljs$lang$applyTo = function(arglist__19803) {
          var x = cljs.core.first(arglist__19803);
          arglist__19803 = cljs.core.next(arglist__19803);
          var y = cljs.core.first(arglist__19803);
          arglist__19803 = cljs.core.next(arglist__19803);
          var z = cljs.core.first(arglist__19803);
          var args = cljs.core.rest(arglist__19803);
          return G__19801__delegate(x, y, z, args);
        };
        G__19801.cljs$core$IFn$_invoke$arity$variadic = G__19801__delegate;
        return G__19801;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__19804 = null;
            if (arguments.length > 3) {
              var G__19805__i = 0, G__19805__a = new Array(arguments.length - 3);
              while (G__19805__i < G__19805__a.length) {
                G__19805__a[G__19805__i] = arguments[G__19805__i + 3];
                ++G__19805__i;
              }
              G__19804 = new cljs.core.IndexedSeq(G__19805__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19804);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq19776) {
  var G__19777 = cljs.core.first(seq19776);
  var seq19776__$1 = cljs.core.next(seq19776);
  var G__19778 = cljs.core.first(seq19776__$1);
  var seq19776__$2 = cljs.core.next(seq19776__$1);
  var G__19779 = cljs.core.first(seq19776__$2);
  var seq19776__$3 = cljs.core.next(seq19776__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__19777, G__19778, G__19779, seq19776__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map() {
  var args19807 = [];
  var len__6622__auto___19827 = arguments.length;
  var i__6623__auto___19828 = 0;
  while (true) {
    if (i__6623__auto___19828 < len__6622__auto___19827) {
      args19807.push(arguments[i__6623__auto___19828]);
      var G__19829 = i__6623__auto___19828 + 1;
      i__6623__auto___19828 = G__19829;
      continue;
    } else {
    }
    break;
  }
  var G__19814 = args19807.length;
  switch(G__19814) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19807.slice(4), 0);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__6641__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__19831 = null;
      var G__19831__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__19831__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__19831__2 = function(result, input) {
        var G__19815 = result;
        var G__19816 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19815, G__19816) : rf.call(null, G__19815, G__19816);
      };
      var G__19831__3 = function() {
        var G__19832__delegate = function(result, input, inputs) {
          var G__19817 = result;
          var G__19818 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19817, G__19818) : rf.call(null, G__19817, G__19818);
        };
        var G__19832 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__19833__i = 0, G__19833__a = new Array(arguments.length - 2);
            while (G__19833__i < G__19833__a.length) {
              G__19833__a[G__19833__i] = arguments[G__19833__i + 2];
              ++G__19833__i;
            }
            inputs = new cljs.core.IndexedSeq(G__19833__a, 0);
          }
          return G__19832__delegate.call(this, result, input, inputs);
        };
        G__19832.cljs$lang$maxFixedArity = 2;
        G__19832.cljs$lang$applyTo = function(arglist__19834) {
          var result = cljs.core.first(arglist__19834);
          arglist__19834 = cljs.core.next(arglist__19834);
          var input = cljs.core.first(arglist__19834);
          var inputs = cljs.core.rest(arglist__19834);
          return G__19832__delegate(result, input, inputs);
        };
        G__19832.cljs$core$IFn$_invoke$arity$variadic = G__19832__delegate;
        return G__19832;
      }();
      G__19831 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__19831__0.call(this);
          case 1:
            return G__19831__1.call(this, result);
          case 2:
            return G__19831__2.call(this, result, input);
          default:
            var G__19835 = null;
            if (arguments.length > 2) {
              var G__19836__i = 0, G__19836__a = new Array(arguments.length - 2);
              while (G__19836__i < G__19836__a.length) {
                G__19836__a[G__19836__i] = arguments[G__19836__i + 2];
                ++G__19836__i;
              }
              G__19835 = new cljs.core.IndexedSeq(G__19836__a, 0);
            }
            return G__19831__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__19835);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19831.cljs$lang$maxFixedArity = 2;
      G__19831.cljs$lang$applyTo = G__19831__3.cljs$lang$applyTo;
      G__19831.cljs$core$IFn$_invoke$arity$0 = G__19831__0;
      G__19831.cljs$core$IFn$_invoke$arity$1 = G__19831__1;
      G__19831.cljs$core$IFn$_invoke$arity$2 = G__19831__2;
      G__19831.cljs$core$IFn$_invoke$arity$variadic = G__19831__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__19831;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__6467__auto___19837 = size;
        var i_19838 = 0;
        while (true) {
          if (i_19838 < n__6467__auto___19837) {
            cljs.core.chunk_append(b, function() {
              var G__19819 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19838);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19819) : f.call(null, G__19819);
            }());
            var G__19839 = i_19838 + 1;
            i_19838 = G__19839;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__19820 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19820) : f.call(null, G__19820);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__19821 = cljs.core.first(s1);
        var G__19822 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19821, G__19822) : f.call(null, G__19821, G__19822);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__19823 = cljs.core.first(s1);
        var G__19824 = cljs.core.first(s2);
        var G__19825 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19823, G__19824, G__19825) : f.call(null, G__19823, G__19824, G__19825);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__19806_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__19806_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq19808) {
  var G__19809 = cljs.core.first(seq19808);
  var seq19808__$1 = cljs.core.next(seq19808);
  var G__19810 = cljs.core.first(seq19808__$1);
  var seq19808__$2 = cljs.core.next(seq19808__$1);
  var G__19811 = cljs.core.first(seq19808__$2);
  var seq19808__$3 = cljs.core.next(seq19808__$2);
  var G__19812 = cljs.core.first(seq19808__$3);
  var seq19808__$4 = cljs.core.next(seq19808__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__19809, G__19810, G__19811, G__19812, seq19808__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take() {
  var args19840 = [];
  var len__6622__auto___19845 = arguments.length;
  var i__6623__auto___19846 = 0;
  while (true) {
    if (i__6623__auto___19846 < len__6622__auto___19845) {
      args19840.push(arguments[i__6623__auto___19846]);
      var G__19847 = i__6623__auto___19846 + 1;
      i__6623__auto___19846 = G__19847;
      continue;
    } else {
    }
    break;
  }
  var G__19842 = args19840.length;
  switch(G__19842) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19840.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__19843 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__19843) : cljs.core.pr_str.call(null, G__19843);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__19849 = null;
        var G__19849__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__19849__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__19849__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__19849 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19849__0.call(this);
            case 1:
              return G__19849__1.call(this, result);
            case 2:
              return G__19849__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19849.cljs$core$IFn$_invoke$arity$0 = G__19849__0;
        G__19849.cljs$core$IFn$_invoke$arity$1 = G__19849__1;
        G__19849.cljs$core$IFn$_invoke$arity$2 = G__19849__2;
        return G__19849;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__19844 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__19844) : cljs.core.pr_str.call(null, G__19844);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4425__auto__ = cljs.core.seq(coll);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop() {
  var args19850 = [];
  var len__6622__auto___19855 = arguments.length;
  var i__6623__auto___19856 = 0;
  while (true) {
    if (i__6623__auto___19856 < len__6622__auto___19855) {
      args19850.push(arguments[i__6623__auto___19856]);
      var G__19857 = i__6623__auto___19856 + 1;
      i__6623__auto___19856 = G__19857;
      continue;
    } else {
    }
    break;
  }
  var G__19852 = args19850.length;
  switch(G__19852) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19850.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__19853 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__19853) : cljs.core.pr_str.call(null, G__19853);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__19859 = null;
        var G__19859__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__19859__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__19859__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__19859 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19859__0.call(this);
            case 1:
              return G__19859__1.call(this, result);
            case 2:
              return G__19859__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19859.cljs$core$IFn$_invoke$arity$0 = G__19859__0;
        G__19859.cljs$core$IFn$_invoke$arity$1 = G__19859__1;
        G__19859.cljs$core$IFn$_invoke$arity$2 = G__19859__2;
        return G__19859;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__19854 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__19854) : cljs.core.pr_str.call(null, G__19854);
    }())].join(""));
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__19860 = n__$1 - 1;
        var G__19861 = cljs.core.rest(s);
        n__$1 = G__19860;
        coll__$1 = G__19861;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last() {
  var args19862 = [];
  var len__6622__auto___19865 = arguments.length;
  var i__6623__auto___19866 = 0;
  while (true) {
    if (i__6623__auto___19866 < len__6622__auto___19865) {
      args19862.push(arguments[i__6623__auto___19866]);
      var G__19867 = i__6623__auto___19866 + 1;
      i__6623__auto___19866 = G__19867;
      continue;
    } else {
    }
    break;
  }
  var G__19864 = args19862.length;
  switch(G__19864) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19862.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__19869 = cljs.core.next(s);
      var G__19870 = cljs.core.next(lead);
      s = G__19869;
      lead = G__19870;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while() {
  var args19871 = [];
  var len__6622__auto___19876 = arguments.length;
  var i__6623__auto___19877 = 0;
  while (true) {
    if (i__6623__auto___19877 < len__6622__auto___19876) {
      args19871.push(arguments[i__6623__auto___19877]);
      var G__19878 = i__6623__auto___19877 + 1;
      i__6623__auto___19877 = G__19878;
      continue;
    } else {
    }
    break;
  }
  var G__19873 = args19871.length;
  switch(G__19873) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19871.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__19880 = null;
        var G__19880__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__19880__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__19880__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__5571__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__5571__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__5571__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__19880 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19880__0.call(this);
            case 1:
              return G__19880__1.call(this, result);
            case 2:
              return G__19880__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19880.cljs$core$IFn$_invoke$arity$0 = G__19880__0;
        G__19880.cljs$core$IFn$_invoke$arity$1 = G__19880__1;
        G__19880.cljs$core$IFn$_invoke$arity$2 = G__19880__2;
        return G__19880;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__5571__auto__ = s;
        if (and__5571__auto__) {
          var G__19875 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__19875) : pred__$1.call(null, G__19875);
        } else {
          return and__5571__auto__;
        }
      }())) {
        var G__19881 = pred__$1;
        var G__19882 = cljs.core.rest(s);
        pred__$1 = G__19881;
        coll__$1 = G__19882;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat() {
  var args19883 = [];
  var len__6622__auto___19886 = arguments.length;
  var i__6623__auto___19887 = 0;
  while (true) {
    if (i__6623__auto___19887 < len__6622__auto___19886) {
      args19883.push(arguments[i__6623__auto___19887]);
      var G__19888 = i__6623__auto___19887 + 1;
      i__6623__auto___19887 = G__19888;
      continue;
    } else {
    }
    break;
  }
  var G__19885 = args19883.length;
  switch(G__19885) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19883.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly() {
  var args19890 = [];
  var len__6622__auto___19893 = arguments.length;
  var i__6623__auto___19894 = 0;
  while (true) {
    if (i__6623__auto___19894 < len__6622__auto___19893) {
      args19890.push(arguments[i__6623__auto___19894]);
      var G__19895 = i__6623__auto___19894 + 1;
      i__6623__auto___19894 = G__19895;
      continue;
    } else {
    }
    break;
  }
  var G__19892 = args19890.length;
  switch(G__19892) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19890.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave() {
  var args19899 = [];
  var len__6622__auto___19905 = arguments.length;
  var i__6623__auto___19906 = 0;
  while (true) {
    if (i__6623__auto___19906 < len__6622__auto___19905) {
      args19899.push(arguments[i__6623__auto___19906]);
      var G__19907 = i__6623__auto___19906 + 1;
      i__6623__auto___19906 = G__19907;
      continue;
    } else {
    }
    break;
  }
  var G__19904 = args19899.length;
  switch(G__19904) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19899.slice(2), 0);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq19900) {
  var G__19901 = cljs.core.first(seq19900);
  var seq19900__$1 = cljs.core.next(seq19900);
  var G__19902 = cljs.core.first(seq19900__$1);
  var seq19900__$2 = cljs.core.next(seq19900__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__19901, G__19902, seq19900__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose() {
  var args19909 = [];
  var len__6622__auto___19912 = arguments.length;
  var i__6623__auto___19913 = 0;
  while (true) {
    if (i__6623__auto___19913 < len__6622__auto___19912) {
      args19909.push(arguments[i__6623__auto___19913]);
      var G__19914 = i__6623__auto___19913 + 1;
      i__6623__auto___19913 = G__19914;
      continue;
    } else {
    }
    break;
  }
  var G__19911 = args19909.length;
  switch(G__19911) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19909.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__19916 = null;
        var G__19916__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__19916__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__19916__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__19916 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19916__0.call(this);
            case 1:
              return G__19916__1.call(this, result);
            case 2:
              return G__19916__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19916.cljs$core$IFn$_invoke$arity$0 = G__19916__0;
        G__19916.cljs$core$IFn$_invoke$arity$1 = G__19916__1;
        G__19916.cljs$core$IFn$_invoke$arity$2 = G__19916__2;
        return G__19916;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4423__auto__ = cljs.core.seq(coll);
      if (temp__4423__auto__) {
        var coll__$1 = temp__4423__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat() {
  var args19925 = [];
  var len__6622__auto___19930 = arguments.length;
  var i__6623__auto___19931 = 0;
  while (true) {
    if (i__6623__auto___19931 < len__6622__auto___19930) {
      args19925.push(arguments[i__6623__auto___19931]);
      var G__19932 = i__6623__auto___19931 + 1;
      i__6623__auto___19931 = G__19932;
      continue;
    } else {
    }
    break;
  }
  var G__19929 = args19925.length;
  switch(G__19929) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19925.slice(1), 0);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__6641__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq19926) {
  var G__19927 = cljs.core.first(seq19926);
  var seq19926__$1 = cljs.core.next(seq19926);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__19927, seq19926__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter() {
  var args19934 = [];
  var len__6622__auto___19938 = arguments.length;
  var i__6623__auto___19939 = 0;
  while (true) {
    if (i__6623__auto___19939 < len__6622__auto___19938) {
      args19934.push(arguments[i__6623__auto___19939]);
      var G__19940 = i__6623__auto___19939 + 1;
      i__6623__auto___19939 = G__19940;
      continue;
    } else {
    }
    break;
  }
  var G__19936 = args19934.length;
  switch(G__19936) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19934.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__19942 = null;
      var G__19942__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__19942__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__19942__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__19942 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__19942__0.call(this);
          case 1:
            return G__19942__1.call(this, result);
          case 2:
            return G__19942__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19942.cljs$core$IFn$_invoke$arity$0 = G__19942__0;
      G__19942.cljs$core$IFn$_invoke$arity$1 = G__19942__1;
      G__19942.cljs$core$IFn$_invoke$arity$2 = G__19942__2;
      return G__19942;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__6467__auto___19943 = size;
        var i_19944 = 0;
        while (true) {
          if (i_19944 < n__6467__auto___19943) {
            if (cljs.core.truth_(function() {
              var G__19937 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19944);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19937) : pred.call(null, G__19937);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19944));
            } else {
            }
            var G__19945 = i_19944 + 1;
            i_19944 = G__19945;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove() {
  var args19946 = [];
  var len__6622__auto___19949 = arguments.length;
  var i__6623__auto___19950 = 0;
  while (true) {
    if (i__6623__auto___19950 < len__6622__auto___19949) {
      args19946.push(arguments[i__6623__auto___19950]);
      var G__19951 = i__6623__auto___19950 + 1;
      i__6623__auto___19950 = G__19951;
      continue;
    } else {
    }
    break;
  }
  var G__19948 = args19946.length;
  switch(G__19948) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19946.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__19953_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__19953_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into() {
  var args19954 = [];
  var len__6622__auto___19959 = arguments.length;
  var i__6623__auto___19960 = 0;
  while (true) {
    if (i__6623__auto___19960 < len__6622__auto___19959) {
      args19954.push(arguments[i__6623__auto___19960]);
      var G__19961 = i__6623__auto___19960 + 1;
      i__6623__auto___19960 = G__19961;
      continue;
    } else {
    }
    break;
  }
  var G__19956 = args19954.length;
  switch(G__19956) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19954.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv() {
  var args19963 = [];
  var len__6622__auto___19971 = arguments.length;
  var i__6623__auto___19972 = 0;
  while (true) {
    if (i__6623__auto___19972 < len__6622__auto___19971) {
      args19963.push(arguments[i__6623__auto___19972]);
      var G__19973 = i__6623__auto___19972 + 1;
      i__6623__auto___19972 = G__19973;
      continue;
    } else {
    }
    break;
  }
  var G__19970 = args19963.length;
  switch(G__19970) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19963.slice(4), 0);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__6641__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq19964) {
  var G__19965 = cljs.core.first(seq19964);
  var seq19964__$1 = cljs.core.next(seq19964);
  var G__19966 = cljs.core.first(seq19964__$1);
  var seq19964__$2 = cljs.core.next(seq19964__$1);
  var G__19967 = cljs.core.first(seq19964__$2);
  var seq19964__$3 = cljs.core.next(seq19964__$2);
  var G__19968 = cljs.core.first(seq19964__$3);
  var seq19964__$4 = cljs.core.next(seq19964__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__19965, G__19966, G__19967, G__19968, seq19964__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition() {
  var args19975 = [];
  var len__6622__auto___19978 = arguments.length;
  var i__6623__auto___19979 = 0;
  while (true) {
    if (i__6623__auto___19979 < len__6622__auto___19978) {
      args19975.push(arguments[i__6623__auto___19979]);
      var G__19980 = i__6623__auto___19979 + 1;
      i__6623__auto___19979 = G__19980;
      continue;
    } else {
    }
    break;
  }
  var G__19977 = args19975.length;
  switch(G__19977) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19975.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in() {
  var args19982 = [];
  var len__6622__auto___19986 = arguments.length;
  var i__6623__auto___19987 = 0;
  while (true) {
    if (i__6623__auto___19987 < len__6622__auto___19986) {
      args19982.push(arguments[i__6623__auto___19987]);
      var G__19988 = i__6623__auto___19987 + 1;
      i__6623__auto___19987 = G__19988;
      continue;
    } else {
    }
    break;
  }
  var G__19984 = args19982.length;
  switch(G__19984) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19982.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!(!(m__$1 == null) ? m__$1.cljs$lang$protocol_mask$partition0$ & 256 || m__$1.cljs$core$ILookup$ ? true : !m__$1.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1))) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__19990 = sentinel;
          var G__19991 = m__$2;
          var G__19992 = cljs.core.next(ks__$1);
          sentinel = G__19990;
          m__$1 = G__19991;
          ks__$1 = G__19992;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__19993, v) {
  var vec__19998 = p__19993;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19998, 0, null);
  var ks = cljs.core.nthnext(vec__19998, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in() {
  var args19999 = [];
  var len__6622__auto___20029 = arguments.length;
  var i__6623__auto___20030 = 0;
  while (true) {
    if (i__6623__auto___20030 < len__6622__auto___20029) {
      args19999.push(arguments[i__6623__auto___20030]);
      var G__20031 = i__6623__auto___20030 + 1;
      i__6623__auto___20030 = G__20031;
      continue;
    } else {
    }
    break;
  }
  var G__20008 = args19999.length;
  switch(G__20008) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args19999.slice(6), 0);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__6641__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__20009, f) {
  var vec__20010 = p__20009;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20010, 0, null);
  var ks = cljs.core.nthnext(vec__20010, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__20011 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20011) : f.call(null, G__20011);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__20012, f, a) {
  var vec__20013 = p__20012;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20013, 0, null);
  var ks = cljs.core.nthnext(vec__20013, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__20014 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__20015 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20014, G__20015) : f.call(null, G__20014, G__20015);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__20016, f, a, b) {
  var vec__20017 = p__20016;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20017, 0, null);
  var ks = cljs.core.nthnext(vec__20017, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__20018 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__20019 = a;
      var G__20020 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20018, G__20019, G__20020) : f.call(null, G__20018, G__20019, G__20020);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__20021, f, a, b, c) {
  var vec__20022 = p__20021;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20022, 0, null);
  var ks = cljs.core.nthnext(vec__20022, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__20023 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__20024 = a;
      var G__20025 = b;
      var G__20026 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20023, G__20024, G__20025, G__20026) : f.call(null, G__20023, G__20024, G__20025, G__20026);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__20027, f, a, b, c, args) {
  var vec__20028 = p__20027;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20028, 0, null);
  var ks = cljs.core.nthnext(vec__20028, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq20000) {
  var G__20001 = cljs.core.first(seq20000);
  var seq20000__$1 = cljs.core.next(seq20000);
  var G__20002 = cljs.core.first(seq20000__$1);
  var seq20000__$2 = cljs.core.next(seq20000__$1);
  var G__20003 = cljs.core.first(seq20000__$2);
  var seq20000__$3 = cljs.core.next(seq20000__$2);
  var G__20004 = cljs.core.first(seq20000__$3);
  var seq20000__$4 = cljs.core.next(seq20000__$3);
  var G__20005 = cljs.core.first(seq20000__$4);
  var seq20000__$5 = cljs.core.next(seq20000__$4);
  var G__20006 = cljs.core.first(seq20000__$5);
  var seq20000__$6 = cljs.core.next(seq20000__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__20001, G__20002, G__20003, G__20004, G__20005, G__20006, seq20000__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update() {
  var args20033 = [];
  var len__6622__auto___20053 = arguments.length;
  var i__6623__auto___20054 = 0;
  while (true) {
    if (i__6623__auto___20054 < len__6622__auto___20053) {
      args20033.push(arguments[i__6623__auto___20054]);
      var G__20055 = i__6623__auto___20054 + 1;
      i__6623__auto___20054 = G__20055;
      continue;
    } else {
    }
    break;
  }
  var G__20042 = args20033.length;
  switch(G__20042) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args20033.slice(6), 0);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__6641__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__20043 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20043) : f.call(null, G__20043);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__20044 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__20045 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20044, G__20045) : f.call(null, G__20044, G__20045);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__20046 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__20047 = x;
    var G__20048 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20046, G__20047, G__20048) : f.call(null, G__20046, G__20047, G__20048);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__20049 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__20050 = x;
    var G__20051 = y;
    var G__20052 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20049, G__20050, G__20051, G__20052) : f.call(null, G__20049, G__20050, G__20051, G__20052);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq20034) {
  var G__20035 = cljs.core.first(seq20034);
  var seq20034__$1 = cljs.core.next(seq20034);
  var G__20036 = cljs.core.first(seq20034__$1);
  var seq20034__$2 = cljs.core.next(seq20034__$1);
  var G__20037 = cljs.core.first(seq20034__$2);
  var seq20034__$3 = cljs.core.next(seq20034__$2);
  var G__20038 = cljs.core.first(seq20034__$3);
  var seq20034__$4 = cljs.core.next(seq20034__$3);
  var G__20039 = cljs.core.first(seq20034__$4);
  var seq20034__$5 = cljs.core.next(seq20034__$4);
  var G__20040 = cljs.core.first(seq20034__$5);
  var seq20034__$6 = cljs.core.next(seq20034__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__20035, G__20036, G__20037, G__20038, G__20039, G__20040, seq20034__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__20057 = ll - 5;
      var G__20058 = r;
      ll = G__20057;
      ret = G__20058;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__20063 = cljs.core.pv_aget(node, 0);
      var G__20064 = level - 5;
      node = G__20063;
      level = G__20064;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__20065 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__20066 = level - 5;
        node = G__20065;
        level = G__20066;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__20076 = init__$2;
              var G__20077 = j + i;
              var G__20078 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20076, G__20077, G__20078) : f.call(null, G__20076, G__20077, G__20078);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__20085 = j + 1;
              var G__20086 = init__$3;
              j = G__20085;
              init__$2 = G__20086;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__20087 = i + len;
        var G__20088 = init__$2;
        i = G__20087;
        init__$1 = G__20088;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__20079 = init__$2;
              var G__20080 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20079, G__20080) : f.call(null, G__20079, G__20080);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__20089 = j + 1;
              var G__20090 = init__$3;
              j = G__20089;
              init__$2 = G__20090;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__20091 = i + len;
        var G__20092 = init__$2;
        i = G__20091;
        init__$1 = G__20092;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__20081 = coll__$1;
      var G__20082 = cljs.core.first_array_for_longvec(coll__$1);
      var G__20083 = 0;
      var G__20084 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__20081, G__20082, G__20083, G__20084) : cljs.core.chunked_seq.call(null, G__20081, G__20082, G__20083, G__20084);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__6467__auto___20093 = len;
    var i_20094 = 0;
    while (true) {
      if (i_20094 < n__6467__auto___20093) {
        new_tail[i_20094] = self__.tail[i_20094];
        var G__20095 = i_20094 + 1;
        i_20094 = G__20095;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__20096 = null;
  var G__20096__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__20096__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__20096 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20096__2.call(this, self__, k);
      case 3:
        return G__20096__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20096.cljs$core$IFn$_invoke$arity$2 = G__20096__2;
  G__20096.cljs$core$IFn$_invoke$arity$3 = G__20096__3;
  return G__20096;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args20075) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20075)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__20097 = i + 1;
        var G__20098 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__20097;
        out = G__20098;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector() {
  var args__6629__auto__ = [];
  var len__6622__auto___20100 = arguments.length;
  var i__6623__auto___20101 = 0;
  while (true) {
    if (i__6623__auto___20101 < len__6622__auto___20100) {
      args__6629__auto__.push(arguments[i__6623__auto___20101]);
      var G__20102 = i__6623__auto___20101 + 1;
      i__6623__auto___20101 = G__20102;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 0 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(0), 0) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__6630__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq20099) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20099));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__20103 = self__.vec;
      var G__20104 = self__.node;
      var G__20105 = self__.i;
      var G__20106 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__20103, G__20104, G__20105, G__20106) : cljs.core.chunked_seq.call(null, G__20103, G__20104, G__20105, G__20106);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__20107 = self__.vec;
    var G__20108 = self__.i + self__.off;
    var G__20109 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__20107, G__20108, G__20109) : cljs.core.subvec.call(null, G__20107, G__20108, G__20109);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__20110 = self__.vec;
    var G__20111 = self__.i + self__.off;
    var G__20112 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__20110, G__20111, G__20112) : cljs.core.subvec.call(null, G__20110, G__20111, G__20112);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__20113 = self__.vec;
      var G__20114 = self__.node;
      var G__20115 = self__.i;
      var G__20116 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__20113, G__20114, G__20115, G__20116) : cljs.core.chunked_seq.call(null, G__20113, G__20114, G__20115, G__20116);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__20117 = self__.vec;
    var G__20118 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__20119 = end;
    var G__20120 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__20117, G__20118, G__20119, G__20120) : cljs.core.chunked_seq.call(null, G__20117, G__20118, G__20119, G__20120);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__20121 = self__.vec;
    var G__20122 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__20123 = end;
    var G__20124 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__20121, G__20122, G__20123, G__20124) : cljs.core.chunked_seq.call(null, G__20121, G__20122, G__20123, G__20124);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq() {
  var args20125 = [];
  var len__6622__auto___20128 = arguments.length;
  var i__6623__auto___20129 = 0;
  while (true) {
    if (i__6623__auto___20129 < len__6622__auto___20128) {
      args20125.push(arguments[i__6623__auto___20129]);
      var G__20130 = i__6623__auto___20129 + 1;
      i__6623__auto___20129 = G__20130;
      continue;
    } else {
    }
    break;
  }
  var G__20127 = args20125.length;
  switch(G__20127) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20125.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__20133 = init__$1;
        var G__20134 = j;
        var G__20135 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20133, G__20134, G__20135) : f.call(null, G__20133, G__20134, G__20135);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__20152 = i + 1;
        var G__20153 = j + 1;
        var G__20154 = init__$2;
        i = G__20152;
        j = G__20153;
        init__$1 = G__20154;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__20136 = self__.meta;
  var G__20137 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__20138 = self__.start;
  var G__20139 = function() {
    var x__5895__auto__ = self__.end;
    var y__5896__auto__ = v_pos + 1;
    return x__5895__auto__ > y__5896__auto__ ? x__5895__auto__ : y__5896__auto__;
  }();
  var G__20140 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__20136, G__20137, G__20138, G__20139, G__20140) : cljs.core.build_subvec.call(null, G__20136, G__20137, G__20138, G__20139, G__20140);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__20141 = self__.meta;
    var G__20142 = self__.v;
    var G__20143 = self__.start;
    var G__20144 = self__.end - 1;
    var G__20145 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__20141, G__20142, G__20143, G__20144, G__20145) : cljs.core.build_subvec.call(null, G__20141, G__20142, G__20143, G__20144, G__20145);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__20147 = self__.meta;
  var G__20148 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__20149 = self__.start;
  var G__20150 = self__.end + 1;
  var G__20151 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__20147, G__20148, G__20149, G__20150, G__20151) : cljs.core.build_subvec.call(null, G__20147, G__20148, G__20149, G__20150, G__20151);
};
cljs.core.Subvec.prototype.call = function() {
  var G__20155 = null;
  var G__20155__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__20155__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__20155 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20155__2.call(this, self__, k);
      case 3:
        return G__20155__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20155.cljs$core$IFn$_invoke$arity$2 = G__20155__2;
  G__20155.cljs$core$IFn$_invoke$arity$3 = G__20155__3;
  return G__20155;
}();
cljs.core.Subvec.prototype.apply = function(self__, args20132) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20132)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__20156 = meta;
      var G__20157 = v.v;
      var G__20158 = v.start + start;
      var G__20159 = v.start + end;
      var G__20160 = __hash;
      meta = G__20156;
      v = G__20157;
      start = G__20158;
      end = G__20159;
      __hash = G__20160;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec() {
  var args20161 = [];
  var len__6622__auto___20164 = arguments.length;
  var i__6623__auto___20165 = 0;
  while (true) {
    if (i__6623__auto___20165 < len__6622__auto___20164) {
      args20161.push(arguments[i__6623__auto___20165]);
      var G__20166 = i__6623__auto___20165 + 1;
      i__6623__auto___20165 = G__20166;
      continue;
    } else {
    }
    break;
  }
  var G__20163 = args20161.length;
  switch(G__20163) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20161.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__20179 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__20180 = level - 5;
        node = G__20179;
        level = G__20180;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__20184 = null;
  var G__20184__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20184__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20184 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20184__2.call(this, self__, k);
      case 3:
        return G__20184__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20184.cljs$core$IFn$_invoke$arity$2 = G__20184__2;
  G__20184.cljs$core$IFn$_invoke$arity$3 = G__20184__3;
  return G__20184;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args20181) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20181)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__5583__auto__ = cljs.core.some_QMARK_(self__.fseq) && cljs.core.seq(self__.fseq);
  if (or__5583__auto__) {
    return or__5583__auto__;
  } else {
    var and__5571__auto__ = cljs.core.some_QMARK_(self__.riter);
    if (and__5571__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__5571__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (cljs.core.some_QMARK_(self__.fseq)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.riter) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4423__auto__ = cljs.core.next(self__.front);
  if (temp__4423__auto__) {
    var f1 = temp__4423__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4423__auto__ = cljs.core.next(self__.front);
    if (temp__4423__auto__) {
      var f1 = temp__4423__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__5583__auto__ = self__.front;
    if (cljs.core.truth_(or__5583__auto__)) {
      return or__5583__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__5583__auto__ = self__.rear;
      if (cljs.core.truth_(or__5583__auto__)) {
        return or__5583__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__20185 = i + incr;
        i = G__20185;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__20186 = i + 1;
      var G__20187 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__20186;
      out = G__20187;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_20192 = 0;
  while (true) {
    if (i_20192 < l) {
      var k_20193 = ks[i_20192];
      new_obj[k_20193] = obj[k_20193];
      var G__20194 = i_20192 + 1;
      i_20192 = G__20194;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__20197 = init__$1;
        var G__20198 = k;
        var G__20199 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20197, G__20198, G__20199) : f.call(null, G__20197, G__20198, G__20199);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__20200 = cljs.core.rest(keys__$1);
        var G__20201 = init__$2;
        keys__$1 = G__20200;
        init__$1 = G__20201;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__20195_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__20195_SHARP_, self__.strobj[p1__20195_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__20202 = null;
  var G__20202__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20202__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20202 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20202__2.call(this, self__, k);
      case 3:
        return G__20202__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20202.cljs$core$IFn$_invoke$arity$2 = G__20202__2;
  G__20202.cljs$core$IFn$_invoke$arity$3 = G__20202__3;
  return G__20202;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args20196) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20196)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__5583__auto__ = self__.i < self__.base_count;
  if (or__5583__auto__) {
    return or__5583__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k)], null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__20205 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20205, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20205, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__20206 = i + 2;
        i = G__20206;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__20207 = i + 2;
        i = G__20207;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__20208 = i + 2;
        i = G__20208;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__20209 = i + 2;
        i = G__20209;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__20210 = i + 2;
        i = G__20210;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_20211 = 0;
  while (true) {
    if (i_20211 < l) {
      narr[i_20211] = arr[i_20211];
      var G__20212 = i_20211 + 1;
      i_20211 = G__20212;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20214 = cljs.core.seq(coll);
  var chunk__20215 = null;
  var count__20216 = 0;
  var i__20217 = 0;
  while (true) {
    if (i__20217 < count__20216) {
      var vec__20218 = chunk__20215.cljs$core$IIndexed$_nth$arity$2(null, i__20217);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20218, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20218, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__20227 = seq__20214;
      var G__20228 = chunk__20215;
      var G__20229 = count__20216;
      var G__20230 = i__20217 + 1;
      seq__20214 = G__20227;
      chunk__20215 = G__20228;
      count__20216 = G__20229;
      i__20217 = G__20230;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__20214);
      if (temp__4425__auto__) {
        var seq__20214__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20214__$1)) {
          var c__6367__auto__ = cljs.core.chunk_first(seq__20214__$1);
          var G__20231 = cljs.core.chunk_rest(seq__20214__$1);
          var G__20232 = c__6367__auto__;
          var G__20233 = cljs.core.count(c__6367__auto__);
          var G__20234 = 0;
          seq__20214 = G__20231;
          chunk__20215 = G__20232;
          count__20216 = G__20233;
          i__20217 = G__20234;
          continue;
        } else {
          var vec__20219 = cljs.core.first(seq__20214__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20219, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20219, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__20235 = cljs.core.next(seq__20214__$1);
          var G__20236 = null;
          var G__20237 = 0;
          var G__20238 = 0;
          seq__20214 = G__20235;
          chunk__20215 = G__20236;
          count__20216 = G__20237;
          i__20217 = G__20238;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__20220 = init__$1;
        var G__20221 = self__.arr[i];
        var G__20222 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20220, G__20221, G__20222) : f.call(null, G__20220, G__20221, G__20222);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__20239 = i + 2;
        var G__20240 = init__$2;
        i = G__20239;
        init__$1 = G__20240;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (!(other == null) ? other.cljs$lang$protocol_mask$partition0$ & 1024 || other.cljs$core$IMap$ ? true : false : false) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__20241 = i + 2;
              i = G__20241;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__20242 = s + 2;
            var G__20243 = d;
            s = G__20242;
            d = G__20243;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__20244 = s + 2;
            var G__20245 = d + 2;
            s = G__20244;
            d = G__20245;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__20226 = cljs.core.aclone(self__.arr);
        G__20226[idx + 1] = v;
        return G__20226;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__20246 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__20247 = cljs.core.next(es);
          ret = G__20246;
          es = G__20247;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__20248 = null;
  var G__20248__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20248__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20248 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20248__2.call(this, self__, k);
      case 3:
        return G__20248__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20248.cljs$core$IFn$_invoke$arity$2 = G__20248__2;
  G__20248.cljs$core$IFn$_invoke$arity$3 = G__20248__3;
  return G__20248;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args20213) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20213)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_20249 = 0;
    while (true) {
      if (i_20249 < arr__$1.length) {
        var k_20250 = arr__$1[i_20249];
        var v_20251 = arr__$1[i_20249 + 1];
        var idx_20252 = cljs.core.array_index_of(ret, k_20250);
        if (idx_20252 === -1) {
          ret.push(k_20250);
          ret.push(v_20251);
        } else {
        }
        var G__20253 = i_20249 + 2;
        i_20249 = G__20253;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var arr__$3 = function() {
    var cnt = arr__$2.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
  }();
  return arr__$3;
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__20256 = cljs.core.next(es);
          var G__20257 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__20256;
          tcoll__$2 = G__20257;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__20255_20258 = self__.arr;
      G__20255_20258.pop();
      G__20255_20258.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__20259 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__20260 = i + 2;
      out = G__20259;
      i = G__20260;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set() {
  var args20261 = [];
  var len__6622__auto___20266 = arguments.length;
  var i__6623__auto___20267 = 0;
  while (true) {
    if (i__6623__auto___20267 < len__6622__auto___20266) {
      args20261.push(arguments[i__6623__auto___20267]);
      var G__20268 = i__6623__auto___20267 + 1;
      i__6623__auto___20267 = G__20268;
      continue;
    } else {
    }
    break;
  }
  var G__20263 = args20261.length;
  switch(G__20263) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20261.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__20264 = cljs.core.aclone(arr);
  G__20264[i] = a;
  return G__20264;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__20265 = cljs.core.aclone(arr);
  G__20265[i] = a;
  G__20265[j] = b;
  return G__20265;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set() {
  var args20270 = [];
  var len__6622__auto___20273 = arguments.length;
  var i__6623__auto___20274 = 0;
  while (true) {
    if (i__6623__auto___20274 < len__6622__auto___20273) {
      args20270.push(arguments[i__6623__auto___20274]);
      var G__20275 = i__6623__auto___20274 + 1;
      i__6623__auto___20274 = G__20275;
      continue;
    } else {
    }
    break;
  }
  var G__20272 = args20270.length;
  switch(G__20272) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20270.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__20280 = init__$1;
          var G__20281 = k;
          var G__20282 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20280, G__20281, G__20282) : f.call(null, G__20280, G__20281, G__20282);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__20283 = i + 2;
        var G__20284 = init__$2;
        i = G__20283;
        init__$1 = G__20284;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = cljs.core.some_QMARK_(key) ? self__.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, node_or_val], null) : cljs.core.some_QMARK_(node_or_val) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__5583__auto__ = cljs.core.some_QMARK_(self__.next_entry);
  if (or__5583__auto__) {
    return or__5583__auto__;
  } else {
    var or__5583__auto____$1 = cljs.core.some_QMARK_(self__.next_iter);
    if (or__5583__auto____$1) {
      return or__5583__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.some_QMARK_(self__.next_entry)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.next_iter)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_20298 = 0;
        var j_20299 = 0;
        while (true) {
          if (i_20298 < 32) {
            if ((self__.bitmap >>> i_20298 & 1) === 0) {
              var G__20300 = i_20298 + 1;
              var G__20301 = j_20299;
              i_20298 = G__20300;
              j_20299 = G__20301;
              continue;
            } else {
              nodes[i_20298] = !(self__.arr[j_20299] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_20299]), self__.arr[j_20299], self__.arr[j_20299 + 1], added_leaf_QMARK_) : self__.arr[j_20299 + 1];
              var G__20302 = i_20298 + 1;
              var G__20303 = j_20299 + 2;
              i_20298 = G__20302;
              j_20299 = G__20303;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__20285 = edit__$1;
          var G__20286 = shift + 5;
          var G__20287 = key_or_nil;
          var G__20288 = val_or_node;
          var G__20289 = hash;
          var G__20290 = key;
          var G__20291 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__20285, G__20286, G__20287, G__20288, G__20289, G__20290, G__20291) : cljs.core.create_node.call(null, G__20285, G__20286, G__20287, G__20288, G__20289, G__20290, G__20291);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_20304 = 0;
      var j_20305 = 0;
      while (true) {
        if (i_20304 < 32) {
          if ((self__.bitmap >>> i_20304 & 1) === 0) {
            var G__20306 = i_20304 + 1;
            var G__20307 = j_20305;
            i_20304 = G__20306;
            j_20305 = G__20307;
            continue;
          } else {
            nodes[i_20304] = !(self__.arr[j_20305] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_20305]), self__.arr[j_20305], self__.arr[j_20305 + 1], added_leaf_QMARK_) : self__.arr[j_20305 + 1];
            var G__20308 = i_20304 + 1;
            var G__20309 = j_20305 + 2;
            i_20304 = G__20308;
            j_20305 = G__20309;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__20292 = shift + 5;
          var G__20293 = key_or_nil;
          var G__20294 = val_or_node;
          var G__20295 = hash;
          var G__20296 = key;
          var G__20297 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__20292, G__20293, G__20294, G__20295, G__20296, G__20297) : cljs.core.create_node.call(null, G__20292, G__20293, G__20294, G__20295, G__20296, G__20297);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$ = true;
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__20310 = i + 1;
        var G__20311 = j + 2;
        var G__20312 = bitmap | 1 << i;
        i = G__20310;
        j = G__20311;
        bitmap = G__20312;
        continue;
      } else {
        var G__20313 = i + 1;
        var G__20314 = j;
        var G__20315 = bitmap;
        i = G__20313;
        j = G__20314;
        bitmap = G__20315;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(cljs.core.some_QMARK_(self__.next_iter) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (cljs.core.some_QMARK_(node)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__20316 = i + 1;
          var G__20317 = init__$2;
          i = G__20316;
          init__$1 = G__20317;
          continue;
        }
      } else {
        var G__20318 = i + 1;
        var G__20319 = init__$1;
        i = G__20318;
        init__$1 = G__20319;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$ = true;
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__20320 = i + 2;
        i = G__20320;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$ = true;
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node() {
  var args20321 = [];
  var len__6622__auto___20324 = arguments.length;
  var i__6623__auto___20325 = 0;
  while (true) {
    if (i__6623__auto___20325 < len__6622__auto___20324) {
      args20321.push(arguments[i__6623__auto___20325]);
      var G__20326 = i__6623__auto___20325 + 1;
      i__6623__auto___20325 = G__20326;
      continue;
    } else {
    }
    break;
  }
  var G__20323 = args20321.length;
  switch(G__20323) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20321.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__20328 = self__.nodes;
    var G__20329 = self__.i + 2;
    var G__20330 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__20328, G__20329, G__20330) : cljs.core.create_inode_seq.call(null, G__20328, G__20329, G__20330);
  } else {
    var G__20331 = self__.nodes;
    var G__20332 = self__.i;
    var G__20333 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__20331, G__20332, G__20333) : cljs.core.create_inode_seq.call(null, G__20331, G__20332, G__20333);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq() {
  var args20334 = [];
  var len__6622__auto___20337 = arguments.length;
  var i__6623__auto___20338 = 0;
  while (true) {
    if (i__6623__auto___20338 < len__6622__auto___20337) {
      args20334.push(arguments[i__6623__auto___20338]);
      var G__20339 = i__6623__auto___20338 + 1;
      i__6623__auto___20338 = G__20339;
      continue;
    } else {
    }
    break;
  }
  var G__20336 = args20334.length;
  switch(G__20336) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20334.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4423__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4423__auto__)) {
            var node = temp__4423__auto__;
            var temp__4423__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4423__auto____$1)) {
              var node_seq = temp__4423__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__20341 = j + 2;
              j = G__20341;
              continue;
            }
          } else {
            var G__20342 = j + 2;
            j = G__20342;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__20343 = null;
  var G__20344 = self__.nodes;
  var G__20345 = self__.i;
  var G__20346 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__20343, G__20344, G__20345, G__20346) : cljs.core.create_array_node_seq.call(null, G__20343, G__20344, G__20345, G__20346);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq() {
  var args20347 = [];
  var len__6622__auto___20350 = arguments.length;
  var i__6623__auto___20351 = 0;
  while (true) {
    if (i__6623__auto___20351 < len__6622__auto___20350) {
      args20347.push(arguments[i__6623__auto___20351]);
      var G__20352 = i__6623__auto___20351 + 1;
      i__6623__auto___20351 = G__20352;
      continue;
    } else {
    }
    break;
  }
  var G__20349 = args20347.length;
  switch(G__20349) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20347.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4423__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4423__auto__)) {
          var nj = temp__4423__auto__;
          var temp__4423__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4423__auto____$1)) {
            var ns = temp__4423__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__20354 = j + 1;
            j = G__20354;
            continue;
          }
        } else {
          var G__20355 = j + 1;
          j = G__20355;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.seen && self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return self__.nil_val;
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20357 = cljs.core.seq(coll);
  var chunk__20358 = null;
  var count__20359 = 0;
  var i__20360 = 0;
  while (true) {
    if (i__20360 < count__20359) {
      var vec__20361 = chunk__20358.cljs$core$IIndexed$_nth$arity$2(null, i__20360);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20361, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20361, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__20365 = seq__20357;
      var G__20366 = chunk__20358;
      var G__20367 = count__20359;
      var G__20368 = i__20360 + 1;
      seq__20357 = G__20365;
      chunk__20358 = G__20366;
      count__20359 = G__20367;
      i__20360 = G__20368;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__20357);
      if (temp__4425__auto__) {
        var seq__20357__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20357__$1)) {
          var c__6367__auto__ = cljs.core.chunk_first(seq__20357__$1);
          var G__20369 = cljs.core.chunk_rest(seq__20357__$1);
          var G__20370 = c__6367__auto__;
          var G__20371 = cljs.core.count(c__6367__auto__);
          var G__20372 = 0;
          seq__20357 = G__20369;
          chunk__20358 = G__20370;
          count__20359 = G__20371;
          i__20360 = G__20372;
          continue;
        } else {
          var vec__20362 = cljs.core.first(seq__20357__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20362, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20362, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__20373 = cljs.core.next(seq__20357__$1);
          var G__20374 = null;
          var G__20375 = 0;
          var G__20376 = 0;
          seq__20357 = G__20373;
          chunk__20358 = G__20374;
          count__20359 = G__20375;
          i__20360 = G__20376;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter;
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__20377 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__20378 = cljs.core.next(es);
          ret = G__20377;
          es = G__20378;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__20379 = null;
  var G__20379__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20379__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20379 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20379__2.call(this, self__, k);
      case 3:
        return G__20379__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20379.cljs$core$IFn$_invoke$arity$2 = G__20379__2;
  G__20379.cljs$core$IFn$_invoke$arity$3 = G__20379__3;
  return G__20379;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args20356) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20356)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__20380 = i + 2;
      var G__20381 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__20380;
      ret = G__20381;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__20382 = i + 1;
      var G__20383 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__20382;
      out = G__20383;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__20385 = cljs.core.next(es);
          var G__20386 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__20385;
          tcoll__$1 = G__20386;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__20387 = ascending_QMARK_ ? t.left : t.right;
      var G__20388 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__20387;
      stack__$1 = G__20388;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = function() {
      var G__20398 = init__$1;
      var G__20399 = node.key;
      var G__20400 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20398, G__20399, G__20400) : f.call(null, G__20398, G__20399, G__20400);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__20402 = null;
  var G__20402__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20402__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20402 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20402__2.call(this, self__, k);
      case 3:
        return G__20402__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20402.cljs$core$IFn$_invoke$arity$2 = G__20402__2;
  G__20402.cljs$core$IFn$_invoke$arity$3 = G__20402__3;
  return G__20402;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args20401) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20401)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__20404 = null;
  var G__20404__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20404__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20404 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20404__2.call(this, self__, k);
      case 3:
        return G__20404__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20404.cljs$core$IFn$_invoke$arity$2 = G__20404__2;
  G__20404.cljs$core$IFn$_invoke$arity$3 = G__20404__3;
  return G__20404;
}();
cljs.core.RedNode.prototype.apply = function(self__, args20403) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20403)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__20417 = k;
      var G__20418 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20417, G__20418) : comp.call(null, G__20417, G__20418);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__20437 = k;
      var G__20438 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20437, G__20438) : comp.call(null, G__20437, G__20438);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20448 = cljs.core.seq(coll);
  var chunk__20449 = null;
  var count__20450 = 0;
  var i__20451 = 0;
  while (true) {
    if (i__20451 < count__20450) {
      var vec__20452 = chunk__20449.cljs$core$IIndexed$_nth$arity$2(null, i__20451);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20452, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20452, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__20458 = seq__20448;
      var G__20459 = chunk__20449;
      var G__20460 = count__20450;
      var G__20461 = i__20451 + 1;
      seq__20448 = G__20458;
      chunk__20449 = G__20459;
      count__20450 = G__20460;
      i__20451 = G__20461;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__20448);
      if (temp__4425__auto__) {
        var seq__20448__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20448__$1)) {
          var c__6367__auto__ = cljs.core.chunk_first(seq__20448__$1);
          var G__20462 = cljs.core.chunk_rest(seq__20448__$1);
          var G__20463 = c__6367__auto__;
          var G__20464 = cljs.core.count(c__6367__auto__);
          var G__20465 = 0;
          seq__20448 = G__20462;
          chunk__20449 = G__20463;
          count__20450 = G__20464;
          i__20451 = G__20465;
          continue;
        } else {
          var vec__20453 = cljs.core.first(seq__20448__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20453, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20453, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__20466 = cljs.core.next(seq__20448__$1);
          var G__20467 = null;
          var G__20468 = 0;
          var G__20469 = 0;
          seq__20448 = G__20466;
          chunk__20449 = G__20467;
          count__20450 = G__20468;
          i__20451 = G__20469;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__20454 = k;
        var G__20455 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__20454, G__20455) : self__.comp.call(null, G__20454, G__20455);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__20470 = t.left;
          t = G__20470;
          continue;
        } else {
          var G__20471 = t.right;
          t = G__20471;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__20472 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__20473 = cljs.core.next(es);
          ret = G__20472;
          es = G__20473;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__20474 = null;
  var G__20474__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20474__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20474 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20474__2.call(this, self__, k);
      case 3:
        return G__20474__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20474.cljs$core$IFn$_invoke$arity$2 = G__20474__2;
  G__20474.cljs$core$IFn$_invoke$arity$3 = G__20474__3;
  return G__20474;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args20447) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20447)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__20456 = k;
          var G__20457 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__20456, G__20457) : self__.comp.call(null, G__20456, G__20457);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__20475 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__20476 = t.left;
              stack = G__20475;
              t = G__20476;
              continue;
            } else {
              var G__20477 = stack;
              var G__20478 = t.right;
              stack = G__20477;
              t = G__20478;
              continue;
            }
          } else {
            if (c > 0) {
              var G__20479 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__20480 = t.right;
              stack = G__20479;
              t = G__20480;
              continue;
            } else {
              var G__20481 = stack;
              var G__20482 = t.left;
              stack = G__20481;
              t = G__20482;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map() {
  var args__6629__auto__ = [];
  var len__6622__auto___20484 = arguments.length;
  var i__6623__auto___20485 = 0;
  while (true) {
    if (i__6623__auto___20485 < len__6622__auto___20484) {
      args__6629__auto__.push(arguments[i__6623__auto___20485]);
      var G__20486 = i__6623__auto___20485 + 1;
      i__6623__auto___20485 = G__20486;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 0 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(0), 0) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__6630__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__20487 = cljs.core.nnext(in$);
      var G__20488 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__20487;
      out = G__20488;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq20483) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20483));
};
cljs.core.array_map = function cljs$core$array_map() {
  var args__6629__auto__ = [];
  var len__6622__auto___20490 = arguments.length;
  var i__6623__auto___20491 = 0;
  while (true) {
    if (i__6623__auto___20491 < len__6622__auto___20490) {
      args__6629__auto__.push(arguments[i__6623__auto___20491]);
      var G__20492 = i__6623__auto___20491 + 1;
      i__6623__auto___20491 = G__20492;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 0 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(0), 0) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__6630__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq20489) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20489));
};
cljs.core.obj_map = function cljs$core$obj_map() {
  var args__6629__auto__ = [];
  var len__6622__auto___20496 = arguments.length;
  var i__6623__auto___20497 = 0;
  while (true) {
    if (i__6623__auto___20497 < len__6622__auto___20496) {
      args__6629__auto__.push(arguments[i__6623__auto___20497]);
      var G__20498 = i__6623__auto___20497 + 1;
      i__6623__auto___20497 = G__20498;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 0 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(0), 0) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__6630__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__20499 = cljs.core.nnext(kvs);
      kvs = G__20499;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq20493) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20493));
};
cljs.core.sorted_map = function cljs$core$sorted_map() {
  var args__6629__auto__ = [];
  var len__6622__auto___20501 = arguments.length;
  var i__6623__auto___20502 = 0;
  while (true) {
    if (i__6623__auto___20502 < len__6622__auto___20501) {
      args__6629__auto__.push(arguments[i__6623__auto___20502]);
      var G__20503 = i__6623__auto___20502 + 1;
      i__6623__auto___20502 = G__20503;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 0 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(0), 0) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__6630__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__20504 = cljs.core.nnext(in$);
      var G__20505 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__20504;
      out = G__20505;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq20500) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20500));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by() {
  var args__6629__auto__ = [];
  var len__6622__auto___20508 = arguments.length;
  var i__6623__auto___20509 = 0;
  while (true) {
    if (i__6623__auto___20509 < len__6622__auto___20508) {
      args__6629__auto__.push(arguments[i__6623__auto___20509]);
      var G__20510 = i__6623__auto___20509 + 1;
      i__6623__auto___20509 = G__20510;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 1 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(1), 0) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__6630__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__20511 = cljs.core.nnext(in$);
      var G__20512 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__20511;
      out = G__20512;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq20506) {
  var G__20507 = cljs.core.first(seq20506);
  var seq20506__$1 = cljs.core.next(seq20506);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__20507, seq20506__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge() {
  var args__6629__auto__ = [];
  var len__6622__auto___20520 = arguments.length;
  var i__6623__auto___20521 = 0;
  while (true) {
    if (i__6623__auto___20521 < len__6622__auto___20520) {
      args__6629__auto__.push(arguments[i__6623__auto___20521]);
      var G__20522 = i__6623__auto___20521 + 1;
      i__6623__auto___20521 = G__20522;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 0 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(0), 0) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__6630__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__20517_SHARP_, p2__20518_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__5583__auto__ = p1__20517_SHARP_;
        if (cljs.core.truth_(or__5583__auto__)) {
          return or__5583__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__20518_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq20519) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20519));
};
cljs.core.merge_with = function cljs$core$merge_with() {
  var args__6629__auto__ = [];
  var len__6622__auto___20527 = arguments.length;
  var i__6623__auto___20528 = 0;
  while (true) {
    if (i__6623__auto___20528 < len__6622__auto___20527) {
      args__6629__auto__.push(arguments[i__6623__auto___20528]);
      var G__20529 = i__6623__auto___20528 + 1;
      i__6623__auto___20528 = G__20529;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 1 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(1), 0) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__6630__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__20525 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__20526 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20525, G__20526) : f.call(null, G__20525, G__20526);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__5583__auto__ = m1;
          if (cljs.core.truth_(or__5583__auto__)) {
            return or__5583__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq20523) {
  var G__20524 = cljs.core.first(seq20523);
  var seq20523__$1 = cljs.core.next(seq20523);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__20524, seq20523__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__20530 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__20531 = cljs.core.next(keys);
      ret = G__20530;
      keys = G__20531;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().tail[0];
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20534 = cljs.core.seq(coll);
  var chunk__20535 = null;
  var count__20536 = 0;
  var i__20537 = 0;
  while (true) {
    if (i__20537 < count__20536) {
      var vec__20538 = chunk__20535.cljs$core$IIndexed$_nth$arity$2(null, i__20537);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20538, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20538, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__20540 = seq__20534;
      var G__20541 = chunk__20535;
      var G__20542 = count__20536;
      var G__20543 = i__20537 + 1;
      seq__20534 = G__20540;
      chunk__20535 = G__20541;
      count__20536 = G__20542;
      i__20537 = G__20543;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__20534);
      if (temp__4425__auto__) {
        var seq__20534__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20534__$1)) {
          var c__6367__auto__ = cljs.core.chunk_first(seq__20534__$1);
          var G__20544 = cljs.core.chunk_rest(seq__20534__$1);
          var G__20545 = c__6367__auto__;
          var G__20546 = cljs.core.count(c__6367__auto__);
          var G__20547 = 0;
          seq__20534 = G__20544;
          chunk__20535 = G__20545;
          count__20536 = G__20546;
          i__20537 = G__20547;
          continue;
        } else {
          var vec__20539 = cljs.core.first(seq__20534__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20539, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20539, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__20548 = cljs.core.next(seq__20534__$1);
          var G__20549 = null;
          var G__20550 = 0;
          var G__20551 = 0;
          seq__20534 = G__20548;
          chunk__20535 = G__20549;
          count__20536 = G__20550;
          i__20537 = G__20551;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__20532_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__20532_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__20552 = null;
  var G__20552__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20552__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20552 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20552__2.call(this, self__, k);
      case 3:
        return G__20552__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20552.cljs$core$IFn$_invoke$arity$2 = G__20552__2;
  G__20552.cljs$core$IFn$_invoke$arity$3 = G__20552__3;
  return G__20552;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args20533) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20533)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__20553 = i + 1;
        var G__20554 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__20553;
        out = G__20554;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__20555 = i + 1;
        var G__20556 = cljs.core._conj_BANG_(out, items[i]);
        i = G__20555;
        out = G__20556;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__20558 = null;
  var G__20558__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__20558__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__20558 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20558__2.call(this, self__, k);
      case 3:
        return G__20558__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20558.cljs$core$IFn$_invoke$arity$2 = G__20558__2;
  G__20558.cljs$core$IFn$_invoke$arity$3 = G__20558__3;
  return G__20558;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args20557) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20557)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20561 = cljs.core.seq(coll);
  var chunk__20562 = null;
  var count__20563 = 0;
  var i__20564 = 0;
  while (true) {
    if (i__20564 < count__20563) {
      var vec__20565 = chunk__20562.cljs$core$IIndexed$_nth$arity$2(null, i__20564);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20565, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20565, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__20567 = seq__20561;
      var G__20568 = chunk__20562;
      var G__20569 = count__20563;
      var G__20570 = i__20564 + 1;
      seq__20561 = G__20567;
      chunk__20562 = G__20568;
      count__20563 = G__20569;
      i__20564 = G__20570;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__20561);
      if (temp__4425__auto__) {
        var seq__20561__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20561__$1)) {
          var c__6367__auto__ = cljs.core.chunk_first(seq__20561__$1);
          var G__20571 = cljs.core.chunk_rest(seq__20561__$1);
          var G__20572 = c__6367__auto__;
          var G__20573 = cljs.core.count(c__6367__auto__);
          var G__20574 = 0;
          seq__20561 = G__20571;
          chunk__20562 = G__20572;
          count__20563 = G__20573;
          i__20564 = G__20574;
          continue;
        } else {
          var vec__20566 = cljs.core.first(seq__20561__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20566, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20566, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__20575 = cljs.core.next(seq__20561__$1);
          var G__20576 = null;
          var G__20577 = 0;
          var G__20578 = 0;
          seq__20561 = G__20575;
          chunk__20562 = G__20576;
          count__20563 = G__20577;
          i__20564 = G__20578;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__20559_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__20559_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__20579 = null;
  var G__20579__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20579__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20579 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20579__2.call(this, self__, k);
      case 3:
        return G__20579__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20579.cljs$core$IFn$_invoke$arity$2 = G__20579__2;
  G__20579.cljs$core$IFn$_invoke$arity$3 = G__20579__3;
  return G__20579;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args20560) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20560)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__6461__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__6461__auto__.length) {
        var G__20580 = i + 1;
        var G__20581 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__20580;
        res = G__20581;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__20582 = cljs.core.next(in$__$1);
          var G__20583 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__20582;
          out = G__20583;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set() {
  var args20584 = [];
  var len__6622__auto___20588 = arguments.length;
  var i__6623__auto___20589 = 0;
  while (true) {
    if (i__6623__auto___20589 < len__6622__auto___20588) {
      args20584.push(arguments[i__6623__auto___20589]);
      var G__20590 = i__6623__auto___20589 + 1;
      i__6623__auto___20589 = G__20590;
      continue;
    } else {
    }
    break;
  }
  var G__20587 = args20584.length;
  switch(G__20587) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args20584.slice(0), 0);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__6641__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq20585) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20585));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set() {
  var args__6629__auto__ = [];
  var len__6622__auto___20593 = arguments.length;
  var i__6623__auto___20594 = 0;
  while (true) {
    if (i__6623__auto___20594 < len__6622__auto___20593) {
      args__6629__auto__.push(arguments[i__6623__auto___20594]);
      var G__20595 = i__6623__auto___20594 + 1;
      i__6623__auto___20594 = G__20595;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 0 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(0), 0) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__6630__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq20592) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20592));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by() {
  var args__6629__auto__ = [];
  var len__6622__auto___20598 = arguments.length;
  var i__6623__auto___20599 = 0;
  while (true) {
    if (i__6623__auto___20599 < len__6622__auto___20598) {
      args__6629__auto__.push(arguments[i__6623__auto___20599]);
      var G__20600 = i__6623__auto___20599 + 1;
      i__6623__auto___20599 = G__20600;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 1 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(1), 0) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__6630__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq20596) {
  var G__20597 = cljs.core.first(seq20596);
  var seq20596__$1 = cljs.core.next(seq20596);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__20597, seq20596__$1);
};
cljs.core.replace = function cljs$core$replace() {
  var args20603 = [];
  var len__6622__auto___20606 = arguments.length;
  var i__6623__auto___20607 = 0;
  while (true) {
    if (i__6623__auto___20607 < len__6622__auto___20606) {
      args20603.push(arguments[i__6623__auto___20607]);
      var G__20608 = i__6623__auto___20607 + 1;
      i__6623__auto___20607 = G__20608;
      continue;
    } else {
    }
    break;
  }
  var G__20605 = args20603.length;
  switch(G__20605) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20603.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__20601_SHARP_) {
    var temp__4423__auto__ = cljs.core.find(smap, p1__20601_SHARP_);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var e = temp__4423__auto__;
      return cljs.core.val(e);
    } else {
      return p1__20601_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4423__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__20602_SHARP_) {
      var temp__4423__auto__ = cljs.core.find(smap, p1__20602_SHARP_);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var e = temp__4423__auto__;
        return cljs.core.second(e);
      } else {
        return p1__20602_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct() {
  var args20610 = [];
  var len__6622__auto___20619 = arguments.length;
  var i__6623__auto___20620 = 0;
  while (true) {
    if (i__6623__auto___20620 < len__6622__auto___20619) {
      args20610.push(arguments[i__6623__auto___20620]);
      var G__20621 = i__6623__auto___20620 + 1;
      i__6623__auto___20620 = G__20621;
      continue;
    } else {
    }
    break;
  }
  var G__20612 = args20610.length;
  switch(G__20612) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20610.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__20623 = null;
        var G__20623__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__20623__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__20623__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(seen) : cljs.core.deref.call(null, seen), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__20623 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20623__0.call(this);
            case 1:
              return G__20623__1.call(this, result);
            case 2:
              return G__20623__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20623.cljs$core$IFn$_invoke$arity$0 = G__20623__0;
        G__20623.cljs$core$IFn$_invoke$arity$1 = G__20623__1;
        G__20623.cljs$core$IFn$_invoke$arity$2 = G__20623__2;
        return G__20623;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__20617, seen__$1) {
        while (true) {
          var vec__20618 = p__20617;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20618, 0, null);
          var xs__$1 = vec__20618;
          var temp__4425__auto__ = cljs.core.seq(xs__$1);
          if (temp__4425__auto__) {
            var s = temp__4425__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__20624 = cljs.core.rest(s);
              var G__20625 = seen__$1;
              p__20617 = G__20624;
              seen__$1 = G__20625;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__20626 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__20627 = cljs.core.next(s__$1);
      ret = G__20626;
      s__$1 = G__20627;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__20630 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__20631 = cljs.core.next(ks);
      var G__20632 = cljs.core.next(vs);
      map = G__20630;
      ks = G__20631;
      vs = G__20632;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key() {
  var args20635 = [];
  var len__6622__auto___20642 = arguments.length;
  var i__6623__auto___20643 = 0;
  while (true) {
    if (i__6623__auto___20643 < len__6622__auto___20642) {
      args20635.push(arguments[i__6623__auto___20643]);
      var G__20644 = i__6623__auto___20643 + 1;
      i__6623__auto___20643 = G__20644;
      continue;
    } else {
    }
    break;
  }
  var G__20641 = args20635.length;
  switch(G__20641) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args20635.slice(3), 0);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__6641__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__20633_SHARP_, p2__20634_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__20633_SHARP_, p2__20634_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq20636) {
  var G__20637 = cljs.core.first(seq20636);
  var seq20636__$1 = cljs.core.next(seq20636);
  var G__20638 = cljs.core.first(seq20636__$1);
  var seq20636__$2 = cljs.core.next(seq20636__$1);
  var G__20639 = cljs.core.first(seq20636__$2);
  var seq20636__$3 = cljs.core.next(seq20636__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__20637, G__20638, G__20639, seq20636__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key() {
  var args20648 = [];
  var len__6622__auto___20655 = arguments.length;
  var i__6623__auto___20656 = 0;
  while (true) {
    if (i__6623__auto___20656 < len__6622__auto___20655) {
      args20648.push(arguments[i__6623__auto___20656]);
      var G__20657 = i__6623__auto___20656 + 1;
      i__6623__auto___20656 = G__20657;
      continue;
    } else {
    }
    break;
  }
  var G__20654 = args20648.length;
  switch(G__20654) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args20648.slice(3), 0);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__6641__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__20646_SHARP_, p2__20647_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__20646_SHARP_, p2__20647_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq20649) {
  var G__20650 = cljs.core.first(seq20649);
  var seq20649__$1 = cljs.core.next(seq20649);
  var G__20651 = cljs.core.first(seq20649__$1);
  var seq20649__$2 = cljs.core.next(seq20649__$1);
  var G__20652 = cljs.core.first(seq20649__$2);
  var seq20649__$3 = cljs.core.next(seq20649__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__20650, G__20651, G__20652, seq20649__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all() {
  var args20659 = [];
  var len__6622__auto___20662 = arguments.length;
  var i__6623__auto___20663 = 0;
  while (true) {
    if (i__6623__auto___20663 < len__6622__auto___20662) {
      args20659.push(arguments[i__6623__auto___20663]);
      var G__20664 = i__6623__auto___20663 + 1;
      i__6623__auto___20663 = G__20664;
      continue;
    } else {
    }
    break;
  }
  var G__20661 = args20659.length;
  switch(G__20661) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20659.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__20666 = null;
        var G__20666__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__20666__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__20666__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__20666 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20666__0.call(this);
            case 1:
              return G__20666__1.call(this, result);
            case 2:
              return G__20666__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20666.cljs$core$IFn$_invoke$arity$0 = G__20666__0;
        G__20666.cljs$core$IFn$_invoke$arity$1 = G__20666__1;
        G__20666.cljs$core$IFn$_invoke$arity$2 = G__20666__2;
        return G__20666;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while() {
  var args20667 = [];
  var len__6622__auto___20671 = arguments.length;
  var i__6623__auto___20672 = 0;
  while (true) {
    if (i__6623__auto___20672 < len__6622__auto___20671) {
      args20667.push(arguments[i__6623__auto___20672]);
      var G__20673 = i__6623__auto___20672 + 1;
      i__6623__auto___20672 = G__20673;
      continue;
    } else {
    }
    break;
  }
  var G__20669 = args20667.length;
  switch(G__20669) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20667.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__20675 = null;
      var G__20675__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__20675__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__20675__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__20675 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__20675__0.call(this);
          case 1:
            return G__20675__1.call(this, result);
          case 2:
            return G__20675__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20675.cljs$core$IFn$_invoke$arity$0 = G__20675__0;
      G__20675.cljs$core$IFn$_invoke$arity$1 = G__20675__1;
      G__20675.cljs$core$IFn$_invoke$arity$2 = G__20675__2;
      return G__20675;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.truth_(function() {
        var G__20670 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20670) : pred.call(null, G__20670);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__20684 = function() {
      var G__20686 = cljs.core._entry_key(sc, e);
      var G__20687 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20686, G__20687) : comp.call(null, G__20686, G__20687);
    }();
    var G__20685 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__20684, G__20685) : test.call(null, G__20684, G__20685);
  };
};
cljs.core.subseq = function cljs$core$subseq() {
  var args20688 = [];
  var len__6622__auto___20693 = arguments.length;
  var i__6623__auto___20694 = 0;
  while (true) {
    if (i__6623__auto___20694 < len__6622__auto___20693) {
      args20688.push(arguments[i__6623__auto___20694]);
      var G__20695 = i__6623__auto___20694 + 1;
      i__6623__auto___20694 = G__20695;
      continue;
    } else {
    }
    break;
  }
  var G__20690 = args20688.length;
  switch(G__20690) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20688.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__20691 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20691, 0, null);
      var s = vec__20691;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__20692 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20692, 0, null);
    var s = vec__20692;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq() {
  var args20697 = [];
  var len__6622__auto___20702 = arguments.length;
  var i__6623__auto___20703 = 0;
  while (true) {
    if (i__6623__auto___20703 < len__6622__auto___20702) {
      args20697.push(arguments[i__6623__auto___20703]);
      var G__20704 = i__6623__auto___20703 + 1;
      i__6623__auto___20703 = G__20704;
      continue;
    } else {
    }
    break;
  }
  var G__20699 = args20697.length;
  switch(G__20699) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20697.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__20700 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20700, 0, null);
      var s = vec__20700;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__20701 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20701, 0, null);
    var s = vec__20701;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__20706 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__20706);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(ret__$1) : cljs.core.deref.call(null, ret__$1);
      } else {
        var G__20707 = i + self__.step;
        var G__20708 = ret__$1;
        i = G__20707;
        ret = G__20708;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.range = function cljs$core$range() {
  var args20709 = [];
  var len__6622__auto___20712 = arguments.length;
  var i__6623__auto___20713 = 0;
  while (true) {
    if (i__6623__auto___20713 < len__6622__auto___20712) {
      args20709.push(arguments[i__6623__auto___20713]);
      var G__20714 = i__6623__auto___20713 + 1;
      i__6623__auto___20713 = G__20714;
      continue;
    } else {
    }
    break;
  }
  var G__20711 = args20709.length;
  switch(G__20711) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20709.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth() {
  var args20716 = [];
  var len__6622__auto___20721 = arguments.length;
  var i__6623__auto___20722 = 0;
  while (true) {
    if (i__6623__auto___20722 < len__6622__auto___20721) {
      args20716.push(arguments[i__6623__auto___20722]);
      var G__20723 = i__6623__auto___20722 + 1;
      i__6623__auto___20722 = G__20723;
      continue;
    } else {
    }
    break;
  }
  var G__20718 = args20716.length;
  switch(G__20718) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20716.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__20719 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__20719) : cljs.core.pr_str.call(null, G__20719);
    }())].join(""));
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__20725 = null;
        var G__20725__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__20725__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__20725__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__20725 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20725__0.call(this);
            case 1:
              return G__20725__1.call(this, result);
            case 2:
              return G__20725__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20725.cljs$core$IFn$_invoke$arity$0 = G__20725__0;
        G__20725.cljs$core$IFn$_invoke$arity$1 = G__20725__1;
        G__20725.cljs$core$IFn$_invoke$arity$2 = G__20725__2;
        return G__20725;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__20720 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__20720) : cljs.core.pr_str.call(null, G__20720);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by() {
  var args20727 = [];
  var len__6622__auto___20730 = arguments.length;
  var i__6623__auto___20731 = 0;
  while (true) {
    if (i__6623__auto___20731 < len__6622__auto___20730) {
      args20727.push(arguments[i__6623__auto___20731]);
      var G__20732 = i__6623__auto___20731 + 1;
      i__6623__auto___20731 = G__20732;
      continue;
    } else {
    }
    break;
  }
  var G__20729 = args20727.length;
  switch(G__20729) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20727.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__20734 = null;
        var G__20734__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__20734__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__20734__2 = function(result, input) {
          var pval = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__20734 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20734__0.call(this);
            case 1:
              return G__20734__1.call(this, result);
            case 2:
              return G__20734__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20734.cljs$core$IFn$_invoke$arity$0 = G__20734__0;
        G__20734.cljs$core$IFn$_invoke$arity$1 = G__20734__1;
        G__20734.cljs$core$IFn$_invoke$arity$2 = G__20734__2;
        return G__20734;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4425__auto__) {
        return function(p1__20726_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__20726_SHARP_) : f.call(null, p1__20726_SHARP_));
        };
      }(fst, fv, s, temp__4425__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions() {
  var args20735 = [];
  var len__6622__auto___20740 = arguments.length;
  var i__6623__auto___20741 = 0;
  while (true) {
    if (i__6623__auto___20741 < len__6622__auto___20740) {
      args20735.push(arguments[i__6623__auto___20741]);
      var G__20742 = i__6623__auto___20741 + 1;
      i__6623__auto___20741 = G__20742;
      continue;
    } else {
    }
    break;
  }
  var G__20737 = args20735.length;
  switch(G__20737) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20735.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4423__auto__ = cljs.core.seq(coll);
    if (temp__4423__auto__) {
      var s = temp__4423__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__20738 = init;
        var G__20739 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20738, G__20739) : f.call(null, G__20738, G__20739);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt() {
  var args20754 = [];
  var len__6622__auto___20761 = arguments.length;
  var i__6623__auto___20762 = 0;
  while (true) {
    if (i__6623__auto___20762 < len__6622__auto___20761) {
      args20754.push(arguments[i__6623__auto___20762]);
      var G__20763 = i__6623__auto___20762 + 1;
      i__6623__auto___20762 = G__20763;
      continue;
    } else {
    }
    break;
  }
  var G__20760 = args20754.length;
  switch(G__20760) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args20754.slice(3), 0);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__6641__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__20765 = null;
    var G__20765__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__20765__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__20765__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__20765__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__20765__4 = function() {
      var G__20766__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__20766 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__20767__i = 0, G__20767__a = new Array(arguments.length - 3);
          while (G__20767__i < G__20767__a.length) {
            G__20767__a[G__20767__i] = arguments[G__20767__i + 3];
            ++G__20767__i;
          }
          args = new cljs.core.IndexedSeq(G__20767__a, 0);
        }
        return G__20766__delegate.call(this, x, y, z, args);
      };
      G__20766.cljs$lang$maxFixedArity = 3;
      G__20766.cljs$lang$applyTo = function(arglist__20768) {
        var x = cljs.core.first(arglist__20768);
        arglist__20768 = cljs.core.next(arglist__20768);
        var y = cljs.core.first(arglist__20768);
        arglist__20768 = cljs.core.next(arglist__20768);
        var z = cljs.core.first(arglist__20768);
        var args = cljs.core.rest(arglist__20768);
        return G__20766__delegate(x, y, z, args);
      };
      G__20766.cljs$core$IFn$_invoke$arity$variadic = G__20766__delegate;
      return G__20766;
    }();
    G__20765 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__20765__0.call(this);
        case 1:
          return G__20765__1.call(this, x);
        case 2:
          return G__20765__2.call(this, x, y);
        case 3:
          return G__20765__3.call(this, x, y, z);
        default:
          var G__20769 = null;
          if (arguments.length > 3) {
            var G__20770__i = 0, G__20770__a = new Array(arguments.length - 3);
            while (G__20770__i < G__20770__a.length) {
              G__20770__a[G__20770__i] = arguments[G__20770__i + 3];
              ++G__20770__i;
            }
            G__20769 = new cljs.core.IndexedSeq(G__20770__a, 0);
          }
          return G__20765__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20769);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__20765.cljs$lang$maxFixedArity = 3;
    G__20765.cljs$lang$applyTo = G__20765__4.cljs$lang$applyTo;
    G__20765.cljs$core$IFn$_invoke$arity$0 = G__20765__0;
    G__20765.cljs$core$IFn$_invoke$arity$1 = G__20765__1;
    G__20765.cljs$core$IFn$_invoke$arity$2 = G__20765__2;
    G__20765.cljs$core$IFn$_invoke$arity$3 = G__20765__3;
    G__20765.cljs$core$IFn$_invoke$arity$variadic = G__20765__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__20765;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__20771 = null;
    var G__20771__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__20771__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__20771__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__20771__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__20771__4 = function() {
      var G__20772__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__20772 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__20773__i = 0, G__20773__a = new Array(arguments.length - 3);
          while (G__20773__i < G__20773__a.length) {
            G__20773__a[G__20773__i] = arguments[G__20773__i + 3];
            ++G__20773__i;
          }
          args = new cljs.core.IndexedSeq(G__20773__a, 0);
        }
        return G__20772__delegate.call(this, x, y, z, args);
      };
      G__20772.cljs$lang$maxFixedArity = 3;
      G__20772.cljs$lang$applyTo = function(arglist__20774) {
        var x = cljs.core.first(arglist__20774);
        arglist__20774 = cljs.core.next(arglist__20774);
        var y = cljs.core.first(arglist__20774);
        arglist__20774 = cljs.core.next(arglist__20774);
        var z = cljs.core.first(arglist__20774);
        var args = cljs.core.rest(arglist__20774);
        return G__20772__delegate(x, y, z, args);
      };
      G__20772.cljs$core$IFn$_invoke$arity$variadic = G__20772__delegate;
      return G__20772;
    }();
    G__20771 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__20771__0.call(this);
        case 1:
          return G__20771__1.call(this, x);
        case 2:
          return G__20771__2.call(this, x, y);
        case 3:
          return G__20771__3.call(this, x, y, z);
        default:
          var G__20775 = null;
          if (arguments.length > 3) {
            var G__20776__i = 0, G__20776__a = new Array(arguments.length - 3);
            while (G__20776__i < G__20776__a.length) {
              G__20776__a[G__20776__i] = arguments[G__20776__i + 3];
              ++G__20776__i;
            }
            G__20775 = new cljs.core.IndexedSeq(G__20776__a, 0);
          }
          return G__20771__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20775);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__20771.cljs$lang$maxFixedArity = 3;
    G__20771.cljs$lang$applyTo = G__20771__4.cljs$lang$applyTo;
    G__20771.cljs$core$IFn$_invoke$arity$0 = G__20771__0;
    G__20771.cljs$core$IFn$_invoke$arity$1 = G__20771__1;
    G__20771.cljs$core$IFn$_invoke$arity$2 = G__20771__2;
    G__20771.cljs$core$IFn$_invoke$arity$3 = G__20771__3;
    G__20771.cljs$core$IFn$_invoke$arity$variadic = G__20771__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__20771;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__20777 = null;
    var G__20777__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__20777__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__20777__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__20777__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__20777__4 = function() {
      var G__20778__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__20778 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__20779__i = 0, G__20779__a = new Array(arguments.length - 3);
          while (G__20779__i < G__20779__a.length) {
            G__20779__a[G__20779__i] = arguments[G__20779__i + 3];
            ++G__20779__i;
          }
          args = new cljs.core.IndexedSeq(G__20779__a, 0);
        }
        return G__20778__delegate.call(this, x, y, z, args);
      };
      G__20778.cljs$lang$maxFixedArity = 3;
      G__20778.cljs$lang$applyTo = function(arglist__20780) {
        var x = cljs.core.first(arglist__20780);
        arglist__20780 = cljs.core.next(arglist__20780);
        var y = cljs.core.first(arglist__20780);
        arglist__20780 = cljs.core.next(arglist__20780);
        var z = cljs.core.first(arglist__20780);
        var args = cljs.core.rest(arglist__20780);
        return G__20778__delegate(x, y, z, args);
      };
      G__20778.cljs$core$IFn$_invoke$arity$variadic = G__20778__delegate;
      return G__20778;
    }();
    G__20777 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__20777__0.call(this);
        case 1:
          return G__20777__1.call(this, x);
        case 2:
          return G__20777__2.call(this, x, y);
        case 3:
          return G__20777__3.call(this, x, y, z);
        default:
          var G__20781 = null;
          if (arguments.length > 3) {
            var G__20782__i = 0, G__20782__a = new Array(arguments.length - 3);
            while (G__20782__i < G__20782__a.length) {
              G__20782__a[G__20782__i] = arguments[G__20782__i + 3];
              ++G__20782__i;
            }
            G__20781 = new cljs.core.IndexedSeq(G__20782__a, 0);
          }
          return G__20777__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20781);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__20777.cljs$lang$maxFixedArity = 3;
    G__20777.cljs$lang$applyTo = G__20777__4.cljs$lang$applyTo;
    G__20777.cljs$core$IFn$_invoke$arity$0 = G__20777__0;
    G__20777.cljs$core$IFn$_invoke$arity$1 = G__20777__1;
    G__20777.cljs$core$IFn$_invoke$arity$2 = G__20777__2;
    G__20777.cljs$core$IFn$_invoke$arity$3 = G__20777__3;
    G__20777.cljs$core$IFn$_invoke$arity$variadic = G__20777__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__20777;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__20783 = null;
      var G__20783__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__20744_SHARP_, p2__20745_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20744_SHARP_, p2__20745_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__20745_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__20745_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__20783__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__20746_SHARP_, p2__20747_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20746_SHARP_, p2__20747_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__20747_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__20747_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__20783__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__20748_SHARP_, p2__20749_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20748_SHARP_, p2__20749_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__20749_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__20749_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__20783__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__20750_SHARP_, p2__20751_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20750_SHARP_, p2__20751_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__20751_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__20751_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__20783__4 = function() {
        var G__20784__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__20752_SHARP_, p2__20753_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20752_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__20753_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__20784 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__20785__i = 0, G__20785__a = new Array(arguments.length - 3);
            while (G__20785__i < G__20785__a.length) {
              G__20785__a[G__20785__i] = arguments[G__20785__i + 3];
              ++G__20785__i;
            }
            args = new cljs.core.IndexedSeq(G__20785__a, 0);
          }
          return G__20784__delegate.call(this, x, y, z, args);
        };
        G__20784.cljs$lang$maxFixedArity = 3;
        G__20784.cljs$lang$applyTo = function(arglist__20786) {
          var x = cljs.core.first(arglist__20786);
          arglist__20786 = cljs.core.next(arglist__20786);
          var y = cljs.core.first(arglist__20786);
          arglist__20786 = cljs.core.next(arglist__20786);
          var z = cljs.core.first(arglist__20786);
          var args = cljs.core.rest(arglist__20786);
          return G__20784__delegate(x, y, z, args);
        };
        G__20784.cljs$core$IFn$_invoke$arity$variadic = G__20784__delegate;
        return G__20784;
      }();
      G__20783 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__20783__0.call(this);
          case 1:
            return G__20783__1.call(this, x);
          case 2:
            return G__20783__2.call(this, x, y);
          case 3:
            return G__20783__3.call(this, x, y, z);
          default:
            var G__20787 = null;
            if (arguments.length > 3) {
              var G__20788__i = 0, G__20788__a = new Array(arguments.length - 3);
              while (G__20788__i < G__20788__a.length) {
                G__20788__a[G__20788__i] = arguments[G__20788__i + 3];
                ++G__20788__i;
              }
              G__20787 = new cljs.core.IndexedSeq(G__20788__a, 0);
            }
            return G__20783__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20787);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20783.cljs$lang$maxFixedArity = 3;
      G__20783.cljs$lang$applyTo = G__20783__4.cljs$lang$applyTo;
      G__20783.cljs$core$IFn$_invoke$arity$0 = G__20783__0;
      G__20783.cljs$core$IFn$_invoke$arity$1 = G__20783__1;
      G__20783.cljs$core$IFn$_invoke$arity$2 = G__20783__2;
      G__20783.cljs$core$IFn$_invoke$arity$3 = G__20783__3;
      G__20783.cljs$core$IFn$_invoke$arity$variadic = G__20783__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__20783;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq20755) {
  var G__20756 = cljs.core.first(seq20755);
  var seq20755__$1 = cljs.core.next(seq20755);
  var G__20757 = cljs.core.first(seq20755__$1);
  var seq20755__$2 = cljs.core.next(seq20755__$1);
  var G__20758 = cljs.core.first(seq20755__$2);
  var seq20755__$3 = cljs.core.next(seq20755__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__20756, G__20757, G__20758, seq20755__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun() {
  var args20789 = [];
  var len__6622__auto___20792 = arguments.length;
  var i__6623__auto___20793 = 0;
  while (true) {
    if (i__6623__auto___20793 < len__6622__auto___20792) {
      args20789.push(arguments[i__6623__auto___20793]);
      var G__20794 = i__6623__auto___20793 + 1;
      i__6623__auto___20793 = G__20794;
      continue;
    } else {
    }
    break;
  }
  var G__20791 = args20789.length;
  switch(G__20791) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20789.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__20796 = cljs.core.next(coll);
      coll = G__20796;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__20797 = n - 1;
      var G__20798 = cljs.core.next(coll);
      n = G__20797;
      coll = G__20798;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall() {
  var args20799 = [];
  var len__6622__auto___20802 = arguments.length;
  var i__6623__auto___20803 = 0;
  while (true) {
    if (i__6623__auto___20803 < len__6622__auto___20802) {
      args20799.push(arguments[i__6623__auto___20803]);
      var G__20804 = i__6623__auto___20803 + 1;
      i__6623__auto___20803 = G__20804;
      continue;
    } else {
    }
    break;
  }
  var G__20801 = args20799.length;
  switch(G__20801) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20799.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__20807 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20807, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20807, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__5583__auto__ = flags;
      if (cljs.core.truth_(or__5583__auto__)) {
        return or__5583__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_20815 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__5583__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__5583__auto__)) {
              return or__5583__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__20816_20822 = cljs.core.first(coll);
          var G__20817_20823 = writer;
          var G__20818_20824 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20816_20822, G__20817_20823, G__20818_20824) : print_one.call(null, G__20816_20822, G__20817_20823, G__20818_20824);
        } else {
        }
        var coll_20825__$1 = cljs.core.next(coll);
        var n_20826 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_20825__$1 && (n_20826 == null || !(n_20826 === 0))) {
            cljs.core._write(writer, sep);
            var G__20819_20827 = cljs.core.first(coll_20825__$1);
            var G__20820_20828 = writer;
            var G__20821_20829 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20819_20827, G__20820_20828, G__20821_20829) : print_one.call(null, G__20819_20827, G__20820_20828, G__20821_20829);
            var G__20830 = cljs.core.next(coll_20825__$1);
            var G__20831 = n_20826 - 1;
            coll_20825__$1 = G__20830;
            n_20826 = G__20831;
            continue;
          } else {
            if (cljs.core.seq(coll_20825__$1) && n_20826 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__5583__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__5583__auto__)) {
                  return or__5583__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_20815;
  }
};
cljs.core.write_all = function cljs$core$write_all() {
  var args__6629__auto__ = [];
  var len__6622__auto___20838 = arguments.length;
  var i__6623__auto___20839 = 0;
  while (true) {
    if (i__6623__auto___20839 < len__6622__auto___20838) {
      args__6629__auto__.push(arguments[i__6623__auto___20839]);
      var G__20840 = i__6623__auto___20839 + 1;
      i__6623__auto___20839 = G__20840;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 1 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(1), 0) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__6630__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__20834 = cljs.core.seq(ss);
  var chunk__20835 = null;
  var count__20836 = 0;
  var i__20837 = 0;
  while (true) {
    if (i__20837 < count__20836) {
      var s = chunk__20835.cljs$core$IIndexed$_nth$arity$2(null, i__20837);
      cljs.core._write(writer, s);
      var G__20841 = seq__20834;
      var G__20842 = chunk__20835;
      var G__20843 = count__20836;
      var G__20844 = i__20837 + 1;
      seq__20834 = G__20841;
      chunk__20835 = G__20842;
      count__20836 = G__20843;
      i__20837 = G__20844;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__20834);
      if (temp__4425__auto__) {
        var seq__20834__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20834__$1)) {
          var c__6367__auto__ = cljs.core.chunk_first(seq__20834__$1);
          var G__20845 = cljs.core.chunk_rest(seq__20834__$1);
          var G__20846 = c__6367__auto__;
          var G__20847 = cljs.core.count(c__6367__auto__);
          var G__20848 = 0;
          seq__20834 = G__20845;
          chunk__20835 = G__20846;
          count__20836 = G__20847;
          i__20837 = G__20848;
          continue;
        } else {
          var s = cljs.core.first(seq__20834__$1);
          cljs.core._write(writer, s);
          var G__20849 = cljs.core.next(seq__20834__$1);
          var G__20850 = null;
          var G__20851 = 0;
          var G__20852 = 0;
          seq__20834 = G__20849;
          chunk__20835 = G__20850;
          count__20836 = G__20851;
          i__20837 = G__20852;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq20832) {
  var G__20833 = cljs.core.first(seq20832);
  var seq20832__$1 = cljs.core.next(seq20832);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__20833, seq20832__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj20854 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj20854;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__5571__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__5571__auto__) {
    var and__5571__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || obj.cljs$core$IMeta$ ? true : false : false;
    if (and__5571__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__5571__auto____$1;
    }
  } else {
    return and__5571__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      var G__20870_20879 = cljs.core.meta(obj);
      var G__20871_20880 = writer;
      var G__20872_20881 = opts;
      cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__20870_20879, G__20871_20880, G__20872_20881) : cljs.core.pr_writer.call(null, G__20870_20879, G__20871_20880, G__20872_20881);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
        return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
      } else {
        if (obj === true || obj === false || typeof obj === "number") {
          return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
        } else {
          if (cljs.core.object_QMARK_(obj)) {
            cljs.core._write(writer, "#js ");
            var G__20874 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
            }, cljs.core.js_keys(obj));
            var G__20875 = cljs.core.pr_writer;
            var G__20876 = writer;
            var G__20877 = opts;
            return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__20874, G__20875, G__20876, G__20877) : cljs.core.print_map.call(null, G__20874, G__20875, G__20876, G__20877);
          } else {
            if (cljs.core.array_QMARK_(obj)) {
              return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
            } else {
              if (goog.isString(obj)) {
                if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                  return cljs.core._write(writer, cljs.core.quote_string(obj));
                } else {
                  return cljs.core._write(writer, obj);
                }
              } else {
                if (goog.isFunction(obj)) {
                  var name = obj.name;
                  var name__$1 = cljs.core.truth_(function() {
                    var or__5583__auto__ = name == null;
                    if (or__5583__auto__) {
                      return or__5583__auto__;
                    } else {
                      return goog.string.isEmpty(name);
                    }
                  }()) ? "Function" : name;
                  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, ' "', [cljs.core.str(obj)].join(""), '"]'], 0));
                } else {
                  if (obj instanceof Date) {
                    var normalize = function(n, len) {
                      var ns = [cljs.core.str(n)].join("");
                      while (true) {
                        if (cljs.core.count(ns) < len) {
                          var G__20882 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                          ns = G__20882;
                          continue;
                        } else {
                          return ns;
                        }
                        break;
                      }
                    };
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                  } else {
                    if (cljs.core.regexp_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                    } else {
                      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
                        return cljs.core._pr_writer(obj, writer, opts);
                      } else {
                        if (cljs.core.truth_(obj.constructor.cljs$lang$ctorStr)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                        } else {
                          var name = obj.constructor.name;
                          var name__$1 = cljs.core.truth_(function() {
                            var or__5583__auto__ = name == null;
                            if (or__5583__auto__) {
                              return or__5583__auto__;
                            } else {
                              return goog.string.isEmpty(name);
                            }
                          }()) ? "Object" : name;
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, " ", [cljs.core.str(obj)].join(""), "]"], 0));
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var alt_impl = temp__4423__auto__;
    var G__20886 = obj;
    var G__20887 = writer;
    var G__20888 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__20886, G__20887, G__20888) : alt_impl.call(null, G__20886, G__20887, G__20888);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__20893 = cljs.core.seq(cljs.core.next(objs));
  var chunk__20894 = null;
  var count__20895 = 0;
  var i__20896 = 0;
  while (true) {
    if (i__20896 < count__20895) {
      var obj = chunk__20894.cljs$core$IIndexed$_nth$arity$2(null, i__20896);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__20897 = seq__20893;
      var G__20898 = chunk__20894;
      var G__20899 = count__20895;
      var G__20900 = i__20896 + 1;
      seq__20893 = G__20897;
      chunk__20894 = G__20898;
      count__20895 = G__20899;
      i__20896 = G__20900;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__20893);
      if (temp__4425__auto__) {
        var seq__20893__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20893__$1)) {
          var c__6367__auto__ = cljs.core.chunk_first(seq__20893__$1);
          var G__20901 = cljs.core.chunk_rest(seq__20893__$1);
          var G__20902 = c__6367__auto__;
          var G__20903 = cljs.core.count(c__6367__auto__);
          var G__20904 = 0;
          seq__20893 = G__20901;
          chunk__20894 = G__20902;
          count__20895 = G__20903;
          i__20896 = G__20904;
          continue;
        } else {
          var obj = cljs.core.first(seq__20893__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__20905 = cljs.core.next(seq__20893__$1);
          var G__20906 = null;
          var G__20907 = 0;
          var G__20908 = 0;
          seq__20893 = G__20905;
          chunk__20894 = G__20906;
          count__20895 = G__20907;
          i__20896 = G__20908;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline() {
  var args20909 = [];
  var len__6622__auto___20912 = arguments.length;
  var i__6623__auto___20913 = 0;
  while (true) {
    if (i__6623__auto___20913 < len__6622__auto___20912) {
      args20909.push(arguments[i__6623__auto___20913]);
      var G__20914 = i__6623__auto___20913 + 1;
      i__6623__auto___20913 = G__20914;
      continue;
    } else {
    }
    break;
  }
  var G__20911 = args20909.length;
  switch(G__20911) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20909.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str() {
  var args__6629__auto__ = [];
  var len__6622__auto___20917 = arguments.length;
  var i__6623__auto___20918 = 0;
  while (true) {
    if (i__6623__auto___20918 < len__6622__auto___20917) {
      args__6629__auto__.push(arguments[i__6623__auto___20918]);
      var G__20919 = i__6623__auto___20918 + 1;
      i__6623__auto___20918 = G__20919;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 0 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(0), 0) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__6630__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq20916) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20916));
};
cljs.core.prn_str = function cljs$core$prn_str() {
  var args__6629__auto__ = [];
  var len__6622__auto___20921 = arguments.length;
  var i__6623__auto___20922 = 0;
  while (true) {
    if (i__6623__auto___20922 < len__6622__auto___20921) {
      args__6629__auto__.push(arguments[i__6623__auto___20922]);
      var G__20923 = i__6623__auto___20922 + 1;
      i__6623__auto___20922 = G__20923;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 0 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(0), 0) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__6630__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq20920) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20920));
};
cljs.core.pr = function cljs$core$pr() {
  var args__6629__auto__ = [];
  var len__6622__auto___20925 = arguments.length;
  var i__6623__auto___20926 = 0;
  while (true) {
    if (i__6623__auto___20926 < len__6622__auto___20925) {
      args__6629__auto__.push(arguments[i__6623__auto___20926]);
      var G__20927 = i__6623__auto___20926 + 1;
      i__6623__auto___20926 = G__20927;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 0 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(0), 0) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__6630__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq20924) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20924));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20928__i = 0, G__20928__a = new Array(arguments.length - 0);
      while (G__20928__i < G__20928__a.length) {
        G__20928__a[G__20928__i] = arguments[G__20928__i + 0];
        ++G__20928__i;
      }
      objs = new cljs.core.IndexedSeq(G__20928__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__20929) {
    var objs = cljs.core.seq(arglist__20929);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str() {
  var args__6629__auto__ = [];
  var len__6622__auto___20931 = arguments.length;
  var i__6623__auto___20932 = 0;
  while (true) {
    if (i__6623__auto___20932 < len__6622__auto___20931) {
      args__6629__auto__.push(arguments[i__6623__auto___20932]);
      var G__20933 = i__6623__auto___20932 + 1;
      i__6623__auto___20932 = G__20933;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 0 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(0), 0) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__6630__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq20930) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20930));
};
cljs.core.println = function cljs$core$println() {
  var args__6629__auto__ = [];
  var len__6622__auto___20935 = arguments.length;
  var i__6623__auto___20936 = 0;
  while (true) {
    if (i__6623__auto___20936 < len__6622__auto___20935) {
      args__6629__auto__.push(arguments[i__6623__auto___20936]);
      var G__20937 = i__6623__auto___20936 + 1;
      i__6623__auto___20936 = G__20937;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 0 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(0), 0) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__6630__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq20934) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20934));
};
cljs.core.println_str = function cljs$core$println_str() {
  var args__6629__auto__ = [];
  var len__6622__auto___20939 = arguments.length;
  var i__6623__auto___20940 = 0;
  while (true) {
    if (i__6623__auto___20940 < len__6622__auto___20939) {
      args__6629__auto__.push(arguments[i__6623__auto___20940]);
      var G__20941 = i__6623__auto___20940 + 1;
      i__6623__auto___20940 = G__20941;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 0 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(0), 0) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__6630__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq20938) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20938));
};
cljs.core.prn = function cljs$core$prn() {
  var args__6629__auto__ = [];
  var len__6622__auto___20943 = arguments.length;
  var i__6623__auto___20944 = 0;
  while (true) {
    if (i__6623__auto___20944 < len__6622__auto___20943) {
      args__6629__auto__.push(arguments[i__6623__auto___20944]);
      var G__20945 = i__6623__auto___20944 + 1;
      i__6623__auto___20944 = G__20945;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 0 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(0), 0) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__6630__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq20942) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20942));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__20952_20958 = cljs.core.key(e);
    var G__20953_20959 = w;
    var G__20954_20960 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20952_20958, G__20953_20959, G__20954_20960) : print_one.call(null, G__20952_20958, G__20953_20959, G__20954_20960);
    cljs.core._write(w, " ");
    var G__20955 = cljs.core.val(e);
    var G__20956 = w;
    var G__20957 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20955, G__20956, G__20957) : print_one.call(null, G__20955, G__20956, G__20957);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_() {
  var args__6629__auto__ = [];
  var len__6622__auto___20964 = arguments.length;
  var i__6623__auto___20965 = 0;
  while (true) {
    if (i__6623__auto___20965 < len__6622__auto___20964) {
      args__6629__auto__.push(arguments[i__6623__auto___20965]);
      var G__20966 = i__6623__auto___20965 + 1;
      i__6623__auto___20965 = G__20966;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 2 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(2), 0) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6630__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq20961) {
  var G__20962 = cljs.core.first(seq20961);
  var seq20961__$1 = cljs.core.next(seq20961);
  var G__20963 = cljs.core.first(seq20961__$1);
  var seq20961__$2 = cljs.core.next(seq20961__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__20962, G__20963, seq20961__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym() {
  var args20967 = [];
  var len__6622__auto___20970 = arguments.length;
  var i__6623__auto___20971 = 0;
  while (true) {
    if (i__6623__auto___20971 < len__6622__auto___20970) {
      args20967.push(arguments[i__6623__auto___20971]);
      var G__20972 = i__6623__auto___20971 + 1;
      i__6623__auto___20971 = G__20972;
      continue;
    } else {
    }
    break;
  }
  var G__20969 = args20967.length;
  switch(G__20969) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20967.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__20974_SHARP_, p2__20975_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__20974_SHARP_, p2__20975_SHARP_) : rf.call(null, p1__20974_SHARP_, p2__20975_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__20976 = null;
      var G__20976__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__20976__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__20976__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__20976 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__20976__0.call(this);
          case 1:
            return G__20976__1.call(this, result);
          case 2:
            return G__20976__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20976.cljs$core$IFn$_invoke$arity$0 = G__20976__0;
      G__20976.cljs$core$IFn$_invoke$arity$1 = G__20976__1;
      G__20976.cljs$core$IFn$_invoke$arity$2 = G__20976__2;
      return G__20976;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe() {
  var args20977 = [];
  var len__6622__auto___20980 = arguments.length;
  var i__6623__auto___20981 = 0;
  while (true) {
    if (i__6623__auto___20981 < len__6622__auto___20980) {
      args20977.push(arguments[i__6623__auto___20981]);
      var G__20982 = i__6623__auto___20981 + 1;
      i__6623__auto___20981 = G__20982;
      continue;
    } else {
    }
    break;
  }
  var G__20979 = args20977.length;
  switch(G__20979) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20977.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__20984 = null;
        var G__20984__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__20984__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__20984__2 = function(result, input) {
          var prior = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__20984 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20984__0.call(this);
            case 1:
              return G__20984__1.call(this, result);
            case 2:
              return G__20984__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20984.cljs$core$IFn$_invoke$arity$0 = G__20984__0;
        G__20984.cljs$core$IFn$_invoke$arity$1 = G__20984__1;
        G__20984.cljs$core$IFn$_invoke$arity$2 = G__20984__2;
        return G__20984;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample() {
  var args20985 = [];
  var len__6622__auto___20988 = arguments.length;
  var i__6623__auto___20989 = 0;
  while (true) {
    if (i__6623__auto___20989 < len__6622__auto___20988) {
      args20985.push(arguments[i__6623__auto___20989]);
      var G__20990 = i__6623__auto___20989 + 1;
      i__6623__auto___20989 = G__20990;
      continue;
    } else {
    }
    break;
  }
  var G__20987 = args20985.length;
  switch(G__20987) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20985.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__6558__auto__ = this;
  return cljs.core.es6_iterator(this__6558__auto__);
};
cljs.core.eduction = function cljs$core$eduction() {
  var args__6629__auto__ = [];
  var len__6622__auto___20993 = arguments.length;
  var i__6623__auto___20994 = 0;
  while (true) {
    if (i__6623__auto___20994 < len__6622__auto___20993) {
      args__6629__auto__.push(arguments[i__6623__auto___20994]);
      var G__20995 = i__6623__auto___20994 + 1;
      i__6623__auto___20994 = G__20995;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 0 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(0), 0) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__6630__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq20992) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq20992));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__20997_SHARP_, p2__20996_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__20996_SHARP_) : proc.call(null, p2__20996_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = {};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__6219__auto__ = x == null ? null : x;
    var m__6220__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__6220__auto__.call(null, x);
    } else {
      var m__6220__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__6220__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__6219__auto__ = x == null ? null : x;
    var m__6220__auto__ = cljs.core._key__GT_js[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__6220__auto__.call(null, x);
    } else {
      var m__6220__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__6220__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (!(k == null) ? false || k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (!(x == null) ? false || x.cljs$core$IEncodeJS$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x)) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = {};
            var seq__21018_21028 = cljs.core.seq(x);
            var chunk__21019_21029 = null;
            var count__21020_21030 = 0;
            var i__21021_21031 = 0;
            while (true) {
              if (i__21021_21031 < count__21020_21030) {
                var vec__21022_21032 = chunk__21019_21029.cljs$core$IIndexed$_nth$arity$2(null, i__21021_21031);
                var k_21033 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21022_21032, 0, null);
                var v_21034 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21022_21032, 1, null);
                m[cljs.core.key__GT_js(k_21033)] = cljs$core$clj__GT_js(v_21034);
                var G__21035 = seq__21018_21028;
                var G__21036 = chunk__21019_21029;
                var G__21037 = count__21020_21030;
                var G__21038 = i__21021_21031 + 1;
                seq__21018_21028 = G__21035;
                chunk__21019_21029 = G__21036;
                count__21020_21030 = G__21037;
                i__21021_21031 = G__21038;
                continue;
              } else {
                var temp__4425__auto___21039 = cljs.core.seq(seq__21018_21028);
                if (temp__4425__auto___21039) {
                  var seq__21018_21040__$1 = temp__4425__auto___21039;
                  if (cljs.core.chunked_seq_QMARK_(seq__21018_21040__$1)) {
                    var c__6367__auto___21041 = cljs.core.chunk_first(seq__21018_21040__$1);
                    var G__21042 = cljs.core.chunk_rest(seq__21018_21040__$1);
                    var G__21043 = c__6367__auto___21041;
                    var G__21044 = cljs.core.count(c__6367__auto___21041);
                    var G__21045 = 0;
                    seq__21018_21028 = G__21042;
                    chunk__21019_21029 = G__21043;
                    count__21020_21030 = G__21044;
                    i__21021_21031 = G__21045;
                    continue;
                  } else {
                    var vec__21023_21046 = cljs.core.first(seq__21018_21040__$1);
                    var k_21047 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21023_21046, 0, null);
                    var v_21048 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21023_21046, 1, null);
                    m[cljs.core.key__GT_js(k_21047)] = cljs$core$clj__GT_js(v_21048);
                    var G__21049 = cljs.core.next(seq__21018_21040__$1);
                    var G__21050 = null;
                    var G__21051 = 0;
                    var G__21052 = 0;
                    seq__21018_21028 = G__21049;
                    chunk__21019_21029 = G__21050;
                    count__21020_21030 = G__21051;
                    i__21021_21031 = G__21052;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__21024_21053 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__21025_21054 = null;
              var count__21026_21055 = 0;
              var i__21027_21056 = 0;
              while (true) {
                if (i__21027_21056 < count__21026_21055) {
                  var x_21057__$1 = chunk__21025_21054.cljs$core$IIndexed$_nth$arity$2(null, i__21027_21056);
                  arr.push(x_21057__$1);
                  var G__21058 = seq__21024_21053;
                  var G__21059 = chunk__21025_21054;
                  var G__21060 = count__21026_21055;
                  var G__21061 = i__21027_21056 + 1;
                  seq__21024_21053 = G__21058;
                  chunk__21025_21054 = G__21059;
                  count__21026_21055 = G__21060;
                  i__21027_21056 = G__21061;
                  continue;
                } else {
                  var temp__4425__auto___21062 = cljs.core.seq(seq__21024_21053);
                  if (temp__4425__auto___21062) {
                    var seq__21024_21063__$1 = temp__4425__auto___21062;
                    if (cljs.core.chunked_seq_QMARK_(seq__21024_21063__$1)) {
                      var c__6367__auto___21064 = cljs.core.chunk_first(seq__21024_21063__$1);
                      var G__21065 = cljs.core.chunk_rest(seq__21024_21063__$1);
                      var G__21066 = c__6367__auto___21064;
                      var G__21067 = cljs.core.count(c__6367__auto___21064);
                      var G__21068 = 0;
                      seq__21024_21053 = G__21065;
                      chunk__21025_21054 = G__21066;
                      count__21026_21055 = G__21067;
                      i__21027_21056 = G__21068;
                      continue;
                    } else {
                      var x_21069__$1 = cljs.core.first(seq__21024_21063__$1);
                      arr.push(x_21069__$1);
                      var G__21070 = cljs.core.next(seq__21024_21063__$1);
                      var G__21071 = null;
                      var G__21072 = 0;
                      var G__21073 = 0;
                      seq__21024_21053 = G__21070;
                      chunk__21025_21054 = G__21071;
                      count__21026_21055 = G__21072;
                      i__21027_21056 = G__21073;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = {};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__6219__auto__ = x == null ? null : x;
    var m__6220__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__6220__auto__.call(null, x, options);
    } else {
      var m__6220__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__6220__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj() {
  var args21076 = [];
  var len__6622__auto___21101 = arguments.length;
  var i__6623__auto___21102 = 0;
  while (true) {
    if (i__6623__auto___21102 < len__6622__auto___21101) {
      args21076.push(arguments[i__6623__auto___21102]);
      var G__21103 = i__6623__auto___21102 + 1;
      i__6623__auto___21102 = G__21103;
      continue;
    } else {
    }
    break;
  }
  var G__21080 = args21076.length;
  switch(G__21080) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args21076.slice(1), 0);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__6641__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__21081 = opts;
  var map__21081__$1 = (!(map__21081 == null) ? map__21081.cljs$lang$protocol_mask$partition0$ & 64 || map__21081.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__21081) : map__21081;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21081__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__21081, map__21081__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__6336__auto__ = function(map__21081, map__21081__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__21095(s__21096) {
                      return new cljs.core.LazySeq(null, function(map__21081, map__21081__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__21096__$1 = s__21096;
                          while (true) {
                            var temp__4425__auto__ = cljs.core.seq(s__21096__$1);
                            if (temp__4425__auto__) {
                              var s__21096__$2 = temp__4425__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__21096__$2)) {
                                var c__6334__auto__ = cljs.core.chunk_first(s__21096__$2);
                                var size__6335__auto__ = cljs.core.count(c__6334__auto__);
                                var b__21098 = cljs.core.chunk_buffer(size__6335__auto__);
                                if (function() {
                                  var i__21097 = 0;
                                  while (true) {
                                    if (i__21097 < size__6335__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__6334__auto__, i__21097);
                                      cljs.core.chunk_append(b__21098, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null));
                                      var G__21105 = i__21097 + 1;
                                      i__21097 = G__21105;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__21098), cljs$core$thisfn_$_iter__21095(cljs.core.chunk_rest(s__21096__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__21098), null);
                                }
                              } else {
                                var k = cljs.core.first(s__21096__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__21095(cljs.core.rest(s__21096__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__21081, map__21081__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__21081, map__21081__$1, keywordize_keys, keyfn);
                  return iter__6336__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__21081, map__21081__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq21077) {
  var G__21078 = cljs.core.first(seq21077);
  var seq21077__$1 = cljs.core.next(seq21077);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__21078, seq21077__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__21107 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__21107) : cljs.core.atom.call(null, G__21107);
  }();
  return function(mem) {
    return function() {
      var G__21108__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mem) : cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__21108 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__21109__i = 0, G__21109__a = new Array(arguments.length - 0);
          while (G__21109__i < G__21109__a.length) {
            G__21109__a[G__21109__i] = arguments[G__21109__i + 0];
            ++G__21109__i;
          }
          args = new cljs.core.IndexedSeq(G__21109__a, 0);
        }
        return G__21108__delegate.call(this, args);
      };
      G__21108.cljs$lang$maxFixedArity = 0;
      G__21108.cljs$lang$applyTo = function(arglist__21110) {
        var args = cljs.core.seq(arglist__21110);
        return G__21108__delegate(args);
      };
      G__21108.cljs$core$IFn$_invoke$arity$variadic = G__21108__delegate;
      return G__21108;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline() {
  var args21111 = [];
  var len__6622__auto___21116 = arguments.length;
  var i__6623__auto___21117 = 0;
  while (true) {
    if (i__6623__auto___21117 < len__6622__auto___21116) {
      args21111.push(arguments[i__6623__auto___21117]);
      var G__21118 = i__6623__auto___21117 + 1;
      i__6623__auto___21117 = G__21118;
      continue;
    } else {
    }
    break;
  }
  var G__21115 = args21111.length;
  switch(G__21115) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args21111.slice(1), 0);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__6641__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__21120 = ret;
      f = G__21120;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq21112) {
  var G__21113 = cljs.core.first(seq21112);
  var seq21112__$1 = cljs.core.next(seq21112);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__21113, seq21112__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand() {
  var args21121 = [];
  var len__6622__auto___21124 = arguments.length;
  var i__6623__auto___21125 = 0;
  while (true) {
    if (i__6623__auto___21125 < len__6622__auto___21124) {
      args21121.push(arguments[i__6623__auto___21125]);
      var G__21126 = i__6623__auto___21125 + 1;
      i__6623__auto___21125 = G__21126;
      continue;
    } else {
    }
    break;
  }
  var G__21123 = args21121.length;
  switch(G__21123) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21121.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__21129 = Math.random() * n;
  return Math.floor(G__21129);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__21131 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__21131) : cljs.core.atom.call(null, G__21131);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_() {
  var args__6629__auto__ = [];
  var len__6622__auto___21134 = arguments.length;
  var i__6623__auto___21135 = 0;
  while (true) {
    if (i__6623__auto___21135 < len__6622__auto___21134) {
      args__6629__auto__.push(arguments[i__6623__auto___21135]);
      var G__21136 = i__6623__auto___21135 + 1;
      i__6623__auto___21135 = G__21136;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 1 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(1), 0) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__6630__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq21132) {
  var G__21133 = cljs.core.first(seq21132);
  var seq21132__$1 = cljs.core.next(seq21132);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__21133, seq21132__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_() {
  var args21137 = [];
  var len__6622__auto___21141 = arguments.length;
  var i__6623__auto___21142 = 0;
  while (true) {
    if (i__6623__auto___21142 < len__6622__auto___21141) {
      args21137.push(arguments[i__6623__auto___21142]);
      var G__21143 = i__6623__auto___21142 + 1;
      i__6623__auto___21142 = G__21143;
      continue;
    } else {
    }
    break;
  }
  var G__21139 = args21137.length;
  switch(G__21139) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21137.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__21140 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21140) : cljs.core.deref.call(null, G__21140);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__5583__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__5583__auto__) {
    return or__5583__auto__;
  } else {
    var or__5583__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__5583__auto____$1) {
      return or__5583__auto____$1;
    } else {
      var and__5571__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__5571__auto__) {
        var and__5571__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__5571__auto____$1) {
          var and__5571__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__5571__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__21145 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__21146 = i + 1;
                ret = G__21145;
                i = G__21146;
                continue;
              }
              break;
            }
          } else {
            return and__5571__auto____$2;
          }
        } else {
          return and__5571__auto____$1;
        }
      } else {
        return and__5571__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents() {
  var args21147 = [];
  var len__6622__auto___21151 = arguments.length;
  var i__6623__auto___21152 = 0;
  while (true) {
    if (i__6623__auto___21152 < len__6622__auto___21151) {
      args21147.push(arguments[i__6623__auto___21152]);
      var G__21153 = i__6623__auto___21152 + 1;
      i__6623__auto___21152 = G__21153;
      continue;
    } else {
    }
    break;
  }
  var G__21149 = args21147.length;
  switch(G__21149) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21147.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__21150 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21150) : cljs.core.deref.call(null, G__21150);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors() {
  var args21155 = [];
  var len__6622__auto___21159 = arguments.length;
  var i__6623__auto___21160 = 0;
  while (true) {
    if (i__6623__auto___21160 < len__6622__auto___21159) {
      args21155.push(arguments[i__6623__auto___21160]);
      var G__21161 = i__6623__auto___21160 + 1;
      i__6623__auto___21160 = G__21161;
      continue;
    } else {
    }
    break;
  }
  var G__21157 = args21155.length;
  switch(G__21157) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21155.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__21158 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21158) : cljs.core.deref.call(null, G__21158);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants() {
  var args21163 = [];
  var len__6622__auto___21167 = arguments.length;
  var i__6623__auto___21168 = 0;
  while (true) {
    if (i__6623__auto___21168 < len__6622__auto___21167) {
      args21163.push(arguments[i__6623__auto___21168]);
      var G__21169 = i__6623__auto___21168 + 1;
      i__6623__auto___21168 = G__21169;
      continue;
    } else {
    }
    break;
  }
  var G__21165 = args21163.length;
  switch(G__21165) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21163.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__21166 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21166) : cljs.core.deref.call(null, G__21166);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive() {
  var args21171 = [];
  var len__6622__auto___21174 = arguments.length;
  var i__6623__auto___21175 = 0;
  while (true) {
    if (i__6623__auto___21175 < len__6622__auto___21174) {
      args21171.push(arguments[i__6623__auto___21175]);
      var G__21176 = i__6623__auto___21175 + 1;
      i__6623__auto___21175 = G__21176;
      continue;
    } else {
    }
    break;
  }
  var G__21173 = args21171.length;
  switch(G__21173) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21171.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__5583__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__5583__auto__)) {
    return or__5583__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive() {
  var args21181 = [];
  var len__6622__auto___21184 = arguments.length;
  var i__6623__auto___21185 = 0;
  while (true) {
    if (i__6623__auto___21185 < len__6622__auto___21184) {
      args21181.push(arguments[i__6623__auto___21185]);
      var G__21186 = i__6623__auto___21185 + 1;
      i__6623__auto___21185 = G__21186;
      continue;
    } else {
    }
    break;
  }
  var G__21183 = args21181.length;
  switch(G__21183) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21181.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__21178_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__21178_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__21178_SHARP_), cljs.core.second(p1__21178_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__21179_SHARP_, p2__21180_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__21179_SHARP_, p2__21180_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(prefer_table) : cljs.core.deref.call(null, prefer_table)).call(null, x);
  var or__5583__auto__ = cljs.core.truth_(function() {
    var and__5571__auto__ = xprefs;
    if (cljs.core.truth_(and__5571__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__5571__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__5583__auto__)) {
    return or__5583__auto__;
  } else {
    var or__5583__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__21200 = cljs.core.rest(ps);
          ps = G__21200;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__5583__auto____$1)) {
      return or__5583__auto____$1;
    } else {
      var or__5583__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__21201 = cljs.core.rest(ps);
            ps = G__21201;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__5583__auto____$2)) {
        return or__5583__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__5583__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__5583__auto__)) {
    return or__5583__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__21204) {
    var vec__21205 = p__21204;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21205, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21205, 1, null);
    var e = vec__21205;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__5583__auto__ = be == null;
        if (or__5583__auto__) {
          return or__5583__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cached_hierarchy) : cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__6219__auto__ = mf == null ? null : mf;
    var m__6220__auto__ = cljs.core._reset[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__6220__auto__.call(null, mf);
    } else {
      var m__6220__auto____$1 = cljs.core._reset["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__6220__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__6219__auto__ = mf == null ? null : mf;
    var m__6220__auto__ = cljs.core._add_method[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__6220__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__6220__auto____$1 = cljs.core._add_method["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__6220__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__6219__auto__ = mf == null ? null : mf;
    var m__6220__auto__ = cljs.core._remove_method[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__6220__auto__.call(null, mf, dispatch_val);
    } else {
      var m__6220__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__6220__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__6219__auto__ = mf == null ? null : mf;
    var m__6220__auto__ = cljs.core._prefer_method[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__6220__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__6220__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__6220__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__6219__auto__ = mf == null ? null : mf;
    var m__6220__auto__ = cljs.core._get_method[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__6220__auto__.call(null, mf, dispatch_val);
    } else {
      var m__6220__auto____$1 = cljs.core._get_method["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__6220__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__6219__auto__ = mf == null ? null : mf;
    var m__6220__auto__ = cljs.core._methods[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__6220__auto__.call(null, mf);
    } else {
      var m__6220__auto____$1 = cljs.core._methods["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__6220__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__6219__auto__ = mf == null ? null : mf;
    var m__6220__auto__ = cljs.core._prefers[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__6220__auto__.call(null, mf);
    } else {
      var m__6220__auto____$1 = cljs.core._prefers["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__6220__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__6219__auto__ = mf == null ? null : mf;
    var m__6220__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__6220__auto__.call(null, mf);
    } else {
      var m__6220__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__6220__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__6219__auto__ = mf == null ? null : mf;
    var m__6220__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__6220__auto__.call(null, mf);
    } else {
      var m__6220__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6220__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__6220__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__21209 = null;
  var G__21209__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__21209__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__21209__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__21209__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__21209__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__21209__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__21209__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__21209__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__21209__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__21209__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__21209__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__21209__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__21209__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__21209__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__21209__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__21209__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__21209__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__21209__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__21209__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__21209__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__21209__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__21209__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__21209 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__21209__1.call(this, self__);
      case 2:
        return G__21209__2.call(this, self__, a);
      case 3:
        return G__21209__3.call(this, self__, a, b);
      case 4:
        return G__21209__4.call(this, self__, a, b, c);
      case 5:
        return G__21209__5.call(this, self__, a, b, c, d);
      case 6:
        return G__21209__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__21209__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__21209__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__21209__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__21209__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__21209__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__21209__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__21209__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__21209__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__21209__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__21209__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__21209__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__21209__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__21209__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__21209__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__21209__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__21209__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21209.cljs$core$IFn$_invoke$arity$1 = G__21209__1;
  G__21209.cljs$core$IFn$_invoke$arity$2 = G__21209__2;
  G__21209.cljs$core$IFn$_invoke$arity$3 = G__21209__3;
  G__21209.cljs$core$IFn$_invoke$arity$4 = G__21209__4;
  G__21209.cljs$core$IFn$_invoke$arity$5 = G__21209__5;
  G__21209.cljs$core$IFn$_invoke$arity$6 = G__21209__6;
  G__21209.cljs$core$IFn$_invoke$arity$7 = G__21209__7;
  G__21209.cljs$core$IFn$_invoke$arity$8 = G__21209__8;
  G__21209.cljs$core$IFn$_invoke$arity$9 = G__21209__9;
  G__21209.cljs$core$IFn$_invoke$arity$10 = G__21209__10;
  G__21209.cljs$core$IFn$_invoke$arity$11 = G__21209__11;
  G__21209.cljs$core$IFn$_invoke$arity$12 = G__21209__12;
  G__21209.cljs$core$IFn$_invoke$arity$13 = G__21209__13;
  G__21209.cljs$core$IFn$_invoke$arity$14 = G__21209__14;
  G__21209.cljs$core$IFn$_invoke$arity$15 = G__21209__15;
  G__21209.cljs$core$IFn$_invoke$arity$16 = G__21209__16;
  G__21209.cljs$core$IFn$_invoke$arity$17 = G__21209__17;
  G__21209.cljs$core$IFn$_invoke$arity$18 = G__21209__18;
  G__21209.cljs$core$IFn$_invoke$arity$19 = G__21209__19;
  G__21209.cljs$core$IFn$_invoke$arity$20 = G__21209__20;
  G__21209.cljs$core$IFn$_invoke$arity$21 = G__21209__21;
  G__21209.cljs$core$IFn$_invoke$arity$22 = G__21209__22;
  return G__21209;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args21208) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21208)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.prefer_table) : cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.cached_hierarchy) : cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.hierarchy) : cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4423__auto__ = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_cache) : cljs.core.deref.call(null, self__.method_cache)).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var target_fn = temp__4423__auto__;
    return target_fn;
  } else {
    var temp__4423__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var target_fn = temp__4423__auto____$1;
      return target_fn;
    } else {
      return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table)).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = goog.string.hashCode(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__21210 = self__.uuid;
  var G__21211 = other.uuid;
  return goog.array.defaultCompare(G__21210, G__21211);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(15).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(14)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info() {
  var args21212 = [];
  var len__6622__auto___21215 = arguments.length;
  var i__6623__auto___21216 = 0;
  while (true) {
    if (i__6623__auto___21216 < len__6622__auto___21215) {
      args21212.push(arguments[i__6623__auto___21216]);
      var G__21217 = i__6623__auto___21216 + 1;
      i__6623__auto___21216 = G__21217;
      continue;
    } else {
    }
    break;
  }
  var G__21214 = args21212.length;
  switch(G__21214) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21212.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__21219 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__21219) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))], 0)))].join(""));
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["abstract", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", 
"transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__21221_SHARP_, p2__21222_SHARP_) {
      goog.object.set(p1__21221_SHARP_, p2__21222_SHARP_, true);
      return p1__21221_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return goog.object.containsKey(cljs.core.js_reserved, x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__21225 = cljs.core.next(ks__$1);
          var G__21226 = [cljs.core.str(function() {
            var G__21224 = ret;
            var G__21224__$1 = !(ret === "") ? [cljs.core.str(G__21224), cljs.core.str("|")].join("") : G__21224;
            return G__21224__$1;
          }()), cljs.core.str(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__21225;
          ret = G__21226;
          continue;
        } else {
          return [cljs.core.str(ret), cljs.core.str("|\\$")].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_21227 = 0;
  while (true) {
    if (i_21227 < name.length) {
      var c_21228 = name.charAt(i_21227);
      var sub_21229 = goog.object.get(cljs.core.CHAR_MAP, c_21228);
      if (!(sub_21229 == null)) {
        sb.append(sub_21229);
      } else {
        sb.append(c_21228);
      }
      var G__21230 = i_21227 + 1;
      i_21227 = G__21230;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str([cljs.core.str(name)].join(""));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str(name_SINGLEQUOTE_), cljs.core.str("$")].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return [cljs.core.str(name_SINGLEQUOTE___$1)].join("");
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4423__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var match = temp__4423__auto__;
      var vec__21232 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21232, 0, null);
      var G__21233 = [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__21234 = r.lastIndex;
      ret = G__21233;
      last_match_end = G__21234;
      continue;
    } else {
      return [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  return (name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
    var name_SINGLEQUOTE_ = [cljs.core.str(name)].join("");
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str([cljs.core.str(name)].join(""));
    }
  }());
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge([cljs.core.str(sym)].join(""));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(self__.name)].join(""), [cljs.core.str(sym)].join(""));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(self__.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
  return cljs.core._write(writer__6163__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__21239 = function() {
          var G__21237 = ctxt;
          var G__21238 = cljs.core.first(xs);
          return goog.object.get(G__21237, G__21238);
        }();
        var G__21240 = cljs.core.next(xs);
        ctxt = G__21239;
        xs = G__21240;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge([cljs.core.str(ns)].join(""));
  var segs = munged_ns.split(".");
  var G__21242 = cljs.core._STAR_target_STAR_;
  switch(G__21242) {
    case "nodejs":
      if (COMPILED) {
        return eval(munged_ns);
      } else {
        return cljs.core.find_ns_obj_STAR_(global, segs);
      }
      break;
    case "default":
      return cljs.core.find_ns_obj_STAR_(window, segs);
      break;
    default:
      throw new Error([cljs.core.str("find-ns-obj not supported for target "), cljs.core.str(cljs.core._STAR_target_STAR_)].join(""));;
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(sym)].join(""), [cljs.core.str(var_sym)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns() {
  var args21244 = [];
  var len__6622__auto___21247 = arguments.length;
  var i__6623__auto___21248 = 0;
  while (true) {
    if (i__6623__auto___21248 < len__6622__auto___21247) {
      args21244.push(arguments[i__6623__auto___21248]);
      var G__21249 = i__6623__auto___21248 + 1;
      i__6623__auto___21248 = G__21249;
      continue;
    } else {
    }
    break;
  }
  var G__21246 = args21244.length;
  switch(G__21246) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21244.length)].join(""));;
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__21252 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__21252) : cljs.core.atom.call(null, G__21252);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__21254 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__21254) : cljs.core.atom.call(null, G__21254);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_str = [cljs.core.str(ns)].join("");
    var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_str), cljs.core.str("$macros")].join("")) : ns;
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw [cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join() {
  var args18211 = [];
  var len__6622__auto___18214 = arguments.length;
  var i__6623__auto___18215 = 0;
  while (true) {
    if (i__6623__auto___18215 < len__6622__auto___18214) {
      args18211.push(arguments[i__6623__auto___18215]);
      var G__18216 = i__6623__auto___18215 + 1;
      i__6623__auto___18215 = G__18216;
      continue;
    } else {
    }
    break;
  }
  var G__18213 = args18211.length;
  switch(G__18213) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18211.length)].join(""));;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__18218 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var G__18219 = cljs.core.next.call(null, coll__$1);
      sb = G__18218;
      coll__$1 = G__18219;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__18220 = sb;
      var G__18221 = coll__$2;
      sb = G__18220;
      coll__$1 = G__18221;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return [cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek.call(null, v__$1)) {
      var G__18222 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__18222;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__18226 = cljs.core._EQ__EQ_;
    var expr__18227 = limit;
    if (cljs.core.truth_(pred__18226.call(null, 1, expr__18227))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__18226.call(null, 2, expr__18227))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split() {
  var args18229 = [];
  var len__6622__auto___18232 = arguments.length;
  var i__6623__auto___18233 = 0;
  while (true) {
    if (i__6623__auto___18233 < len__6622__auto___18232) {
      args18229.push(arguments[i__6623__auto___18233]);
      var G__18234 = i__6623__auto___18233 + 1;
      i__6623__auto___18233 = G__18234;
      continue;
    } else {
    }
    break;
  }
  var G__18231 = args18229.length;
  switch(G__18231) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18229.length)].join(""));;
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, "/(?:)/" === [cljs.core.str(re)].join("") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var m = cljs.core.re_find.call(null, re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__18236 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__18237 = limit__$1 - 1;
          var G__18238 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__18236;
          limit__$1 = G__18237;
          parts = G__18238;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__18239 = index - 1;
        index = G__18239;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.call(null, cmap, ch);
      if (!(replacement == null)) {
        buffer.append([cljs.core.str(replacement)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__18240 = index + 1;
      index = G__18240;
      continue;
    }
    break;
  }
};
goog.provide("tiltontec.util.base");
goog.require("cljs.core");
goog.require("clojure.string");
cljs.core.enable_console_print_BANG_.call(null);
tiltontec.util.base._STAR_trx_QMARK__STAR_ = true;
tiltontec.util.base._STAR_trc_ensure_STAR_ = null;
tiltontec.util.base._STAR_trx_path_id_STAR_ = null;
tiltontec.util.base._STAR_trxdepth_STAR_ = 0;
tiltontec.util.base.last_trc = cljs.core.atom.call(null, 0);
tiltontec.util.base.call_trc$ = function tiltontec$util$base$call_trc$(s, bits) {
  return [cljs.core.str(s), cljs.core.str(": "), cljs.core.str(clojure.string.join.call(null, ", ", bits))].join("");
};
tiltontec.util.base.call_trc = function tiltontec$util$base$call_trc() {
  var args__5600__auto__ = [];
  var len__5593__auto___24510 = arguments.length;
  var i__5594__auto___24511 = 0;
  while (true) {
    if (i__5594__auto___24511 < len__5593__auto___24510) {
      args__5600__auto__.push(arguments[i__5594__auto___24511]);
      var G__24512 = i__5594__auto___24511 + 1;
      i__5594__auto___24511 = G__24512;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return tiltontec.util.base.call_trc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
tiltontec.util.base.call_trc.cljs$core$IFn$_invoke$arity$variadic = function(s, os) {
  if (cljs.core.truth_(tiltontec.util.base._STAR_trx_QMARK__STAR_)) {
    if (cljs.core.truth_(s)) {
      var path = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, tiltontec.util.base._STAR_trxdepth_STAR_, "."));
      return cljs.core.println.call(null, path, tiltontec.util.base.call_trc$.call(null, s, os));
    } else {
      return null;
    }
  } else {
    return null;
  }
};
tiltontec.util.base.call_trc.cljs$lang$maxFixedArity = 1;
tiltontec.util.base.call_trc.cljs$lang$applyTo = function(seq24508) {
  var G__24509 = cljs.core.first.call(null, seq24508);
  var seq24508__$1 = cljs.core.next.call(null, seq24508);
  return tiltontec.util.base.call_trc.cljs$core$IFn$_invoke$arity$variadic(G__24509, seq24508__$1);
};
tiltontec.util.base.trx = function tiltontec$util$base$trx() {
  var args__5600__auto__ = [];
  var len__5593__auto___24517 = arguments.length;
  var i__5594__auto___24518 = 0;
  while (true) {
    if (i__5594__auto___24518 < len__5593__auto___24517) {
      args__5600__auto__.push(arguments[i__5594__auto___24518]);
      var G__24519 = i__5594__auto___24518 + 1;
      i__5594__auto___24518 = G__24519;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.util.base.trx.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.util.base.trx.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, label, vals) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.util.base", "call-trc", "tiltontec.util.base/call-trc", 242817092, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, !(label == null) ? [cljs.core.str(label)].join("") : null), vals)));
};
tiltontec.util.base.trx.cljs$lang$maxFixedArity = 3;
tiltontec.util.base.trx.cljs$lang$applyTo = function(seq24513) {
  var G__24514 = cljs.core.first.call(null, seq24513);
  var seq24513__$1 = cljs.core.next.call(null, seq24513);
  var G__24515 = cljs.core.first.call(null, seq24513__$1);
  var seq24513__$2 = cljs.core.next.call(null, seq24513__$1);
  var G__24516 = cljs.core.first.call(null, seq24513__$2);
  var seq24513__$3 = cljs.core.next.call(null, seq24513__$2);
  return tiltontec.util.base.trx.cljs$core$IFn$_invoke$arity$variadic(G__24514, G__24515, G__24516, seq24513__$3);
};
tiltontec.util.base.trx.cljs$lang$macro = true;
tiltontec.util.base.wtrx = function tiltontec$util$base$wtrx() {
  var args__5600__auto__ = [];
  var len__5593__auto___24526 = arguments.length;
  var i__5594__auto___24527 = 0;
  while (true) {
    if (i__5594__auto___24527 < len__5593__auto___24526) {
      args__5600__auto__.push(arguments[i__5594__auto___24527]);
      var G__24528 = i__5594__auto___24527 + 1;
      i__5594__auto___24527 = G__24528;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.util.base.wtrx.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.util.base.wtrx.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__24524, body) {
  var vec__24525 = p__24524;
  var lo = cljs.core.nth.call(null, vec__24525, 0, null);
  var hi = cljs.core.nth.call(null, vec__24525, 1, null);
  var trxargs = cljs.core.nthnext.call(null, vec__24525, 2);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "binding", "cljs.core/binding", 2050379843, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.util.base", "*trxdepth*", "tiltontec.util.base/*trxdepth*", 
  2067200500, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "inc", "cljs.core/inc", -879172610, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.util.base", "*trxdepth*", "tiltontec.util.base/*trxdepth*", 2067200500, null))))))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "cond", "cljs.core/cond", 2005388338, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "\x3c\x3d", "cljs.core/\x3c\x3d", 1677001748, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 
  lo), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.util.base", "*trxdepth*", "tiltontec.util.base/*trxdepth*", 2067200500, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, hi))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.util.base", "trx", "tiltontec.util.base/trx", 972281126, null)), 
  trxargs)))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "\x3e", "cljs.core/\x3e", 2020535938, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.util.base", "*trxdepth*", "tiltontec.util.base/*trxdepth*", 2067200500, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, hi))))), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "throw", "throw", 595905694, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("js", "Error.", "js/Error.", 750655924, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 
  cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "str", "cljs.core/str", -1971828991, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, "wtrx exceeded max depth "), cljs.core._conj.call(null, cljs.core.List.EMPTY, hi), cljs.core._conj.call(null, cljs.core.List.EMPTY, ":"), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.util.base", "call-trc$", "tiltontec.util.base/call-trc$", -1682205883, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.first.call(null, 
  trxargs)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "list", "cljs.core/list", -1331406371, null)), cljs.core.rest.call(null, trxargs))))))))))))))))))))))))), body)));
};
tiltontec.util.base.wtrx.cljs$lang$maxFixedArity = 3;
tiltontec.util.base.wtrx.cljs$lang$applyTo = function(seq24520) {
  var G__24521 = cljs.core.first.call(null, seq24520);
  var seq24520__$1 = cljs.core.next.call(null, seq24520);
  var G__24522 = cljs.core.first.call(null, seq24520__$1);
  var seq24520__$2 = cljs.core.next.call(null, seq24520__$1);
  var G__24523 = cljs.core.first.call(null, seq24520__$2);
  var seq24520__$3 = cljs.core.next.call(null, seq24520__$2);
  return tiltontec.util.base.wtrx.cljs$core$IFn$_invoke$arity$variadic(G__24521, G__24522, G__24523, seq24520__$3);
};
tiltontec.util.base.wtrx.cljs$lang$macro = true;
tiltontec.util.base.prog1 = function tiltontec$util$base$prog1() {
  var args__5600__auto__ = [];
  var len__5593__auto___24533 = arguments.length;
  var i__5594__auto___24534 = 0;
  while (true) {
    if (i__5594__auto___24534 < len__5593__auto___24533) {
      args__5600__auto__.push(arguments[i__5594__auto___24534]);
      var G__24535 = i__5594__auto___24534 + 1;
      i__5594__auto___24534 = G__24535;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.util.base.prog1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.util.base.prog1.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "result__24529__auto__", "result__24529__auto__", 
  791837449, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.first.call(null, body))))))), cljs.core.rest.call(null, body), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "result__24529__auto__", "result__24529__auto__", 791837449, null)))));
};
tiltontec.util.base.prog1.cljs$lang$maxFixedArity = 2;
tiltontec.util.base.prog1.cljs$lang$applyTo = function(seq24530) {
  var G__24531 = cljs.core.first.call(null, seq24530);
  var seq24530__$1 = cljs.core.next.call(null, seq24530);
  var G__24532 = cljs.core.first.call(null, seq24530__$1);
  var seq24530__$2 = cljs.core.next.call(null, seq24530__$1);
  return tiltontec.util.base.prog1.cljs$core$IFn$_invoke$arity$variadic(G__24531, G__24532, seq24530__$2);
};
tiltontec.util.base.prog1.cljs$lang$macro = true;
tiltontec.util.base.b_when = function tiltontec$util$base$b_when() {
  var args__5600__auto__ = [];
  var len__5593__auto___24541 = arguments.length;
  var i__5594__auto___24542 = 0;
  while (true) {
    if (i__5594__auto___24542 < len__5593__auto___24541) {
      args__5600__auto__.push(arguments[i__5594__auto___24542]);
      var G__24543 = i__5594__auto___24542 + 1;
      i__5594__auto___24542 = G__24543;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 4 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(4), 0) : null;
  return tiltontec.util.base.b_when.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5601__auto__);
};
tiltontec.util.base.b_when.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, var$, form, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "when-let", "cljs.core/when-let", -2049838349, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, var$), cljs.core._conj.call(null, cljs.core.List.EMPTY, form)))))), 
  body)));
};
tiltontec.util.base.b_when.cljs$lang$maxFixedArity = 4;
tiltontec.util.base.b_when.cljs$lang$applyTo = function(seq24536) {
  var G__24537 = cljs.core.first.call(null, seq24536);
  var seq24536__$1 = cljs.core.next.call(null, seq24536);
  var G__24538 = cljs.core.first.call(null, seq24536__$1);
  var seq24536__$2 = cljs.core.next.call(null, seq24536__$1);
  var G__24539 = cljs.core.first.call(null, seq24536__$2);
  var seq24536__$3 = cljs.core.next.call(null, seq24536__$2);
  var G__24540 = cljs.core.first.call(null, seq24536__$3);
  var seq24536__$4 = cljs.core.next.call(null, seq24536__$3);
  return tiltontec.util.base.b_when.cljs$core$IFn$_invoke$arity$variadic(G__24537, G__24538, G__24539, G__24540, seq24536__$4);
};
tiltontec.util.base.b_when.cljs$lang$macro = true;
tiltontec.util.base.unless = function tiltontec$util$base$unless() {
  var args__5600__auto__ = [];
  var len__5593__auto___24548 = arguments.length;
  var i__5594__auto___24549 = 0;
  while (true) {
    if (i__5594__auto___24549 < len__5593__auto___24548) {
      args__5600__auto__.push(arguments[i__5594__auto___24549]);
      var G__24550 = i__5594__auto___24549 + 1;
      i__5594__auto___24549 = G__24550;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.util.base.unless.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.util.base.unless.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, form, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "when-not", "cljs.core/when-not", -556141047, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, form), body)));
};
tiltontec.util.base.unless.cljs$lang$maxFixedArity = 3;
tiltontec.util.base.unless.cljs$lang$applyTo = function(seq24544) {
  var G__24545 = cljs.core.first.call(null, seq24544);
  var seq24544__$1 = cljs.core.next.call(null, seq24544);
  var G__24546 = cljs.core.first.call(null, seq24544__$1);
  var seq24544__$2 = cljs.core.next.call(null, seq24544__$1);
  var G__24547 = cljs.core.first.call(null, seq24544__$2);
  var seq24544__$3 = cljs.core.next.call(null, seq24544__$2);
  return tiltontec.util.base.unless.cljs$core$IFn$_invoke$arity$variadic(G__24545, G__24546, G__24547, seq24544__$3);
};
tiltontec.util.base.unless.cljs$lang$macro = true;
tiltontec.util.base.def_rmap_slots = function tiltontec$util$base$def_rmap_slots() {
  var args__5600__auto__ = [];
  var len__5593__auto___24555 = arguments.length;
  var i__5594__auto___24556 = 0;
  while (true) {
    if (i__5594__auto___24556 < len__5593__auto___24555) {
      args__5600__auto__.push(arguments[i__5594__auto___24556]);
      var G__24557 = i__5594__auto___24556 + 1;
      i__5594__auto___24556 = G__24557;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.util.base.def_rmap_slots.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.util.base.def_rmap_slots.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, reader_prefix, slots) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "do", "do", 1686842252, null)), cljs.core.map.call(null, function(slot_SHARP_) {
    return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "defn", "cljs.core/defn", -1606493717, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.symbol.call(null, [cljs.core.str(function() {
      var or__4554__auto__ = reader_prefix;
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return "";
      }
    }()), cljs.core.str(slot_SHARP_)].join(""))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
    cljs.core.keyword.call(null, slot_SHARP_)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "ref", "ref", -1364538802, null)))))))))))));
  }, slots))));
};
tiltontec.util.base.def_rmap_slots.cljs$lang$maxFixedArity = 3;
tiltontec.util.base.def_rmap_slots.cljs$lang$applyTo = function(seq24551) {
  var G__24552 = cljs.core.first.call(null, seq24551);
  var seq24551__$1 = cljs.core.next.call(null, seq24551);
  var G__24553 = cljs.core.first.call(null, seq24551__$1);
  var seq24551__$2 = cljs.core.next.call(null, seq24551__$1);
  var G__24554 = cljs.core.first.call(null, seq24551__$2);
  var seq24551__$3 = cljs.core.next.call(null, seq24551__$2);
  return tiltontec.util.base.def_rmap_slots.cljs$core$IFn$_invoke$arity$variadic(G__24552, G__24553, G__24554, seq24551__$3);
};
tiltontec.util.base.def_rmap_slots.cljs$lang$macro = true;
tiltontec.util.base.def_rmap_meta_slots = function tiltontec$util$base$def_rmap_meta_slots() {
  var args__5600__auto__ = [];
  var len__5593__auto___24562 = arguments.length;
  var i__5594__auto___24563 = 0;
  while (true) {
    if (i__5594__auto___24563 < len__5593__auto___24562) {
      args__5600__auto__.push(arguments[i__5594__auto___24563]);
      var G__24564 = i__5594__auto___24563 + 1;
      i__5594__auto___24563 = G__24564;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.util.base.def_rmap_meta_slots.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.util.base.def_rmap_meta_slots.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, reader_prefix, slots) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "do", "do", 1686842252, null)), cljs.core.map.call(null, function(slot_SHARP_) {
    return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "defn", "cljs.core/defn", -1606493717, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.symbol.call(null, [cljs.core.str(function() {
      var or__4554__auto__ = reader_prefix;
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return "";
      }
    }()), cljs.core.str(slot_SHARP_)].join(""))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
    cljs.core.keyword.call(null, slot_SHARP_)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "meta", "cljs.core/meta", -748218346, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "ref", "ref", -1364538802, null)))))))))))));
  }, slots))));
};
tiltontec.util.base.def_rmap_meta_slots.cljs$lang$maxFixedArity = 3;
tiltontec.util.base.def_rmap_meta_slots.cljs$lang$applyTo = function(seq24558) {
  var G__24559 = cljs.core.first.call(null, seq24558);
  var seq24558__$1 = cljs.core.next.call(null, seq24558);
  var G__24560 = cljs.core.first.call(null, seq24558__$1);
  var seq24558__$2 = cljs.core.next.call(null, seq24558__$1);
  var G__24561 = cljs.core.first.call(null, seq24558__$2);
  var seq24558__$3 = cljs.core.next.call(null, seq24558__$2);
  return tiltontec.util.base.def_rmap_meta_slots.cljs$core$IFn$_invoke$arity$variadic(G__24559, G__24560, G__24561, seq24558__$3);
};
tiltontec.util.base.def_rmap_meta_slots.cljs$lang$macro = true;
goog.provide("tiltontec.util.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("tiltontec.util.base");
cljs.core._STAR_print_level_STAR_ = 2;
tiltontec.util.core.type_of = function tiltontec$util$core$type_of(x) {
  return cljs.core.type.call(null, x);
};
tiltontec.util.core.set_ify = function tiltontec$util$core$set_ify(x) {
  if (x == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (cljs.core.sequential_QMARK_.call(null, x)) {
      return cljs.core.set.call(null, x);
    } else {
      return cljs.core.PersistentHashSet.fromArray([x], true);
    }
  }
};
tiltontec.util.core.cl_find = function tiltontec$util$core$cl_find(sought, coll) {
  if (sought == null) {
    return null;
  } else {
    return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([sought], true), coll);
  }
};
tiltontec.util.core.ia_ref = function tiltontec$util$core$ia_ref(x) {
  return cljs.core.atom.call(null, x);
};
tiltontec.util.core.any_ref_QMARK_ = function tiltontec$util$core$any_ref_QMARK_(x) {
  return x instanceof cljs.core.Atom;
};
tiltontec.util.core.rmap_setf = function tiltontec$util$core$rmap_setf(p__24567, new_value) {
  var vec__24569 = p__24567;
  var slot = cljs.core.nth.call(null, vec__24569, 0, null);
  var ref = cljs.core.nth.call(null, vec__24569, 1, null);
  if (cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, ref))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))].join(""));
  }
  if (cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, ref))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null)))))].join(""));
  }
  cljs.core.swap_BANG_.call(null, ref, cljs.core.assoc, slot, new_value);
  return new_value;
};
tiltontec.util.core.rmap_meta_setf = function tiltontec$util$core$rmap_meta_setf(p__24570, new_value) {
  var vec__24572 = p__24570;
  var slot = cljs.core.nth.call(null, vec__24572, 0, null);
  var ref = cljs.core.nth.call(null, vec__24572, 1, null);
  if (cljs.core.truth_(cljs.core.meta.call(null, ref))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))].join(""));
  }
  cljs.core.alter_meta_BANG_.call(null, ref, cljs.core.assoc, slot, new_value);
  return new_value;
};
if (typeof tiltontec.util.core.err !== "undefined") {
} else {
  tiltontec.util.core.err = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.util.core", "err"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function() {
        var G__24573__delegate = function(a1, args) {
          return cljs.core.fn_QMARK_.call(null, a1);
        };
        var G__24573 = function(a1, var_args) {
          var args = null;
          if (arguments.length > 1) {
            var G__24574__i = 0, G__24574__a = new Array(arguments.length - 1);
            while (G__24574__i < G__24574__a.length) {
              G__24574__a[G__24574__i] = arguments[G__24574__i + 1];
              ++G__24574__i;
            }
            args = new cljs.core.IndexedSeq(G__24574__a, 0);
          }
          return G__24573__delegate.call(this, a1, args);
        };
        G__24573.cljs$lang$maxFixedArity = 1;
        G__24573.cljs$lang$applyTo = function(arglist__24575) {
          var a1 = cljs.core.first(arglist__24575);
          var args = cljs.core.rest(arglist__24575);
          return G__24573__delegate(a1, args);
        };
        G__24573.cljs$core$IFn$_invoke$arity$variadic = G__24573__delegate;
        return G__24573;
      }();
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.util.core.err, true, function() {
  var G__24576__delegate = function(fn, mas) {
    return tiltontec.util.core.err.call(null, cljs.core.apply.call(null, fn, mas));
  };
  var G__24576 = function(fn, var_args) {
    var mas = null;
    if (arguments.length > 1) {
      var G__24577__i = 0, G__24577__a = new Array(arguments.length - 1);
      while (G__24577__i < G__24577__a.length) {
        G__24577__a[G__24577__i] = arguments[G__24577__i + 1];
        ++G__24577__i;
      }
      mas = new cljs.core.IndexedSeq(G__24577__a, 0);
    }
    return G__24576__delegate.call(this, fn, mas);
  };
  G__24576.cljs$lang$maxFixedArity = 1;
  G__24576.cljs$lang$applyTo = function(arglist__24578) {
    var fn = cljs.core.first(arglist__24578);
    var mas = cljs.core.rest(arglist__24578);
    return G__24576__delegate(fn, mas);
  };
  G__24576.cljs$core$IFn$_invoke$arity$variadic = G__24576__delegate;
  return G__24576;
}());
cljs.core._add_method.call(null, tiltontec.util.core.err, new cljs.core.Keyword(null, "default", "default", -1987822328), function() {
  var G__24579__delegate = function(bits) {
    throw new Error(clojure.string.join.call(null, " ", cljs.core.cons.call(null, "jz/err\x3e", bits)));
  };
  var G__24579 = function(var_args) {
    var bits = null;
    if (arguments.length > 0) {
      var G__24580__i = 0, G__24580__a = new Array(arguments.length - 0);
      while (G__24580__i < G__24580__a.length) {
        G__24580__a[G__24580__i] = arguments[G__24580__i + 0];
        ++G__24580__i;
      }
      bits = new cljs.core.IndexedSeq(G__24580__a, 0);
    }
    return G__24579__delegate.call(this, bits);
  };
  G__24579.cljs$lang$maxFixedArity = 0;
  G__24579.cljs$lang$applyTo = function(arglist__24581) {
    var bits = cljs.core.seq(arglist__24581);
    return G__24579__delegate(bits);
  };
  G__24579.cljs$core$IFn$_invoke$arity$variadic = G__24579__delegate;
  return G__24579;
}());
tiltontec.util.core.flz = function tiltontec$util$core$flz(x) {
  if (cljs.core.isa_QMARK_.call(null, cljs.core.type.call(null, x), cljs.core.LazySeq)) {
    return cljs.core.vec.call(null, cljs.core.doall.call(null, x));
  } else {
    return x;
  }
};
tiltontec.util.core.wtrx_test = function tiltontec$util$core$wtrx_test(n) {
  var _STAR_trxdepth_STAR_24583 = tiltontec.util.base._STAR_trxdepth_STAR_;
  tiltontec.util.base._STAR_trxdepth_STAR_ = tiltontec.util.base._STAR_trxdepth_STAR_ + 1;
  try {
    if (0 <= tiltontec.util.base._STAR_trxdepth_STAR_ && tiltontec.util.base._STAR_trxdepth_STAR_ <= 10) {
      tiltontec.util.base.call_trc.call(null, "test", n);
    } else {
      if (tiltontec.util.base._STAR_trxdepth_STAR_ > 10) {
        throw new java.lang.Exception([cljs.core.str("wtrx exceeded max depth "), cljs.core.str(10), cljs.core.str(":"), cljs.core.str(tiltontec.util.base.call_trc$.call(null, "test", cljs.core._conj.call(null, cljs.core.List.EMPTY, n)))].join(""));
      } else {
      }
    }
    if (n > 0) {
      return tiltontec$util$core$wtrx_test.call(null, n - 1);
    } else {
      return null;
    }
  } finally {
    tiltontec.util.base._STAR_trxdepth_STAR_ = _STAR_trxdepth_STAR_24583;
  }
};
tiltontec.util.core.slot_users = function tiltontec$util$core$slot_users(me, slot) {
  return cljs.core.set.call(null, cljs.core.map.call(null, new cljs.core.Keyword(null, "slotq", "slotq", 1456717980), cljs.core.map.call(null, cljs.core.deref, (new cljs.core.Keyword(null, "callers", "callers", -1991542784)).cljs$core$IFn$_invoke$arity$2(cljs.core.deref.call(null, slot.call(null, cljs.core.deref.call(null, me))), cljs.core.PersistentHashSet.EMPTY))));
};
tiltontec.util.core.slot_useds = function tiltontec$util$core$slot_useds(me, slot) {
  return cljs.core.set.call(null, cljs.core.map.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), cljs.core.map.call(null, cljs.core.deref, (new cljs.core.Keyword(null, "useds", "useds", 621350967)).cljs$core$IFn$_invoke$arity$2(cljs.core.deref.call(null, slot.call(null, cljs.core.deref.call(null, me))), cljs.core.PersistentHashSet.EMPTY))));
};
tiltontec.util.core.make_fifo_queue = function tiltontec$util$core$make_fifo_queue() {
  return cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
};
tiltontec.util.core.fifo_data = function tiltontec$util$core$fifo_data(q) {
  return cljs.core.deref.call(null, q);
};
tiltontec.util.core.fifo_clear = function tiltontec$util$core$fifo_clear(q) {
  return cljs.core.swap_BANG_.call(null, q, cljs.core.empty);
};
tiltontec.util.core.fifo_empty_QMARK_ = function tiltontec$util$core$fifo_empty_QMARK_(q) {
  return cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, q));
};
tiltontec.util.core.fifo_peek = function tiltontec$util$core$fifo_peek(q) {
  return cljs.core.first.call(null, cljs.core.deref.call(null, q));
};
tiltontec.util.core.fifo_add = function tiltontec$util$core$fifo_add(q, new$) {
  return cljs.core.swap_BANG_.call(null, q, cljs.core.conj, new$);
};
tiltontec.util.core.fifo_pop = function tiltontec$util$core$fifo_pop(q) {
  if (cljs.core.truth_(tiltontec.util.core.fifo_empty_QMARK_.call(null, q))) {
    return null;
  } else {
    var result__22424__auto__ = cljs.core.first.call(null, cljs.core.deref.call(null, q));
    cljs.core.swap_BANG_.call(null, q, cljs.core.subvec, 1);
    return result__22424__auto__;
  }
};
goog.provide("cljs.pprint");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.pprint.print = function cljs$pprint$print() {
  var args__6629__auto__ = [];
  var len__6622__auto___17097 = arguments.length;
  var i__6623__auto___17098 = 0;
  while (true) {
    if (i__6623__auto___17098 < len__6622__auto___17097) {
      args__6629__auto__.push(arguments[i__6623__auto___17098]);
      var G__17099 = i__6623__auto___17098 + 1;
      i__6623__auto___17098 = G__17099;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 0 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(0), 0) : null;
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(argseq__6630__auto__);
};
cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.print_str, more));
};
cljs.pprint.print.cljs$lang$maxFixedArity = 0;
cljs.pprint.print.cljs$lang$applyTo = function(seq17096) {
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq17096));
};
cljs.pprint.println = function cljs$pprint$println() {
  var args__6629__auto__ = [];
  var len__6622__auto___17101 = arguments.length;
  var i__6623__auto___17102 = 0;
  while (true) {
    if (i__6623__auto___17102 < len__6622__auto___17101) {
      args__6629__auto__.push(arguments[i__6623__auto___17102]);
      var G__17103 = i__6623__auto___17102 + 1;
      i__6623__auto___17102 = G__17103;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 0 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(0), 0) : null;
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(argseq__6630__auto__);
};
cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.print, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.println.cljs$lang$maxFixedArity = 0;
cljs.pprint.println.cljs$lang$applyTo = function(seq17100) {
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq17100));
};
cljs.pprint.print_char = function cljs$pprint$print_char(c) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, function() {
    var pred__17107 = cljs.core._EQ_;
    var expr__17108 = c;
    if (cljs.core.truth_(pred__17107.call(null, "\b", expr__17108))) {
      return "\\backspace";
    } else {
      if (cljs.core.truth_(pred__17107.call(null, "\t", expr__17108))) {
        return "\\tab";
      } else {
        if (cljs.core.truth_(pred__17107.call(null, "\n", expr__17108))) {
          return "\\newline";
        } else {
          if (cljs.core.truth_(pred__17107.call(null, "\f", expr__17108))) {
            return "\\formfeed";
          } else {
            if (cljs.core.truth_(pred__17107.call(null, "\r", expr__17108))) {
              return "\\return";
            } else {
              if (cljs.core.truth_(pred__17107.call(null, '"', expr__17108))) {
                return '\\"';
              } else {
                if (cljs.core.truth_(pred__17107.call(null, "\\", expr__17108))) {
                  return "\\\\";
                } else {
                  return [cljs.core.str("\\"), cljs.core.str(c)].join("");
                }
              }
            }
          }
        }
      }
    }
  }());
};
cljs.pprint.pr = function cljs$pprint$pr() {
  var args__6629__auto__ = [];
  var len__6622__auto___17111 = arguments.length;
  var i__6623__auto___17112 = 0;
  while (true) {
    if (i__6623__auto___17112 < len__6622__auto___17111) {
      args__6629__auto__.push(arguments[i__6623__auto___17112]);
      var G__17113 = i__6623__auto___17112 + 1;
      i__6623__auto___17112 = G__17113;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 0 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(0), 0) : null;
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__6630__auto__);
};
cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.pr_str, more));
};
cljs.pprint.pr.cljs$lang$maxFixedArity = 0;
cljs.pprint.pr.cljs$lang$applyTo = function(seq17110) {
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq17110));
};
cljs.pprint.prn = function cljs$pprint$prn() {
  var args__6629__auto__ = [];
  var len__6622__auto___17115 = arguments.length;
  var i__6623__auto___17116 = 0;
  while (true) {
    if (i__6623__auto___17116 < len__6622__auto___17115) {
      args__6629__auto__.push(arguments[i__6623__auto___17116]);
      var G__17117 = i__6623__auto___17116 + 1;
      i__6623__auto___17116 = G__17117;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 0 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(0), 0) : null;
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__6630__auto__);
};
cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.pr, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.prn.cljs$lang$maxFixedArity = 0;
cljs.pprint.prn.cljs$lang$applyTo = function(seq17114) {
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq17114));
};
cljs.pprint.float_QMARK_ = function cljs$pprint$float_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && !(parseFloat(n) === parseInt(n, 10));
};
cljs.pprint.char_code = function cljs$pprint$char_code(c) {
  if (typeof c === "number") {
    return c;
  } else {
    if (typeof c === "string" && c.length === 1) {
      return c.charCodeAt(0);
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.pprint.map_passing_context = function cljs$pprint$map_passing_context(func, initial_context, lis) {
  var context = initial_context;
  var lis__$1 = lis;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, lis__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var this$ = cljs.core.first.call(null, lis__$1);
      var remainder = cljs.core.next.call(null, lis__$1);
      var vec__17119 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, context], null));
      var result = cljs.core.nth.call(null, vec__17119, 0, null);
      var new_context = cljs.core.nth.call(null, vec__17119, 1, null);
      var G__17120 = new_context;
      var G__17121 = remainder;
      var G__17122 = cljs.core.conj.call(null, acc, result);
      context = G__17120;
      lis__$1 = G__17121;
      acc = G__17122;
      continue;
    }
    break;
  }
};
cljs.pprint.consume = function cljs$pprint$consume(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__17124 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__17124, 0, null);
    var new_context = cljs.core.nth.call(null, vec__17124, 1, null);
    if (cljs.core.not.call(null, result)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, new_context], null);
    } else {
      var G__17125 = new_context;
      var G__17126 = cljs.core.conj.call(null, acc, result);
      context = G__17125;
      acc = G__17126;
      continue;
    }
    break;
  }
};
cljs.pprint.consume_while = function cljs$pprint$consume_while(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__17128 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__17128, 0, null);
    var continue$ = cljs.core.nth.call(null, vec__17128, 1, null);
    var new_context = cljs.core.nth.call(null, vec__17128, 2, null);
    if (cljs.core.not.call(null, continue$)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var G__17129 = new_context;
      var G__17130 = cljs.core.conj.call(null, acc, result);
      context = G__17129;
      acc = G__17130;
      continue;
    }
    break;
  }
};
cljs.pprint.unzip_map = function cljs$pprint$unzip_map(m) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__6336__auto__ = function cljs$pprint$unzip_map_$_iter__17155(s__17156) {
      return new cljs.core.LazySeq(null, function() {
        var s__17156__$1 = s__17156;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__17156__$1);
          if (temp__4425__auto__) {
            var s__17156__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__17156__$2)) {
              var c__6334__auto__ = cljs.core.chunk_first.call(null, s__17156__$2);
              var size__6335__auto__ = cljs.core.count.call(null, c__6334__auto__);
              var b__17158 = cljs.core.chunk_buffer.call(null, size__6335__auto__);
              if (function() {
                var i__17157 = 0;
                while (true) {
                  if (i__17157 < size__6335__auto__) {
                    var vec__17163 = cljs.core._nth.call(null, c__6334__auto__, i__17157);
                    var k = cljs.core.nth.call(null, vec__17163, 0, null);
                    var vec__17164 = cljs.core.nth.call(null, vec__17163, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__17164, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__17164, 1, null);
                    cljs.core.chunk_append.call(null, b__17158, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null));
                    var G__17179 = i__17157 + 1;
                    i__17157 = G__17179;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17158), cljs$pprint$unzip_map_$_iter__17155.call(null, cljs.core.chunk_rest.call(null, s__17156__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17158), null);
              }
            } else {
              var vec__17165 = cljs.core.first.call(null, s__17156__$2);
              var k = cljs.core.nth.call(null, vec__17165, 0, null);
              var vec__17166 = cljs.core.nth.call(null, vec__17165, 1, null);
              var v1 = cljs.core.nth.call(null, vec__17166, 0, null);
              var v2 = cljs.core.nth.call(null, vec__17166, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null), cljs$pprint$unzip_map_$_iter__17155.call(null, cljs.core.rest.call(null, s__17156__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6336__auto__.call(null, m);
  }()), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__6336__auto__ = function cljs$pprint$unzip_map_$_iter__17167(s__17168) {
      return new cljs.core.LazySeq(null, function() {
        var s__17168__$1 = s__17168;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__17168__$1);
          if (temp__4425__auto__) {
            var s__17168__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__17168__$2)) {
              var c__6334__auto__ = cljs.core.chunk_first.call(null, s__17168__$2);
              var size__6335__auto__ = cljs.core.count.call(null, c__6334__auto__);
              var b__17170 = cljs.core.chunk_buffer.call(null, size__6335__auto__);
              if (function() {
                var i__17169 = 0;
                while (true) {
                  if (i__17169 < size__6335__auto__) {
                    var vec__17175 = cljs.core._nth.call(null, c__6334__auto__, i__17169);
                    var k = cljs.core.nth.call(null, vec__17175, 0, null);
                    var vec__17176 = cljs.core.nth.call(null, vec__17175, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__17176, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__17176, 1, null);
                    cljs.core.chunk_append.call(null, b__17170, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null));
                    var G__17180 = i__17169 + 1;
                    i__17169 = G__17180;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17170), cljs$pprint$unzip_map_$_iter__17167.call(null, cljs.core.chunk_rest.call(null, s__17168__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17170), null);
              }
            } else {
              var vec__17177 = cljs.core.first.call(null, s__17168__$2);
              var k = cljs.core.nth.call(null, vec__17177, 0, null);
              var vec__17178 = cljs.core.nth.call(null, vec__17177, 1, null);
              var v1 = cljs.core.nth.call(null, vec__17178, 0, null);
              var v2 = cljs.core.nth.call(null, vec__17178, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null), cljs$pprint$unzip_map_$_iter__17167.call(null, cljs.core.rest.call(null, s__17168__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6336__auto__.call(null, m);
  }())], null);
};
cljs.pprint.tuple_map = function cljs$pprint$tuple_map(m, v1) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__6336__auto__ = function cljs$pprint$tuple_map_$_iter__17189(s__17190) {
      return new cljs.core.LazySeq(null, function() {
        var s__17190__$1 = s__17190;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__17190__$1);
          if (temp__4425__auto__) {
            var s__17190__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__17190__$2)) {
              var c__6334__auto__ = cljs.core.chunk_first.call(null, s__17190__$2);
              var size__6335__auto__ = cljs.core.count.call(null, c__6334__auto__);
              var b__17192 = cljs.core.chunk_buffer.call(null, size__6335__auto__);
              if (function() {
                var i__17191 = 0;
                while (true) {
                  if (i__17191 < size__6335__auto__) {
                    var vec__17195 = cljs.core._nth.call(null, c__6334__auto__, i__17191);
                    var k = cljs.core.nth.call(null, vec__17195, 0, null);
                    var v = cljs.core.nth.call(null, vec__17195, 1, null);
                    cljs.core.chunk_append.call(null, b__17192, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null));
                    var G__17197 = i__17191 + 1;
                    i__17191 = G__17197;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17192), cljs$pprint$tuple_map_$_iter__17189.call(null, cljs.core.chunk_rest.call(null, s__17190__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17192), null);
              }
            } else {
              var vec__17196 = cljs.core.first.call(null, s__17190__$2);
              var k = cljs.core.nth.call(null, vec__17196, 0, null);
              var v = cljs.core.nth.call(null, vec__17196, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null), cljs$pprint$tuple_map_$_iter__17189.call(null, cljs.core.rest.call(null, s__17190__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6336__auto__.call(null, m);
  }());
};
cljs.pprint.rtrim = function cljs$pprint$rtrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1), c)) {
    var n = len - 1;
    while (true) {
      if (n < 0) {
        return "";
      } else {
        if (!cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
          return cljs.core.subs.call(null, s, 0, n + 1);
        } else {
          var G__17198 = n - 1;
          n = G__17198;
          continue;
        }
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.ltrim = function cljs$pprint$ltrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, 0), c)) {
    var n = 0;
    while (true) {
      if (cljs.core._EQ_.call(null, n, len) || !cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
        return cljs.core.subs.call(null, s, n);
      } else {
        var G__17199 = n + 1;
        n = G__17199;
        continue;
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.prefix_count = function cljs$pprint$prefix_count(aseq, val) {
  var test = cljs.core.coll_QMARK_.call(null, val) ? cljs.core.set.call(null, val) : cljs.core.PersistentHashSet.fromArray([val], true);
  var pos = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, pos, cljs.core.count.call(null, aseq)) || cljs.core.not.call(null, test.call(null, cljs.core.nth.call(null, aseq, pos)))) {
      return pos;
    } else {
      var G__17200 = pos + 1;
      pos = G__17200;
      continue;
    }
    break;
  }
};
cljs.pprint.IPrettyFlush = {};
cljs.pprint._ppflush = function cljs$pprint$_ppflush(pp) {
  if (!(pp == null) && !(pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1 == null)) {
    return pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1(pp);
  } else {
    var x__6219__auto__ = pp == null ? null : pp;
    var m__6220__auto__ = cljs.pprint._ppflush[goog.typeOf(x__6219__auto__)];
    if (!(m__6220__auto__ == null)) {
      return m__6220__auto__.call(null, pp);
    } else {
      var m__6220__auto____$1 = cljs.pprint._ppflush["_"];
      if (!(m__6220__auto____$1 == null)) {
        return m__6220__auto____$1.call(null, pp);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPrettyFlush.-ppflush", pp);
      }
    }
  }
};
cljs.pprint._STAR_default_page_width_STAR_ = 72;
cljs.pprint.get_field = function cljs$pprint$get_field(this$, sym) {
  return sym.call(null, cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint.set_field = function cljs$pprint$set_field(this$, sym, new_val) {
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, sym, new_val);
};
cljs.pprint.get_column = function cljs$pprint$get_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599));
};
cljs.pprint.get_line = function cljs$pprint$get_line(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235));
};
cljs.pprint.get_max_column = function cljs$pprint$get_max_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548));
};
cljs.pprint.set_max_column = function cljs$pprint$set_max_column(this$, new_max) {
  cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548), new_max);
  return null;
};
cljs.pprint.get_writer = function cljs$pprint$get_writer(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322));
};
cljs.pprint.c_write_char = function cljs$pprint$c_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, c, "\n")) {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0);
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235)) + 1);
  } else {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + 1);
  }
  return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322)), c);
};
cljs.pprint.column_writer = function cljs$pprint$column_writer() {
  var args17204 = [];
  var len__6622__auto___17213 = arguments.length;
  var i__6623__auto___17214 = 0;
  while (true) {
    if (i__6623__auto___17214 < len__6622__auto___17213) {
      args17204.push(arguments[i__6623__auto___17214]);
      var G__17215 = i__6623__auto___17214 + 1;
      i__6623__auto___17214 = G__17215;
      continue;
    } else {
    }
    break;
  }
  var G__17206 = args17204.length;
  switch(G__17206) {
    case 1:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args17204.length)].join(""));;
  }
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1 = function(writer) {
  return cljs.pprint.column_writer.call(null, writer, cljs.pprint._STAR_default_page_width_STAR_);
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2 = function(writer, max_columns) {
  var fields = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "max", "max", 61366548), max_columns, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0, new cljs.core.Keyword(null, "line", "line", 212345235), 0, new cljs.core.Keyword(null, "base", "base", 185279322), writer], null));
  if (typeof cljs.pprint.t17207 !== "undefined") {
  } else {
    cljs.pprint.t17207 = function(writer, max_columns, fields, meta17208) {
      this.writer = writer;
      this.max_columns = max_columns;
      this.fields = fields;
      this.meta17208 = meta17208;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t17207.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(fields) {
      return function(_17209, meta17208__$1) {
        var self__ = this;
        var _17209__$1 = this;
        return new cljs.pprint.t17207(self__.writer, self__.max_columns, self__.fields, meta17208__$1);
      };
    }(fields);
    cljs.pprint.t17207.prototype.cljs$core$IMeta$_meta$arity$1 = function(fields) {
      return function(_17209) {
        var self__ = this;
        var _17209__$1 = this;
        return self__.meta17208;
      };
    }(fields);
    cljs.pprint.t17207.prototype.cljs$core$IDeref$_deref$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(fields);
    cljs.pprint.t17207.prototype.cljs$core$IWriter$_flush$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(fields);
    cljs.pprint.t17207.prototype.cljs$core$IWriter$_write$arity$2 = function(fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__17210 = cljs.core._EQ_;
        var expr__17211 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__17210.call(null, String, expr__17211))) {
          var s = x;
          var nl = s.lastIndexOf("\n");
          if (nl < 0) {
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + cljs.core.count.call(null, s));
          } else {
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.core.count.call(null, s) - nl - 1);
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235)) + cljs.core.count.call(null, cljs.core.filter.call(null, function(s, nl, pred__17210, expr__17211, this$__$1, fields) {
              return function(p1__17203_SHARP_) {
                return cljs.core._EQ_.call(null, p1__17203_SHARP_, "\n");
              };
            }(s, nl, pred__17210, expr__17211, this$__$1, fields), s)));
          }
          return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "base", "base", 185279322)), s);
        } else {
          if (cljs.core.truth_(pred__17210.call(null, Number, expr__17211))) {
            return cljs.pprint.c_write_char.call(null, this$__$1, x);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__17211)].join(""));
          }
        }
      };
    }(fields);
    cljs.pprint.t17207.getBasis = function(fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta17208", "meta17208", -1892684739, null)], null);
      };
    }(fields);
    cljs.pprint.t17207.cljs$lang$type = true;
    cljs.pprint.t17207.cljs$lang$ctorStr = "cljs.pprint/t17207";
    cljs.pprint.t17207.cljs$lang$ctorPrWriter = function(fields) {
      return function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
        return cljs.core._write.call(null, writer__6163__auto__, "cljs.pprint/t17207");
      };
    }(fields);
    cljs.pprint.__GT_t17207 = function(fields) {
      return function cljs$pprint$__GT_t17207(writer__$1, max_columns__$1, fields__$1, meta17208) {
        return new cljs.pprint.t17207(writer__$1, max_columns__$1, fields__$1, meta17208);
      };
    }(fields);
  }
  return new cljs.pprint.t17207(writer, max_columns, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.column_writer.cljs$lang$maxFixedArity = 2;
cljs.pprint.logical_block = function(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, __meta, __extmap, __hash) {
  this.parent = parent;
  this.section = section;
  this.start_col = start_col;
  this.indent = indent;
  this.done_nl = done_nl;
  this.intra_block_nl = intra_block_nl;
  this.prefix = prefix;
  this.per_line_prefix = per_line_prefix;
  this.suffix = suffix;
  this.logical_block_callback = logical_block_callback;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6178__auto__, k__6179__auto__) {
  var self__ = this;
  var this__6178__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6178__auto____$1, k__6179__auto__, null);
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6180__auto__, k17218, else__6181__auto__) {
  var self__ = this;
  var this__6180__auto____$1 = this;
  var G__17220 = k17218 instanceof cljs.core.Keyword ? k17218.fqn : null;
  switch(G__17220) {
    case "suffix":
      return self__.suffix;
      break;
    case "indent":
      return self__.indent;
      break;
    case "parent":
      return self__.parent;
      break;
    case "section":
      return self__.section;
      break;
    case "done-nl":
      return self__.done_nl;
      break;
    case "start-col":
      return self__.start_col;
      break;
    case "prefix":
      return self__.prefix;
      break;
    case "per-line-prefix":
      return self__.per_line_prefix;
      break;
    case "logical-block-callback":
      return self__.logical_block_callback;
      break;
    case "intra-block-nl":
      return self__.intra_block_nl;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k17218, else__6181__auto__);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6192__auto__, writer__6193__auto__, opts__6194__auto__) {
  var self__ = this;
  var this__6192__auto____$1 = this;
  var pr_pair__6195__auto__ = function(this__6192__auto____$1) {
    return function(keyval__6196__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6193__auto__, cljs.core.pr_writer, "", " ", "", opts__6194__auto__, keyval__6196__auto__);
    };
  }(this__6192__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6193__auto__, pr_pair__6195__auto__, "#cljs.pprint.logical-block{", ", ", "}", opts__6194__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), 
  self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IIterable$ = true;
cljs.pprint.logical_block.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__17217) {
  var self__ = this;
  var G__17217__$1 = this;
  return new cljs.core.RecordIter(0, G__17217__$1, 10, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 
  1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6176__auto__) {
  var self__ = this;
  var this__6176__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.logical_block.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6172__auto__) {
  var self__ = this;
  var this__6172__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6182__auto__) {
  var self__ = this;
  var this__6182__auto____$1 = this;
  return 10 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6173__auto__) {
  var self__ = this;
  var this__6173__auto____$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_imap.call(null, this__6173__auto____$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6174__auto__, other__6175__auto__) {
  var self__ = this;
  var this__6174__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__5571__auto__ = other__6175__auto__;
    if (cljs.core.truth_(and__5571__auto__)) {
      var and__5571__auto____$1 = this__6174__auto____$1.constructor === other__6175__auto__.constructor;
      if (and__5571__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6174__auto____$1, other__6175__auto__);
      } else {
        return and__5571__auto____$1;
      }
    } else {
      return and__5571__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6187__auto__, k__6188__auto__) {
  var self__ = this;
  var this__6187__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), null, new cljs.core.Keyword(null, "indent", "indent", -148200125), null, new cljs.core.Keyword(null, "parent", "parent", -878878779), null, new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), null, new cljs.core.Keyword(null, "start-col", 
  "start-col", 668080143), null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), null], null), null), k__6188__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6187__auto____$1), self__.__meta), k__6188__auto__);
  } else {
    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6188__auto__)), null);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6185__auto__, k__6186__auto__, G__17217) {
  var self__ = this;
  var this__6185__auto____$1 = this;
  var pred__17221 = cljs.core.keyword_identical_QMARK_;
  var expr__17222 = k__6186__auto__;
  if (cljs.core.truth_(pred__17221.call(null, new cljs.core.Keyword(null, "parent", "parent", -878878779), expr__17222))) {
    return new cljs.pprint.logical_block(G__17217, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__17221.call(null, new cljs.core.Keyword(null, "section", "section", -300141526), expr__17222))) {
      return new cljs.pprint.logical_block(self__.parent, G__17217, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__17221.call(null, new cljs.core.Keyword(null, "start-col", "start-col", 668080143), expr__17222))) {
        return new cljs.pprint.logical_block(self__.parent, self__.section, G__17217, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__17221.call(null, new cljs.core.Keyword(null, "indent", "indent", -148200125), expr__17222))) {
          return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, G__17217, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__17221.call(null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), expr__17222))) {
            return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, G__17217, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__17221.call(null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), expr__17222))) {
              return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, G__17217, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__17221.call(null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), expr__17222))) {
                return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, G__17217, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__17221.call(null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), expr__17222))) {
                  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, G__17217, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                } else {
                  if (cljs.core.truth_(pred__17221.call(null, new cljs.core.Keyword(null, "suffix", "suffix", 367373057), expr__17222))) {
                    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, G__17217, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                  } else {
                    if (cljs.core.truth_(pred__17221.call(null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), expr__17222))) {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, G__17217, self__.__meta, self__.__extmap, null);
                    } else {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6186__auto__, G__17217), null);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.pprint.logical_block.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6190__auto__) {
  var self__ = this;
  var this__6190__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6177__auto__, G__17217) {
  var self__ = this;
  var this__6177__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, G__17217, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6183__auto__, entry__6184__auto__) {
  var self__ = this;
  var this__6183__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6184__auto__)) {
    return cljs.core._assoc.call(null, this__6183__auto____$1, cljs.core._nth.call(null, entry__6184__auto__, 0), cljs.core._nth.call(null, entry__6184__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6183__auto____$1, entry__6184__auto__);
  }
};
cljs.pprint.logical_block.getBasis = function() {
  return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.Symbol(null, "section", "section", 1340390001, null), new cljs.core.Symbol(null, "start-col", "start-col", -1986355626, null), new cljs.core.Symbol(null, "indent", "indent", 1492331402, null), new cljs.core.Symbol(null, "done-nl", "done-nl", 1259507187, null), new cljs.core.Symbol(null, "intra-block-nl", "intra-block-nl", -845608894, 
  null), new cljs.core.Symbol(null, "prefix", "prefix", 1374623062, null), new cljs.core.Symbol(null, "per-line-prefix", "per-line-prefix", -1807493956, null), new cljs.core.Symbol(null, "suffix", "suffix", 2007904584, null), new cljs.core.Symbol(null, "logical-block-callback", "logical-block-callback", -1041744575, null)], null);
};
cljs.pprint.logical_block.cljs$lang$type = true;
cljs.pprint.logical_block.cljs$lang$ctorPrSeq = function(this__6212__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/logical-block");
};
cljs.pprint.logical_block.cljs$lang$ctorPrWriter = function(this__6212__auto__, writer__6213__auto__) {
  return cljs.core._write.call(null, writer__6213__auto__, "cljs.pprint/logical-block");
};
cljs.pprint.__GT_logical_block = function cljs$pprint$__GT_logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback) {
  return new cljs.pprint.logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, null, null, null);
};
cljs.pprint.map__GT_logical_block = function cljs$pprint$map__GT_logical_block(G__17219) {
  return new cljs.pprint.logical_block((new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(G__17219), (new cljs.core.Keyword(null, "section", "section", -300141526)).cljs$core$IFn$_invoke$arity$1(G__17219), (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(G__17219), (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(G__17219), (new cljs.core.Keyword(null, "done-nl", "done-nl", 
  -381024340)).cljs$core$IFn$_invoke$arity$1(G__17219), (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(G__17219), (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(G__17219), (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(G__17219), (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(G__17219), (new cljs.core.Keyword(null, 
  "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(G__17219), null, cljs.core.dissoc.call(null, G__17219, new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", 
  "intra-block-nl", 1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)), null);
};
cljs.pprint.ancestor_QMARK_ = function cljs$pprint$ancestor_QMARK_(parent, child) {
  var child__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child);
  while (true) {
    if (child__$1 == null) {
      return false;
    } else {
      if (parent === child__$1) {
        return true;
      } else {
        var G__17225 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child__$1);
        child__$1 = G__17225;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.buffer_length = function cljs$pprint$buffer_length(l) {
  var l__$1 = cljs.core.seq.call(null, l);
  if (l__$1) {
    return (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(cljs.core.last.call(null, l__$1)) - (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, l__$1));
  } else {
    return 0;
  }
};
cljs.pprint.buffer_blob = function(type_tag, data, trailing_white_space, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.data = data;
  this.trailing_white_space = trailing_white_space;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6178__auto__, k__6179__auto__) {
  var self__ = this;
  var this__6178__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6178__auto____$1, k__6179__auto__, null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6180__auto__, k17227, else__6181__auto__) {
  var self__ = this;
  var this__6180__auto____$1 = this;
  var G__17229 = k17227 instanceof cljs.core.Keyword ? k17227.fqn : null;
  switch(G__17229) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "data":
      return self__.data;
      break;
    case "trailing-white-space":
      return self__.trailing_white_space;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k17227, else__6181__auto__);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6192__auto__, writer__6193__auto__, opts__6194__auto__) {
  var self__ = this;
  var this__6192__auto____$1 = this;
  var pr_pair__6195__auto__ = function(this__6192__auto____$1) {
    return function(keyval__6196__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6193__auto__, cljs.core.pr_writer, "", " ", "", opts__6194__auto__, keyval__6196__auto__);
    };
  }(this__6192__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6193__auto__, pr_pair__6195__auto__, "#cljs.pprint.buffer-blob{", ", ", "}", opts__6194__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$ = true;
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__17226) {
  var self__ = this;
  var G__17226__$1 = this;
  return new cljs.core.RecordIter(0, G__17226__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6176__auto__) {
  var self__ = this;
  var this__6176__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6172__auto__) {
  var self__ = this;
  var this__6172__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6182__auto__) {
  var self__ = this;
  var this__6182__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6173__auto__) {
  var self__ = this;
  var this__6173__auto____$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_imap.call(null, this__6173__auto____$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6174__auto__, other__6175__auto__) {
  var self__ = this;
  var this__6174__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__5571__auto__ = other__6175__auto__;
    if (cljs.core.truth_(and__5571__auto__)) {
      var and__5571__auto____$1 = this__6174__auto____$1.constructor === other__6175__auto__.constructor;
      if (and__5571__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6174__auto____$1, other__6175__auto__);
      } else {
        return and__5571__auto____$1;
      }
    } else {
      return and__5571__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6187__auto__, k__6188__auto__) {
  var self__ = this;
  var this__6187__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null, new cljs.core.Keyword(null, "data", "data", -232669377), null], null), 
  null), k__6188__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6187__auto____$1), self__.__meta), k__6188__auto__);
  } else {
    return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6188__auto__)), null);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6185__auto__, k__6186__auto__, G__17226) {
  var self__ = this;
  var this__6185__auto____$1 = this;
  var pred__17230 = cljs.core.keyword_identical_QMARK_;
  var expr__17231 = k__6186__auto__;
  if (cljs.core.truth_(pred__17230.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__17231))) {
    return new cljs.pprint.buffer_blob(G__17226, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__17230.call(null, new cljs.core.Keyword(null, "data", "data", -232669377), expr__17231))) {
      return new cljs.pprint.buffer_blob(self__.type_tag, G__17226, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__17230.call(null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), expr__17231))) {
        return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, G__17226, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__17230.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__17231))) {
          return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, G__17226, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__17230.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__17231))) {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, G__17226, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6186__auto__, G__17226), null);
          }
        }
      }
    }
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6190__auto__) {
  var self__ = this;
  var this__6190__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], 
  null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6177__auto__, G__17226) {
  var self__ = this;
  var this__6177__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, G__17226, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6183__auto__, entry__6184__auto__) {
  var self__ = this;
  var this__6183__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6184__auto__)) {
    return cljs.core._assoc.call(null, this__6183__auto____$1, cljs.core._nth.call(null, entry__6184__auto__, 0), cljs.core._nth.call(null, entry__6184__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6183__auto____$1, entry__6184__auto__);
  }
};
cljs.pprint.buffer_blob.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "trailing-white-space", "trailing-white-space", -1158428773, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.buffer_blob.cljs$lang$type = true;
cljs.pprint.buffer_blob.cljs$lang$ctorPrSeq = function(this__6212__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/buffer-blob");
};
cljs.pprint.buffer_blob.cljs$lang$ctorPrWriter = function(this__6212__auto__, writer__6213__auto__) {
  return cljs.core._write.call(null, writer__6213__auto__, "cljs.pprint/buffer-blob");
};
cljs.pprint.__GT_buffer_blob = function cljs$pprint$__GT_buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_buffer_blob = function cljs$pprint$map__GT_buffer_blob(G__17228) {
  return new cljs.pprint.buffer_blob((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__17228), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(G__17228), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(G__17228), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__17228), (new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__17228), null, cljs.core.dissoc.call(null, G__17228, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_buffer_blob = function cljs$pprint$make_buffer_blob(data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.buffer_blob_QMARK_ = function cljs$pprint$buffer_blob_QMARK_(x__8477__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__8477__auto__), new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173));
};
cljs.pprint.nl_t = function(type_tag, type, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.type = type;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6178__auto__, k__6179__auto__) {
  var self__ = this;
  var this__6178__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6178__auto____$1, k__6179__auto__, null);
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6180__auto__, k17235, else__6181__auto__) {
  var self__ = this;
  var this__6180__auto____$1 = this;
  var G__17237 = k17235 instanceof cljs.core.Keyword ? k17235.fqn : null;
  switch(G__17237) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "type":
      return self__.type;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k17235, else__6181__auto__);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6192__auto__, writer__6193__auto__, opts__6194__auto__) {
  var self__ = this;
  var this__6192__auto____$1 = this;
  var pr_pair__6195__auto__ = function(this__6192__auto____$1) {
    return function(keyval__6196__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6193__auto__, cljs.core.pr_writer, "", " ", "", opts__6194__auto__, keyval__6196__auto__);
    };
  }(this__6192__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6193__auto__, pr_pair__6195__auto__, "#cljs.pprint.nl-t{", ", ", "}", opts__6194__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.nl_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__17234) {
  var self__ = this;
  var G__17234__$1 = this;
  return new cljs.core.RecordIter(0, G__17234__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6176__auto__) {
  var self__ = this;
  var this__6176__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.nl_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6172__auto__) {
  var self__ = this;
  var this__6172__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6182__auto__) {
  var self__ = this;
  var this__6182__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6173__auto__) {
  var self__ = this;
  var this__6173__auto____$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_imap.call(null, this__6173__auto____$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6174__auto__, other__6175__auto__) {
  var self__ = this;
  var this__6174__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__5571__auto__ = other__6175__auto__;
    if (cljs.core.truth_(and__5571__auto__)) {
      var and__5571__auto____$1 = this__6174__auto____$1.constructor === other__6175__auto__.constructor;
      if (and__5571__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6174__auto____$1, other__6175__auto__);
      } else {
        return and__5571__auto____$1;
      }
    } else {
      return and__5571__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6187__auto__, k__6188__auto__) {
  var self__ = this;
  var this__6187__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "type", "type", 1174270348), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__6188__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6187__auto____$1), self__.__meta), k__6188__auto__);
  } else {
    return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6188__auto__)), null);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6185__auto__, k__6186__auto__, G__17234) {
  var self__ = this;
  var this__6185__auto____$1 = this;
  var pred__17238 = cljs.core.keyword_identical_QMARK_;
  var expr__17239 = k__6186__auto__;
  if (cljs.core.truth_(pred__17238.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__17239))) {
    return new cljs.pprint.nl_t(G__17234, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__17238.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), expr__17239))) {
      return new cljs.pprint.nl_t(self__.type_tag, G__17234, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__17238.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__17239))) {
        return new cljs.pprint.nl_t(self__.type_tag, self__.type, G__17234, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__17238.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__17239))) {
          return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, G__17234, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__17238.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__17239))) {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, G__17234, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6186__auto__, G__17234), null);
          }
        }
      }
    }
  }
};
cljs.pprint.nl_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6190__auto__) {
  var self__ = this;
  var this__6190__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), 
  self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6177__auto__, G__17234) {
  var self__ = this;
  var this__6177__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, G__17234, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6183__auto__, entry__6184__auto__) {
  var self__ = this;
  var this__6183__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6184__auto__)) {
    return cljs.core._assoc.call(null, this__6183__auto____$1, cljs.core._nth.call(null, entry__6184__auto__, 0), cljs.core._nth.call(null, entry__6184__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6183__auto____$1, entry__6184__auto__);
  }
};
cljs.pprint.nl_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.nl_t.cljs$lang$type = true;
cljs.pprint.nl_t.cljs$lang$ctorPrSeq = function(this__6212__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/nl-t");
};
cljs.pprint.nl_t.cljs$lang$ctorPrWriter = function(this__6212__auto__, writer__6213__auto__) {
  return cljs.core._write.call(null, writer__6213__auto__, "cljs.pprint/nl-t");
};
cljs.pprint.__GT_nl_t = function cljs$pprint$__GT_nl_t(type_tag, type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(type_tag, type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_nl_t = function cljs$pprint$map__GT_nl_t(G__17236) {
  return new cljs.pprint.nl_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__17236), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(G__17236), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__17236), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__17236), (new cljs.core.Keyword(null, "end-pos", 
  "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__17236), null, cljs.core.dissoc.call(null, G__17236, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_nl_t = function cljs$pprint$make_nl_t(type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.nl_t_QMARK_ = function cljs$pprint$nl_t_QMARK_(x__8477__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__8477__auto__), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114));
};
cljs.pprint.start_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6178__auto__, k__6179__auto__) {
  var self__ = this;
  var this__6178__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6178__auto____$1, k__6179__auto__, null);
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6180__auto__, k17243, else__6181__auto__) {
  var self__ = this;
  var this__6180__auto____$1 = this;
  var G__17245 = k17243 instanceof cljs.core.Keyword ? k17243.fqn : null;
  switch(G__17245) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k17243, else__6181__auto__);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6192__auto__, writer__6193__auto__, opts__6194__auto__) {
  var self__ = this;
  var this__6192__auto____$1 = this;
  var pr_pair__6195__auto__ = function(this__6192__auto____$1) {
    return function(keyval__6196__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6193__auto__, cljs.core.pr_writer, "", " ", "", opts__6194__auto__, keyval__6196__auto__);
    };
  }(this__6192__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6193__auto__, pr_pair__6195__auto__, "#cljs.pprint.start-block-t{", ", ", "}", opts__6194__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__17242) {
  var self__ = this;
  var G__17242__$1 = this;
  return new cljs.core.RecordIter(0, G__17242__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6176__auto__) {
  var self__ = this;
  var this__6176__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.start_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6172__auto__) {
  var self__ = this;
  var this__6172__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6182__auto__) {
  var self__ = this;
  var this__6182__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6173__auto__) {
  var self__ = this;
  var this__6173__auto____$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_imap.call(null, this__6173__auto____$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6174__auto__, other__6175__auto__) {
  var self__ = this;
  var this__6174__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__5571__auto__ = other__6175__auto__;
    if (cljs.core.truth_(and__5571__auto__)) {
      var and__5571__auto____$1 = this__6174__auto____$1.constructor === other__6175__auto__.constructor;
      if (and__5571__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6174__auto____$1, other__6175__auto__);
      } else {
        return and__5571__auto____$1;
      }
    } else {
      return and__5571__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6187__auto__, k__6188__auto__) {
  var self__ = this;
  var this__6187__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__6188__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6187__auto____$1), self__.__meta), k__6188__auto__);
  } else {
    return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6188__auto__)), null);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6185__auto__, k__6186__auto__, G__17242) {
  var self__ = this;
  var this__6185__auto____$1 = this;
  var pred__17246 = cljs.core.keyword_identical_QMARK_;
  var expr__17247 = k__6186__auto__;
  if (cljs.core.truth_(pred__17246.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__17247))) {
    return new cljs.pprint.start_block_t(G__17242, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__17246.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__17247))) {
      return new cljs.pprint.start_block_t(self__.type_tag, G__17242, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__17246.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__17247))) {
        return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, G__17242, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__17246.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__17247))) {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__17242, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6186__auto__, G__17242), null);
        }
      }
    }
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6190__auto__) {
  var self__ = this;
  var this__6190__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6177__auto__, G__17242) {
  var self__ = this;
  var this__6177__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__17242, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6183__auto__, entry__6184__auto__) {
  var self__ = this;
  var this__6183__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6184__auto__)) {
    return cljs.core._assoc.call(null, this__6183__auto____$1, cljs.core._nth.call(null, entry__6184__auto__, 0), cljs.core._nth.call(null, entry__6184__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6183__auto____$1, entry__6184__auto__);
  }
};
cljs.pprint.start_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.start_block_t.cljs$lang$type = true;
cljs.pprint.start_block_t.cljs$lang$ctorPrSeq = function(this__6212__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/start-block-t");
};
cljs.pprint.start_block_t.cljs$lang$ctorPrWriter = function(this__6212__auto__, writer__6213__auto__) {
  return cljs.core._write.call(null, writer__6213__auto__, "cljs.pprint/start-block-t");
};
cljs.pprint.__GT_start_block_t = function cljs$pprint$__GT_start_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_start_block_t = function cljs$pprint$map__GT_start_block_t(G__17244) {
  return new cljs.pprint.start_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__17244), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__17244), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__17244), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__17244), null, cljs.core.dissoc.call(null, 
  G__17244, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_start_block_t = function cljs$pprint$make_start_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.start_block_t_QMARK_ = function cljs$pprint$start_block_t_QMARK_(x__8477__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__8477__auto__), new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594));
};
cljs.pprint.end_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6178__auto__, k__6179__auto__) {
  var self__ = this;
  var this__6178__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6178__auto____$1, k__6179__auto__, null);
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6180__auto__, k17251, else__6181__auto__) {
  var self__ = this;
  var this__6180__auto____$1 = this;
  var G__17253 = k17251 instanceof cljs.core.Keyword ? k17251.fqn : null;
  switch(G__17253) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k17251, else__6181__auto__);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6192__auto__, writer__6193__auto__, opts__6194__auto__) {
  var self__ = this;
  var this__6192__auto____$1 = this;
  var pr_pair__6195__auto__ = function(this__6192__auto____$1) {
    return function(keyval__6196__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6193__auto__, cljs.core.pr_writer, "", " ", "", opts__6194__auto__, keyval__6196__auto__);
    };
  }(this__6192__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6193__auto__, pr_pair__6195__auto__, "#cljs.pprint.end-block-t{", ", ", "}", opts__6194__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__17250) {
  var self__ = this;
  var G__17250__$1 = this;
  return new cljs.core.RecordIter(0, G__17250__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6176__auto__) {
  var self__ = this;
  var this__6176__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.end_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6172__auto__) {
  var self__ = this;
  var this__6172__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6182__auto__) {
  var self__ = this;
  var this__6182__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6173__auto__) {
  var self__ = this;
  var this__6173__auto____$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_imap.call(null, this__6173__auto____$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6174__auto__, other__6175__auto__) {
  var self__ = this;
  var this__6174__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__5571__auto__ = other__6175__auto__;
    if (cljs.core.truth_(and__5571__auto__)) {
      var and__5571__auto____$1 = this__6174__auto____$1.constructor === other__6175__auto__.constructor;
      if (and__5571__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6174__auto____$1, other__6175__auto__);
      } else {
        return and__5571__auto____$1;
      }
    } else {
      return and__5571__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6187__auto__, k__6188__auto__) {
  var self__ = this;
  var this__6187__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__6188__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6187__auto____$1), self__.__meta), k__6188__auto__);
  } else {
    return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6188__auto__)), null);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6185__auto__, k__6186__auto__, G__17250) {
  var self__ = this;
  var this__6185__auto____$1 = this;
  var pred__17254 = cljs.core.keyword_identical_QMARK_;
  var expr__17255 = k__6186__auto__;
  if (cljs.core.truth_(pred__17254.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__17255))) {
    return new cljs.pprint.end_block_t(G__17250, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__17254.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__17255))) {
      return new cljs.pprint.end_block_t(self__.type_tag, G__17250, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__17254.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__17255))) {
        return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, G__17250, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__17254.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__17255))) {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__17250, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6186__auto__, G__17250), null);
        }
      }
    }
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6190__auto__) {
  var self__ = this;
  var this__6190__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6177__auto__, G__17250) {
  var self__ = this;
  var this__6177__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__17250, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6183__auto__, entry__6184__auto__) {
  var self__ = this;
  var this__6183__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6184__auto__)) {
    return cljs.core._assoc.call(null, this__6183__auto____$1, cljs.core._nth.call(null, entry__6184__auto__, 0), cljs.core._nth.call(null, entry__6184__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6183__auto____$1, entry__6184__auto__);
  }
};
cljs.pprint.end_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.end_block_t.cljs$lang$type = true;
cljs.pprint.end_block_t.cljs$lang$ctorPrSeq = function(this__6212__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/end-block-t");
};
cljs.pprint.end_block_t.cljs$lang$ctorPrWriter = function(this__6212__auto__, writer__6213__auto__) {
  return cljs.core._write.call(null, writer__6213__auto__, "cljs.pprint/end-block-t");
};
cljs.pprint.__GT_end_block_t = function cljs$pprint$__GT_end_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_end_block_t = function cljs$pprint$map__GT_end_block_t(G__17252) {
  return new cljs.pprint.end_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__17252), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__17252), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__17252), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__17252), null, cljs.core.dissoc.call(null, 
  G__17252, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_end_block_t = function cljs$pprint$make_end_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.end_block_t_QMARK_ = function cljs$pprint$end_block_t_QMARK_(x__8477__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__8477__auto__), new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735));
};
cljs.pprint.indent_t = function(type_tag, logical_block, relative_to, offset, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.relative_to = relative_to;
  this.offset = offset;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6178__auto__, k__6179__auto__) {
  var self__ = this;
  var this__6178__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6178__auto____$1, k__6179__auto__, null);
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6180__auto__, k17259, else__6181__auto__) {
  var self__ = this;
  var this__6180__auto____$1 = this;
  var G__17261 = k17259 instanceof cljs.core.Keyword ? k17259.fqn : null;
  switch(G__17261) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "relative-to":
      return self__.relative_to;
      break;
    case "offset":
      return self__.offset;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k17259, else__6181__auto__);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6192__auto__, writer__6193__auto__, opts__6194__auto__) {
  var self__ = this;
  var this__6192__auto____$1 = this;
  var pr_pair__6195__auto__ = function(this__6192__auto____$1) {
    return function(keyval__6196__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6193__auto__, cljs.core.pr_writer, "", " ", "", opts__6194__auto__, keyval__6196__auto__);
    };
  }(this__6192__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6193__auto__, pr_pair__6195__auto__, "#cljs.pprint.indent-t{", ", ", "}", opts__6194__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.indent_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__17258) {
  var self__ = this;
  var G__17258__$1 = this;
  return new cljs.core.RecordIter(0, G__17258__$1, 6, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6176__auto__) {
  var self__ = this;
  var this__6176__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.indent_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6172__auto__) {
  var self__ = this;
  var this__6172__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6182__auto__) {
  var self__ = this;
  var this__6182__auto____$1 = this;
  return 6 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6173__auto__) {
  var self__ = this;
  var this__6173__auto____$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_imap.call(null, this__6173__auto____$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6174__auto__, other__6175__auto__) {
  var self__ = this;
  var this__6174__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__5571__auto__ = other__6175__auto__;
    if (cljs.core.truth_(and__5571__auto__)) {
      var and__5571__auto____$1 = this__6174__auto____$1.constructor === other__6175__auto__.constructor;
      if (and__5571__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6174__auto____$1, other__6175__auto__);
      } else {
        return and__5571__auto____$1;
      }
    } else {
      return and__5571__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6187__auto__, k__6188__auto__) {
  var self__ = this;
  var this__6187__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), null], null), null), k__6188__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6187__auto____$1), self__.__meta), k__6188__auto__);
  } else {
    return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6188__auto__)), null);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6185__auto__, k__6186__auto__, G__17258) {
  var self__ = this;
  var this__6185__auto____$1 = this;
  var pred__17262 = cljs.core.keyword_identical_QMARK_;
  var expr__17263 = k__6186__auto__;
  if (cljs.core.truth_(pred__17262.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__17263))) {
    return new cljs.pprint.indent_t(G__17258, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__17262.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__17263))) {
      return new cljs.pprint.indent_t(self__.type_tag, G__17258, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__17262.call(null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), expr__17263))) {
        return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, G__17258, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__17262.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__17263))) {
          return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, G__17258, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__17262.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__17263))) {
            return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, G__17258, self__.end_pos, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__17262.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__17263))) {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, G__17258, self__.__meta, self__.__extmap, null);
            } else {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6186__auto__, G__17258), null);
            }
          }
        }
      }
    }
  }
};
cljs.pprint.indent_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6190__auto__) {
  var self__ = this;
  var this__6190__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6177__auto__, G__17258) {
  var self__ = this;
  var this__6177__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, G__17258, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6183__auto__, entry__6184__auto__) {
  var self__ = this;
  var this__6183__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6184__auto__)) {
    return cljs.core._assoc.call(null, this__6183__auto____$1, cljs.core._nth.call(null, entry__6184__auto__, 0), cljs.core._nth.call(null, entry__6184__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6183__auto____$1, entry__6184__auto__);
  }
};
cljs.pprint.indent_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "relative-to", "relative-to", 1170431476, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", 
  -3352399, null)], null);
};
cljs.pprint.indent_t.cljs$lang$type = true;
cljs.pprint.indent_t.cljs$lang$ctorPrSeq = function(this__6212__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/indent-t");
};
cljs.pprint.indent_t.cljs$lang$ctorPrWriter = function(this__6212__auto__, writer__6213__auto__) {
  return cljs.core._write.call(null, writer__6213__auto__, "cljs.pprint/indent-t");
};
cljs.pprint.__GT_indent_t = function cljs$pprint$__GT_indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_indent_t = function cljs$pprint$map__GT_indent_t(G__17260) {
  return new cljs.pprint.indent_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__17260), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__17260), (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(G__17260), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__17260), (new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__17260), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__17260), null, cljs.core.dissoc.call(null, G__17260, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), 
  new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_indent_t = function cljs$pprint$make_indent_t(logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.indent_t_QMARK_ = function cljs$pprint$indent_t_QMARK_(x__8477__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__8477__auto__), new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969));
};
cljs.pprint.pp_newline = function cljs$pprint$pp_newline() {
  return "\n";
};
if (typeof cljs.pprint.write_token !== "undefined") {
} else {
  cljs.pprint.write_token = function() {
    var method_table__6477__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__6478__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__6479__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__6480__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__6481__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "write-token"), function(method_table__6477__auto__, prefer_table__6478__auto__, method_cache__6479__auto__, cached_hierarchy__6480__auto__, hierarchy__6481__auto__) {
      return function(p1__17267_SHARP_, p2__17266_SHARP_) {
        return (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(p2__17266_SHARP_);
      };
    }(method_table__6477__auto__, prefer_table__6478__auto__, method_cache__6479__auto__, cached_hierarchy__6480__auto__, hierarchy__6481__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__6481__auto__, method_table__6477__auto__, prefer_table__6478__auto__, method_cache__6479__auto__, cached_hierarchy__6480__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), function(this$, token) {
  var temp__4425__auto___17268 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4425__auto___17268)) {
    var cb_17269 = temp__4425__auto___17268;
    cb_17269.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
  } else {
  }
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  var temp__4425__auto___17270 = (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(temp__4425__auto___17270)) {
    var prefix_17271 = temp__4425__auto___17270;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix_17271);
  } else {
  }
  var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), function(this$, token) {
  var temp__4425__auto___17272 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4425__auto___17272)) {
    var cb_17273 = temp__4425__auto___17272;
    cb_17273.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
  } else {
  }
  var temp__4425__auto__ = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token));
  if (cljs.core.truth_(temp__4425__auto__)) {
    var suffix = temp__4425__auto__;
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), function(this$, token) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(token) + function() {
    var pred__17274 = cljs.core._EQ_;
    var expr__17275 = (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(token);
    if (cljs.core.truth_(pred__17274.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__17275))) {
      return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
    } else {
      if (cljs.core.truth_(pred__17274.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__17275))) {
        return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__17275)].join(""));
      }
    }
  }());
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), function(this$, token) {
  return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(token));
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), function(this$, token) {
  if (cljs.core.truth_(function() {
    var or__5583__auto__ = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336));
    if (or__5583__auto__) {
      return or__5583__auto__;
    } else {
      var and__5571__auto__ = !cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "fill", "fill", 883462889));
      if (and__5571__auto__) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token)));
      } else {
        return and__5571__auto__;
      }
    }
  }())) {
    cljs.pprint.emit_nl.call(null, this$, token);
  } else {
    var temp__4423__auto___17277 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4423__auto___17277)) {
      var tws_17278 = temp__4423__auto___17277;
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_17278);
    } else {
    }
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
});
cljs.pprint.write_tokens = function cljs$pprint$write_tokens(this$, tokens, force_trailing_whitespace) {
  var seq__17283 = cljs.core.seq.call(null, tokens);
  var chunk__17284 = null;
  var count__17285 = 0;
  var i__17286 = 0;
  while (true) {
    if (i__17286 < count__17285) {
      var token = cljs.core._nth.call(null, chunk__17284, i__17286);
      if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
        var temp__4423__auto___17287 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
        if (cljs.core.truth_(temp__4423__auto___17287)) {
          var tws_17288 = temp__4423__auto___17287;
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_17288);
        } else {
        }
      } else {
      }
      cljs.pprint.write_token.call(null, this$, token);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
      var tws_17289 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      if (cljs.core.truth_(function() {
        var and__5571__auto__ = force_trailing_whitespace;
        if (cljs.core.truth_(and__5571__auto__)) {
          return tws_17289;
        } else {
          return and__5571__auto__;
        }
      }())) {
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_17289);
        cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
      } else {
      }
      var G__17290 = seq__17283;
      var G__17291 = chunk__17284;
      var G__17292 = count__17285;
      var G__17293 = i__17286 + 1;
      seq__17283 = G__17290;
      chunk__17284 = G__17291;
      count__17285 = G__17292;
      i__17286 = G__17293;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__17283);
      if (temp__4425__auto__) {
        var seq__17283__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__17283__$1)) {
          var c__6367__auto__ = cljs.core.chunk_first.call(null, seq__17283__$1);
          var G__17294 = cljs.core.chunk_rest.call(null, seq__17283__$1);
          var G__17295 = c__6367__auto__;
          var G__17296 = cljs.core.count.call(null, c__6367__auto__);
          var G__17297 = 0;
          seq__17283 = G__17294;
          chunk__17284 = G__17295;
          count__17285 = G__17296;
          i__17286 = G__17297;
          continue;
        } else {
          var token = cljs.core.first.call(null, seq__17283__$1);
          if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
            var temp__4423__auto___17298 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
            if (cljs.core.truth_(temp__4423__auto___17298)) {
              var tws_17299 = temp__4423__auto___17298;
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_17299);
            } else {
            }
          } else {
          }
          cljs.pprint.write_token.call(null, this$, token);
          cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
          var tws_17300 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
          if (cljs.core.truth_(function() {
            var and__5571__auto__ = force_trailing_whitespace;
            if (cljs.core.truth_(and__5571__auto__)) {
              return tws_17300;
            } else {
              return and__5571__auto__;
            }
          }())) {
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_17300);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
          } else {
          }
          var G__17301 = cljs.core.next.call(null, seq__17283__$1);
          var G__17302 = null;
          var G__17303 = 0;
          var G__17304 = 0;
          seq__17283 = G__17301;
          chunk__17284 = G__17302;
          count__17285 = G__17303;
          i__17286 = G__17304;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.pprint.tokens_fit_QMARK_ = function cljs$pprint$tokens_fit_QMARK_(this$, tokens) {
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  return maxcol == null || cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))) + cljs.pprint.buffer_length.call(null, tokens) < maxcol;
};
cljs.pprint.linear_nl_QMARK_ = function cljs$pprint$linear_nl_QMARK_(this$, lb, section) {
  var or__5583__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__5583__auto__)) {
    return or__5583__auto__;
  } else {
    return cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, section));
  }
};
cljs.pprint.miser_nl_QMARK_ = function cljs$pprint$miser_nl_QMARK_(this$, lb, section) {
  var miser_width = cljs.pprint.get_miser_width.call(null, this$);
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  var and__5571__auto__ = miser_width;
  if (cljs.core.truth_(and__5571__auto__)) {
    var and__5571__auto____$1 = maxcol;
    if (cljs.core.truth_(and__5571__auto____$1)) {
      var and__5571__auto____$2 = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb)) >= maxcol - miser_width;
      if (and__5571__auto____$2) {
        return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
      } else {
        return and__5571__auto____$2;
      }
    } else {
      return and__5571__auto____$1;
    }
  } else {
    return and__5571__auto__;
  }
};
if (typeof cljs.pprint.emit_nl_QMARK_ !== "undefined") {
} else {
  cljs.pprint.emit_nl_QMARK_ = function() {
    var method_table__6477__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__6478__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__6479__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__6480__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__6481__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "emit-nl?"), function(method_table__6477__auto__, prefer_table__6478__auto__, method_cache__6479__auto__, cached_hierarchy__6480__auto__, hierarchy__6481__auto__) {
      return function(t, _, ___$1, ___$2) {
        return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(t);
      };
    }(method_table__6477__auto__, prefer_table__6478__auto__, method_cache__6479__auto__, cached_hierarchy__6480__auto__, hierarchy__6481__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__6481__auto__, method_table__6477__auto__, prefer_table__6478__auto__, method_cache__6479__auto__, cached_hierarchy__6480__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "linear", "linear", 872268697), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "miser", "miser", -556060186), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "fill", "fill", 883462889), function(newl, this$, section, subsection) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  var or__5583__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__5583__auto__)) {
    return or__5583__auto__;
  } else {
    var or__5583__auto____$1 = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, subsection));
    if (or__5583__auto____$1) {
      return or__5583__auto____$1;
    } else {
      return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
    }
  }
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), function(_, ___$1, ___$2, ___$3) {
  return true;
});
cljs.pprint.get_section = function cljs$pprint$get_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(nl, lb) {
    return function(p1__17305_SHARP_) {
      return cljs.core.not.call(null, function() {
        var and__5571__auto__ = cljs.pprint.nl_t_QMARK_.call(null, p1__17305_SHARP_);
        if (cljs.core.truth_(and__5571__auto__)) {
          return cljs.pprint.ancestor_QMARK_.call(null, (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__17305_SHARP_), lb);
        } else {
          return and__5571__auto__;
        }
      }());
    };
  }(nl, lb), cljs.core.next.call(null, buffer)));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [section, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, section) + 1, buffer))], null);
};
cljs.pprint.get_sub_section = function cljs$pprint$get_sub_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(nl, lb) {
    return function(p1__17306_SHARP_) {
      var nl_lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__17306_SHARP_);
      return cljs.core.not.call(null, function() {
        var and__5571__auto__ = cljs.pprint.nl_t_QMARK_.call(null, p1__17306_SHARP_);
        if (cljs.core.truth_(and__5571__auto__)) {
          var or__5583__auto__ = cljs.core._EQ_.call(null, nl_lb, lb);
          if (or__5583__auto__) {
            return or__5583__auto__;
          } else {
            return cljs.pprint.ancestor_QMARK_.call(null, nl_lb, lb);
          }
        } else {
          return and__5571__auto__;
        }
      }());
    };
  }(nl, lb), cljs.core.next.call(null, buffer)));
  return section;
};
cljs.pprint.update_nl_state = function cljs$pprint$update_nl_state(lb) {
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb), true);
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb), true);
  var lb__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb);
  while (true) {
    if (cljs.core.truth_(lb__$1)) {
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      var G__17307 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb__$1);
      lb__$1 = G__17307;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.emit_nl = function cljs$pprint$emit_nl(this$, nl) {
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(prefix)) {
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
  } else {
  }
  var istr_17308 = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb)) - cljs.core.count.call(null, prefix), " "));
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), istr_17308);
  return cljs.pprint.update_nl_state.call(null, lb);
};
cljs.pprint.split_at_newline = function cljs$pprint$split_at_newline(tokens) {
  var pre = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(p1__17309_SHARP_) {
    return cljs.core.not.call(null, cljs.pprint.nl_t_QMARK_.call(null, p1__17309_SHARP_));
  }, tokens));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pre, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, pre), tokens))], null);
};
cljs.pprint.write_token_string = function cljs$pprint$write_token_string(this$, tokens) {
  var vec__17312 = cljs.pprint.split_at_newline.call(null, tokens);
  var a = cljs.core.nth.call(null, vec__17312, 0, null);
  var b = cljs.core.nth.call(null, vec__17312, 1, null);
  if (cljs.core.truth_(a)) {
    cljs.pprint.write_tokens.call(null, this$, a, false);
  } else {
  }
  if (cljs.core.truth_(b)) {
    var vec__17313 = cljs.pprint.get_section.call(null, b);
    var section = cljs.core.nth.call(null, vec__17313, 0, null);
    var remainder = cljs.core.nth.call(null, vec__17313, 1, null);
    var newl = cljs.core.first.call(null, b);
    var do_nl = cljs.pprint.emit_nl_QMARK_.call(null, newl, this$, section, cljs.pprint.get_sub_section.call(null, b));
    var result = cljs.core.truth_(do_nl) ? function() {
      cljs.pprint.emit_nl.call(null, this$, newl);
      return cljs.core.next.call(null, b);
    }() : b;
    var long_section = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, result));
    var result__$1 = long_section ? function() {
      var rem2 = cljs$pprint$write_token_string.call(null, this$, section);
      if (cljs.core._EQ_.call(null, rem2, section)) {
        cljs.pprint.write_tokens.call(null, this$, section, false);
        return remainder;
      } else {
        return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.concat.call(null, rem2, remainder));
      }
    }() : result;
    return result__$1;
  } else {
    return null;
  }
};
cljs.pprint.write_line = function cljs$pprint$write_line(this$) {
  var buffer = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  while (true) {
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, buffer));
    if (cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, buffer))) {
      var new_buffer = cljs.pprint.write_token_string.call(null, this$, buffer);
      if (!(buffer === new_buffer)) {
        var G__17314 = new_buffer;
        buffer = G__17314;
        continue;
      } else {
        return null;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.add_to_buffer = function cljs$pprint$add_to_buffer(this$, token) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), token));
  if (cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))))) {
    return cljs.pprint.write_line.call(null, this$);
  } else {
    return null;
  }
};
cljs.pprint.write_buffered_output = function cljs$pprint$write_buffered_output(this$) {
  cljs.pprint.write_line.call(null, this$);
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var buf = temp__4423__auto__;
    cljs.pprint.write_tokens.call(null, this$, buf, true);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
  } else {
    return null;
  }
};
cljs.pprint.write_white_space = function cljs$pprint$write_white_space(this$) {
  var temp__4425__auto__ = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4425__auto__)) {
    var tws = temp__4425__auto__;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  } else {
    return null;
  }
};
cljs.pprint.write_initial_lines = function cljs$pprint$write_initial_lines(this$, s) {
  var lines = clojure.string.split.call(null, s, "\n", -1);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, lines), 1)) {
    return s;
  } else {
    var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))));
    var l = cljs.core.first.call(null, lines);
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))))) {
      var oldpos_17323 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos_17324 = oldpos_17323 + cljs.core.count.call(null, l);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_17324);
      cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, l, null, oldpos_17323, newpos_17324));
      cljs.pprint.write_buffered_output.call(null, this$);
    } else {
      cljs.pprint.write_white_space.call(null, this$);
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l);
    }
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), "\n");
    var seq__17319_17325 = cljs.core.seq.call(null, cljs.core.next.call(null, cljs.core.butlast.call(null, lines)));
    var chunk__17320_17326 = null;
    var count__17321_17327 = 0;
    var i__17322_17328 = 0;
    while (true) {
      if (i__17322_17328 < count__17321_17327) {
        var l_17329__$1 = cljs.core._nth.call(null, chunk__17320_17326, i__17322_17328);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_17329__$1);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
        if (cljs.core.truth_(prefix)) {
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
        } else {
        }
        var G__17330 = seq__17319_17325;
        var G__17331 = chunk__17320_17326;
        var G__17332 = count__17321_17327;
        var G__17333 = i__17322_17328 + 1;
        seq__17319_17325 = G__17330;
        chunk__17320_17326 = G__17331;
        count__17321_17327 = G__17332;
        i__17322_17328 = G__17333;
        continue;
      } else {
        var temp__4425__auto___17334 = cljs.core.seq.call(null, seq__17319_17325);
        if (temp__4425__auto___17334) {
          var seq__17319_17335__$1 = temp__4425__auto___17334;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__17319_17335__$1)) {
            var c__6367__auto___17336 = cljs.core.chunk_first.call(null, seq__17319_17335__$1);
            var G__17337 = cljs.core.chunk_rest.call(null, seq__17319_17335__$1);
            var G__17338 = c__6367__auto___17336;
            var G__17339 = cljs.core.count.call(null, c__6367__auto___17336);
            var G__17340 = 0;
            seq__17319_17325 = G__17337;
            chunk__17320_17326 = G__17338;
            count__17321_17327 = G__17339;
            i__17322_17328 = G__17340;
            continue;
          } else {
            var l_17341__$1 = cljs.core.first.call(null, seq__17319_17335__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_17341__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
            if (cljs.core.truth_(prefix)) {
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
            } else {
            }
            var G__17342 = cljs.core.next.call(null, seq__17319_17335__$1);
            var G__17343 = null;
            var G__17344 = 0;
            var G__17345 = 0;
            seq__17319_17325 = G__17342;
            chunk__17320_17326 = G__17343;
            count__17321_17327 = G__17344;
            i__17322_17328 = G__17345;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), new cljs.core.Keyword(null, "writing", "writing", -1486865108));
    return cljs.core.last.call(null, lines);
  }
};
cljs.pprint.p_write_char = function cljs$pprint$p_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), c);
  } else {
    if (cljs.core._EQ_.call(null, c, "\n")) {
      return cljs.pprint.write_initial_lines.call(null, this$, "\n");
    } else {
      var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos = oldpos + 1;
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
      return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, cljs.core.char$.call(null, c), null, oldpos, newpos));
    }
  }
};
cljs.pprint.pretty_writer = function cljs$pprint$pretty_writer(writer, max_columns, miser_width) {
  var lb = new cljs.pprint.logical_block(null, null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), null, null, null, null, null, null, null);
  var fields = cljs.core.atom.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "buffer-block", "buffer-block", -10937307), new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267), new cljs.core.Keyword(null, "sections", "sections", -886710106), new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.Keyword(null, "buffer-level", "buffer-level", 928864731), new cljs.core.Keyword(null, "buffer", "buffer", 617295198)], [lb, miser_width, lb, true, null, new cljs.core.Keyword(null, "writing", "writing", -1486865108), 0, null, cljs.pprint.column_writer.call(null, writer, max_columns), 1, cljs.core.PersistentVector.EMPTY]));
  if (typeof cljs.pprint.t17352 !== "undefined") {
  } else {
    cljs.pprint.t17352 = function(pretty_writer, writer, max_columns, miser_width, lb, fields, meta17353) {
      this.pretty_writer = pretty_writer;
      this.writer = writer;
      this.max_columns = max_columns;
      this.miser_width = miser_width;
      this.lb = lb;
      this.fields = fields;
      this.meta17353 = meta17353;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t17352.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(lb, fields) {
      return function(_17354, meta17353__$1) {
        var self__ = this;
        var _17354__$1 = this;
        return new cljs.pprint.t17352(self__.pretty_writer, self__.writer, self__.max_columns, self__.miser_width, self__.lb, self__.fields, meta17353__$1);
      };
    }(lb, fields);
    cljs.pprint.t17352.prototype.cljs$core$IMeta$_meta$arity$1 = function(lb, fields) {
      return function(_17354) {
        var self__ = this;
        var _17354__$1 = this;
        return self__.meta17353;
      };
    }(lb, fields);
    cljs.pprint.t17352.prototype.cljs$core$IDeref$_deref$arity$1 = function(lb, fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(lb, fields);
    cljs.pprint.t17352.prototype.cljs$core$IWriter$_write$arity$2 = function(lb, fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__17355 = cljs.core._EQ_;
        var expr__17356 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__17355.call(null, String, expr__17356))) {
          var s0 = cljs.pprint.write_initial_lines.call(null, this$__$1, x);
          var s = clojure.string.replace_first.call(null, s0, /\s+$/, "");
          var white_space = cljs.core.subs.call(null, s0, cljs.core.count.call(null, s));
          var mode = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
          if (cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
            cljs.pprint.write_white_space.call(null, this$__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), s);
            return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), white_space);
          } else {
            var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
            var newpos = oldpos + cljs.core.count.call(null, s0);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
            return cljs.pprint.add_to_buffer.call(null, this$__$1, cljs.pprint.make_buffer_blob.call(null, s, white_space, oldpos, newpos));
          }
        } else {
          if (cljs.core.truth_(pred__17355.call(null, Number, expr__17356))) {
            return cljs.pprint.p_write_char.call(null, this$__$1, x);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__17356)].join(""));
          }
        }
      };
    }(lb, fields);
    cljs.pprint.t17352.prototype.cljs$core$IWriter$_flush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        cljs.pprint._ppflush.call(null, this$__$1);
        return cljs.core._flush.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))));
      };
    }(lb, fields);
    cljs.pprint.t17352.prototype.cljs$pprint$IPrettyFlush$ = true;
    cljs.pprint.t17352.prototype.cljs$pprint$IPrettyFlush$_ppflush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), new cljs.core.Keyword(null, "buffering", "buffering", -876713613))) {
          cljs.pprint.write_tokens.call(null, this$__$1, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), true);
          return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
        } else {
          return cljs.pprint.write_white_space.call(null, this$__$1);
        }
      };
    }(lb, fields);
    cljs.pprint.t17352.getBasis = function(lb, fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "pretty-writer", "pretty-writer", 417697260, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null)], null)))], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null), 
        new cljs.core.Symbol(null, "lb", "lb", 950310490, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta17353", "meta17353", -1030978119, null)], null);
      };
    }(lb, fields);
    cljs.pprint.t17352.cljs$lang$type = true;
    cljs.pprint.t17352.cljs$lang$ctorStr = "cljs.pprint/t17352";
    cljs.pprint.t17352.cljs$lang$ctorPrWriter = function(lb, fields) {
      return function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
        return cljs.core._write.call(null, writer__6163__auto__, "cljs.pprint/t17352");
      };
    }(lb, fields);
    cljs.pprint.__GT_t17352 = function(lb, fields) {
      return function cljs$pprint$pretty_writer_$___GT_t17352(pretty_writer__$1, writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta17353) {
        return new cljs.pprint.t17352(pretty_writer__$1, writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta17353);
      };
    }(lb, fields);
  }
  return new cljs.pprint.t17352(cljs$pprint$pretty_writer, writer, max_columns, miser_width, lb, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.start_block = function cljs$pprint$start_block(this$, prefix, per_line_prefix, suffix) {
  var lb = new cljs.pprint.logical_block((new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), prefix, per_line_prefix, suffix, null, null, null, null);
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    var temp__4425__auto___17358 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4425__auto___17358)) {
      var cb_17359 = temp__4425__auto___17358;
      cb_17359.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
    } else {
    }
    if (cljs.core.truth_(prefix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
    } else {
    }
    var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
    cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
  } else {
    var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos = oldpos + (cljs.core.truth_(prefix) ? cljs.core.count.call(null, prefix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_start_block_t.call(null, lb, oldpos, newpos));
  }
};
cljs.pprint.end_block = function cljs$pprint$end_block(this$) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  var suffix = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    if (cljs.core.truth_(suffix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
    } else {
    }
    var temp__4425__auto___17360 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4425__auto___17360)) {
      var cb_17361 = temp__4425__auto___17360;
      cb_17361.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
    } else {
    }
  } else {
    var oldpos_17362 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos_17363 = oldpos_17362 + (cljs.core.truth_(suffix) ? cljs.core.count.call(null, suffix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_17363);
    cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_end_block_t.call(null, lb, oldpos_17362, newpos_17363));
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb));
};
cljs.pprint.nl = function cljs$pprint$nl(this$, type) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "buffering", "buffering", -876713613));
  var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_nl_t.call(null, type, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), pos, pos));
};
cljs.pprint.indent = function cljs$pprint$indent(this$, relative_to, offset) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), offset + function() {
      var pred__17367 = cljs.core._EQ_;
      var expr__17368 = relative_to;
      if (cljs.core.truth_(pred__17367.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__17368))) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
      } else {
        if (cljs.core.truth_(pred__17367.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__17368))) {
          return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__17368)].join(""));
        }
      }
    }());
  } else {
    var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_indent_t.call(null, lb, relative_to, offset, pos, pos));
  }
};
cljs.pprint.get_miser_width = function cljs$pprint$get_miser_width(this$) {
  return (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint._STAR_print_pretty_STAR_ = true;
if (typeof cljs.pprint._STAR_print_pprint_dispatch_STAR_ !== "undefined") {
} else {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = null;
}
cljs.pprint._STAR_print_right_margin_STAR_ = 72;
cljs.pprint._STAR_print_miser_width_STAR_ = 40;
cljs.pprint._STAR_print_lines_STAR_ = null;
cljs.pprint._STAR_print_circle_STAR_ = null;
cljs.pprint._STAR_print_shared_STAR_ = null;
cljs.pprint._STAR_print_suppress_namespaces_STAR_ = null;
cljs.pprint._STAR_print_radix_STAR_ = null;
cljs.pprint._STAR_print_base_STAR_ = 10;
cljs.pprint._STAR_current_level_STAR_ = 0;
cljs.pprint._STAR_current_length_STAR_ = null;
cljs.pprint.write_option_table = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306), new cljs.core.Keyword(null, "circle", "circle", 1903212362), new cljs.core.Keyword(null, "lines", "lines", -700165781), new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956), new cljs.core.Keyword(null, "radix", "radix", 857016463), new cljs.core.Keyword(null, 
"level", "level", 1290497552), new cljs.core.Keyword(null, "readably", "readably", 1129599760), new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009), new cljs.core.Keyword(null, "length", "length", 588987862), new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), new cljs.core.Keyword(null, "base", "base", 185279322)], [new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_miser_width_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-miser-width*", "cljs.pprint/*print-miser-width*", 1588913450, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-miser-width*", "*print-miser-width*", 
1206624211, null), "/home/kenneth/rube/target/cljsbuild-compiler-2/cljs/pprint.cljs", 21, 1, true, 632, 637, cljs.core.List.EMPTY, "The column at which to enter miser style. Depending on the dispatch table,\nmiser style add newlines in more places to try to keep lines short allowing for further\nlevels of nesting.", cljs.core.truth_(cljs.pprint._STAR_print_miser_width_STAR_) ? cljs.pprint._STAR_print_miser_width_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_right_margin_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-right-margin*", "cljs.pprint/*print-right-margin*", -56183119, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-right-margin*", "*print-right-margin*", 
-437272454, null), "/home/kenneth/rube/target/cljsbuild-compiler-2/cljs/pprint.cljs", 22, 1, true, 625, 630, cljs.core.List.EMPTY, "Pretty printing will try to avoid anything going beyond this column.\nSet it to nil to have pprint let the line be arbitrarily long. This will ignore all\nnon-mandatory newlines.", cljs.core.truth_(cljs.pprint._STAR_print_right_margin_STAR_) ? cljs.pprint._STAR_print_right_margin_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_circle_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-circle*", "cljs.pprint/*print-circle*", 1606185849, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-circle*", "*print-circle*", 
1148404994, null), "/home/kenneth/rube/target/cljsbuild-compiler-2/cljs/pprint.cljs", 15, 1, true, 646, 649, cljs.core.List.EMPTY, "Mark circular structures (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_circle_STAR_) ? cljs.pprint._STAR_print_circle_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_lines_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-lines*", "cljs.pprint/*print-lines*", 534683484, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-lines*", "*print-lines*", 
75920659, null), "/home/kenneth/rube/target/cljsbuild-compiler-2/cljs/pprint.cljs", 14, 1, true, 640, 643, cljs.core.List.EMPTY, "Maximum number of lines to print in a pretty print instance (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_lines_STAR_) ? cljs.pprint._STAR_print_lines_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_suppress_namespaces_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-suppress-namespaces*", "cljs.pprint/*print-suppress-namespaces*", 1649488204, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", 
"column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-suppress-namespaces*", 
"*print-suppress-namespaces*", 1795828355, null), "/home/kenneth/rube/target/cljsbuild-compiler-2/cljs/pprint.cljs", 28, 1, true, 657, 661, cljs.core.List.EMPTY, "Don't print namespaces with symbols. This is particularly useful when\npretty printing the results of macro expansions", cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_) ? cljs.pprint._STAR_print_suppress_namespaces_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_radix_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-radix*", "cljs.pprint/*print-radix*", 1558253641, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-radix*", "*print-radix*", 1168517744, null), "/home/kenneth/rube/target/cljsbuild-compiler-2/cljs/pprint.cljs", 
14, 1, true, 665, 670, cljs.core.List.EMPTY, "Print a radix specifier in front of integers and rationals. If *print-base* is 2, 8,\nor 16, then the radix specifier used is #b, #o, or #x, respectively. Otherwise the\nradix specifier is in the form #XXr where XX is the decimal value of *print-base* ", cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? cljs.pprint._STAR_print_radix_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_level_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-level*", "cljs.core/*print-level*", 65848482, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-level*", "*print-level*", -634488505, null), "cljs/core.cljs", 16, 1, true, 112, 122, cljs.core.List.EMPTY, "*print-level* controls how many levels deep the printer will\n  print nested objects. If it is bound to logical false, there is no\n  limit. Otherwise, it must be bound to an integer indicating the maximum\n  level to print. Each argument to print is at level 0; if an argument is a\n  collection, its items are at level 1; and so on. If an object is a\n  collection and is at a level greater than or equal to the value bound to\n  *print-level*, the printer prints '#' to represent it. The root binding\n  is nil indicating no limit.", 
cljs.core.truth_(cljs.core._STAR_print_level_STAR_) ? cljs.core._STAR_print_level_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_readably_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-readably*", "cljs.core/*print-readably*", -354670250, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-readably*", "*print-readably*", -761361221, null), "cljs/core.cljs", 19, 1, true, 80, 86, cljs.core.List.EMPTY, 
"When set to logical false, strings and characters will be printed with\n  non-alphanumeric characters converted to the appropriate escape sequences.\n\n  Defaults to true", cljs.core.truth_(cljs.core._STAR_print_readably_STAR_) ? cljs.core._STAR_print_readably_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pprint_dispatch_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pprint-dispatch*", "cljs.pprint/*print-pprint-dispatch*", -1820734013, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pprint-dispatch*", 
"*print-pprint-dispatch*", -1709114492, null), "/home/kenneth/rube/target/cljsbuild-compiler-2/cljs/pprint.cljs", 25, 1, true, 619, 623, cljs.core.List.EMPTY, "The pretty print dispatch function. Use with-pprint-dispatch or\nset-pprint-dispatch to modify.", cljs.core.truth_(cljs.pprint._STAR_print_pprint_dispatch_STAR_) ? cljs.pprint._STAR_print_pprint_dispatch_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_length_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-length*", "cljs.core/*print-length*", -20766927, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-length*", "*print-length*", -687693654, null), "cljs/core.cljs", 17, 1, true, 104, 110, cljs.core.List.EMPTY, "When set to logical true, objects will be printed in a way that preserves\n  their type when read in later.\n\n  Defaults to false.", 
cljs.core.truth_(cljs.core._STAR_print_length_STAR_) ? cljs.core._STAR_print_length_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pretty_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pretty*", "cljs.pprint/*print-pretty*", -762636861, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pretty*", "*print-pretty*", 726795140, null), "/home/kenneth/rube/target/cljsbuild-compiler-2/cljs/pprint.cljs", 
16, 1, true, 615, 617, cljs.core.List.EMPTY, "Bind to true if you want write to use pretty printing", cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_) ? cljs.pprint._STAR_print_pretty_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_base_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-base*", "cljs.pprint/*print-base*", 1887526790, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-base*", "*print-base*", 2037937791, null), "/home/kenneth/rube/target/cljsbuild-compiler-2/cljs/pprint.cljs", 
13, 1, true, 672, 675, cljs.core.List.EMPTY, "The base to use for printing integers and rationals.", cljs.core.truth_(cljs.pprint._STAR_print_base_STAR_) ? cljs.pprint._STAR_print_base_STAR_.cljs$lang$test : null]))]);
cljs.pprint.table_ize = function cljs$pprint$table_ize(t, m) {
  return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p1__17370_SHARP_) {
    var temp__4425__auto__ = cljs.core.get.call(null, t, cljs.core.key.call(null, p1__17370_SHARP_));
    if (cljs.core.truth_(temp__4425__auto__)) {
      var v = temp__4425__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, cljs.core.val.call(null, p1__17370_SHARP_)], null);
    } else {
      return null;
    }
  }, m));
};
cljs.pprint.pretty_writer_QMARK_ = function cljs$pprint$pretty_writer_QMARK_(x) {
  var and__5571__auto__ = !(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 32768 || x.cljs$core$IDeref$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x);
  if (and__5571__auto__) {
    return (new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, x)));
  } else {
    return and__5571__auto__;
  }
};
cljs.pprint.make_pretty_writer = function cljs$pprint$make_pretty_writer(base_writer, right_margin, miser_width) {
  return cljs.pprint.pretty_writer.call(null, base_writer, right_margin, miser_width);
};
cljs.pprint.write_out = function cljs$pprint$write_out(object) {
  var length_reached = function() {
    var and__5571__auto__ = cljs.pprint._STAR_current_length_STAR_;
    if (cljs.core.truth_(and__5571__auto__)) {
      var and__5571__auto____$1 = cljs.core._STAR_print_length_STAR_;
      if (cljs.core.truth_(and__5571__auto____$1)) {
        return cljs.pprint._STAR_current_length_STAR_ >= cljs.core._STAR_print_length_STAR_;
      } else {
        return and__5571__auto____$1;
      }
    } else {
      return and__5571__auto__;
    }
  }();
  if (cljs.core.not.call(null, cljs.pprint._STAR_print_pretty_STAR_)) {
    cljs.pprint.pr.call(null, object);
  } else {
    if (cljs.core.truth_(length_reached)) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
    } else {
      if (cljs.core.truth_(cljs.pprint._STAR_current_length_STAR_)) {
        cljs.pprint._STAR_current_length_STAR_ = cljs.pprint._STAR_current_length_STAR_ + 1;
      } else {
      }
      cljs.pprint._STAR_print_pprint_dispatch_STAR_.call(null, object);
    }
  }
  return length_reached;
};
cljs.pprint.write = function cljs$pprint$write() {
  var args__6629__auto__ = [];
  var len__6622__auto___17391 = arguments.length;
  var i__6623__auto___17392 = 0;
  while (true) {
    if (i__6623__auto___17392 < len__6622__auto___17391) {
      args__6629__auto__.push(arguments[i__6623__auto___17392]);
      var G__17393 = i__6623__auto___17392 + 1;
      i__6623__auto___17392 = G__17393;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 1 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(1), 0) : null;
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__6630__auto__);
};
cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic = function(object, kw_args) {
  var options = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "stream", "stream", 1534941648), true], null), cljs.core.apply.call(null, cljs.core.hash_map, kw_args));
  var _STAR_print_base_STAR_17377 = cljs.pprint._STAR_print_base_STAR_;
  var _STAR_print_circle_STAR_17378 = cljs.pprint._STAR_print_circle_STAR_;
  var _STAR_print_length_STAR_17379 = cljs.core._STAR_print_length_STAR_;
  var _STAR_print_level_STAR_17380 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_lines_STAR_17381 = cljs.pprint._STAR_print_lines_STAR_;
  var _STAR_print_miser_width_STAR_17382 = cljs.pprint._STAR_print_miser_width_STAR_;
  var _STAR_print_pprint_dispatch_STAR_17383 = cljs.pprint._STAR_print_pprint_dispatch_STAR_;
  var _STAR_print_pretty_STAR_17384 = cljs.pprint._STAR_print_pretty_STAR_;
  var _STAR_print_radix_STAR_17385 = cljs.pprint._STAR_print_radix_STAR_;
  var _STAR_print_readably_STAR_17386 = cljs.core._STAR_print_readably_STAR_;
  var _STAR_print_right_margin_STAR_17387 = cljs.pprint._STAR_print_right_margin_STAR_;
  var _STAR_print_suppress_namespaces_STAR_17388 = cljs.pprint._STAR_print_suppress_namespaces_STAR_;
  cljs.pprint._STAR_print_base_STAR_ = (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_base_STAR_);
  cljs.pprint._STAR_print_circle_STAR_ = (new cljs.core.Keyword(null, "circle", "circle", 1903212362)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_circle_STAR_);
  cljs.core._STAR_print_length_STAR_ = (new cljs.core.Keyword(null, "length", "length", 588987862)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_length_STAR_);
  cljs.core._STAR_print_level_STAR_ = (new cljs.core.Keyword(null, "level", "level", 1290497552)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_level_STAR_);
  cljs.pprint._STAR_print_lines_STAR_ = (new cljs.core.Keyword(null, "lines", "lines", -700165781)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_lines_STAR_);
  cljs.pprint._STAR_print_miser_width_STAR_ = (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_miser_width_STAR_);
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = (new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pprint_dispatch_STAR_);
  cljs.pprint._STAR_print_pretty_STAR_ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pretty_STAR_);
  cljs.pprint._STAR_print_radix_STAR_ = (new cljs.core.Keyword(null, "radix", "radix", 857016463)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_radix_STAR_);
  cljs.core._STAR_print_readably_STAR_ = (new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_readably_STAR_);
  cljs.pprint._STAR_print_right_margin_STAR_ = (new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_right_margin_STAR_);
  cljs.pprint._STAR_print_suppress_namespaces_STAR_ = (new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_suppress_namespaces_STAR_);
  try {
    try {
      var sb = new goog.string.StringBuffer;
      var optval = cljs.core.contains_QMARK_.call(null, options, new cljs.core.Keyword(null, "stream", "stream", 1534941648)) ? (new cljs.core.Keyword(null, "stream", "stream", 1534941648)).cljs$core$IFn$_invoke$arity$1(options) : true;
      var base_writer = optval === true || optval == null ? new cljs.core.StringBufferWriter(sb) : optval;
      if (cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_)) {
        var base_writer__8460__auto___17394 = base_writer;
        var new_writer__8461__auto___17395 = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__8460__auto___17394));
        var _STAR_out_STAR_17389_17396 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = new_writer__8461__auto___17395 ? cljs.pprint.make_pretty_writer.call(null, base_writer__8460__auto___17394, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__8460__auto___17394;
        try {
          cljs.pprint.write_out.call(null, object);
          cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_17389_17396;
        }
      } else {
        var _STAR_out_STAR_17390_17397 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = base_writer;
        try {
          cljs.pprint.pr.call(null, object);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_17390_17397;
        }
      }
      if (optval === true) {
        cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
      } else {
      }
      if (optval == null) {
        return [cljs.core.str(sb)].join("");
      } else {
        return null;
      }
    } finally {
    }
  } finally {
    cljs.pprint._STAR_print_suppress_namespaces_STAR_ = _STAR_print_suppress_namespaces_STAR_17388;
    cljs.pprint._STAR_print_right_margin_STAR_ = _STAR_print_right_margin_STAR_17387;
    cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR_17386;
    cljs.pprint._STAR_print_radix_STAR_ = _STAR_print_radix_STAR_17385;
    cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR_17384;
    cljs.pprint._STAR_print_pprint_dispatch_STAR_ = _STAR_print_pprint_dispatch_STAR_17383;
    cljs.pprint._STAR_print_miser_width_STAR_ = _STAR_print_miser_width_STAR_17382;
    cljs.pprint._STAR_print_lines_STAR_ = _STAR_print_lines_STAR_17381;
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_17380;
    cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR_17379;
    cljs.pprint._STAR_print_circle_STAR_ = _STAR_print_circle_STAR_17378;
    cljs.pprint._STAR_print_base_STAR_ = _STAR_print_base_STAR_17377;
  }
};
cljs.pprint.write.cljs$lang$maxFixedArity = 1;
cljs.pprint.write.cljs$lang$applyTo = function(seq17375) {
  var G__17376 = cljs.core.first.call(null, seq17375);
  var seq17375__$1 = cljs.core.next.call(null, seq17375);
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(G__17376, seq17375__$1);
};
cljs.pprint.pprint = function cljs$pprint$pprint() {
  var args17398 = [];
  var len__6622__auto___17404 = arguments.length;
  var i__6623__auto___17405 = 0;
  while (true) {
    if (i__6623__auto___17405 < len__6622__auto___17404) {
      args17398.push(arguments[i__6623__auto___17405]);
      var G__17406 = i__6623__auto___17405 + 1;
      i__6623__auto___17405 = G__17406;
      continue;
    } else {
    }
    break;
  }
  var G__17400 = args17398.length;
  switch(G__17400) {
    case 1:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args17398.length)].join(""));;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1 = function(object) {
  var sb = new goog.string.StringBuffer;
  var _STAR_out_STAR_17401 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(sb);
  try {
    cljs.pprint.pprint.call(null, object, cljs.core._STAR_out_STAR_);
    return cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_17401;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2 = function(object, writer) {
  var base_writer__8460__auto__ = writer;
  var new_writer__8461__auto__ = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__8460__auto__));
  var _STAR_out_STAR_17402 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new_writer__8461__auto__ ? cljs.pprint.make_pretty_writer.call(null, base_writer__8460__auto__, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__8460__auto__;
  try {
    var _STAR_print_pretty_STAR_17403_17408 = cljs.pprint._STAR_print_pretty_STAR_;
    cljs.pprint._STAR_print_pretty_STAR_ = true;
    try {
      cljs.pprint.write_out.call(null, object);
    } finally {
      cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR_17403_17408;
    }
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, cljs.core._STAR_out_STAR_))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
    } else {
    }
    return cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_17402;
  }
};
cljs.pprint.pprint.cljs$lang$maxFixedArity = 2;
cljs.pprint.set_pprint_dispatch = function cljs$pprint$set_pprint_dispatch(function$) {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = function$;
  return null;
};
cljs.pprint.check_enumerated_arg = function cljs$pprint$check_enumerated_arg(arg, choices) {
  if (cljs.core.not.call(null, choices.call(null, arg))) {
    throw new Error([cljs.core.str("Bad argument: "), cljs.core.str(arg), cljs.core.str(". It must be one of "), cljs.core.str(choices)].join(""));
  } else {
    return null;
  }
};
cljs.pprint.level_exceeded = function cljs$pprint$level_exceeded() {
  var and__5571__auto__ = cljs.core._STAR_print_level_STAR_;
  if (cljs.core.truth_(and__5571__auto__)) {
    return cljs.pprint._STAR_current_level_STAR_ >= cljs.core._STAR_print_level_STAR_;
  } else {
    return and__5571__auto__;
  }
};
cljs.pprint.pprint_newline = function cljs$pprint$pprint_newline(kind) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), null, new cljs.core.Keyword(null, "miser", "miser", -556060186), null, new cljs.core.Keyword(null, "fill", "fill", 883462889), null, new cljs.core.Keyword(null, "linear", "linear", 872268697), null], null), null));
  return cljs.pprint.nl.call(null, cljs.core._STAR_out_STAR_, kind);
};
cljs.pprint.pprint_indent = function cljs$pprint$pprint_indent(relative_to, n) {
  cljs.pprint.check_enumerated_arg.call(null, relative_to, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "block", "block", 664686210), null, new cljs.core.Keyword(null, "current", "current", -1088038603), null], null), null));
  return cljs.pprint.indent.call(null, cljs.core._STAR_out_STAR_, relative_to, n);
};
cljs.pprint.pprint_tab = function cljs$pprint$pprint_tab(kind, colnum, colinc) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "line", "line", 212345235), null, new cljs.core.Keyword(null, "line-relative", "line-relative", 1149548219), null, new cljs.core.Keyword(null, "section-relative", "section-relative", -658298724), null], null), null));
  throw new Error("pprint-tab is not yet implemented");
};
cljs.pprint.cl_format = function cljs$pprint$cl_format() {
  var args__6629__auto__ = [];
  var len__6622__auto___17412 = arguments.length;
  var i__6623__auto___17413 = 0;
  while (true) {
    if (i__6623__auto___17413 < len__6622__auto___17412) {
      args__6629__auto__.push(arguments[i__6623__auto___17413]);
      var G__17414 = i__6623__auto___17413 + 1;
      i__6623__auto___17413 = G__17414;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 2 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(2), 0) : null;
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6630__auto__);
};
cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic = function(writer, format_in, args) {
  var compiled_format = typeof format_in === "string" ? cljs.pprint.compile_format.call(null, format_in) : format_in;
  var navigator = cljs.pprint.init_navigator.call(null, args);
  return cljs.pprint.execute_format.call(null, writer, compiled_format, navigator);
};
cljs.pprint.cl_format.cljs$lang$maxFixedArity = 2;
cljs.pprint.cl_format.cljs$lang$applyTo = function(seq17409) {
  var G__17410 = cljs.core.first.call(null, seq17409);
  var seq17409__$1 = cljs.core.next.call(null, seq17409);
  var G__17411 = cljs.core.first.call(null, seq17409__$1);
  var seq17409__$2 = cljs.core.next.call(null, seq17409__$1);
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(G__17410, G__17411, seq17409__$2);
};
cljs.pprint._STAR_format_str_STAR_ = null;
cljs.pprint.format_error = function cljs$pprint$format_error(message, offset) {
  var full_message = [cljs.core.str(message), cljs.core.str("\n"), cljs.core.str(cljs.pprint._STAR_format_str_STAR_), cljs.core.str("\n"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, offset, " "))), cljs.core.str("^"), cljs.core.str("\n")].join("");
  throw Error(full_message);
};
cljs.pprint.arg_navigator = function(seq, rest, pos, __meta, __extmap, __hash) {
  this.seq = seq;
  this.rest = rest;
  this.pos = pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6178__auto__, k__6179__auto__) {
  var self__ = this;
  var this__6178__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6178__auto____$1, k__6179__auto__, null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6180__auto__, k17416, else__6181__auto__) {
  var self__ = this;
  var this__6180__auto____$1 = this;
  var G__17418 = k17416 instanceof cljs.core.Keyword ? k17416.fqn : null;
  switch(G__17418) {
    case "seq":
      return self__.seq;
      break;
    case "rest":
      return self__.rest;
      break;
    case "pos":
      return self__.pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k17416, else__6181__auto__);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6192__auto__, writer__6193__auto__, opts__6194__auto__) {
  var self__ = this;
  var this__6192__auto____$1 = this;
  var pr_pair__6195__auto__ = function(this__6192__auto____$1) {
    return function(keyval__6196__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6193__auto__, cljs.core.pr_writer, "", " ", "", opts__6194__auto__, keyval__6196__auto__);
    };
  }(this__6192__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6193__auto__, pr_pair__6195__auto__, "#cljs.pprint.arg-navigator{", ", ", "}", opts__6194__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$ = true;
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__17415) {
  var self__ = this;
  var G__17415__$1 = this;
  return new cljs.core.RecordIter(0, G__17415__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6176__auto__) {
  var self__ = this;
  var this__6176__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6172__auto__) {
  var self__ = this;
  var this__6172__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6182__auto__) {
  var self__ = this;
  var this__6182__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6173__auto__) {
  var self__ = this;
  var this__6173__auto____$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_imap.call(null, this__6173__auto____$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6174__auto__, other__6175__auto__) {
  var self__ = this;
  var this__6174__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__5571__auto__ = other__6175__auto__;
    if (cljs.core.truth_(and__5571__auto__)) {
      var and__5571__auto____$1 = this__6174__auto____$1.constructor === other__6175__auto__.constructor;
      if (and__5571__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6174__auto____$1, other__6175__auto__);
      } else {
        return and__5571__auto____$1;
      }
    } else {
      return and__5571__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6187__auto__, k__6188__auto__) {
  var self__ = this;
  var this__6187__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "pos", "pos", -864607220), null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), null], null), null), k__6188__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6187__auto____$1), self__.__meta), k__6188__auto__);
  } else {
    return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6188__auto__)), null);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6185__auto__, k__6186__auto__, G__17415) {
  var self__ = this;
  var this__6185__auto____$1 = this;
  var pred__17419 = cljs.core.keyword_identical_QMARK_;
  var expr__17420 = k__6186__auto__;
  if (cljs.core.truth_(pred__17419.call(null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), expr__17420))) {
    return new cljs.pprint.arg_navigator(G__17415, self__.rest, self__.pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__17419.call(null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), expr__17420))) {
      return new cljs.pprint.arg_navigator(self__.seq, G__17415, self__.pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__17419.call(null, new cljs.core.Keyword(null, "pos", "pos", -864607220), expr__17420))) {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, G__17415, self__.__meta, self__.__extmap, null);
      } else {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6186__auto__, G__17415), null);
      }
    }
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6190__auto__) {
  var self__ = this;
  var this__6190__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6177__auto__, G__17415) {
  var self__ = this;
  var this__6177__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, G__17415, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6183__auto__, entry__6184__auto__) {
  var self__ = this;
  var this__6183__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6184__auto__)) {
    return cljs.core._assoc.call(null, this__6183__auto____$1, cljs.core._nth.call(null, entry__6184__auto__, 0), cljs.core._nth.call(null, entry__6184__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6183__auto____$1, entry__6184__auto__);
  }
};
cljs.pprint.arg_navigator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "pos", "pos", 775924307, null)], null);
};
cljs.pprint.arg_navigator.cljs$lang$type = true;
cljs.pprint.arg_navigator.cljs$lang$ctorPrSeq = function(this__6212__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/arg-navigator");
};
cljs.pprint.arg_navigator.cljs$lang$ctorPrWriter = function(this__6212__auto__, writer__6213__auto__) {
  return cljs.core._write.call(null, writer__6213__auto__, "cljs.pprint/arg-navigator");
};
cljs.pprint.__GT_arg_navigator = function cljs$pprint$__GT_arg_navigator(seq, rest, pos) {
  return new cljs.pprint.arg_navigator(seq, rest, pos, null, null, null);
};
cljs.pprint.map__GT_arg_navigator = function cljs$pprint$map__GT_arg_navigator(G__17417) {
  return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(G__17417), (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(G__17417), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(G__17417), null, cljs.core.dissoc.call(null, G__17417, new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220)), null);
};
cljs.pprint.init_navigator = function cljs$pprint$init_navigator(s) {
  var s__$1 = cljs.core.seq.call(null, s);
  return new cljs.pprint.arg_navigator(s__$1, s__$1, 0, null, null, null);
};
cljs.pprint.next_arg = function cljs$pprint$next_arg(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    throw Error("Not enough arguments for format definition");
  }
};
cljs.pprint.next_arg_or_nil = function cljs$pprint$next_arg_or_nil(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, navigator], null);
  }
};
cljs.pprint.get_format_arg = function cljs$pprint$get_format_arg(navigator) {
  var vec__17424 = cljs.pprint.next_arg.call(null, navigator);
  var raw_format = cljs.core.nth.call(null, vec__17424, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__17424, 1, null);
  var compiled_format = typeof raw_format === "string" ? cljs.pprint.compile_format.call(null, raw_format) : raw_format;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [compiled_format, navigator__$1], null);
};
cljs.pprint.absolute_reposition = function cljs$pprint$absolute_reposition(navigator, position) {
  if (position >= (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator)) {
    return cljs.pprint.relative_reposition.call(null, navigator, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) - position);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator)), position, null, null, null);
  }
};
cljs.pprint.relative_reposition = function cljs$pprint$relative_reposition(navigator, position) {
  var newpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + position;
  if (position < 0) {
    return cljs.pprint.absolute_reposition.call(null, navigator, newpos);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), newpos, null, null, null);
  }
};
cljs.pprint.compiled_directive = function(func, def, params, offset, __meta, __extmap, __hash) {
  this.func = func;
  this.def = def;
  this.params = params;
  this.offset = offset;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6178__auto__, k__6179__auto__) {
  var self__ = this;
  var this__6178__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6178__auto____$1, k__6179__auto__, null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6180__auto__, k17426, else__6181__auto__) {
  var self__ = this;
  var this__6180__auto____$1 = this;
  var G__17428 = k17426 instanceof cljs.core.Keyword ? k17426.fqn : null;
  switch(G__17428) {
    case "func":
      return self__.func;
      break;
    case "def":
      return self__.def;
      break;
    case "params":
      return self__.params;
      break;
    case "offset":
      return self__.offset;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k17426, else__6181__auto__);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6192__auto__, writer__6193__auto__, opts__6194__auto__) {
  var self__ = this;
  var this__6192__auto____$1 = this;
  var pr_pair__6195__auto__ = function(this__6192__auto____$1) {
    return function(keyval__6196__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6193__auto__, cljs.core.pr_writer, "", " ", "", opts__6194__auto__, keyval__6196__auto__);
    };
  }(this__6192__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6193__auto__, pr_pair__6195__auto__, "#cljs.pprint.compiled-directive{", ", ", "}", opts__6194__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$ = true;
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__17425) {
  var self__ = this;
  var G__17425__$1 = this;
  return new cljs.core.RecordIter(0, G__17425__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6176__auto__) {
  var self__ = this;
  var this__6176__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6172__auto__) {
  var self__ = this;
  var this__6172__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6182__auto__) {
  var self__ = this;
  var this__6182__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6173__auto__) {
  var self__ = this;
  var this__6173__auto____$1 = this;
  var h__5999__auto__ = self__.__hash;
  if (!(h__5999__auto__ == null)) {
    return h__5999__auto__;
  } else {
    var h__5999__auto____$1 = cljs.core.hash_imap.call(null, this__6173__auto____$1);
    self__.__hash = h__5999__auto____$1;
    return h__5999__auto____$1;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6174__auto__, other__6175__auto__) {
  var self__ = this;
  var this__6174__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__5571__auto__ = other__6175__auto__;
    if (cljs.core.truth_(and__5571__auto__)) {
      var and__5571__auto____$1 = this__6174__auto____$1.constructor === other__6175__auto__.constructor;
      if (and__5571__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6174__auto____$1, other__6175__auto__);
      } else {
        return and__5571__auto____$1;
      }
    } else {
      return and__5571__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6187__auto__, k__6188__auto__) {
  var self__ = this;
  var this__6187__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "func", "func", -238706040), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "def", "def", -1043430536), null], null), null), k__6188__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6187__auto____$1), self__.__meta), k__6188__auto__);
  } else {
    return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6188__auto__)), null);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6185__auto__, k__6186__auto__, G__17425) {
  var self__ = this;
  var this__6185__auto____$1 = this;
  var pred__17429 = cljs.core.keyword_identical_QMARK_;
  var expr__17430 = k__6186__auto__;
  if (cljs.core.truth_(pred__17429.call(null, new cljs.core.Keyword(null, "func", "func", -238706040), expr__17430))) {
    return new cljs.pprint.compiled_directive(G__17425, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__17429.call(null, new cljs.core.Keyword(null, "def", "def", -1043430536), expr__17430))) {
      return new cljs.pprint.compiled_directive(self__.func, G__17425, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__17429.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), expr__17430))) {
        return new cljs.pprint.compiled_directive(self__.func, self__.def, G__17425, self__.offset, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__17429.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__17430))) {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, G__17425, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6186__auto__, G__17425), null);
        }
      }
    }
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6190__auto__) {
  var self__ = this;
  var this__6190__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6177__auto__, G__17425) {
  var self__ = this;
  var this__6177__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, G__17425, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6183__auto__, entry__6184__auto__) {
  var self__ = this;
  var this__6183__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6184__auto__)) {
    return cljs.core._assoc.call(null, this__6183__auto____$1, cljs.core._nth.call(null, entry__6184__auto__, 0), cljs.core._nth.call(null, entry__6184__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6183__auto____$1, entry__6184__auto__);
  }
};
cljs.pprint.compiled_directive.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "func", "func", 1401825487, null), new cljs.core.Symbol(null, "def", "def", 597100991, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null)], null);
};
cljs.pprint.compiled_directive.cljs$lang$type = true;
cljs.pprint.compiled_directive.cljs$lang$ctorPrSeq = function(this__6212__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/compiled-directive");
};
cljs.pprint.compiled_directive.cljs$lang$ctorPrWriter = function(this__6212__auto__, writer__6213__auto__) {
  return cljs.core._write.call(null, writer__6213__auto__, "cljs.pprint/compiled-directive");
};
cljs.pprint.__GT_compiled_directive = function cljs$pprint$__GT_compiled_directive(func, def, params, offset) {
  return new cljs.pprint.compiled_directive(func, def, params, offset, null, null, null);
};
cljs.pprint.map__GT_compiled_directive = function cljs$pprint$map__GT_compiled_directive(G__17427) {
  return new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(G__17427), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(G__17427), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(G__17427), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__17427), null, cljs.core.dissoc.call(null, G__17427, new cljs.core.Keyword(null, 
  "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)), null);
};
cljs.pprint.realize_parameter = function cljs$pprint$realize_parameter(p__17433, navigator) {
  var vec__17437 = p__17433;
  var param = cljs.core.nth.call(null, vec__17437, 0, null);
  var vec__17438 = cljs.core.nth.call(null, vec__17437, 1, null);
  var raw_val = cljs.core.nth.call(null, vec__17438, 0, null);
  var offset = cljs.core.nth.call(null, vec__17438, 1, null);
  var vec__17439 = cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), param) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [raw_val, navigator], null) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", 
  -758446196)) ? cljs.pprint.next_arg.call(null, navigator) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), navigator], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [raw_val, navigator], null);
  var real_param = cljs.core.nth.call(null, vec__17439, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__17439, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [real_param, offset], null)], null), new_navigator], null);
};
cljs.pprint.realize_parameter_list = function cljs$pprint$realize_parameter_list(parameter_map, navigator) {
  var vec__17441 = cljs.pprint.map_passing_context.call(null, cljs.pprint.realize_parameter, navigator, parameter_map);
  var pairs = cljs.core.nth.call(null, vec__17441, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__17441, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, pairs), new_navigator], null);
};
cljs.pprint.special_radix_markers = new cljs.core.PersistentArrayMap(null, 3, [2, "#b", 8, "#o", 16, "#x"], null);
cljs.pprint.format_simple_number = function cljs$pprint$format_simple_number(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    if (cljs.core._EQ_.call(null, cljs.pprint._STAR_print_base_STAR_, 10)) {
      return [cljs.core.str(n), cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? "." : null)].join("");
    } else {
      return [cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? function() {
        var or__5583__auto__ = cljs.core.get.call(null, cljs.pprint.special_radix_markers, cljs.pprint._STAR_print_base_STAR_);
        if (cljs.core.truth_(or__5583__auto__)) {
          return or__5583__auto__;
        } else {
          return [cljs.core.str("#"), cljs.core.str(cljs.pprint._STAR_print_base_STAR_), cljs.core.str("r")].join("");
        }
      }() : null), cljs.core.str(cljs.pprint.opt_base_str.call(null, cljs.pprint._STAR_print_base_STAR_, n))].join("");
    }
  } else {
    return null;
  }
};
cljs.pprint.format_ascii = function cljs$pprint$format_ascii(print_func, params, arg_navigator, offsets) {
  var vec__17443 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__17443, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__17443, 1, null);
  var base_output = function() {
    var or__5583__auto__ = cljs.pprint.format_simple_number.call(null, arg);
    if (cljs.core.truth_(or__5583__auto__)) {
      return or__5583__auto__;
    } else {
      return print_func.call(null, arg);
    }
  }();
  var base_width = base_output.length;
  var min_width = base_width + (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var width = min_width >= (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? min_width : min_width + (cljs.core.quot.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - min_width - 1, (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params)) + 1) * (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var chars = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, width - base_width, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    cljs.pprint.print.call(null, [cljs.core.str(chars), cljs.core.str(base_output)].join(""));
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(base_output), cljs.core.str(chars)].join(""));
  }
  return arg_navigator__$1;
};
cljs.pprint.integral_QMARK_ = function cljs$pprint$integral_QMARK_(x) {
  if (cljs.core.integer_QMARK_.call(null, x)) {
    return true;
  } else {
    if (cljs.pprint.float_QMARK_.call(null, x)) {
      return cljs.core._EQ_.call(null, x, Math.floor(x));
    } else {
      return false;
    }
  }
};
cljs.pprint.remainders = function cljs$pprint$remainders(base, val) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(p1__17444_SHARP_) {
    if (p1__17444_SHARP_ > 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rem.call(null, p1__17444_SHARP_, base), cljs.core.quot.call(null, p1__17444_SHARP_, base)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    }
  }, val)));
};
cljs.pprint.base_str = function cljs$pprint$base_str(base, val) {
  if (val === 0) {
    return "0";
  } else {
    var xlated_val = val;
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(xlated_val) {
      return function(p1__17445_SHARP_) {
        if (p1__17445_SHARP_ < 10) {
          return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "0") + p1__17445_SHARP_);
        } else {
          return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "a") + (p1__17445_SHARP_ - 10));
        }
      };
    }(xlated_val), cljs.pprint.remainders.call(null, base, val)));
  }
};
cljs.pprint.javascript_base_formats = new cljs.core.PersistentArrayMap(null, 3, [8, "%o", 10, "%d", 16, "%x"], null);
cljs.pprint.opt_base_str = function cljs$pprint$opt_base_str(base, val) {
  return cljs.pprint.base_str.call(null, base, val);
};
cljs.pprint.group_by_STAR_ = function cljs$pprint$group_by_STAR_(unit, lis) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(x) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.reverse.call(null, cljs.core.take.call(null, unit, x))), cljs.core.seq.call(null, cljs.core.drop.call(null, unit, x))], null);
  }, cljs.core.reverse.call(null, lis))));
};
cljs.pprint.format_integer = function cljs$pprint$format_integer(base, params, arg_navigator, offsets) {
  var vec__17448 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__17448, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__17448, 1, null);
  if (cljs.core.truth_(cljs.pprint.integral_QMARK_.call(null, arg))) {
    var neg_17449 = arg < 0;
    var pos_arg_17450 = neg_17449 ? -arg : arg;
    var raw_str_17451 = cljs.pprint.opt_base_str.call(null, base, pos_arg_17450);
    var group_str_17452 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? function() {
      var groups = cljs.core.map.call(null, function(neg_17449, pos_arg_17450, raw_str_17451, vec__17448, arg, arg_navigator__$1) {
        return function(p1__17446_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.str, p1__17446_SHARP_);
        };
      }(neg_17449, pos_arg_17450, raw_str_17451, vec__17448, arg, arg_navigator__$1), cljs.pprint.group_by_STAR_.call(null, (new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083)).cljs$core$IFn$_invoke$arity$1(params), raw_str_17451));
      var commas = cljs.core.repeat.call(null, cljs.core.count.call(null, groups), (new cljs.core.Keyword(null, "commachar", "commachar", 652859327)).cljs$core$IFn$_invoke$arity$1(params));
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.next.call(null, cljs.core.interleave.call(null, commas, groups)));
    }() : raw_str_17451;
    var signed_str_17453 = neg_17449 ? [cljs.core.str("-"), cljs.core.str(group_str_17452)].join("") : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? [cljs.core.str("+"), cljs.core.str(group_str_17452)].join("") : group_str_17452;
    var padded_str_17454 = signed_str_17453.length < (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - signed_str_17453.length, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(signed_str_17453)].join("") : 
    signed_str_17453;
    cljs.pprint.print.call(null, padded_str_17454);
  } else {
    cljs.pprint.format_ascii.call(null, cljs.core.print_str, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), 1, new cljs.core.Keyword(null, "minpad", "minpad", 323570901), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), null);
  }
  return arg_navigator__$1;
};
cljs.pprint.english_cardinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"], null);
cljs.pprint.english_ordinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zeroth", "first", "second", "third", "fourth", "fifth", "sixth", "seventh", "eighth", "ninth", "tenth", "eleventh", "twelfth", "thirteenth", "fourteenth", "fifteenth", "sixteenth", "seventeenth", "eighteenth", "nineteenth"], null);
cljs.pprint.english_cardinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"], null);
cljs.pprint.english_ordinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twentieth", "thirtieth", "fortieth", "fiftieth", "sixtieth", "seventieth", "eightieth", "ninetieth"], null);
cljs.pprint.english_scale_numbers = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "thousand", "million", "billion", "trillion", "quadrillion", "quintillion", "sextillion", "septillion", "octillion", "nonillion", "decillion", "undecillion", "duodecillion", "tredecillion", "quattuordecillion", "quindecillion", "sexdecillion", "septendecillion", "octodecillion", "novemdecillion", "vigintillion"], null);
cljs.pprint.format_simple_cardinal = function cljs$pprint$format_simple_cardinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [cljs.core.str(hundreds > 0 ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(hundreds > 0 && tens > 0 ? " " : null), cljs.core.str(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    return [cljs.core.str(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), cljs.core.str(ten_digit > 0 && unit_digit > 0 ? "-" : null), cljs.core.str(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, unit_digit) : null)].join("");
  }() : null)].join("");
};
cljs.pprint.add_english_scales = function cljs$pprint$add_english_scales(parts, offset) {
  var cnt = cljs.core.count.call(null, parts);
  var acc = cljs.core.PersistentVector.EMPTY;
  var pos = cnt - 1;
  var this$ = cljs.core.first.call(null, parts);
  var remainder = cljs.core.next.call(null, parts);
  while (true) {
    if (remainder == null) {
      return [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, ", ", acc))), cljs.core.str(!cljs.core.empty_QMARK_.call(null, this$) && !cljs.core.empty_QMARK_.call(null, acc) ? ", " : null), cljs.core.str(this$), cljs.core.str(!cljs.core.empty_QMARK_.call(null, this$) && pos + offset > 0 ? [cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join("") : null)].join("");
    } else {
      var G__17455 = cljs.core.empty_QMARK_.call(null, this$) ? acc : cljs.core.conj.call(null, acc, [cljs.core.str(this$), cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join(""));
      var G__17456 = pos - 1;
      var G__17457 = cljs.core.first.call(null, remainder);
      var G__17458 = cljs.core.next.call(null, remainder);
      acc = G__17455;
      pos = G__17456;
      this$ = G__17457;
      remainder = G__17458;
      continue;
    }
    break;
  }
};
cljs.pprint.format_cardinal_english = function cljs$pprint$format_cardinal_english(params, navigator, offsets) {
  var vec__17460 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__17460, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__17460, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zero");
  } else {
    var abs_arg_17461 = arg < 0 ? -arg : arg;
    var parts_17462 = cljs.pprint.remainders.call(null, 1E3, abs_arg_17461);
    if (cljs.core.count.call(null, parts_17462) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_17463 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, parts_17462);
      var full_str_17464 = cljs.pprint.add_english_scales.call(null, parts_strs_17463, 0);
      cljs.pprint.print.call(null, [cljs.core.str(arg < 0 ? "minus " : null), cljs.core.str(full_str_17464)].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
    }
  }
  return navigator__$1;
};
cljs.pprint.format_simple_ordinal = function cljs$pprint$format_simple_ordinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [cljs.core.str(hundreds > 0 ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(hundreds > 0 && tens > 0 ? " " : null), cljs.core.str(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    if (ten_digit > 0 && !(unit_digit > 0)) {
      return cljs.core.nth.call(null, cljs.pprint.english_ordinal_tens, ten_digit);
    } else {
      return [cljs.core.str(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), cljs.core.str(ten_digit > 0 && unit_digit > 0 ? "-" : null), cljs.core.str(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, unit_digit) : null)].join("");
    }
  }() : hundreds > 0 ? "th" : null)].join("");
};
cljs.pprint.format_ordinal_english = function cljs$pprint$format_ordinal_english(params, navigator, offsets) {
  var vec__17466 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__17466, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__17466, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zeroth");
  } else {
    var abs_arg_17467 = arg < 0 ? -arg : arg;
    var parts_17468 = cljs.pprint.remainders.call(null, 1E3, abs_arg_17467);
    if (cljs.core.count.call(null, parts_17468) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_17469 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, cljs.core.drop_last.call(null, parts_17468));
      var head_str_17470 = cljs.pprint.add_english_scales.call(null, parts_strs_17469, 1);
      var tail_str_17471 = cljs.pprint.format_simple_ordinal.call(null, cljs.core.last.call(null, parts_17468));
      cljs.pprint.print.call(null, [cljs.core.str(arg < 0 ? "minus " : null), cljs.core.str(!cljs.core.empty_QMARK_.call(null, head_str_17470) && !cljs.core.empty_QMARK_.call(null, tail_str_17471) ? [cljs.core.str(head_str_17470), cljs.core.str(", "), cljs.core.str(tail_str_17471)].join("") : !cljs.core.empty_QMARK_.call(null, head_str_17470) ? [cljs.core.str(head_str_17470), cljs.core.str("th")].join("") : tail_str_17471)].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
      var low_two_digits_17472 = cljs.core.rem.call(null, arg, 100);
      var not_teens_17473 = 11 < low_two_digits_17472 || 19 > low_two_digits_17472;
      var low_digit_17474 = cljs.core.rem.call(null, low_two_digits_17472, 10);
      cljs.pprint.print.call(null, low_digit_17474 === 1 && not_teens_17473 ? "st" : low_digit_17474 === 2 && not_teens_17473 ? "nd" : low_digit_17474 === 3 && not_teens_17473 ? "rd" : "th");
    }
  }
  return navigator__$1;
};
cljs.pprint.old_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IIII", "V", "VI", "VII", "VIII", "VIIII"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XXXX", "L", "LX", "LXX", "LXXX", "LXXXX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", 
"CC", "CCC", "CCCC", "D", "DC", "DCC", "DCCC", "DCCCC"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.new_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", "CC", 
"CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.format_roman = function cljs$pprint$format_roman(table, params, navigator, offsets) {
  var vec__17476 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__17476, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__17476, 1, null);
  if (typeof arg === "number" && arg > 0 && arg < 4E3) {
    var digits_17477 = cljs.pprint.remainders.call(null, 10, arg);
    var acc_17478 = cljs.core.PersistentVector.EMPTY;
    var pos_17479 = cljs.core.count.call(null, digits_17477) - 1;
    var digits_17480__$1 = digits_17477;
    while (true) {
      if (cljs.core.empty_QMARK_.call(null, digits_17480__$1)) {
        cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, acc_17478));
      } else {
        var digit_17481 = cljs.core.first.call(null, digits_17480__$1);
        var G__17482 = cljs.core._EQ_.call(null, 0, digit_17481) ? acc_17478 : cljs.core.conj.call(null, acc_17478, cljs.core.nth.call(null, cljs.core.nth.call(null, table, pos_17479), digit_17481 - 1));
        var G__17483 = pos_17479 - 1;
        var G__17484 = cljs.core.next.call(null, digits_17480__$1);
        acc_17478 = G__17482;
        pos_17479 = G__17483;
        digits_17480__$1 = G__17484;
        continue;
      }
      break;
    }
  } else {
    cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
  }
  return navigator__$1;
};
cljs.pprint.format_old_roman = function cljs$pprint$format_old_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.old_roman_table, params, navigator, offsets);
};
cljs.pprint.format_new_roman = function cljs$pprint$format_new_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.new_roman_table, params, navigator, offsets);
};
cljs.pprint.special_chars = new cljs.core.PersistentArrayMap(null, 5, [8, "Backspace", 9, "Tab", 10, "Newline", 13, "Return", 32, "Space"], null);
cljs.pprint.pretty_character = function cljs$pprint$pretty_character(params, navigator, offsets) {
  var vec__17486 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__17486, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__17486, 1, null);
  var as_int = cljs.pprint.char_code.call(null, c);
  var base_char = as_int & 127;
  var meta = as_int & 128;
  var special = cljs.core.get.call(null, cljs.pprint.special_chars, base_char);
  if (meta > 0) {
    cljs.pprint.print.call(null, "Meta-");
  } else {
  }
  cljs.pprint.print.call(null, cljs.core.truth_(special) ? special : base_char < 32 ? [cljs.core.str("Control-"), cljs.core.str(cljs.core.char$.call(null, base_char + 64))].join("") : cljs.core._EQ_.call(null, base_char, 127) ? "Control-?" : cljs.core.char$.call(null, base_char));
  return navigator__$1;
};
cljs.pprint.readable_character = function cljs$pprint$readable_character(params, navigator, offsets) {
  var vec__17491 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__17491, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__17491, 1, null);
  var pred__17492_17495 = cljs.core._EQ_;
  var expr__17493_17496 = (new cljs.core.Keyword(null, "char-format", "char-format", -1016499218)).cljs$core$IFn$_invoke$arity$1(params);
  if (cljs.core.truth_(pred__17492_17495.call(null, "o", expr__17493_17496))) {
    cljs.pprint.cl_format.call(null, true, "\\o~3, '0o", cljs.pprint.char_code.call(null, c));
  } else {
    if (cljs.core.truth_(pred__17492_17495.call(null, "u", expr__17493_17496))) {
      cljs.pprint.cl_format.call(null, true, "\\u~4, '0x", cljs.pprint.char_code.call(null, c));
    } else {
      if (cljs.core.truth_(pred__17492_17495.call(null, null, expr__17493_17496))) {
        cljs.pprint.print_char.call(null, c);
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__17493_17496)].join(""));
      }
    }
  }
  return navigator__$1;
};
cljs.pprint.plain_character = function cljs$pprint$plain_character(params, navigator, offsets) {
  var vec__17498 = cljs.pprint.next_arg.call(null, navigator);
  var char$ = cljs.core.nth.call(null, vec__17498, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__17498, 1, null);
  cljs.pprint.print.call(null, char$);
  return navigator__$1;
};
cljs.pprint.abort_QMARK_ = function cljs$pprint$abort_QMARK_(context) {
  var token = cljs.core.first.call(null, context);
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), token) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), token);
};
cljs.pprint.execute_sub_format = function cljs$pprint$execute_sub_format(format, args, base_args) {
  return cljs.core.second.call(null, cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, context))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__17501 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__17501, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__17501, 1, null);
      var vec__17502 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__17502, 0, null);
      var offsets = cljs.core.nth.call(null, vec__17502, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), base_args);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format));
};
cljs.pprint.float_parts_base = function cljs$pprint$float_parts_base(f) {
  var s = clojure.string.lower_case.call(null, [cljs.core.str(f)].join(""));
  var exploc = s.indexOf("e");
  var dotloc = s.indexOf(".");
  if (exploc < 0) {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, [cljs.core.str(cljs.core.count.call(null, s) - 1)].join("")], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s, 0, dotloc)), cljs.core.str(cljs.core.subs.call(null, s, dotloc + 1))].join(""), [cljs.core.str(dotloc - 1)].join("")], null);
    }
  } else {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, 0, exploc), cljs.core.subs.call(null, s, exploc + 1)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s, 0, 1)), cljs.core.str(cljs.core.subs.call(null, s, 2, exploc))].join(""), cljs.core.subs.call(null, s, exploc + 1)], null);
    }
  }
};
cljs.pprint.float_parts = function cljs$pprint$float_parts(f) {
  var vec__17504 = cljs.pprint.float_parts_base.call(null, f);
  var m = cljs.core.nth.call(null, vec__17504, 0, null);
  var e = cljs.core.nth.call(null, vec__17504, 1, null);
  var m1 = cljs.pprint.rtrim.call(null, m, "0");
  var m2 = cljs.pprint.ltrim.call(null, m1, "0");
  var delta = cljs.core.count.call(null, m1) - cljs.core.count.call(null, m2);
  var e__$1 = cljs.core.count.call(null, e) > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, e, 0), "+") ? cljs.core.subs.call(null, e, 1) : e;
  if (cljs.core.empty_QMARK_.call(null, m2)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m2, parseInt(e__$1) - delta], null);
  }
};
cljs.pprint.inc_s = function cljs$pprint$inc_s(s) {
  var len_1 = cljs.core.count.call(null, s) - 1;
  var i = len_1 | 0;
  while (true) {
    if (i < 0) {
      return cljs.core.apply.call(null, cljs.core.str, "1", cljs.core.repeat.call(null, len_1 + 1, "0"));
    } else {
      if (cljs.core._EQ_.call(null, "9", s.charAt(i))) {
        var G__17505 = i - 1;
        i = G__17505;
        continue;
      } else {
        return cljs.core.apply.call(null, cljs.core.str, cljs.core.subs.call(null, s, 0, i), cljs.core.char$.call(null, cljs.pprint.char_code.call(null, s.charAt(i)) + 1), cljs.core.repeat.call(null, len_1 - i, "0"));
      }
    }
    break;
  }
};
cljs.pprint.round_str = function cljs$pprint$round_str(m, e, d, w) {
  if (cljs.core.truth_(function() {
    var or__5583__auto__ = d;
    if (cljs.core.truth_(or__5583__auto__)) {
      return or__5583__auto__;
    } else {
      return w;
    }
  }())) {
    var len = cljs.core.count.call(null, m);
    var w__$1 = cljs.core.truth_(w) ? function() {
      var x__5895__auto__ = 2;
      var y__5896__auto__ = w;
      return x__5895__auto__ > y__5896__auto__ ? x__5895__auto__ : y__5896__auto__;
    }() : 0;
    var round_pos = cljs.core.truth_(d) ? e + d + 1 : e >= 0 ? function() {
      var x__5895__auto__ = e + 1;
      var y__5896__auto__ = w__$1 - 1;
      return x__5895__auto__ > y__5896__auto__ ? x__5895__auto__ : y__5896__auto__;
    }() : w__$1 + e;
    var vec__17507 = cljs.core._EQ_.call(null, round_pos, 0) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("0"), cljs.core.str(m)].join(""), e + 1, 1, len + 1], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, round_pos, len], null);
    var m1 = cljs.core.nth.call(null, vec__17507, 0, null);
    var e1 = cljs.core.nth.call(null, vec__17507, 1, null);
    var round_pos__$1 = cljs.core.nth.call(null, vec__17507, 2, null);
    var len__$1 = cljs.core.nth.call(null, vec__17507, 3, null);
    if (cljs.core.truth_(round_pos__$1)) {
      if (round_pos__$1 < 0) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0, false], null);
      } else {
        if (len__$1 > round_pos__$1) {
          var round_char = cljs.core.nth.call(null, m1, round_pos__$1);
          var result = cljs.core.subs.call(null, m1, 0, round_pos__$1);
          if (cljs.pprint.char_code.call(null, round_char) >= cljs.pprint.char_code.call(null, "5")) {
            var round_up_result = cljs.pprint.inc_s.call(null, result);
            var expanded = cljs.core.count.call(null, round_up_result) > cljs.core.count.call(null, result);
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [expanded ? cljs.core.subs.call(null, round_up_result, 0, cljs.core.count.call(null, round_up_result) - 1) : round_up_result, e1, expanded], null);
          } else {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [result, e1, false], null);
          }
        } else {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
        }
      }
    } else {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
    }
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
  }
};
cljs.pprint.expand_fixed = function cljs$pprint$expand_fixed(m, e, d) {
  var vec__17509 = e < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -e - 1, "0"))), cljs.core.str(m)].join(""), -1], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e], null);
  var m1 = cljs.core.nth.call(null, vec__17509, 0, null);
  var e1 = cljs.core.nth.call(null, vec__17509, 1, null);
  var len = cljs.core.count.call(null, m1);
  var target_len = cljs.core.truth_(d) ? e1 + d + 1 : e1 + 1;
  if (len < target_len) {
    return [cljs.core.str(m1), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, target_len - len, "0")))].join("");
  } else {
    return m1;
  }
};
cljs.pprint.insert_decimal = function cljs$pprint$insert_decimal(m, e) {
  if (e < 0) {
    return [cljs.core.str("."), cljs.core.str(m)].join("");
  } else {
    var loc = e + 1;
    return [cljs.core.str(cljs.core.subs.call(null, m, 0, loc)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, m, loc))].join("");
  }
};
cljs.pprint.get_fixed = function cljs$pprint$get_fixed(m, e, d) {
  return cljs.pprint.insert_decimal.call(null, cljs.pprint.expand_fixed.call(null, m, e, d), e);
};
cljs.pprint.insert_scaled_decimal = function cljs$pprint$insert_scaled_decimal(m, k) {
  if (k < 0) {
    return [cljs.core.str("."), cljs.core.str(m)].join("");
  } else {
    return [cljs.core.str(cljs.core.subs.call(null, m, 0, k)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, m, k))].join("");
  }
};
cljs.pprint.convert_ratio = function cljs$pprint$convert_ratio(x) {
  return x;
};
cljs.pprint.fixed_float = function cljs$pprint$fixed_float(params, navigator, offsets) {
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__17514 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__17514, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__17514, 1, null);
  var vec__17515 = arg < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-", -arg], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["+", arg], null);
  var sign = cljs.core.nth.call(null, vec__17515, 0, null);
  var abs = cljs.core.nth.call(null, vec__17515, 1, null);
  var abs__$1 = cljs.pprint.convert_ratio.call(null, abs);
  var vec__17516 = cljs.pprint.float_parts.call(null, abs__$1);
  var mantissa = cljs.core.nth.call(null, vec__17516, 0, null);
  var exp = cljs.core.nth.call(null, vec__17516, 1, null);
  var scaled_exp = exp + (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__5583__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__5583__auto__)) {
      return or__5583__auto__;
    } else {
      return arg < 0;
    }
  }();
  var append_zero = cljs.core.not.call(null, d) && cljs.core.count.call(null, mantissa) - 1 <= scaled_exp;
  var vec__17517 = cljs.pprint.round_str.call(null, mantissa, scaled_exp, d, cljs.core.truth_(w) ? w - (cljs.core.truth_(add_sign) ? 1 : 0) : null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__17517, 0, null);
  var scaled_exp__$1 = cljs.core.nth.call(null, vec__17517, 1, null);
  var expanded = cljs.core.nth.call(null, vec__17517, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp__$1 + 1 : scaled_exp__$1, d);
  var fixed_repr__$1 = cljs.core.truth_(function() {
    var and__5571__auto__ = w;
    if (cljs.core.truth_(and__5571__auto__)) {
      var and__5571__auto____$1 = d;
      if (cljs.core.truth_(and__5571__auto____$1)) {
        return d >= 1 && cljs.core._EQ_.call(null, fixed_repr.charAt(0), "0") && cljs.core._EQ_.call(null, fixed_repr.charAt(1), ".") && cljs.core.count.call(null, fixed_repr) > w - (cljs.core.truth_(add_sign) ? 1 : 0);
      } else {
        return and__5571__auto____$1;
      }
    } else {
      return and__5571__auto__;
    }
  }()) ? cljs.core.subs.call(null, fixed_repr, 1) : fixed_repr;
  var prepend_zero = cljs.core._EQ_.call(null, cljs.core.first.call(null, fixed_repr__$1), ".");
  if (cljs.core.truth_(w)) {
    var len_17518 = cljs.core.count.call(null, fixed_repr__$1);
    var signed_len_17519 = cljs.core.truth_(add_sign) ? len_17518 + 1 : len_17518;
    var prepend_zero_17520__$1 = prepend_zero && !(signed_len_17519 >= w);
    var append_zero_17521__$1 = append_zero && !(signed_len_17519 >= w);
    var full_len_17522 = prepend_zero_17520__$1 || append_zero_17521__$1 ? signed_len_17519 + 1 : signed_len_17519;
    if (cljs.core.truth_(function() {
      var and__5571__auto__ = full_len_17522 > w;
      if (and__5571__auto__) {
        return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__5571__auto__;
      }
    }())) {
      cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
    } else {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len_17522, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(add_sign) ? sign : null), cljs.core.str(prepend_zero_17520__$1 ? "0" : null), cljs.core.str(fixed_repr__$1), cljs.core.str(append_zero_17521__$1 ? "0" : null)].join(""));
    }
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(add_sign) ? sign : null), cljs.core.str(prepend_zero ? "0" : null), cljs.core.str(fixed_repr__$1), cljs.core.str(append_zero ? "0" : null)].join(""));
  }
  return navigator__$1;
};
cljs.pprint.exponential_float = function cljs$pprint$exponential_float(params, navigator, offset) {
  var vec__17529 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__17529, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__17529, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var G__17531_17535 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var vec__17532_17536 = G__17531_17535;
  var mantissa_17537 = cljs.core.nth.call(null, vec__17532_17536, 0, null);
  var exp_17538 = cljs.core.nth.call(null, vec__17532_17536, 1, null);
  var G__17531_17539__$1 = G__17531_17535;
  while (true) {
    var vec__17533_17540 = G__17531_17539__$1;
    var mantissa_17541__$1 = cljs.core.nth.call(null, vec__17533_17540, 0, null);
    var exp_17542__$1 = cljs.core.nth.call(null, vec__17533_17540, 1, null);
    var w_17543 = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
    var d_17544 = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
    var e_17545 = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
    var k_17546 = (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
    var expchar_17547 = function() {
      var or__5583__auto__ = (new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__5583__auto__)) {
        return or__5583__auto__;
      } else {
        return "E";
      }
    }();
    var add_sign_17548 = function() {
      var or__5583__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__5583__auto__)) {
        return or__5583__auto__;
      } else {
        return arg__$1 < 0;
      }
    }();
    var prepend_zero_17549 = k_17546 <= 0;
    var scaled_exp_17550 = exp_17542__$1 - (k_17546 - 1);
    var scaled_exp_str_17551 = [cljs.core.str(Math.abs(scaled_exp_17550))].join("");
    var scaled_exp_str_17552__$1 = [cljs.core.str(expchar_17547), cljs.core.str(scaled_exp_17550 < 0 ? "-" : "+"), cljs.core.str(cljs.core.truth_(e_17545) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, e_17545 - cljs.core.count.call(null, scaled_exp_str_17551), "0")) : null), cljs.core.str(scaled_exp_str_17551)].join("");
    var exp_width_17553 = cljs.core.count.call(null, scaled_exp_str_17552__$1);
    var base_mantissa_width_17554 = cljs.core.count.call(null, mantissa_17541__$1);
    var scaled_mantissa_17555 = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -k_17546, "0"))), cljs.core.str(mantissa_17541__$1), cljs.core.str(cljs.core.truth_(d_17544) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d_17544 - (base_mantissa_width_17554 - 1) - (k_17546 < 0 ? -k_17546 : 0), "0")) : null)].join("");
    var w_mantissa_17556 = cljs.core.truth_(w_17543) ? w_17543 - exp_width_17553 : null;
    var vec__17534_17557 = cljs.pprint.round_str.call(null, scaled_mantissa_17555, 0, cljs.core._EQ_.call(null, k_17546, 0) ? d_17544 - 1 : k_17546 > 0 ? d_17544 : k_17546 < 0 ? d_17544 - 1 : null, cljs.core.truth_(w_mantissa_17556) ? w_mantissa_17556 - (cljs.core.truth_(add_sign_17548) ? 1 : 0) : null);
    var rounded_mantissa_17558 = cljs.core.nth.call(null, vec__17534_17557, 0, null);
    var __17559 = cljs.core.nth.call(null, vec__17534_17557, 1, null);
    var incr_exp_17560 = cljs.core.nth.call(null, vec__17534_17557, 2, null);
    var full_mantissa_17561 = cljs.pprint.insert_scaled_decimal.call(null, rounded_mantissa_17558, k_17546);
    var append_zero_17562 = cljs.core._EQ_.call(null, k_17546, cljs.core.count.call(null, rounded_mantissa_17558)) && d_17544 == null;
    if (cljs.core.not.call(null, incr_exp_17560)) {
      if (cljs.core.truth_(w_17543)) {
        var len_17563 = cljs.core.count.call(null, full_mantissa_17561) + exp_width_17553;
        var signed_len_17564 = cljs.core.truth_(add_sign_17548) ? len_17563 + 1 : len_17563;
        var prepend_zero_17565__$1 = prepend_zero_17549 && !cljs.core._EQ_.call(null, signed_len_17564, w_17543);
        var full_len_17566 = prepend_zero_17565__$1 ? signed_len_17564 + 1 : signed_len_17564;
        var append_zero_17567__$1 = append_zero_17562 && full_len_17566 < w_17543;
        if (cljs.core.truth_(function() {
          var and__5571__auto__ = function() {
            var or__5583__auto__ = full_len_17566 > w_17543;
            if (or__5583__auto__) {
              return or__5583__auto__;
            } else {
              var and__5571__auto__ = e_17545;
              if (cljs.core.truth_(and__5571__auto__)) {
                return exp_width_17553 - 2 > e_17545;
              } else {
                return and__5571__auto__;
              }
            }
          }();
          if (cljs.core.truth_(and__5571__auto__)) {
            return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
          } else {
            return and__5571__auto__;
          }
        }())) {
          cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_17543, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
        } else {
          cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_17543 - full_len_17566 - (append_zero_17567__$1 ? 1 : 0), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(add_sign_17548) ? arg__$1 < 0 ? "-" : "+" : null), cljs.core.str(prepend_zero_17565__$1 ? "0" : null), cljs.core.str(full_mantissa_17561), cljs.core.str(append_zero_17567__$1 ? "0" : 
          null), cljs.core.str(scaled_exp_str_17552__$1)].join(""));
        }
      } else {
        cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(add_sign_17548) ? arg__$1 < 0 ? "-" : "+" : null), cljs.core.str(prepend_zero_17549 ? "0" : null), cljs.core.str(full_mantissa_17561), cljs.core.str(append_zero_17562 ? "0" : null), cljs.core.str(scaled_exp_str_17552__$1)].join(""));
      }
    } else {
      var G__17568 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rounded_mantissa_17558, exp_17542__$1 + 1], null);
      G__17531_17539__$1 = G__17568;
      continue;
    }
    break;
  }
  return navigator__$1;
};
cljs.pprint.general_float = function cljs$pprint$general_float(params, navigator, offsets) {
  var vec__17571 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__17571, 0, null);
  var _ = cljs.core.nth.call(null, vec__17571, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var vec__17572 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var mantissa = cljs.core.nth.call(null, vec__17572, 0, null);
  var exp = cljs.core.nth.call(null, vec__17572, 1, null);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var e = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
  var n = cljs.core._EQ_.call(null, arg__$1, 0) ? 0 : exp + 1;
  var ee = cljs.core.truth_(e) ? e + 2 : 4;
  var ww = cljs.core.truth_(w) ? w - ee : null;
  var d__$1 = cljs.core.truth_(d) ? d : function() {
    var x__5895__auto__ = cljs.core.count.call(null, mantissa);
    var y__5896__auto__ = function() {
      var x__5902__auto__ = n;
      var y__5903__auto__ = 7;
      return x__5902__auto__ < y__5903__auto__ ? x__5902__auto__ : y__5903__auto__;
    }();
    return x__5895__auto__ > y__5896__auto__ ? x__5895__auto__ : y__5896__auto__;
  }();
  var dd = d__$1 - n;
  if (0 <= dd && dd <= d__$1) {
    var navigator__$1 = cljs.pprint.fixed_float.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "w", "w", 354169001), ww, new cljs.core.Keyword(null, "d", "d", 1972142424), dd, new cljs.core.Keyword(null, "k", "k", -2146297393), 0, new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)], null), navigator, offsets);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, ee, " ")));
    return navigator__$1;
  } else {
    return cljs.pprint.exponential_float.call(null, params, navigator, offsets);
  }
};
cljs.pprint.dollar_float = function cljs$pprint$dollar_float(params, navigator, offsets) {
  var vec__17576 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__17576, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__17576, 1, null);
  var vec__17577 = cljs.pprint.float_parts.call(null, Math.abs(arg));
  var mantissa = cljs.core.nth.call(null, vec__17577, 0, null);
  var exp = cljs.core.nth.call(null, vec__17577, 1, null);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__5583__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__5583__auto__)) {
      return or__5583__auto__;
    } else {
      return arg < 0;
    }
  }();
  var vec__17578 = cljs.pprint.round_str.call(null, mantissa, exp, d, null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__17578, 0, null);
  var scaled_exp = cljs.core.nth.call(null, vec__17578, 1, null);
  var expanded = cljs.core.nth.call(null, vec__17578, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp + 1 : scaled_exp, d);
  var full_repr = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n - fixed_repr.indexOf("."), "0"))), cljs.core.str(fixed_repr)].join("");
  var full_len = cljs.core.count.call(null, full_repr) + (cljs.core.truth_(add_sign) ? 1 : 0);
  cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(function() {
    var and__5571__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__5571__auto__)) {
      return add_sign;
    } else {
      return and__5571__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(function() {
    var and__5571__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    if (and__5571__auto__) {
      return add_sign;
    } else {
      return and__5571__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null), cljs.core.str(full_repr)].join(""));
  return navigator__$1;
};
cljs.pprint.choice_conditional = function cljs$pprint$choice_conditional(params, arg_navigator, offsets) {
  var arg = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__17580 = cljs.core.truth_(arg) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg, arg_navigator], null) : cljs.pprint.next_arg.call(null, arg_navigator);
  var arg__$1 = cljs.core.nth.call(null, vec__17580, 0, null);
  var navigator = cljs.core.nth.call(null, vec__17580, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = arg__$1 < 0 || arg__$1 >= cljs.core.count.call(null, clauses) ? cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params)) : cljs.core.nth.call(null, clauses, arg__$1);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.boolean_conditional = function cljs$pprint$boolean_conditional(params, arg_navigator, offsets) {
  var vec__17582 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__17582, 0, null);
  var navigator = cljs.core.nth.call(null, vec__17582, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.second.call(null, clauses) : cljs.core.first.call(null, clauses);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.check_arg_conditional = function cljs$pprint$check_arg_conditional(params, arg_navigator, offsets) {
  var vec__17584 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__17584, 0, null);
  var navigator = cljs.core.nth.call(null, vec__17584, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.first.call(null, clauses) : null;
  if (cljs.core.truth_(arg)) {
    if (cljs.core.truth_(clause)) {
      return cljs.pprint.execute_sub_format.call(null, clause, arg_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return arg_navigator;
    }
  } else {
    return navigator;
  }
};
cljs.pprint.iterate_sublist = function cljs$pprint$iterate_sublist(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__17587 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__17587, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__17587, 1, null);
  var vec__17588 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__17588, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__17588, 1, null);
  var args = cljs.pprint.init_navigator.call(null, arg_list);
  var count = 0;
  var args__$1 = args;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1), last_pos) && count > 1) {
      throw Error("%{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__5583__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(args__$1)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__5583__auto__) {
        return or__5583__auto__;
      } else {
        var and__5571__auto__ = max_count;
        if (cljs.core.truth_(and__5571__auto__)) {
          return count >= max_count;
        } else {
          return and__5571__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, args__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__17589 = count + 1;
        var G__17590 = iter_result;
        var G__17591 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1);
        count = G__17589;
        args__$1 = G__17590;
        last_pos = G__17591;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_list_of_sublists = function cljs$pprint$iterate_list_of_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__17594 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__17594, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__17594, 1, null);
  var vec__17595 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__17595, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__17595, 1, null);
  var count = 0;
  var arg_list__$1 = arg_list;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__5583__auto__ = cljs.core.empty_QMARK_.call(null, arg_list__$1) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__5583__auto__) {
        return or__5583__auto__;
      } else {
        var and__5571__auto__ = max_count;
        if (cljs.core.truth_(and__5571__auto__)) {
          return count >= max_count;
        } else {
          return and__5571__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, cljs.core.first.call(null, arg_list__$1)), cljs.pprint.init_navigator.call(null, cljs.core.next.call(null, arg_list__$1)));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__17596 = count + 1;
        var G__17597 = cljs.core.next.call(null, arg_list__$1);
        count = G__17596;
        arg_list__$1 = G__17597;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_list = function cljs$pprint$iterate_main_list(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__17599 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__17599, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__17599, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2), last_pos) && count > 1) {
      throw Error("%@{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__5583__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__5583__auto__) {
        return or__5583__auto__;
      } else {
        var and__5571__auto__ = max_count;
        if (cljs.core.truth_(and__5571__auto__)) {
          return count >= max_count;
        } else {
          return and__5571__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return cljs.core.second.call(null, iter_result);
      } else {
        var G__17600 = count + 1;
        var G__17601 = iter_result;
        var G__17602 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2);
        count = G__17600;
        navigator__$2 = G__17601;
        last_pos = G__17602;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_sublists = function cljs$pprint$iterate_main_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__17605 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__17605, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__17605, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__5583__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__5583__auto__) {
        return or__5583__auto__;
      } else {
        var and__5571__auto__ = max_count;
        if (cljs.core.truth_(and__5571__auto__)) {
          return count >= max_count;
        } else {
          return and__5571__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var vec__17606 = cljs.pprint.next_arg_or_nil.call(null, navigator__$2);
      var sublist = cljs.core.nth.call(null, vec__17606, 0, null);
      var navigator__$3 = cljs.core.nth.call(null, vec__17606, 1, null);
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, sublist), navigator__$3);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$3;
      } else {
        var G__17607 = count + 1;
        var G__17608 = navigator__$3;
        count = G__17607;
        navigator__$2 = G__17608;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.logical_block_or_justify = function cljs$pprint$logical_block_or_justify(params, navigator, offsets) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return cljs.pprint.format_logical_block.call(null, params, navigator, offsets);
  } else {
    return cljs.pprint.justify_clauses.call(null, params, navigator, offsets);
  }
};
cljs.pprint.render_clauses = function cljs$pprint$render_clauses(clauses, navigator, base_navigator) {
  var clauses__$1 = clauses;
  var acc = cljs.core.PersistentVector.EMPTY;
  var navigator__$1 = navigator;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, clauses__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, navigator__$1], null);
    } else {
      var clause = cljs.core.first.call(null, clauses__$1);
      var vec__17611 = function() {
        var sb = new goog.string.StringBuffer;
        var _STAR_out_STAR_17612 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(sb);
        try {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.execute_sub_format.call(null, clause, navigator__$1, base_navigator), [cljs.core.str(sb)].join("")], null);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_17612;
        }
      }();
      var iter_result = cljs.core.nth.call(null, vec__17611, 0, null);
      var result_str = cljs.core.nth.call(null, vec__17611, 1, null);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, cljs.core.second.call(null, iter_result)], null);
      } else {
        var G__17613 = cljs.core.next.call(null, clauses__$1);
        var G__17614 = cljs.core.conj.call(null, acc, result_str);
        var G__17615 = iter_result;
        clauses__$1 = G__17613;
        acc = G__17614;
        navigator__$1 = G__17615;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.justify_clauses = function cljs$pprint$justify_clauses(params, navigator, offsets) {
  var vec__17620 = function() {
    var temp__4425__auto__ = (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var else$ = temp__4425__auto__;
      return cljs.pprint.render_clauses.call(null, else$, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return null;
    }
  }();
  var vec__17621 = cljs.core.nth.call(null, vec__17620, 0, null);
  var eol_str = cljs.core.nth.call(null, vec__17621, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__17620, 1, null);
  var navigator__$1 = function() {
    var or__5583__auto__ = new_navigator;
    if (cljs.core.truth_(or__5583__auto__)) {
      return or__5583__auto__;
    } else {
      return navigator;
    }
  }();
  var vec__17622 = function() {
    var temp__4425__auto__ = (new cljs.core.Keyword(null, "else-params", "else-params", -832171646)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var p = temp__4425__auto__;
      return cljs.pprint.realize_parameter_list.call(null, p, navigator__$1);
    } else {
      return null;
    }
  }();
  var else_params = cljs.core.nth.call(null, vec__17622, 0, null);
  var new_navigator__$1 = cljs.core.nth.call(null, vec__17622, 1, null);
  var navigator__$2 = function() {
    var or__5583__auto__ = new_navigator__$1;
    if (cljs.core.truth_(or__5583__auto__)) {
      return or__5583__auto__;
    } else {
      return navigator__$1;
    }
  }();
  var min_remaining = function() {
    var or__5583__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__5583__auto__)) {
      return or__5583__auto__;
    } else {
      return 0;
    }
  }();
  var max_columns = function() {
    var or__5583__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__5583__auto__)) {
      return or__5583__auto__;
    } else {
      return cljs.pprint.get_max_column.call(null, cljs.core._STAR_out_STAR_);
    }
  }();
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__17623 = cljs.pprint.render_clauses.call(null, clauses, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  var strs = cljs.core.nth.call(null, vec__17623, 0, null);
  var navigator__$3 = cljs.core.nth.call(null, vec__17623, 1, null);
  var slots = function() {
    var x__5895__auto__ = 1;
    var y__5896__auto__ = cljs.core.count.call(null, strs) - 1 + (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0) + (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0);
    return x__5895__auto__ > y__5896__auto__ ? x__5895__auto__ : y__5896__auto__;
  }();
  var chars = cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, strs));
  var mincol = (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params);
  var minpad = (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var minout = chars + slots * minpad;
  var result_columns = minout <= mincol ? mincol : mincol + colinc * (1 + cljs.core.quot.call(null, minout - mincol - 1, colinc));
  var total_pad = result_columns - chars;
  var pad = function() {
    var x__5895__auto__ = minpad;
    var y__5896__auto__ = cljs.core.quot.call(null, total_pad, slots);
    return x__5895__auto__ > y__5896__auto__ ? x__5895__auto__ : y__5896__auto__;
  }();
  var extra_pad = total_pad - pad * slots;
  var pad_str = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, pad, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_(function() {
    var and__5571__auto__ = eol_str;
    if (cljs.core.truth_(and__5571__auto__)) {
      return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))) + min_remaining + result_columns > max_columns;
    } else {
      return and__5571__auto__;
    }
  }())) {
    cljs.pprint.print.call(null, eol_str);
  } else {
  }
  var slots_17624__$1 = slots;
  var extra_pad_17625__$1 = extra_pad;
  var strs_17626__$1 = strs;
  var pad_only_17627 = function() {
    var or__5583__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__5583__auto__)) {
      return or__5583__auto__;
    } else {
      return cljs.core._EQ_.call(null, cljs.core.count.call(null, strs_17626__$1), 1) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params));
    }
  }();
  while (true) {
    if (cljs.core.seq.call(null, strs_17626__$1)) {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.not.call(null, pad_only_17627) ? cljs.core.first.call(null, strs_17626__$1) : null), cljs.core.str(cljs.core.truth_(function() {
        var or__5583__auto__ = pad_only_17627;
        if (cljs.core.truth_(or__5583__auto__)) {
          return or__5583__auto__;
        } else {
          var or__5583__auto____$1 = cljs.core.next.call(null, strs_17626__$1);
          if (or__5583__auto____$1) {
            return or__5583__auto____$1;
          } else {
            return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
          }
        }
      }()) ? pad_str : null), cljs.core.str(extra_pad_17625__$1 > 0 ? (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params) : null)].join(""));
      var G__17628 = slots_17624__$1 - 1;
      var G__17629 = extra_pad_17625__$1 - 1;
      var G__17630 = cljs.core.truth_(pad_only_17627) ? strs_17626__$1 : cljs.core.next.call(null, strs_17626__$1);
      var G__17631 = false;
      slots_17624__$1 = G__17628;
      extra_pad_17625__$1 = G__17629;
      strs_17626__$1 = G__17630;
      pad_only_17627 = G__17631;
      continue;
    } else {
    }
    break;
  }
  return navigator__$3;
};
cljs.pprint.downcase_writer = function cljs$pprint$downcase_writer(writer) {
  if (typeof cljs.pprint.t17638 !== "undefined") {
  } else {
    cljs.pprint.t17638 = function(downcase_writer, writer, meta17639) {
      this.downcase_writer = downcase_writer;
      this.writer = writer;
      this.meta17639 = meta17639;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t17638.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17640, meta17639__$1) {
      var self__ = this;
      var _17640__$1 = this;
      return new cljs.pprint.t17638(self__.downcase_writer, self__.writer, meta17639__$1);
    };
    cljs.pprint.t17638.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17640) {
      var self__ = this;
      var _17640__$1 = this;
      return self__.meta17639;
    };
    cljs.pprint.t17638.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t17638.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__17641 = cljs.core._EQ_;
      var expr__17642 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__17641.call(null, String, expr__17642))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__17641.call(null, Number, expr__17642))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__17642)].join(""));
        }
      }
    };
    cljs.pprint.t17638.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "downcase-writer", "downcase-writer", 37286911, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to lower case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta17639", "meta17639", 551074848, null)], null);
    };
    cljs.pprint.t17638.cljs$lang$type = true;
    cljs.pprint.t17638.cljs$lang$ctorStr = "cljs.pprint/t17638";
    cljs.pprint.t17638.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
      return cljs.core._write.call(null, writer__6163__auto__, "cljs.pprint/t17638");
    };
    cljs.pprint.__GT_t17638 = function cljs$pprint$downcase_writer_$___GT_t17638(downcase_writer__$1, writer__$1, meta17639) {
      return new cljs.pprint.t17638(downcase_writer__$1, writer__$1, meta17639);
    };
  }
  return new cljs.pprint.t17638(cljs$pprint$downcase_writer, writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.upcase_writer = function cljs$pprint$upcase_writer(writer) {
  if (typeof cljs.pprint.t17650 !== "undefined") {
  } else {
    cljs.pprint.t17650 = function(upcase_writer, writer, meta17651) {
      this.upcase_writer = upcase_writer;
      this.writer = writer;
      this.meta17651 = meta17651;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t17650.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17652, meta17651__$1) {
      var self__ = this;
      var _17652__$1 = this;
      return new cljs.pprint.t17650(self__.upcase_writer, self__.writer, meta17651__$1);
    };
    cljs.pprint.t17650.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17652) {
      var self__ = this;
      var _17652__$1 = this;
      return self__.meta17651;
    };
    cljs.pprint.t17650.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t17650.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__17653 = cljs.core._EQ_;
      var expr__17654 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__17653.call(null, String, expr__17654))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__17653.call(null, Number, expr__17654))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__17654)].join(""));
        }
      }
    };
    cljs.pprint.t17650.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "upcase-writer", "upcase-writer", 51077317, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to upper case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta17651", "meta17651", 1611394668, null)], null);
    };
    cljs.pprint.t17650.cljs$lang$type = true;
    cljs.pprint.t17650.cljs$lang$ctorStr = "cljs.pprint/t17650";
    cljs.pprint.t17650.cljs$lang$ctorPrWriter = function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
      return cljs.core._write.call(null, writer__6163__auto__, "cljs.pprint/t17650");
    };
    cljs.pprint.__GT_t17650 = function cljs$pprint$upcase_writer_$___GT_t17650(upcase_writer__$1, writer__$1, meta17651) {
      return new cljs.pprint.t17650(upcase_writer__$1, writer__$1, meta17651);
    };
  }
  return new cljs.pprint.t17650(cljs$pprint$upcase_writer, writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.capitalize_string = function cljs$pprint$capitalize_string(s, first_QMARK_) {
  var f = cljs.core.first.call(null, s);
  var s__$1 = cljs.core.truth_(function() {
    var and__5571__auto__ = first_QMARK_;
    if (cljs.core.truth_(and__5571__auto__)) {
      var and__5571__auto____$1 = f;
      if (cljs.core.truth_(and__5571__auto____$1)) {
        return goog.string.isUnicodeChar(f);
      } else {
        return and__5571__auto____$1;
      }
    } else {
      return and__5571__auto__;
    }
  }()) ? [cljs.core.str(clojure.string.upper_case.call(null, f)), cljs.core.str(cljs.core.subs.call(null, s, 1))].join("") : s;
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(f, s__$1) {
    return function(s__$2) {
      if (cljs.core.empty_QMARK_.call(null, s__$2)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
      } else {
        var m = RegExp("\\W\\w", "g").exec(s__$2);
        var offset = function() {
          var and__5571__auto__ = m;
          if (cljs.core.truth_(and__5571__auto__)) {
            return m.index + 1;
          } else {
            return and__5571__auto__;
          }
        }();
        if (cljs.core.truth_(offset)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s__$2, 0, offset)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, s__$2, offset)))].join(""), cljs.core.subs.call(null, s__$2, offset + 1)], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$2, null], null);
        }
      }
    };
  }(f, s__$1), s__$1)));
};
cljs.pprint.capitalize_word_writer = function cljs$pprint$capitalize_word_writer(writer) {
  var last_was_whitespace_QMARK_ = cljs.core.atom.call(null, true);
  if (typeof cljs.pprint.t17662 !== "undefined") {
  } else {
    cljs.pprint.t17662 = function(capitalize_word_writer, writer, last_was_whitespace_QMARK_, meta17663) {
      this.capitalize_word_writer = capitalize_word_writer;
      this.writer = writer;
      this.last_was_whitespace_QMARK_ = last_was_whitespace_QMARK_;
      this.meta17663 = meta17663;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t17662.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(_17664, meta17663__$1) {
        var self__ = this;
        var _17664__$1 = this;
        return new cljs.pprint.t17662(self__.capitalize_word_writer, self__.writer, self__.last_was_whitespace_QMARK_, meta17663__$1);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t17662.prototype.cljs$core$IMeta$_meta$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_17664) {
        var self__ = this;
        var _17664__$1 = this;
        return self__.meta17663;
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t17662.prototype.cljs$core$IWriter$_flush$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t17662.prototype.cljs$core$IWriter$_write$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__17665 = cljs.core._EQ_;
        var expr__17666 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__17665.call(null, String, expr__17666))) {
          var s = x;
          cljs.core._write.call(null, self__.writer, cljs.pprint.capitalize_string.call(null, s.toLowerCase(), cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)));
          if (s.length > 0) {
            return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1)));
          } else {
            return null;
          }
        } else {
          if (cljs.core.truth_(pred__17665.call(null, Number, expr__17666))) {
            var c = cljs.core.char$.call(null, x);
            var mod_c = cljs.core.truth_(cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)) ? clojure.string.upper_case.call(null, c) : c;
            cljs.core._write.call(null, self__.writer, mod_c);
            return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(c));
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__17666)].join(""));
          }
        }
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t17662.getBasis = function(last_was_whitespace_QMARK_) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "capitalize-word-writer", "capitalize-word-writer", 196688059, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing all words"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "last-was-whitespace?", "last-was-whitespace?", -1073928093, null), new cljs.core.Symbol(null, "meta17663", "meta17663", 779387415, null)], null);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t17662.cljs$lang$type = true;
    cljs.pprint.t17662.cljs$lang$ctorStr = "cljs.pprint/t17662";
    cljs.pprint.t17662.cljs$lang$ctorPrWriter = function(last_was_whitespace_QMARK_) {
      return function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
        return cljs.core._write.call(null, writer__6163__auto__, "cljs.pprint/t17662");
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.__GT_t17662 = function(last_was_whitespace_QMARK_) {
      return function cljs$pprint$capitalize_word_writer_$___GT_t17662(capitalize_word_writer__$1, writer__$1, last_was_whitespace_QMARK___$1, meta17663) {
        return new cljs.pprint.t17662(capitalize_word_writer__$1, writer__$1, last_was_whitespace_QMARK___$1, meta17663);
      };
    }(last_was_whitespace_QMARK_);
  }
  return new cljs.pprint.t17662(cljs$pprint$capitalize_word_writer, writer, last_was_whitespace_QMARK_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.init_cap_writer = function cljs$pprint$init_cap_writer(writer) {
  var capped = cljs.core.atom.call(null, false);
  if (typeof cljs.pprint.t17674 !== "undefined") {
  } else {
    cljs.pprint.t17674 = function(init_cap_writer, writer, capped, meta17675) {
      this.init_cap_writer = init_cap_writer;
      this.writer = writer;
      this.capped = capped;
      this.meta17675 = meta17675;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t17674.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(capped) {
      return function(_17676, meta17675__$1) {
        var self__ = this;
        var _17676__$1 = this;
        return new cljs.pprint.t17674(self__.init_cap_writer, self__.writer, self__.capped, meta17675__$1);
      };
    }(capped);
    cljs.pprint.t17674.prototype.cljs$core$IMeta$_meta$arity$1 = function(capped) {
      return function(_17676) {
        var self__ = this;
        var _17676__$1 = this;
        return self__.meta17675;
      };
    }(capped);
    cljs.pprint.t17674.prototype.cljs$core$IWriter$_flush$arity$1 = function(capped) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(capped);
    cljs.pprint.t17674.prototype.cljs$core$IWriter$_write$arity$2 = function(capped) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__17677 = cljs.core._EQ_;
        var expr__17678 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__17677.call(null, String, expr__17678))) {
          var s = clojure.string.lower_case.call(null, x);
          if (cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped))) {
            var m = RegExp("\\S", "g").exec(s);
            var offset = function() {
              var and__5571__auto__ = m;
              if (cljs.core.truth_(and__5571__auto__)) {
                return m.index;
              } else {
                return and__5571__auto__;
              }
            }();
            if (cljs.core.truth_(offset)) {
              cljs.core._write.call(null, self__.writer, [cljs.core.str(cljs.core.subs.call(null, s, 0, offset)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, s, offset))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, offset + 1)))].join(""));
              return cljs.core.reset_BANG_.call(null, self__.capped, true);
            } else {
              return cljs.core._write.call(null, self__.writer, s);
            }
          } else {
            return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
          }
        } else {
          if (cljs.core.truth_(pred__17677.call(null, Number, expr__17678))) {
            var c = cljs.core.char$.call(null, x);
            if (cljs.core.truth_(function() {
              var and__5571__auto__ = cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped));
              if (and__5571__auto__) {
                return goog.string.isUnicodeChar(c);
              } else {
                return and__5571__auto__;
              }
            }())) {
              cljs.core.reset_BANG_.call(null, self__.capped, true);
              return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, c));
            } else {
              return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, c));
            }
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__17678)].join(""));
          }
        }
      };
    }(capped);
    cljs.pprint.t17674.getBasis = function(capped) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "init-cap-writer", "init-cap-writer", -861558336, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing the first word"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "capped", "capped", -1650988402, null), new cljs.core.Symbol(null, "meta17675", "meta17675", 568185716, null)], null);
      };
    }(capped);
    cljs.pprint.t17674.cljs$lang$type = true;
    cljs.pprint.t17674.cljs$lang$ctorStr = "cljs.pprint/t17674";
    cljs.pprint.t17674.cljs$lang$ctorPrWriter = function(capped) {
      return function(this__6162__auto__, writer__6163__auto__, opt__6164__auto__) {
        return cljs.core._write.call(null, writer__6163__auto__, "cljs.pprint/t17674");
      };
    }(capped);
    cljs.pprint.__GT_t17674 = function(capped) {
      return function cljs$pprint$init_cap_writer_$___GT_t17674(init_cap_writer__$1, writer__$1, capped__$1, meta17675) {
        return new cljs.pprint.t17674(init_cap_writer__$1, writer__$1, capped__$1, meta17675);
      };
    }(capped);
  }
  return new cljs.pprint.t17674(cljs$pprint$init_cap_writer, writer, capped, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.modify_case = function cljs$pprint$modify_case(make_writer, params, navigator, offsets) {
  var clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var _STAR_out_STAR_17681 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = make_writer.call(null, cljs.core._STAR_out_STAR_);
  try {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_17681;
  }
};
cljs.pprint.get_pretty_writer = function cljs$pprint$get_pretty_writer(writer) {
  if (cljs.core.truth_(cljs.pprint.pretty_writer_QMARK_.call(null, writer))) {
    return writer;
  } else {
    return cljs.pprint.pretty_writer.call(null, writer, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_);
  }
};
cljs.pprint.fresh_line = function cljs$pprint$fresh_line() {
  if (!(cljs.core._STAR_out_STAR_ == null) ? cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core._STAR_out_STAR_.cljs$core$IDeref$ ? true : !cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_)) {
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))))) {
      return cljs.pprint.prn.call(null);
    } else {
      return null;
    }
  } else {
    return cljs.pprint.prn.call(null);
  }
};
cljs.pprint.absolute_tabulation = function cljs$pprint$absolute_tabulation(params, navigator, offsets) {
  var colnum_17684 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_17685 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var current_17686 = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var space_count_17687 = current_17686 < colnum_17684 ? colnum_17684 - current_17686 : cljs.core._EQ_.call(null, colinc_17685, 0) ? 0 : colinc_17685 - cljs.core.rem.call(null, current_17686 - colnum_17684, colinc_17685);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_17687, " ")));
  return navigator;
};
cljs.pprint.relative_tabulation = function cljs$pprint$relative_tabulation(params, navigator, offsets) {
  var colrel_17688 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_17689 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var start_col_17690 = colrel_17688 + cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var offset_17691 = colinc_17689 > 0 ? cljs.core.rem.call(null, start_col_17690, colinc_17689) : 0;
  var space_count_17692 = colrel_17688 + (cljs.core._EQ_.call(null, 0, offset_17691) ? 0 : colinc_17689 - offset_17691);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_17692, " ")));
  return navigator;
};
cljs.pprint.format_logical_block = function cljs$pprint$format_logical_block(params, navigator, offsets) {
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause_count = cljs.core.count.call(null, clauses);
  var prefix = clause_count > 1 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.first.call(null, clauses)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? "(" : null;
  var body = cljs.core.nth.call(null, clauses, clause_count > 1 ? 1 : 0);
  var suffix = clause_count > 2 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.nth.call(null, clauses, 2)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? ")" : null;
  var vec__17696 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__17696, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__17696, 1, null);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_17697_17699 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_17698_17700 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, suffix);
      cljs.pprint.execute_sub_format.call(null, body, cljs.pprint.init_navigator.call(null, arg), (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_17698_17700;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_17697_17699;
    }
  }
  return navigator__$1;
};
cljs.pprint.set_indent = function cljs$pprint$set_indent(params, navigator, offsets) {
  var relative_to = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "current", "current", -1088038603) : new cljs.core.Keyword(null, "block", "block", 664686210);
  cljs.pprint.pprint_indent.call(null, relative_to, (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params));
  return navigator;
};
cljs.pprint.conditional_newline = function cljs$pprint$conditional_newline(params, navigator, offsets) {
  var kind = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336) : new cljs.core.Keyword(null, "fill", "fill", 883462889) : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, 
  "miser", "miser", -556060186) : new cljs.core.Keyword(null, "linear", "linear", 872268697);
  cljs.pprint.pprint_newline.call(null, kind);
  return navigator;
};
cljs.pprint.directive_table = cljs.core.PersistentHashMap.fromArrays(["A", "S", "D", "B", "O", "X", "R", "P", "C", "F", "E", "G", "$", "%", "\x26", "|", "~", "\n", "T", "*", "?", "(", ")", "[", ";", "]", "{", "}", "\x3c", "\x3e", "^", "W", "_", "I"], [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "A", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", 
"mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 
new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__17701_SHARP_, p2__17702_SHARP_, p3__17703_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.print_str, p1__17701_SHARP_, p2__17702_SHARP_, p3__17703_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "S", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__17704_SHARP_, p2__17705_SHARP_, p3__17706_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.pr_str, p1__17704_SHARP_, p2__17705_SHARP_, p3__17706_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "D", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__17707_SHARP_, p2__17708_SHARP_, p3__17709_SHARP_) {
    return cljs.pprint.format_integer.call(null, 10, p1__17707_SHARP_, p2__17708_SHARP_, p3__17709_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "B", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__17710_SHARP_, p2__17711_SHARP_, p3__17712_SHARP_) {
    return cljs.pprint.format_integer.call(null, 2, p1__17710_SHARP_, p2__17711_SHARP_, p3__17712_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "O", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__17713_SHARP_, p2__17714_SHARP_, p3__17715_SHARP_) {
    return cljs.pprint.format_integer.call(null, 8, p1__17713_SHARP_, p2__17714_SHARP_, p3__17715_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "X", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__17716_SHARP_, p2__17717_SHARP_, p3__17718_SHARP_) {
    return cljs.pprint.format_integer.call(null, 16, p1__17716_SHARP_, p2__17717_SHARP_, p3__17718_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "R", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(cljs.core.first.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return function(p1__17719_SHARP_, p2__17720_SHARP_, p3__17721_SHARP_) {
      return cljs.pprint.format_integer.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(p1__17719_SHARP_), p1__17719_SHARP_, p2__17720_SHARP_, p3__17721_SHARP_);
    };
  } else {
    if (cljs.core.truth_(function() {
      var and__5571__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(and__5571__auto__)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__5571__auto__;
      }
    }())) {
      return function(p1__17722_SHARP_, p2__17723_SHARP_, p3__17724_SHARP_) {
        return cljs.pprint.format_old_roman.call(null, p1__17722_SHARP_, p2__17723_SHARP_, p3__17724_SHARP_);
      };
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return function(p1__17725_SHARP_, p2__17726_SHARP_, p3__17727_SHARP_) {
          return cljs.pprint.format_new_roman.call(null, p1__17725_SHARP_, p2__17726_SHARP_, p3__17727_SHARP_);
        };
      } else {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
          return function(p1__17728_SHARP_, p2__17729_SHARP_, p3__17730_SHARP_) {
            return cljs.pprint.format_ordinal_english.call(null, p1__17728_SHARP_, p2__17729_SHARP_, p3__17730_SHARP_);
          };
        } else {
          return function(p1__17731_SHARP_, p2__17732_SHARP_, p3__17733_SHARP_) {
            return cljs.pprint.format_cardinal_english.call(null, p1__17731_SHARP_, p2__17732_SHARP_, p3__17733_SHARP_);
          };
        }
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "P", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var navigator__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.pprint.relative_reposition.call(null, navigator, -1) : navigator;
    var strs = cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["y", "ies"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "s"], null);
    var vec__17743 = cljs.pprint.next_arg.call(null, navigator__$1);
    var arg = cljs.core.nth.call(null, vec__17743, 0, null);
    var navigator__$2 = cljs.core.nth.call(null, vec__17743, 1, null);
    cljs.pprint.print.call(null, cljs.core._EQ_.call(null, arg, 1) ? cljs.core.first.call(null, strs) : cljs.core.second.call(null, strs));
    return navigator__$2;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "C", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "char-format", "char-format", -1016499218), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.pretty_character;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.readable_character;
    } else {
      return cljs.pprint.plain_character;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "F", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.fixed_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "E", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.exponential_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "G", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.general_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "$", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, Number], null), new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.dollar_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "%", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__6467__auto___17749 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_17750 = 0;
    while (true) {
      if (i_17750 < n__6467__auto___17749) {
        cljs.pprint.prn.call(null);
        var G__17751 = i_17750 + 1;
        i_17750 = G__17751;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x26", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var cnt_17752 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cnt_17752 > 0) {
      cljs.pprint.fresh_line.call(null);
    } else {
    }
    var n__6467__auto___17753 = cnt_17752 - 1;
    var i_17754 = 0;
    while (true) {
      if (i_17754 < n__6467__auto___17753) {
        cljs.pprint.prn.call(null);
        var G__17755 = i_17754 + 1;
        i_17754 = G__17755;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "|", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__6467__auto___17756 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_17757 = 0;
    while (true) {
      if (i_17757 < n__6467__auto___17756) {
        cljs.pprint.print.call(null, "\f");
        var G__17758 = i_17757 + 1;
        i_17757 = G__17758;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "~", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n, "~")));
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\n", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), 
new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      cljs.pprint.prn.call(null);
    } else {
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "T", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colnum", "colnum", 2023796854), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(p1__17734_SHARP_, p2__17735_SHARP_, p3__17736_SHARP_) {
      return cljs.pprint.relative_tabulation.call(null, p1__17734_SHARP_, p2__17735_SHARP_, p3__17736_SHARP_);
    };
  } else {
    return function(p1__17737_SHARP_, p2__17738_SHARP_, p3__17739_SHARP_) {
      return cljs.pprint.absolute_tabulation.call(null, p1__17737_SHARP_, p2__17738_SHARP_, p3__17739_SHARP_);
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "*", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      return cljs.pprint.absolute_reposition.call(null, navigator, n);
    } else {
      return cljs.pprint.relative_reposition.call(null, navigator, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? -n : n);
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "?", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), 
cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(params__$1, navigator, offsets) {
      var vec__17744 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__17744, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__17744, 1, null);
      return cljs.pprint.execute_sub_format.call(null, subformat, navigator__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
    };
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__17745 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__17745, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__17745, 1, null);
      var vec__17746 = cljs.pprint.next_arg.call(null, navigator__$1);
      var subargs = cljs.core.nth.call(null, vec__17746, 0, null);
      var navigator__$2 = cljs.core.nth.call(null, vec__17746, 1, null);
      var sub_navigator = cljs.pprint.init_navigator.call(null, subargs);
      cljs.pprint.execute_sub_format.call(null, subformat, sub_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
      return navigator__$2;
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "(", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), ")", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), null, new cljs.core.Keyword(null, "else", "else", -1508377146), null], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  var mod_case_writer = cljs.core.truth_(function() {
    var and__5571__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__5571__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__5571__auto__;
    }
  }()) ? cljs.pprint.upcase_writer : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.capitalize_word_writer : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.init_cap_writer : cljs.pprint.downcase_writer;
  return function(mod_case_writer) {
    return function(p1__17740_SHARP_, p2__17741_SHARP_, p3__17742_SHARP_) {
      return cljs.pprint.modify_case.call(null, mod_case_writer, p1__17740_SHARP_, p2__17741_SHARP_, p3__17742_SHARP_);
    };
  }(mod_case_writer);
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ")", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "[", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selector", "selector", 762528866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "]", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), true, new cljs.core.Keyword(null, "else", "else", -1508377146), 
new cljs.core.Keyword(null, "last", "last", 1105735132)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.boolean_conditional;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.check_arg_conditional;
    } else {
      return cljs.pprint.choice_conditional;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ";", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), true], null), new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "]", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "{", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "right", "right", -452581833), "}", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
false], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var and__5571__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__5571__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__5571__auto__;
    }
  }())) {
    return cljs.pprint.iterate_main_sublists;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.iterate_list_of_sublists;
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return cljs.pprint.iterate_main_list;
      } else {
        return cljs.pprint.iterate_sublist;
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "}", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3c", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "\x3e", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
true, new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.Keyword(null, "first", "first", -644103046)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.logical_block_or_justify;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3e", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "^", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, 
new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var arg1 = (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg2 = (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg3 = (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var exit = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007) : new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333);
    if (cljs.core.truth_(function() {
      var and__5571__auto__ = arg1;
      if (cljs.core.truth_(and__5571__auto__)) {
        var and__5571__auto____$1 = arg2;
        if (cljs.core.truth_(and__5571__auto____$1)) {
          return arg3;
        } else {
          return and__5571__auto____$1;
        }
      } else {
        return and__5571__auto__;
      }
    }())) {
      if (arg1 <= arg2 && arg2 <= arg3) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
      } else {
        return navigator;
      }
    } else {
      if (cljs.core.truth_(function() {
        var and__5571__auto__ = arg1;
        if (cljs.core.truth_(and__5571__auto__)) {
          return arg2;
        } else {
          return and__5571__auto__;
        }
      }())) {
        if (cljs.core._EQ_.call(null, arg1, arg2)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
        } else {
          return navigator;
        }
      } else {
        if (cljs.core.truth_(arg1)) {
          if (cljs.core._EQ_.call(null, arg1, 0)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        } else {
          if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1))) : cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        }
      }
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "W", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var or__5583__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__5583__auto__)) {
      return or__5583__auto__;
    } else {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    }
  }())) {
    var bindings = cljs.core.concat.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1290497552), null, new cljs.core.Keyword(null, "length", "length", 588987862), null], null) : cljs.core.PersistentVector.EMPTY, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), true], null) : cljs.core.PersistentVector.EMPTY);
    return function(bindings) {
      return function(params__$1, navigator, offsets) {
        var vec__17747 = cljs.pprint.next_arg.call(null, navigator);
        var arg = cljs.core.nth.call(null, vec__17747, 0, null);
        var navigator__$1 = cljs.core.nth.call(null, vec__17747, 1, null);
        if (cljs.core.truth_(cljs.core.apply.call(null, cljs.pprint.write, arg, bindings))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
        } else {
          return navigator__$1;
        }
      };
    }(bindings);
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__17748 = cljs.pprint.next_arg.call(null, navigator);
      var arg = cljs.core.nth.call(null, vec__17748, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__17748, 1, null);
      if (cljs.core.truth_(cljs.pprint.write_out.call(null, arg))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
      } else {
        return navigator__$1;
      }
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "_", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.conditional_newline;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "I", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.set_indent;
}], null)]);
cljs.pprint.param_pattern = /^([vV]|#|('.)|([+-]?\d+)|(?=,))/;
cljs.pprint.special_params = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335), null, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196), null], null), null);
cljs.pprint.extract_param = function cljs$pprint$extract_param(p__17759) {
  var vec__17761 = p__17759;
  var s = cljs.core.nth.call(null, vec__17761, 0, null);
  var offset = cljs.core.nth.call(null, vec__17761, 1, null);
  var saw_comma = cljs.core.nth.call(null, vec__17761, 2, null);
  var m = new RegExp(cljs.pprint.param_pattern.source, "g");
  var param = m.exec(s);
  if (cljs.core.truth_(param)) {
    var token_str = cljs.core.first.call(null, param);
    var remainder = cljs.core.subs.call(null, s, m.lastIndex);
    var new_offset = offset + m.lastIndex;
    if (!cljs.core._EQ_.call(null, ",", cljs.core.nth.call(null, remainder, 0))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder, new_offset, false], null)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, remainder, 1), new_offset + 1, true], null)], null);
    }
  } else {
    if (cljs.core.truth_(saw_comma)) {
      return cljs.pprint.format_error.call(null, "Badly formed parameters in format directive", offset);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset], null)], null);
    }
  }
};
cljs.pprint.extract_params = function cljs$pprint$extract_params(s, offset) {
  return cljs.pprint.consume.call(null, cljs.pprint.extract_param, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, false], null));
};
cljs.pprint.translate_param = function cljs$pprint$translate_param(p__17762) {
  var vec__17764 = p__17762;
  var p = cljs.core.nth.call(null, vec__17764, 0, null);
  var offset = cljs.core.nth.call(null, vec__17764, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, p.length, 0) ? null : cljs.core._EQ_.call(null, p.length, 1) && cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["V", null, "v", null], null), null), cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196) : cljs.core._EQ_.call(null, p.length, 1) && 
  cljs.core._EQ_.call(null, "#", cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335) : cljs.core._EQ_.call(null, p.length, 2) && cljs.core._EQ_.call(null, "'", cljs.core.nth.call(null, p, 0)) ? cljs.core.nth.call(null, p, 1) : parseInt(p), offset], null);
};
cljs.pprint.flag_defs = new cljs.core.PersistentArrayMap(null, 2, [":", new cljs.core.Keyword(null, "colon", "colon", -965200945), "@", new cljs.core.Keyword(null, "at", "at", 1476951349)], null);
cljs.pprint.extract_flags = function cljs$pprint$extract_flags(s, offset) {
  return cljs.pprint.consume.call(null, function(p__17767) {
    var vec__17768 = p__17767;
    var s__$1 = cljs.core.nth.call(null, vec__17768, 0, null);
    var offset__$1 = cljs.core.nth.call(null, vec__17768, 1, null);
    var flags = cljs.core.nth.call(null, vec__17768, 2, null);
    if (cljs.core.empty_QMARK_.call(null, s__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
    } else {
      var flag = cljs.core.get.call(null, cljs.pprint.flag_defs, cljs.core.first.call(null, s__$1));
      if (cljs.core.truth_(flag)) {
        if (cljs.core.contains_QMARK_.call(null, flags, flag)) {
          return cljs.pprint.format_error.call(null, [cljs.core.str('Flag "'), cljs.core.str(cljs.core.first.call(null, s__$1)), cljs.core.str('" appears more than once in a directive')].join(""), offset__$1);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s__$1, 1), offset__$1 + 1, cljs.core.assoc.call(null, flags, flag, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, offset__$1], null))], null)], null);
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.pprint.check_flags = function cljs$pprint$check_flags(def, flags) {
  var allowed = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(def);
  if (cljs.core.truth_(function() {
    var and__5571__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__5571__auto__) {
      return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__5571__auto__;
    }
  }())) {
    cljs.pprint.format_error.call(null, [cljs.core.str('"@" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__5571__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__5571__auto__) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__5571__auto__;
    }
  }())) {
    cljs.pprint.format_error.call(null, [cljs.core.str('":" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__5571__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "both", "both", -393648840)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__5571__auto__) {
      var and__5571__auto____$1 = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
      if (cljs.core.truth_(and__5571__auto____$1)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
      } else {
        return and__5571__auto____$1;
      }
    } else {
      return and__5571__auto__;
    }
  }())) {
    return cljs.pprint.format_error.call(null, [cljs.core.str('Cannot combine "@" and ":" flags for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), function() {
      var x__5902__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      var y__5903__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      return x__5902__auto__ < y__5903__auto__ ? x__5902__auto__ : y__5903__auto__;
    }());
  } else {
    return null;
  }
};
cljs.pprint.map_params = function cljs$pprint$map_params(def, params, flags, offset) {
  cljs.pprint.check_flags.call(null, def, flags);
  if (cljs.core.count.call(null, params) > cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))) {
    cljs.pprint.format_error.call(null, cljs.pprint.cl_format.call(null, null, 'Too many parameters for directive "~C": ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed', (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def), cljs.core.count.call(null, params), cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))), cljs.core.second.call(null, cljs.core.first.call(null, 
    params)));
  } else {
  }
  cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__17769_SHARP_, p2__17770_SHARP_) {
    var val = cljs.core.first.call(null, p1__17769_SHARP_);
    if (!(val == null || cljs.core.contains_QMARK_.call(null, cljs.pprint.special_params, val) || cljs.core._EQ_.call(null, cljs.core.second.call(null, cljs.core.second.call(null, p2__17770_SHARP_)), cljs.core.type.call(null, val)))) {
      return cljs.pprint.format_error.call(null, [cljs.core.str("Parameter "), cljs.core.str(cljs.core.name.call(null, cljs.core.first.call(null, p2__17770_SHARP_))), cljs.core.str(' has bad type in directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('": '), cljs.core.str(cljs.core.type.call(null, val))].join(""), cljs.core.second.call(null, p1__17769_SHARP_));
    } else {
      return null;
    }
  }, params, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)));
  return cljs.core.merge.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.reverse.call(null, function() {
    var iter__6336__auto__ = function cljs$pprint$map_params_$_iter__17786(s__17787) {
      return new cljs.core.LazySeq(null, function() {
        var s__17787__$1 = s__17787;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__17787__$1);
          if (temp__4425__auto__) {
            var s__17787__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__17787__$2)) {
              var c__6334__auto__ = cljs.core.chunk_first.call(null, s__17787__$2);
              var size__6335__auto__ = cljs.core.count.call(null, c__6334__auto__);
              var b__17789 = cljs.core.chunk_buffer.call(null, size__6335__auto__);
              if (function() {
                var i__17788 = 0;
                while (true) {
                  if (i__17788 < size__6335__auto__) {
                    var vec__17794 = cljs.core._nth.call(null, c__6334__auto__, i__17788);
                    var name = cljs.core.nth.call(null, vec__17794, 0, null);
                    var vec__17795 = cljs.core.nth.call(null, vec__17794, 1, null);
                    var default$ = cljs.core.nth.call(null, vec__17795, 0, null);
                    cljs.core.chunk_append.call(null, b__17789, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null));
                    var G__17798 = i__17788 + 1;
                    i__17788 = G__17798;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17789), cljs$pprint$map_params_$_iter__17786.call(null, cljs.core.chunk_rest.call(null, s__17787__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17789), null);
              }
            } else {
              var vec__17796 = cljs.core.first.call(null, s__17787__$2);
              var name = cljs.core.nth.call(null, vec__17796, 0, null);
              var vec__17797 = cljs.core.nth.call(null, vec__17796, 1, null);
              var default$ = cljs.core.nth.call(null, vec__17797, 0, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null), cljs$pprint$map_params_$_iter__17786.call(null, cljs.core.rest.call(null, s__17787__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6336__auto__.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def));
  }())), cljs.core.reduce.call(null, function(p1__17771_SHARP_, p2__17772_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.assoc, p1__17771_SHARP_, p2__17772_SHARP_);
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(p1__17773_SHARP_) {
    return cljs.core.first.call(null, cljs.core.nth.call(null, p1__17773_SHARP_, 1));
  }, cljs.core.zipmap.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)), params))), flags);
};
cljs.pprint.compile_directive = function cljs$pprint$compile_directive(s, offset) {
  var vec__17803 = cljs.pprint.extract_params.call(null, s, offset);
  var raw_params = cljs.core.nth.call(null, vec__17803, 0, null);
  var vec__17804 = cljs.core.nth.call(null, vec__17803, 1, null);
  var rest = cljs.core.nth.call(null, vec__17804, 0, null);
  var offset__$1 = cljs.core.nth.call(null, vec__17804, 1, null);
  var vec__17805 = cljs.pprint.extract_flags.call(null, rest, offset__$1);
  var _ = cljs.core.nth.call(null, vec__17805, 0, null);
  var vec__17806 = cljs.core.nth.call(null, vec__17805, 1, null);
  var rest__$1 = cljs.core.nth.call(null, vec__17806, 0, null);
  var offset__$2 = cljs.core.nth.call(null, vec__17806, 1, null);
  var flags = cljs.core.nth.call(null, vec__17806, 2, null);
  var directive = cljs.core.first.call(null, rest__$1);
  var def = cljs.core.get.call(null, cljs.pprint.directive_table, clojure.string.upper_case.call(null, directive));
  var params = cljs.core.truth_(def) ? cljs.pprint.map_params.call(null, def, cljs.core.map.call(null, cljs.pprint.translate_param, raw_params), flags, offset__$2) : null;
  if (cljs.core.not.call(null, directive)) {
    cljs.pprint.format_error.call(null, "Format string ended in the middle of a directive", offset__$2);
  } else {
  }
  if (cljs.core.not.call(null, def)) {
    cljs.pprint.format_error.call(null, [cljs.core.str('Directive "'), cljs.core.str(directive), cljs.core.str('" is undefined')].join(""), offset__$2);
  } else {
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656)).cljs$core$IFn$_invoke$arity$1(def).call(null, params, offset__$2), def, params, offset__$2, null, null, null), function() {
    var remainder = cljs.core.subs.call(null, rest__$1, 1);
    var offset__$3 = offset__$2 + 1;
    var trim_QMARK_ = cljs.core._EQ_.call(null, "\n", (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    var trim_count = trim_QMARK_ ? cljs.pprint.prefix_count.call(null, remainder, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", "\t"], null)) : 0;
    var remainder__$1 = cljs.core.subs.call(null, remainder, trim_count);
    var offset__$4 = offset__$3 + trim_count;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder__$1, offset__$4], null);
  }()], null);
};
cljs.pprint.compile_raw_string = function cljs$pprint$compile_raw_string(s, offset) {
  return new cljs.pprint.compiled_directive(function(_, a, ___$1) {
    cljs.pprint.print.call(null, s);
    return a;
  }, null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "string", "string", -1989541586), s], null), offset, null, null, null);
};
cljs.pprint.right_bracket = function cljs$pprint$right_bracket(this$) {
  return (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.separator_QMARK_ = function cljs$pprint$separator_QMARK_(this$) {
  return (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.else_separator_QMARK_ = function cljs$pprint$else_separator_QMARK_(this$) {
  var and__5571__auto__ = (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
  if (cljs.core.truth_(and__5571__auto__)) {
    return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$));
  } else {
    return and__5571__auto__;
  }
};
cljs.pprint.process_bracket = function cljs$pprint$process_bracket(this$, remainder) {
  var vec__17808 = cljs.pprint.collect_clauses.call(null, (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), remainder);
  var subex = cljs.core.nth.call(null, vec__17808, 0, null);
  var remainder__$1 = cljs.core.nth.call(null, vec__17808, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(this$), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), cljs.pprint.tuple_map.call(null, subex, (new cljs.core.Keyword(null, 
  "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$))), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), null, null, null), remainder__$1], null);
};
cljs.pprint.process_clause = function cljs$pprint$process_clause(bracket_info, offset, remainder) {
  return cljs.pprint.consume.call(null, function(remainder__$1) {
    if (cljs.core.empty_QMARK_.call(null, remainder__$1)) {
      return cljs.pprint.format_error.call(null, "No closing bracket found.", offset);
    } else {
      var this$ = cljs.core.first.call(null, remainder__$1);
      var remainder__$2 = cljs.core.next.call(null, remainder__$1);
      if (cljs.core.truth_(cljs.pprint.right_bracket.call(null, this$))) {
        return cljs.pprint.process_bracket.call(null, this$, remainder__$2);
      } else {
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket_info), (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), null, remainder__$2], null)], null);
        } else {
          if (cljs.core.truth_(cljs.pprint.else_separator_QMARK_.call(null, this$))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "else", "else", -1508377146), null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), remainder__$2], null)], null);
          } else {
            if (cljs.core.truth_(cljs.pprint.separator_QMARK_.call(null, this$))) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), null, null, remainder__$2], null)], null);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$2], null);
            }
          }
        }
      }
    }
  }, remainder);
};
cljs.pprint.collect_clauses = function cljs$pprint$collect_clauses(bracket_info, offset, remainder) {
  return cljs.core.second.call(null, cljs.pprint.consume.call(null, function(p__17813) {
    var vec__17814 = p__17813;
    var clause_map = cljs.core.nth.call(null, vec__17814, 0, null);
    var saw_else = cljs.core.nth.call(null, vec__17814, 1, null);
    var remainder__$1 = cljs.core.nth.call(null, vec__17814, 2, null);
    var vec__17815 = cljs.pprint.process_clause.call(null, bracket_info, offset, remainder__$1);
    var clause = cljs.core.nth.call(null, vec__17815, 0, null);
    var vec__17816 = cljs.core.nth.call(null, vec__17815, 1, null);
    var type = cljs.core.nth.call(null, vec__17816, 0, null);
    var right_params = cljs.core.nth.call(null, vec__17816, 1, null);
    var else_params = cljs.core.nth.call(null, vec__17816, 2, null);
    var remainder__$2 = cljs.core.nth.call(null, vec__17816, 3, null);
    if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap.fromArray([cljs.core.truth_(saw_else) ? new cljs.core.Keyword(null, "else", "else", -1508377146) : new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [clause], null), new cljs.core.Keyword(null, "right-params", "right-params", -1790676237), right_params], true, false)), remainder__$2], null)], null);
    } else {
      if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "else", "else", -1508377146))) {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
          return cljs.pprint.format_error.call(null, 'Two else clauses ("~:;") inside bracket construction.', offset);
        } else {
          if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
            return cljs.pprint.format_error.call(null, 'An else clause ("~:;") is in a bracket type that doesn\'t support it.', offset);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info)) && cljs.core.seq.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
              return cljs.pprint.format_error.call(null, 'The else clause ("~:;") is only allowed in the first position for this directive.', offset);
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null), new cljs.core.Keyword(null, "else-params", "else-params", 
                -832171646), else_params], null)), false, remainder__$2], null)], null);
              } else {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), true, remainder__$2], null)], 
                null);
              }
            }
          }
        }
      } else {
        if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "separator", "separator", -1628749125))) {
          if (cljs.core.truth_(saw_else)) {
            return cljs.pprint.format_error.call(null, 'A plain clause (with "~;") follows an else clause ("~:;") inside bracket construction.', offset);
          } else {
            if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
              return cljs.pprint.format_error.call(null, 'A separator ("~;") is in a bracket type that doesn\'t support it.', offset);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), false, remainder__$2], null)], null)
              ;
            }
          }
        } else {
          return null;
        }
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), cljs.core.PersistentVector.EMPTY], null), false, remainder], null)));
};
cljs.pprint.process_nesting = function cljs$pprint$process_nesting(format) {
  return cljs.core.first.call(null, cljs.pprint.consume.call(null, function(remainder) {
    var this$ = cljs.core.first.call(null, remainder);
    var remainder__$1 = cljs.core.next.call(null, remainder);
    var bracket = (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$));
    if (cljs.core.truth_((new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket))) {
      return cljs.pprint.process_bracket.call(null, this$, remainder__$1);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$1], null);
    }
  }, format));
};
cljs.pprint.compile_format = function cljs$pprint$compile_format(format_str) {
  var _STAR_format_str_STAR_17820 = cljs.pprint._STAR_format_str_STAR_;
  cljs.pprint._STAR_format_str_STAR_ = format_str;
  try {
    return cljs.pprint.process_nesting.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(_STAR_format_str_STAR_17820) {
      return function(p__17821) {
        var vec__17822 = p__17821;
        var s = cljs.core.nth.call(null, vec__17822, 0, null);
        var offset = cljs.core.nth.call(null, vec__17822, 1, null);
        if (cljs.core.empty_QMARK_.call(null, s)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, s], null);
        } else {
          var tilde = s.indexOf("~");
          if (tilde < 0) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, s, offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", offset + s.length], null)], null);
          } else {
            if (tilde === 0) {
              return cljs.pprint.compile_directive.call(null, cljs.core.subs.call(null, s, 1), offset + 1);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, cljs.core.subs.call(null, s, 0, tilde), offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, tilde), tilde + offset], null)], null);
            }
          }
        }
      };
    }(_STAR_format_str_STAR_17820), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [format_str, 0], null))));
  } finally {
    cljs.pprint._STAR_format_str_STAR_ = _STAR_format_str_STAR_17820;
  }
};
cljs.pprint.needs_pretty = function cljs$pprint$needs_pretty(format) {
  var format__$1 = format;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, format__$1)) {
      return false;
    } else {
      if (cljs.core.truth_(function() {
        var or__5583__auto__ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1))));
        if (cljs.core.truth_(or__5583__auto__)) {
          return or__5583__auto__;
        } else {
          var or__5583__auto____$1 = cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          if (cljs.core.truth_(or__5583__auto____$1)) {
            return or__5583__auto____$1;
          } else {
            return cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          }
        }
      }())) {
        return true;
      } else {
        var G__17823 = cljs.core.next.call(null, format__$1);
        format__$1 = G__17823;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.execute_format = function cljs$pprint$execute_format() {
  var args17824 = [];
  var len__6622__auto___17830 = arguments.length;
  var i__6623__auto___17831 = 0;
  while (true) {
    if (i__6623__auto___17831 < len__6622__auto___17830) {
      args17824.push(arguments[i__6623__auto___17831]);
      var G__17832 = i__6623__auto___17831 + 1;
      i__6623__auto___17831 = G__17832;
      continue;
    } else {
    }
    break;
  }
  var G__17826 = args17824.length;
  switch(G__17826) {
    case 3:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args17824.length)].join(""));;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3 = function(stream, format, args) {
  var sb = new goog.string.StringBuffer;
  var real_stream = cljs.core.not.call(null, stream) || stream === true ? new cljs.core.StringBufferWriter(sb) : stream;
  var wrapped_stream = cljs.core.truth_(function() {
    var and__5571__auto__ = cljs.pprint.needs_pretty.call(null, format);
    if (cljs.core.truth_(and__5571__auto__)) {
      return cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, real_stream));
    } else {
      return and__5571__auto__;
    }
  }()) ? cljs.pprint.get_pretty_writer.call(null, real_stream) : real_stream;
  var _STAR_out_STAR_17827 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = wrapped_stream;
  try {
    try {
      cljs.pprint.execute_format.call(null, format, args);
    } finally {
      if (!(real_stream === wrapped_stream)) {
        cljs.core._flush.call(null, wrapped_stream);
      } else {
      }
    }
    if (cljs.core.not.call(null, stream)) {
      return [cljs.core.str(sb)].join("");
    } else {
      if (stream === true) {
        return cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
      } else {
        return null;
      }
    }
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_17827;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2 = function(format, args) {
  cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, context))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__17828 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__17828, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__17828, 1, null);
      var vec__17829 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__17829, 0, null);
      var offsets = cljs.core.nth.call(null, vec__17829, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), args__$1);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format);
  return null;
};
cljs.pprint.execute_format.cljs$lang$maxFixedArity = 3;
cljs.pprint.cached_compile = cljs.core.memoize.call(null, cljs.pprint.compile_format);
cljs.pprint.use_method = function cljs$pprint$use_method(multifn, dispatch_val, func) {
  return cljs.core._add_method.call(null, multifn, dispatch_val, func);
};
cljs.pprint.reader_macros = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "'", new cljs.core.Symbol(null, "var", "var", 870848730, null), "#'", new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), "@", new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null), "~", new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null), "@", new cljs.core.Symbol("cljs.core", 
"unquote", "cljs.core/unquote", 1013085760, null), "~"], null);
cljs.pprint.pprint_reader_macro = function cljs$pprint$pprint_reader_macro(alis) {
  var macro_char = cljs.pprint.reader_macros.call(null, cljs.core.first.call(null, alis));
  if (cljs.core.truth_(function() {
    var and__5571__auto__ = macro_char;
    if (cljs.core.truth_(and__5571__auto__)) {
      return cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, alis));
    } else {
      return and__5571__auto__;
    }
  }())) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, macro_char);
    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis));
    return true;
  } else {
    return null;
  }
};
cljs.pprint.pprint_simple_list = function cljs$pprint$pprint_simple_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_17837_17840 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_17838_17841 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      var length_count17839_17842 = 0;
      var alis_17843__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count17839_17842 < cljs.core._STAR_print_length_STAR_) {
          if (alis_17843__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_17843__$1));
            if (cljs.core.next.call(null, alis_17843__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__17844 = length_count17839_17842 + 1;
              var G__17845 = cljs.core.next.call(null, alis_17843__$1);
              length_count17839_17842 = G__17844;
              alis_17843__$1 = G__17845;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_17838_17841;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_17837_17840;
    }
  }
  return null;
};
cljs.pprint.pprint_list = function cljs$pprint$pprint_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    return cljs.pprint.pprint_simple_list.call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_vector = function cljs$pprint$pprint_vector(avec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_17849_17852 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_17850_17853 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count17851_17854 = 0;
      var aseq_17855 = cljs.core.seq.call(null, avec);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count17851_17854 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_17855) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, aseq_17855));
            if (cljs.core.next.call(null, aseq_17855)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__17856 = length_count17851_17854 + 1;
              var G__17857 = cljs.core.next.call(null, aseq_17855);
              length_count17851_17854 = G__17856;
              aseq_17855 = G__17857;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_17850_17853;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_17849_17852;
    }
  }
  return null;
};
cljs.pprint.pprint_array = function() {
  var format_in__8522__auto__ = "~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e";
  var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
  return function(format_in__8522__auto__, cf__8523__auto__) {
    return function() {
      var G__17858__delegate = function(args__8524__auto__) {
        var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
        return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
      };
      var G__17858 = function(var_args) {
        var args__8524__auto__ = null;
        if (arguments.length > 0) {
          var G__17859__i = 0, G__17859__a = new Array(arguments.length - 0);
          while (G__17859__i < G__17859__a.length) {
            G__17859__a[G__17859__i] = arguments[G__17859__i + 0];
            ++G__17859__i;
          }
          args__8524__auto__ = new cljs.core.IndexedSeq(G__17859__a, 0);
        }
        return G__17858__delegate.call(this, args__8524__auto__);
      };
      G__17858.cljs$lang$maxFixedArity = 0;
      G__17858.cljs$lang$applyTo = function(arglist__17860) {
        var args__8524__auto__ = cljs.core.seq(arglist__17860);
        return G__17858__delegate(args__8524__auto__);
      };
      G__17858.cljs$core$IFn$_invoke$arity$variadic = G__17858__delegate;
      return G__17858;
    }();
  }(format_in__8522__auto__, cf__8523__auto__);
}();
cljs.pprint.pprint_map = function cljs$pprint$pprint_map(amap) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_17866_17871 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_17867_17872 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "{", null, "}");
      var length_count17868_17873 = 0;
      var aseq_17874 = cljs.core.seq.call(null, amap);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count17868_17873 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_17874) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR_17869_17875 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR_17870_17876 = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.ffirst.call(null, aseq_17874));
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                cljs.pprint._STAR_current_length_STAR_ = 0;
                cljs.pprint.write_out.call(null, cljs.core.fnext.call(null, cljs.core.first.call(null, aseq_17874)));
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_17870_17876;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_17869_17875;
              }
            }
            if (cljs.core.next.call(null, aseq_17874)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, ", ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__17877 = length_count17868_17873 + 1;
              var G__17878 = cljs.core.next.call(null, aseq_17874);
              length_count17868_17873 = G__17877;
              aseq_17874 = G__17878;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_17867_17872;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_17866_17871;
    }
  }
  return null;
};
cljs.pprint.pprint_simple_default = function cljs$pprint$pprint_simple_default(obj) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, obj));
};
cljs.pprint.pprint_set = function() {
  var format_in__8522__auto__ = "~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e";
  var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
  return function(format_in__8522__auto__, cf__8523__auto__) {
    return function() {
      var G__17879__delegate = function(args__8524__auto__) {
        var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
        return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
      };
      var G__17879 = function(var_args) {
        var args__8524__auto__ = null;
        if (arguments.length > 0) {
          var G__17880__i = 0, G__17880__a = new Array(arguments.length - 0);
          while (G__17880__i < G__17880__a.length) {
            G__17880__a[G__17880__i] = arguments[G__17880__i + 0];
            ++G__17880__i;
          }
          args__8524__auto__ = new cljs.core.IndexedSeq(G__17880__a, 0);
        }
        return G__17879__delegate.call(this, args__8524__auto__);
      };
      G__17879.cljs$lang$maxFixedArity = 0;
      G__17879.cljs$lang$applyTo = function(arglist__17881) {
        var args__8524__auto__ = cljs.core.seq(arglist__17881);
        return G__17879__delegate(args__8524__auto__);
      };
      G__17879.cljs$core$IFn$_invoke$arity$variadic = G__17879__delegate;
      return G__17879;
    }();
  }(format_in__8522__auto__, cf__8523__auto__);
}();
cljs.pprint.type_map = new cljs.core.PersistentArrayMap(null, 2, ["core$future_call", "Future", "core$promise", "Promise"], null);
cljs.pprint.map_ref_type = function cljs$pprint$map_ref_type(name) {
  var or__5583__auto__ = function() {
    var temp__4425__auto__ = cljs.core.re_find.call(null, /^[^$]+\$[^$]+/, name);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var match = temp__4425__auto__;
      return cljs.pprint.type_map.call(null, match);
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__5583__auto__)) {
    return or__5583__auto__;
  } else {
    return name;
  }
};
cljs.pprint.pprint_ideref = function cljs$pprint$pprint_ideref(o) {
  var prefix = [cljs.core.str("#\x3c"), cljs.core.str(cljs.pprint.map_ref_type.call(null, cljs.core.type.call(null, o).name)), cljs.core.str("@"), cljs.core.str(goog.getUid(o)), cljs.core.str(": ")].join("");
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_17886_17890 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_17887_17891 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, "\x3e");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), -(cljs.core.count.call(null, prefix) - 2));
      cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
      cljs.pprint.write_out.call(null, function() {
        var and__5571__auto__ = !(o == null) ? o.cljs$lang$protocol_mask$partition1$ & 1 || o.cljs$core$IPending$ ? true : !o.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o);
        if (and__5571__auto__) {
          return !cljs.core._realized_QMARK_.call(null, o);
        } else {
          return and__5571__auto__;
        }
      }() ? new cljs.core.Keyword(null, "not-delivered", "not-delivered", 1599158697) : cljs.core.deref.call(null, o));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_17887_17891;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_17886_17890;
    }
  }
  return null;
};
cljs.pprint.pprint_pqueue = function() {
  var format_in__8522__auto__ = "~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e";
  var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
  return function(format_in__8522__auto__, cf__8523__auto__) {
    return function() {
      var G__17892__delegate = function(args__8524__auto__) {
        var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
        return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
      };
      var G__17892 = function(var_args) {
        var args__8524__auto__ = null;
        if (arguments.length > 0) {
          var G__17893__i = 0, G__17893__a = new Array(arguments.length - 0);
          while (G__17893__i < G__17893__a.length) {
            G__17893__a[G__17893__i] = arguments[G__17893__i + 0];
            ++G__17893__i;
          }
          args__8524__auto__ = new cljs.core.IndexedSeq(G__17893__a, 0);
        }
        return G__17892__delegate.call(this, args__8524__auto__);
      };
      G__17892.cljs$lang$maxFixedArity = 0;
      G__17892.cljs$lang$applyTo = function(arglist__17894) {
        var args__8524__auto__ = cljs.core.seq(arglist__17894);
        return G__17892__delegate(args__8524__auto__);
      };
      G__17892.cljs$core$IFn$_invoke$arity$variadic = G__17892__delegate;
      return G__17892;
    }();
  }(format_in__8522__auto__, cf__8523__auto__);
}();
cljs.pprint.type_dispatcher = function cljs$pprint$type_dispatcher(obj) {
  if (obj instanceof cljs.core.PersistentQueue) {
    return new cljs.core.Keyword(null, "queue", "queue", 1455835879);
  } else {
    if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 32768 || obj.cljs$core$IDeref$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj)) {
      return new cljs.core.Keyword(null, "deref", "deref", -145586795);
    } else {
      if (obj instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(null, "symbol", "symbol", -1038572696);
      } else {
        if (cljs.core.seq_QMARK_.call(null, obj)) {
          return new cljs.core.Keyword(null, "list", "list", 765357683);
        } else {
          if (cljs.core.map_QMARK_.call(null, obj)) {
            return new cljs.core.Keyword(null, "map", "map", 1371690461);
          } else {
            if (cljs.core.vector_QMARK_.call(null, obj)) {
              return new cljs.core.Keyword(null, "vector", "vector", 1902966158);
            } else {
              if (cljs.core.set_QMARK_.call(null, obj)) {
                return new cljs.core.Keyword(null, "set", "set", 304602554);
              } else {
                if (obj == null) {
                  return null;
                } else {
                  return new cljs.core.Keyword(null, "default", "default", -1987822328);
                }
              }
            }
          }
        }
      }
    }
  }
};
if (typeof cljs.pprint.simple_dispatch !== "undefined") {
} else {
  cljs.pprint.simple_dispatch = function() {
    var method_table__6477__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__6478__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__6479__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__6480__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__6481__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "simple-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__6481__auto__, method_table__6477__auto__, prefer_table__6478__auto__, method_cache__6479__auto__, cached_hierarchy__6480__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_list);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, null, function() {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, null));
});
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.brackets = function cljs$pprint$brackets(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["[", "]"], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(", ")"], null);
  }
};
cljs.pprint.pprint_ns_reference = function cljs$pprint$pprint_ns_reference(reference) {
  if (cljs.core.sequential_QMARK_.call(null, reference)) {
    var vec__17905 = cljs.pprint.brackets.call(null, reference);
    var start = cljs.core.nth.call(null, vec__17905, 0, null);
    var end = cljs.core.nth.call(null, vec__17905, 1, null);
    var vec__17906 = reference;
    var keyw = cljs.core.nth.call(null, vec__17906, 0, null);
    var args = cljs.core.nthnext.call(null, vec__17906, 1);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_17907_17913 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_17908_17914 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start, null, end);
        (function() {
          var format_in__8522__auto__ = "~w~:i";
          var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
          return function(format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_17907_17913, _STAR_current_length_STAR_17908_17914, vec__17905, start, end, vec__17906, keyw, args) {
            return function() {
              var G__17915__delegate = function(args__8524__auto__) {
                var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
                return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
              };
              var G__17915 = function(var_args) {
                var args__8524__auto__ = null;
                if (arguments.length > 0) {
                  var G__17916__i = 0, G__17916__a = new Array(arguments.length - 0);
                  while (G__17916__i < G__17916__a.length) {
                    G__17916__a[G__17916__i] = arguments[G__17916__i + 0];
                    ++G__17916__i;
                  }
                  args__8524__auto__ = new cljs.core.IndexedSeq(G__17916__a, 0);
                }
                return G__17915__delegate.call(this, args__8524__auto__);
              };
              G__17915.cljs$lang$maxFixedArity = 0;
              G__17915.cljs$lang$applyTo = function(arglist__17917) {
                var args__8524__auto__ = cljs.core.seq(arglist__17917);
                return G__17915__delegate(args__8524__auto__);
              };
              G__17915.cljs$core$IFn$_invoke$arity$variadic = G__17915__delegate;
              return G__17915;
            }();
          }(format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_17907_17913, _STAR_current_length_STAR_17908_17914, vec__17905, start, end, vec__17906, keyw, args);
        })().call(null, keyw);
        var args_17918__$1 = args;
        while (true) {
          if (cljs.core.seq.call(null, args_17918__$1)) {
            (function() {
              var format_in__8522__auto__ = " ";
              var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
              return function(args_17918__$1, format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_17907_17913, _STAR_current_length_STAR_17908_17914, vec__17905, start, end, vec__17906, keyw, args) {
                return function() {
                  var G__17919__delegate = function(args__8524__auto__) {
                    var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
                    return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
                  };
                  var G__17919 = function(var_args) {
                    var args__8524__auto__ = null;
                    if (arguments.length > 0) {
                      var G__17920__i = 0, G__17920__a = new Array(arguments.length - 0);
                      while (G__17920__i < G__17920__a.length) {
                        G__17920__a[G__17920__i] = arguments[G__17920__i + 0];
                        ++G__17920__i;
                      }
                      args__8524__auto__ = new cljs.core.IndexedSeq(G__17920__a, 0);
                    }
                    return G__17919__delegate.call(this, args__8524__auto__);
                  };
                  G__17919.cljs$lang$maxFixedArity = 0;
                  G__17919.cljs$lang$applyTo = function(arglist__17921) {
                    var args__8524__auto__ = cljs.core.seq(arglist__17921);
                    return G__17919__delegate(args__8524__auto__);
                  };
                  G__17919.cljs$core$IFn$_invoke$arity$variadic = G__17919__delegate;
                  return G__17919;
                }();
              }(args_17918__$1, format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_17907_17913, _STAR_current_length_STAR_17908_17914, vec__17905, start, end, vec__17906, keyw, args);
            })().call(null);
            var arg_17922 = cljs.core.first.call(null, args_17918__$1);
            if (cljs.core.sequential_QMARK_.call(null, arg_17922)) {
              var vec__17909_17923 = cljs.pprint.brackets.call(null, arg_17922);
              var start_17924__$1 = cljs.core.nth.call(null, vec__17909_17923, 0, null);
              var end_17925__$1 = cljs.core.nth.call(null, vec__17909_17923, 1, null);
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_17910_17926 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_17911_17927 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start_17924__$1, null, end_17925__$1);
                  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, arg_17922), 3) && cljs.core.second.call(null, arg_17922) instanceof cljs.core.Keyword) {
                    var vec__17912_17928 = arg_17922;
                    var ns_17929 = cljs.core.nth.call(null, vec__17912_17928, 0, null);
                    var kw_17930 = cljs.core.nth.call(null, vec__17912_17928, 1, null);
                    var lis_17931 = cljs.core.nth.call(null, vec__17912_17928, 2, null);
                    (function() {
                      var format_in__8522__auto__ = "~w ~w ";
                      var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
                      return function(args_17918__$1, format_in__8522__auto__, cf__8523__auto__, vec__17912_17928, ns_17929, kw_17930, lis_17931, _STAR_current_level_STAR_17910_17926, _STAR_current_length_STAR_17911_17927, vec__17909_17923, start_17924__$1, end_17925__$1, arg_17922, _STAR_current_level_STAR_17907_17913, _STAR_current_length_STAR_17908_17914, vec__17905, start, end, vec__17906, keyw, args) {
                        return function() {
                          var G__17932__delegate = function(args__8524__auto__) {
                            var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
                            return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
                          };
                          var G__17932 = function(var_args) {
                            var args__8524__auto__ = null;
                            if (arguments.length > 0) {
                              var G__17933__i = 0, G__17933__a = new Array(arguments.length - 0);
                              while (G__17933__i < G__17933__a.length) {
                                G__17933__a[G__17933__i] = arguments[G__17933__i + 0];
                                ++G__17933__i;
                              }
                              args__8524__auto__ = new cljs.core.IndexedSeq(G__17933__a, 0);
                            }
                            return G__17932__delegate.call(this, args__8524__auto__);
                          };
                          G__17932.cljs$lang$maxFixedArity = 0;
                          G__17932.cljs$lang$applyTo = function(arglist__17934) {
                            var args__8524__auto__ = cljs.core.seq(arglist__17934);
                            return G__17932__delegate(args__8524__auto__);
                          };
                          G__17932.cljs$core$IFn$_invoke$arity$variadic = G__17932__delegate;
                          return G__17932;
                        }();
                      }(args_17918__$1, format_in__8522__auto__, cf__8523__auto__, vec__17912_17928, ns_17929, kw_17930, lis_17931, _STAR_current_level_STAR_17910_17926, _STAR_current_length_STAR_17911_17927, vec__17909_17923, start_17924__$1, end_17925__$1, arg_17922, _STAR_current_level_STAR_17907_17913, _STAR_current_length_STAR_17908_17914, vec__17905, start, end, vec__17906, keyw, args);
                    })().call(null, ns_17929, kw_17930);
                    if (cljs.core.sequential_QMARK_.call(null, lis_17931)) {
                      (function() {
                        var format_in__8522__auto__ = cljs.core.vector_QMARK_.call(null, lis_17931) ? "~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e" : "~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e";
                        var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
                        return function(args_17918__$1, format_in__8522__auto__, cf__8523__auto__, vec__17912_17928, ns_17929, kw_17930, lis_17931, _STAR_current_level_STAR_17910_17926, _STAR_current_length_STAR_17911_17927, vec__17909_17923, start_17924__$1, end_17925__$1, arg_17922, _STAR_current_level_STAR_17907_17913, _STAR_current_length_STAR_17908_17914, vec__17905, start, end, vec__17906, keyw, args) {
                          return function() {
                            var G__17935__delegate = function(args__8524__auto__) {
                              var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
                              return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
                            };
                            var G__17935 = function(var_args) {
                              var args__8524__auto__ = null;
                              if (arguments.length > 0) {
                                var G__17936__i = 0, G__17936__a = new Array(arguments.length - 0);
                                while (G__17936__i < G__17936__a.length) {
                                  G__17936__a[G__17936__i] = arguments[G__17936__i + 0];
                                  ++G__17936__i;
                                }
                                args__8524__auto__ = new cljs.core.IndexedSeq(G__17936__a, 0);
                              }
                              return G__17935__delegate.call(this, args__8524__auto__);
                            };
                            G__17935.cljs$lang$maxFixedArity = 0;
                            G__17935.cljs$lang$applyTo = function(arglist__17937) {
                              var args__8524__auto__ = cljs.core.seq(arglist__17937);
                              return G__17935__delegate(args__8524__auto__);
                            };
                            G__17935.cljs$core$IFn$_invoke$arity$variadic = G__17935__delegate;
                            return G__17935;
                          }();
                        }(args_17918__$1, format_in__8522__auto__, cf__8523__auto__, vec__17912_17928, ns_17929, kw_17930, lis_17931, _STAR_current_level_STAR_17910_17926, _STAR_current_length_STAR_17911_17927, vec__17909_17923, start_17924__$1, end_17925__$1, arg_17922, _STAR_current_level_STAR_17907_17913, _STAR_current_length_STAR_17908_17914, vec__17905, start, end, vec__17906, keyw, args);
                      })().call(null, lis_17931);
                    } else {
                      cljs.pprint.write_out.call(null, lis_17931);
                    }
                  } else {
                    cljs.core.apply.call(null, function() {
                      var format_in__8522__auto__ = "~w ~:i~@{~w~^ ~:_~}";
                      var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
                      return function(args_17918__$1, format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_17910_17926, _STAR_current_length_STAR_17911_17927, vec__17909_17923, start_17924__$1, end_17925__$1, arg_17922, _STAR_current_level_STAR_17907_17913, _STAR_current_length_STAR_17908_17914, vec__17905, start, end, vec__17906, keyw, args) {
                        return function() {
                          var G__17938__delegate = function(args__8524__auto__) {
                            var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
                            return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
                          };
                          var G__17938 = function(var_args) {
                            var args__8524__auto__ = null;
                            if (arguments.length > 0) {
                              var G__17939__i = 0, G__17939__a = new Array(arguments.length - 0);
                              while (G__17939__i < G__17939__a.length) {
                                G__17939__a[G__17939__i] = arguments[G__17939__i + 0];
                                ++G__17939__i;
                              }
                              args__8524__auto__ = new cljs.core.IndexedSeq(G__17939__a, 0);
                            }
                            return G__17938__delegate.call(this, args__8524__auto__);
                          };
                          G__17938.cljs$lang$maxFixedArity = 0;
                          G__17938.cljs$lang$applyTo = function(arglist__17940) {
                            var args__8524__auto__ = cljs.core.seq(arglist__17940);
                            return G__17938__delegate(args__8524__auto__);
                          };
                          G__17938.cljs$core$IFn$_invoke$arity$variadic = G__17938__delegate;
                          return G__17938;
                        }();
                      }(args_17918__$1, format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_17910_17926, _STAR_current_length_STAR_17911_17927, vec__17909_17923, start_17924__$1, end_17925__$1, arg_17922, _STAR_current_level_STAR_17907_17913, _STAR_current_length_STAR_17908_17914, vec__17905, start, end, vec__17906, keyw, args);
                    }(), arg_17922);
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_17911_17927;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_17910_17926;
                }
              }
              if (cljs.core.next.call(null, args_17918__$1)) {
                (function() {
                  var format_in__8522__auto__ = "~_";
                  var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
                  return function(args_17918__$1, format_in__8522__auto__, cf__8523__auto__, vec__17909_17923, start_17924__$1, end_17925__$1, arg_17922, _STAR_current_level_STAR_17907_17913, _STAR_current_length_STAR_17908_17914, vec__17905, start, end, vec__17906, keyw, args) {
                    return function() {
                      var G__17941__delegate = function(args__8524__auto__) {
                        var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
                        return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
                      };
                      var G__17941 = function(var_args) {
                        var args__8524__auto__ = null;
                        if (arguments.length > 0) {
                          var G__17942__i = 0, G__17942__a = new Array(arguments.length - 0);
                          while (G__17942__i < G__17942__a.length) {
                            G__17942__a[G__17942__i] = arguments[G__17942__i + 0];
                            ++G__17942__i;
                          }
                          args__8524__auto__ = new cljs.core.IndexedSeq(G__17942__a, 0);
                        }
                        return G__17941__delegate.call(this, args__8524__auto__);
                      };
                      G__17941.cljs$lang$maxFixedArity = 0;
                      G__17941.cljs$lang$applyTo = function(arglist__17943) {
                        var args__8524__auto__ = cljs.core.seq(arglist__17943);
                        return G__17941__delegate(args__8524__auto__);
                      };
                      G__17941.cljs$core$IFn$_invoke$arity$variadic = G__17941__delegate;
                      return G__17941;
                    }();
                  }(args_17918__$1, format_in__8522__auto__, cf__8523__auto__, vec__17909_17923, start_17924__$1, end_17925__$1, arg_17922, _STAR_current_level_STAR_17907_17913, _STAR_current_length_STAR_17908_17914, vec__17905, start, end, vec__17906, keyw, args);
                })().call(null);
              } else {
              }
            } else {
              cljs.pprint.write_out.call(null, arg_17922);
              if (cljs.core.next.call(null, args_17918__$1)) {
                (function() {
                  var format_in__8522__auto__ = "~:_";
                  var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
                  return function(args_17918__$1, format_in__8522__auto__, cf__8523__auto__, arg_17922, _STAR_current_level_STAR_17907_17913, _STAR_current_length_STAR_17908_17914, vec__17905, start, end, vec__17906, keyw, args) {
                    return function() {
                      var G__17944__delegate = function(args__8524__auto__) {
                        var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
                        return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
                      };
                      var G__17944 = function(var_args) {
                        var args__8524__auto__ = null;
                        if (arguments.length > 0) {
                          var G__17945__i = 0, G__17945__a = new Array(arguments.length - 0);
                          while (G__17945__i < G__17945__a.length) {
                            G__17945__a[G__17945__i] = arguments[G__17945__i + 0];
                            ++G__17945__i;
                          }
                          args__8524__auto__ = new cljs.core.IndexedSeq(G__17945__a, 0);
                        }
                        return G__17944__delegate.call(this, args__8524__auto__);
                      };
                      G__17944.cljs$lang$maxFixedArity = 0;
                      G__17944.cljs$lang$applyTo = function(arglist__17946) {
                        var args__8524__auto__ = cljs.core.seq(arglist__17946);
                        return G__17944__delegate(args__8524__auto__);
                      };
                      G__17944.cljs$core$IFn$_invoke$arity$variadic = G__17944__delegate;
                      return G__17944;
                    }();
                  }(args_17918__$1, format_in__8522__auto__, cf__8523__auto__, arg_17922, _STAR_current_level_STAR_17907_17913, _STAR_current_length_STAR_17908_17914, vec__17905, start, end, vec__17906, keyw, args);
                })().call(null);
              } else {
              }
            }
            var G__17947 = cljs.core.next.call(null, args_17918__$1);
            args_17918__$1 = G__17947;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_17908_17914;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_17907_17913;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, reference);
  }
};
cljs.pprint.pprint_ns = function cljs$pprint$pprint_ns(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__17953 = alis;
    var ns_sym = cljs.core.nth.call(null, vec__17953, 0, null);
    var ns_name = cljs.core.nth.call(null, vec__17953, 1, null);
    var stuff = cljs.core.nthnext.call(null, vec__17953, 2);
    var vec__17954 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__17954, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__17954, 1, null);
    var vec__17955 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__17955, 0, null);
    var references = cljs.core.nth.call(null, vec__17955, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_17956_17958 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_17957_17959 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__8522__auto__ = "~w ~1I~@_~w";
          var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
          return function(format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_17956_17958, _STAR_current_length_STAR_17957_17959, vec__17953, ns_sym, ns_name, stuff, vec__17954, doc_str, stuff__$1, vec__17955, attr_map, references) {
            return function() {
              var G__17960__delegate = function(args__8524__auto__) {
                var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
                return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
              };
              var G__17960 = function(var_args) {
                var args__8524__auto__ = null;
                if (arguments.length > 0) {
                  var G__17961__i = 0, G__17961__a = new Array(arguments.length - 0);
                  while (G__17961__i < G__17961__a.length) {
                    G__17961__a[G__17961__i] = arguments[G__17961__i + 0];
                    ++G__17961__i;
                  }
                  args__8524__auto__ = new cljs.core.IndexedSeq(G__17961__a, 0);
                }
                return G__17960__delegate.call(this, args__8524__auto__);
              };
              G__17960.cljs$lang$maxFixedArity = 0;
              G__17960.cljs$lang$applyTo = function(arglist__17962) {
                var args__8524__auto__ = cljs.core.seq(arglist__17962);
                return G__17960__delegate(args__8524__auto__);
              };
              G__17960.cljs$core$IFn$_invoke$arity$variadic = G__17960__delegate;
              return G__17960;
            }();
          }(format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_17956_17958, _STAR_current_length_STAR_17957_17959, vec__17953, ns_sym, ns_name, stuff, vec__17954, doc_str, stuff__$1, vec__17955, attr_map, references);
        })().call(null, ns_sym, ns_name);
        if (cljs.core.truth_(function() {
          var or__5583__auto__ = doc_str;
          if (cljs.core.truth_(or__5583__auto__)) {
            return or__5583__auto__;
          } else {
            var or__5583__auto____$1 = attr_map;
            if (cljs.core.truth_(or__5583__auto____$1)) {
              return or__5583__auto____$1;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }
        }())) {
          (function() {
            var format_in__8522__auto__ = "~@:_";
            var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
            return function(format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_17956_17958, _STAR_current_length_STAR_17957_17959, vec__17953, ns_sym, ns_name, stuff, vec__17954, doc_str, stuff__$1, vec__17955, attr_map, references) {
              return function() {
                var G__17963__delegate = function(args__8524__auto__) {
                  var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
                  return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
                };
                var G__17963 = function(var_args) {
                  var args__8524__auto__ = null;
                  if (arguments.length > 0) {
                    var G__17964__i = 0, G__17964__a = new Array(arguments.length - 0);
                    while (G__17964__i < G__17964__a.length) {
                      G__17964__a[G__17964__i] = arguments[G__17964__i + 0];
                      ++G__17964__i;
                    }
                    args__8524__auto__ = new cljs.core.IndexedSeq(G__17964__a, 0);
                  }
                  return G__17963__delegate.call(this, args__8524__auto__);
                };
                G__17963.cljs$lang$maxFixedArity = 0;
                G__17963.cljs$lang$applyTo = function(arglist__17965) {
                  var args__8524__auto__ = cljs.core.seq(arglist__17965);
                  return G__17963__delegate(args__8524__auto__);
                };
                G__17963.cljs$core$IFn$_invoke$arity$variadic = G__17963__delegate;
                return G__17963;
              }();
            }(format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_17956_17958, _STAR_current_length_STAR_17957_17959, vec__17953, ns_sym, ns_name, stuff, vec__17954, doc_str, stuff__$1, vec__17955, attr_map, references);
          })().call(null);
        } else {
        }
        if (cljs.core.truth_(doc_str)) {
          cljs.pprint.cl_format.call(null, true, '"~a"~:[~;~:@_~]', doc_str, function() {
            var or__5583__auto__ = attr_map;
            if (cljs.core.truth_(or__5583__auto__)) {
              return or__5583__auto__;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }());
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__8522__auto__ = "~w~:[~;~:@_~]";
            var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
            return function(format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_17956_17958, _STAR_current_length_STAR_17957_17959, vec__17953, ns_sym, ns_name, stuff, vec__17954, doc_str, stuff__$1, vec__17955, attr_map, references) {
              return function() {
                var G__17966__delegate = function(args__8524__auto__) {
                  var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
                  return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
                };
                var G__17966 = function(var_args) {
                  var args__8524__auto__ = null;
                  if (arguments.length > 0) {
                    var G__17967__i = 0, G__17967__a = new Array(arguments.length - 0);
                    while (G__17967__i < G__17967__a.length) {
                      G__17967__a[G__17967__i] = arguments[G__17967__i + 0];
                      ++G__17967__i;
                    }
                    args__8524__auto__ = new cljs.core.IndexedSeq(G__17967__a, 0);
                  }
                  return G__17966__delegate.call(this, args__8524__auto__);
                };
                G__17966.cljs$lang$maxFixedArity = 0;
                G__17966.cljs$lang$applyTo = function(arglist__17968) {
                  var args__8524__auto__ = cljs.core.seq(arglist__17968);
                  return G__17966__delegate(args__8524__auto__);
                };
                G__17966.cljs$core$IFn$_invoke$arity$variadic = G__17966__delegate;
                return G__17966;
              }();
            }(format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_17956_17958, _STAR_current_length_STAR_17957_17959, vec__17953, ns_sym, ns_name, stuff, vec__17954, doc_str, stuff__$1, vec__17955, attr_map, references);
          })().call(null, attr_map, cljs.core.seq.call(null, references));
        } else {
        }
        var references_17969__$1 = references;
        while (true) {
          cljs.pprint.pprint_ns_reference.call(null, cljs.core.first.call(null, references_17969__$1));
          var temp__4425__auto___17970 = cljs.core.next.call(null, references_17969__$1);
          if (temp__4425__auto___17970) {
            var references_17971__$2 = temp__4425__auto___17970;
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            var G__17972 = references_17971__$2;
            references_17969__$1 = G__17972;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_17957_17959;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_17956_17958;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, alis);
  }
};
cljs.pprint.pprint_hold_first = function() {
  var format_in__8522__auto__ = "~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e";
  var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
  return function(format_in__8522__auto__, cf__8523__auto__) {
    return function() {
      var G__17973__delegate = function(args__8524__auto__) {
        var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
        return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
      };
      var G__17973 = function(var_args) {
        var args__8524__auto__ = null;
        if (arguments.length > 0) {
          var G__17974__i = 0, G__17974__a = new Array(arguments.length - 0);
          while (G__17974__i < G__17974__a.length) {
            G__17974__a[G__17974__i] = arguments[G__17974__i + 0];
            ++G__17974__i;
          }
          args__8524__auto__ = new cljs.core.IndexedSeq(G__17974__a, 0);
        }
        return G__17973__delegate.call(this, args__8524__auto__);
      };
      G__17973.cljs$lang$maxFixedArity = 0;
      G__17973.cljs$lang$applyTo = function(arglist__17975) {
        var args__8524__auto__ = cljs.core.seq(arglist__17975);
        return G__17973__delegate(args__8524__auto__);
      };
      G__17973.cljs$core$IFn$_invoke$arity$variadic = G__17973__delegate;
      return G__17973;
    }();
  }(format_in__8522__auto__, cf__8523__auto__);
}();
cljs.pprint.single_defn = function cljs$pprint$single_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    if (cljs.core.truth_(has_doc_str_QMARK_)) {
      (function() {
        var format_in__8522__auto__ = " ~_";
        var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
        return function(format_in__8522__auto__, cf__8523__auto__) {
          return function() {
            var G__17976__delegate = function(args__8524__auto__) {
              var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
              return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
            };
            var G__17976 = function(var_args) {
              var args__8524__auto__ = null;
              if (arguments.length > 0) {
                var G__17977__i = 0, G__17977__a = new Array(arguments.length - 0);
                while (G__17977__i < G__17977__a.length) {
                  G__17977__a[G__17977__i] = arguments[G__17977__i + 0];
                  ++G__17977__i;
                }
                args__8524__auto__ = new cljs.core.IndexedSeq(G__17977__a, 0);
              }
              return G__17976__delegate.call(this, args__8524__auto__);
            };
            G__17976.cljs$lang$maxFixedArity = 0;
            G__17976.cljs$lang$applyTo = function(arglist__17978) {
              var args__8524__auto__ = cljs.core.seq(arglist__17978);
              return G__17976__delegate(args__8524__auto__);
            };
            G__17976.cljs$core$IFn$_invoke$arity$variadic = G__17976__delegate;
            return G__17976;
          }();
        }(format_in__8522__auto__, cf__8523__auto__);
      })().call(null);
    } else {
      (function() {
        var format_in__8522__auto__ = " ~@_";
        var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
        return function(format_in__8522__auto__, cf__8523__auto__) {
          return function() {
            var G__17979__delegate = function(args__8524__auto__) {
              var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
              return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
            };
            var G__17979 = function(var_args) {
              var args__8524__auto__ = null;
              if (arguments.length > 0) {
                var G__17980__i = 0, G__17980__a = new Array(arguments.length - 0);
                while (G__17980__i < G__17980__a.length) {
                  G__17980__a[G__17980__i] = arguments[G__17980__i + 0];
                  ++G__17980__i;
                }
                args__8524__auto__ = new cljs.core.IndexedSeq(G__17980__a, 0);
              }
              return G__17979__delegate.call(this, args__8524__auto__);
            };
            G__17979.cljs$lang$maxFixedArity = 0;
            G__17979.cljs$lang$applyTo = function(arglist__17981) {
              var args__8524__auto__ = cljs.core.seq(arglist__17981);
              return G__17979__delegate(args__8524__auto__);
            };
            G__17979.cljs$core$IFn$_invoke$arity$variadic = G__17979__delegate;
            return G__17979;
          }();
        }(format_in__8522__auto__, cf__8523__auto__);
      })().call(null);
    }
    return function() {
      var format_in__8522__auto__ = "~{~w~^ ~_~}";
      var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
      return function(format_in__8522__auto__, cf__8523__auto__) {
        return function() {
          var G__17982__delegate = function(args__8524__auto__) {
            var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
            return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
          };
          var G__17982 = function(var_args) {
            var args__8524__auto__ = null;
            if (arguments.length > 0) {
              var G__17983__i = 0, G__17983__a = new Array(arguments.length - 0);
              while (G__17983__i < G__17983__a.length) {
                G__17983__a[G__17983__i] = arguments[G__17983__i + 0];
                ++G__17983__i;
              }
              args__8524__auto__ = new cljs.core.IndexedSeq(G__17983__a, 0);
            }
            return G__17982__delegate.call(this, args__8524__auto__);
          };
          G__17982.cljs$lang$maxFixedArity = 0;
          G__17982.cljs$lang$applyTo = function(arglist__17984) {
            var args__8524__auto__ = cljs.core.seq(arglist__17984);
            return G__17982__delegate(args__8524__auto__);
          };
          G__17982.cljs$core$IFn$_invoke$arity$variadic = G__17982__delegate;
          return G__17982;
        }();
      }(format_in__8522__auto__, cf__8523__auto__);
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.multi_defn = function cljs$pprint$multi_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    return function() {
      var format_in__8522__auto__ = " ~_~{~w~^ ~_~}";
      var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
      return function(format_in__8522__auto__, cf__8523__auto__) {
        return function() {
          var G__17985__delegate = function(args__8524__auto__) {
            var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
            return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
          };
          var G__17985 = function(var_args) {
            var args__8524__auto__ = null;
            if (arguments.length > 0) {
              var G__17986__i = 0, G__17986__a = new Array(arguments.length - 0);
              while (G__17986__i < G__17986__a.length) {
                G__17986__a[G__17986__i] = arguments[G__17986__i + 0];
                ++G__17986__i;
              }
              args__8524__auto__ = new cljs.core.IndexedSeq(G__17986__a, 0);
            }
            return G__17985__delegate.call(this, args__8524__auto__);
          };
          G__17985.cljs$lang$maxFixedArity = 0;
          G__17985.cljs$lang$applyTo = function(arglist__17987) {
            var args__8524__auto__ = cljs.core.seq(arglist__17987);
            return G__17985__delegate(args__8524__auto__);
          };
          G__17985.cljs$core$IFn$_invoke$arity$variadic = G__17985__delegate;
          return G__17985;
        }();
      }(format_in__8522__auto__, cf__8523__auto__);
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_defn = function cljs$pprint$pprint_defn(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__17993 = alis;
    var defn_sym = cljs.core.nth.call(null, vec__17993, 0, null);
    var defn_name = cljs.core.nth.call(null, vec__17993, 1, null);
    var stuff = cljs.core.nthnext.call(null, vec__17993, 2);
    var vec__17994 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__17994, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__17994, 1, null);
    var vec__17995 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__17995, 0, null);
    var stuff__$2 = cljs.core.nth.call(null, vec__17995, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_17996_17998 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_17997_17999 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__8522__auto__ = "~w ~1I~@_~w";
          var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
          return function(format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_17996_17998, _STAR_current_length_STAR_17997_17999, vec__17993, defn_sym, defn_name, stuff, vec__17994, doc_str, stuff__$1, vec__17995, attr_map, stuff__$2) {
            return function() {
              var G__18000__delegate = function(args__8524__auto__) {
                var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
                return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
              };
              var G__18000 = function(var_args) {
                var args__8524__auto__ = null;
                if (arguments.length > 0) {
                  var G__18001__i = 0, G__18001__a = new Array(arguments.length - 0);
                  while (G__18001__i < G__18001__a.length) {
                    G__18001__a[G__18001__i] = arguments[G__18001__i + 0];
                    ++G__18001__i;
                  }
                  args__8524__auto__ = new cljs.core.IndexedSeq(G__18001__a, 0);
                }
                return G__18000__delegate.call(this, args__8524__auto__);
              };
              G__18000.cljs$lang$maxFixedArity = 0;
              G__18000.cljs$lang$applyTo = function(arglist__18002) {
                var args__8524__auto__ = cljs.core.seq(arglist__18002);
                return G__18000__delegate(args__8524__auto__);
              };
              G__18000.cljs$core$IFn$_invoke$arity$variadic = G__18000__delegate;
              return G__18000;
            }();
          }(format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_17996_17998, _STAR_current_length_STAR_17997_17999, vec__17993, defn_sym, defn_name, stuff, vec__17994, doc_str, stuff__$1, vec__17995, attr_map, stuff__$2);
        })().call(null, defn_sym, defn_name);
        if (cljs.core.truth_(doc_str)) {
          (function() {
            var format_in__8522__auto__ = " ~_~w";
            var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
            return function(format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_17996_17998, _STAR_current_length_STAR_17997_17999, vec__17993, defn_sym, defn_name, stuff, vec__17994, doc_str, stuff__$1, vec__17995, attr_map, stuff__$2) {
              return function() {
                var G__18003__delegate = function(args__8524__auto__) {
                  var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
                  return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
                };
                var G__18003 = function(var_args) {
                  var args__8524__auto__ = null;
                  if (arguments.length > 0) {
                    var G__18004__i = 0, G__18004__a = new Array(arguments.length - 0);
                    while (G__18004__i < G__18004__a.length) {
                      G__18004__a[G__18004__i] = arguments[G__18004__i + 0];
                      ++G__18004__i;
                    }
                    args__8524__auto__ = new cljs.core.IndexedSeq(G__18004__a, 0);
                  }
                  return G__18003__delegate.call(this, args__8524__auto__);
                };
                G__18003.cljs$lang$maxFixedArity = 0;
                G__18003.cljs$lang$applyTo = function(arglist__18005) {
                  var args__8524__auto__ = cljs.core.seq(arglist__18005);
                  return G__18003__delegate(args__8524__auto__);
                };
                G__18003.cljs$core$IFn$_invoke$arity$variadic = G__18003__delegate;
                return G__18003;
              }();
            }(format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_17996_17998, _STAR_current_length_STAR_17997_17999, vec__17993, defn_sym, defn_name, stuff, vec__17994, doc_str, stuff__$1, vec__17995, attr_map, stuff__$2);
          })().call(null, doc_str);
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__8522__auto__ = " ~_~w";
            var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
            return function(format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_17996_17998, _STAR_current_length_STAR_17997_17999, vec__17993, defn_sym, defn_name, stuff, vec__17994, doc_str, stuff__$1, vec__17995, attr_map, stuff__$2) {
              return function() {
                var G__18006__delegate = function(args__8524__auto__) {
                  var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
                  return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
                };
                var G__18006 = function(var_args) {
                  var args__8524__auto__ = null;
                  if (arguments.length > 0) {
                    var G__18007__i = 0, G__18007__a = new Array(arguments.length - 0);
                    while (G__18007__i < G__18007__a.length) {
                      G__18007__a[G__18007__i] = arguments[G__18007__i + 0];
                      ++G__18007__i;
                    }
                    args__8524__auto__ = new cljs.core.IndexedSeq(G__18007__a, 0);
                  }
                  return G__18006__delegate.call(this, args__8524__auto__);
                };
                G__18006.cljs$lang$maxFixedArity = 0;
                G__18006.cljs$lang$applyTo = function(arglist__18008) {
                  var args__8524__auto__ = cljs.core.seq(arglist__18008);
                  return G__18006__delegate(args__8524__auto__);
                };
                G__18006.cljs$core$IFn$_invoke$arity$variadic = G__18006__delegate;
                return G__18006;
              }();
            }(format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_17996_17998, _STAR_current_length_STAR_17997_17999, vec__17993, defn_sym, defn_name, stuff, vec__17994, doc_str, stuff__$1, vec__17995, attr_map, stuff__$2);
          })().call(null, attr_map);
        } else {
        }
        if (cljs.core.vector_QMARK_.call(null, cljs.core.first.call(null, stuff__$2))) {
          cljs.pprint.single_defn.call(null, stuff__$2, function() {
            var or__5583__auto__ = doc_str;
            if (cljs.core.truth_(or__5583__auto__)) {
              return or__5583__auto__;
            } else {
              return attr_map;
            }
          }());
        } else {
          cljs.pprint.multi_defn.call(null, stuff__$2, function() {
            var or__5583__auto__ = doc_str;
            if (cljs.core.truth_(or__5583__auto__)) {
              return or__5583__auto__;
            } else {
              return attr_map;
            }
          }());
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_17997_17999;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_17996_17998;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_binding_form = function cljs$pprint$pprint_binding_form(binding_vec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_18014_18019 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_18015_18020 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count18016_18021 = 0;
      var binding_18022 = binding_vec;
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count18016_18021 < cljs.core._STAR_print_length_STAR_) {
          if (cljs.core.seq.call(null, binding_18022)) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR_18017_18023 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR_18018_18024 = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.first.call(null, binding_18022));
                if (cljs.core.next.call(null, binding_18022)) {
                  cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                  cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                  cljs.pprint.write_out.call(null, cljs.core.second.call(null, binding_18022));
                } else {
                }
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_18018_18024;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_18017_18023;
              }
            }
            if (cljs.core.next.call(null, cljs.core.rest.call(null, binding_18022))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__18025 = length_count18016_18021 + 1;
              var G__18026 = cljs.core.next.call(null, cljs.core.rest.call(null, binding_18022));
              length_count18016_18021 = G__18025;
              binding_18022 = G__18026;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_18015_18020;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_18014_18019;
    }
  }
  return null;
};
cljs.pprint.pprint_let = function cljs$pprint$pprint_let(alis) {
  var base_sym = cljs.core.first.call(null, alis);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_18029_18031 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_18030_18032 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      if (cljs.core.next.call(null, alis) && cljs.core.vector_QMARK_.call(null, cljs.core.second.call(null, alis))) {
        (function() {
          var format_in__8522__auto__ = "~w ~1I~@_";
          var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
          return function(format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_18029_18031, _STAR_current_length_STAR_18030_18032, base_sym) {
            return function() {
              var G__18033__delegate = function(args__8524__auto__) {
                var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
                return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
              };
              var G__18033 = function(var_args) {
                var args__8524__auto__ = null;
                if (arguments.length > 0) {
                  var G__18034__i = 0, G__18034__a = new Array(arguments.length - 0);
                  while (G__18034__i < G__18034__a.length) {
                    G__18034__a[G__18034__i] = arguments[G__18034__i + 0];
                    ++G__18034__i;
                  }
                  args__8524__auto__ = new cljs.core.IndexedSeq(G__18034__a, 0);
                }
                return G__18033__delegate.call(this, args__8524__auto__);
              };
              G__18033.cljs$lang$maxFixedArity = 0;
              G__18033.cljs$lang$applyTo = function(arglist__18035) {
                var args__8524__auto__ = cljs.core.seq(arglist__18035);
                return G__18033__delegate(args__8524__auto__);
              };
              G__18033.cljs$core$IFn$_invoke$arity$variadic = G__18033__delegate;
              return G__18033;
            }();
          }(format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_18029_18031, _STAR_current_length_STAR_18030_18032, base_sym);
        })().call(null, base_sym);
        cljs.pprint.pprint_binding_form.call(null, cljs.core.second.call(null, alis));
        (function() {
          var format_in__8522__auto__ = " ~_~{~w~^ ~_~}";
          var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
          return function(format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_18029_18031, _STAR_current_length_STAR_18030_18032, base_sym) {
            return function() {
              var G__18036__delegate = function(args__8524__auto__) {
                var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
                return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
              };
              var G__18036 = function(var_args) {
                var args__8524__auto__ = null;
                if (arguments.length > 0) {
                  var G__18037__i = 0, G__18037__a = new Array(arguments.length - 0);
                  while (G__18037__i < G__18037__a.length) {
                    G__18037__a[G__18037__i] = arguments[G__18037__i + 0];
                    ++G__18037__i;
                  }
                  args__8524__auto__ = new cljs.core.IndexedSeq(G__18037__a, 0);
                }
                return G__18036__delegate.call(this, args__8524__auto__);
              };
              G__18036.cljs$lang$maxFixedArity = 0;
              G__18036.cljs$lang$applyTo = function(arglist__18038) {
                var args__8524__auto__ = cljs.core.seq(arglist__18038);
                return G__18036__delegate(args__8524__auto__);
              };
              G__18036.cljs$core$IFn$_invoke$arity$variadic = G__18036__delegate;
              return G__18036;
            }();
          }(format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_18029_18031, _STAR_current_length_STAR_18030_18032, base_sym);
        })().call(null, cljs.core.next.call(null, cljs.core.rest.call(null, alis)));
      } else {
        cljs.pprint.pprint_simple_code_list.call(null, alis);
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_18030_18032;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_18029_18031;
    }
  }
  return null;
};
cljs.pprint.pprint_if = function() {
  var format_in__8522__auto__ = "~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e";
  var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
  return function(format_in__8522__auto__, cf__8523__auto__) {
    return function() {
      var G__18039__delegate = function(args__8524__auto__) {
        var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
        return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
      };
      var G__18039 = function(var_args) {
        var args__8524__auto__ = null;
        if (arguments.length > 0) {
          var G__18040__i = 0, G__18040__a = new Array(arguments.length - 0);
          while (G__18040__i < G__18040__a.length) {
            G__18040__a[G__18040__i] = arguments[G__18040__i + 0];
            ++G__18040__i;
          }
          args__8524__auto__ = new cljs.core.IndexedSeq(G__18040__a, 0);
        }
        return G__18039__delegate.call(this, args__8524__auto__);
      };
      G__18039.cljs$lang$maxFixedArity = 0;
      G__18039.cljs$lang$applyTo = function(arglist__18041) {
        var args__8524__auto__ = cljs.core.seq(arglist__18041);
        return G__18039__delegate(args__8524__auto__);
      };
      G__18039.cljs$core$IFn$_invoke$arity$variadic = G__18039__delegate;
      return G__18039;
    }();
  }(format_in__8522__auto__, cf__8523__auto__);
}();
cljs.pprint.pprint_cond = function cljs$pprint$pprint_cond(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_18047_18052 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_18048_18053 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis));
      if (cljs.core.next.call(null, alis)) {
        cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
        cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
        var length_count18049_18054 = 0;
        var alis_18055__$1 = cljs.core.next.call(null, alis);
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count18049_18054 < cljs.core._STAR_print_length_STAR_) {
            if (alis_18055__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_18050_18056 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_18051_18057 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_18055__$1));
                  if (cljs.core.next.call(null, alis_18055__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_18055__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_18051_18057;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_18050_18056;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_18055__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__18058 = length_count18049_18054 + 1;
                var G__18059 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_18055__$1));
                length_count18049_18054 = G__18058;
                alis_18055__$1 = G__18059;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
      } else {
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_18048_18053;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_18047_18052;
    }
  }
  return null;
};
cljs.pprint.pprint_condp = function cljs$pprint$pprint_condp(alis) {
  if (cljs.core.count.call(null, alis) > 3) {
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_18065_18070 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_18066_18071 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
        cljs.core.apply.call(null, function() {
          var format_in__8522__auto__ = "~w ~@_~w ~@_~w ~_";
          var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
          return function(format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_18065_18070, _STAR_current_length_STAR_18066_18071) {
            return function() {
              var G__18072__delegate = function(args__8524__auto__) {
                var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
                return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
              };
              var G__18072 = function(var_args) {
                var args__8524__auto__ = null;
                if (arguments.length > 0) {
                  var G__18073__i = 0, G__18073__a = new Array(arguments.length - 0);
                  while (G__18073__i < G__18073__a.length) {
                    G__18073__a[G__18073__i] = arguments[G__18073__i + 0];
                    ++G__18073__i;
                  }
                  args__8524__auto__ = new cljs.core.IndexedSeq(G__18073__a, 0);
                }
                return G__18072__delegate.call(this, args__8524__auto__);
              };
              G__18072.cljs$lang$maxFixedArity = 0;
              G__18072.cljs$lang$applyTo = function(arglist__18074) {
                var args__8524__auto__ = cljs.core.seq(arglist__18074);
                return G__18072__delegate(args__8524__auto__);
              };
              G__18072.cljs$core$IFn$_invoke$arity$variadic = G__18072__delegate;
              return G__18072;
            }();
          }(format_in__8522__auto__, cf__8523__auto__, _STAR_current_level_STAR_18065_18070, _STAR_current_length_STAR_18066_18071);
        }(), alis);
        var length_count18067_18075 = 0;
        var alis_18076__$1 = cljs.core.seq.call(null, cljs.core.drop.call(null, 3, alis));
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count18067_18075 < cljs.core._STAR_print_length_STAR_) {
            if (alis_18076__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_18068_18077 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_18069_18078 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_18076__$1));
                  if (cljs.core.next.call(null, alis_18076__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_18076__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_18069_18078;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_18068_18077;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_18076__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__18079 = length_count18067_18075 + 1;
                var G__18080 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_18076__$1));
                length_count18067_18075 = G__18079;
                alis_18076__$1 = G__18080;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_18066_18071;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_18065_18070;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint._STAR_symbol_map_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.pprint.pprint_anon_func = function cljs$pprint$pprint_anon_func(alis) {
  var args = cljs.core.second.call(null, alis);
  var nlis = cljs.core.first.call(null, cljs.core.rest.call(null, cljs.core.rest.call(null, alis)));
  if (cljs.core.vector_QMARK_.call(null, args)) {
    var _STAR_symbol_map_STAR_18084 = cljs.pprint._STAR_symbol_map_STAR_;
    cljs.pprint._STAR_symbol_map_STAR_ = cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, args)) ? new cljs.core.PersistentArrayMap.fromArray([cljs.core.first.call(null, args), "%"], true, false) : cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(_STAR_symbol_map_STAR_18084, args, nlis) {
      return function(p1__18081_SHARP_, p2__18082_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__18081_SHARP_, [cljs.core.str("%"), cljs.core.str(p2__18082_SHARP_)].join("")], null);
      };
    }(_STAR_symbol_map_STAR_18084, args, nlis), args, cljs.core.range.call(null, 1, cljs.core.count.call(null, args) + 1)));
    try {
      return function() {
        var format_in__8522__auto__ = "~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e";
        var cf__8523__auto__ = typeof format_in__8522__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__8522__auto__) : format_in__8522__auto__;
        return function(format_in__8522__auto__, cf__8523__auto__, _STAR_symbol_map_STAR_18084, args, nlis) {
          return function() {
            var G__18085__delegate = function(args__8524__auto__) {
              var navigator__8525__auto__ = cljs.pprint.init_navigator.call(null, args__8524__auto__);
              return cljs.pprint.execute_format.call(null, cf__8523__auto__, navigator__8525__auto__);
            };
            var G__18085 = function(var_args) {
              var args__8524__auto__ = null;
              if (arguments.length > 0) {
                var G__18086__i = 0, G__18086__a = new Array(arguments.length - 0);
                while (G__18086__i < G__18086__a.length) {
                  G__18086__a[G__18086__i] = arguments[G__18086__i + 0];
                  ++G__18086__i;
                }
                args__8524__auto__ = new cljs.core.IndexedSeq(G__18086__a, 0);
              }
              return G__18085__delegate.call(this, args__8524__auto__);
            };
            G__18085.cljs$lang$maxFixedArity = 0;
            G__18085.cljs$lang$applyTo = function(arglist__18087) {
              var args__8524__auto__ = cljs.core.seq(arglist__18087);
              return G__18085__delegate(args__8524__auto__);
            };
            G__18085.cljs$core$IFn$_invoke$arity$variadic = G__18085__delegate;
            return G__18085;
          }();
        }(format_in__8522__auto__, cf__8523__auto__, _STAR_symbol_map_STAR_18084, args, nlis);
      }().call(null, nlis);
    } finally {
      cljs.pprint._STAR_symbol_map_STAR_ = _STAR_symbol_map_STAR_18084;
    }
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_simple_code_list = function cljs$pprint$pprint_simple_code_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_18091_18094 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_18092_18095 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      var length_count18093_18096 = 0;
      var alis_18097__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count18093_18096 < cljs.core._STAR_print_length_STAR_) {
          if (alis_18097__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_18097__$1));
            if (cljs.core.next.call(null, alis_18097__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__18098 = length_count18093_18096 + 1;
              var G__18099 = cljs.core.next.call(null, alis_18097__$1);
              length_count18093_18096 = G__18098;
              alis_18097__$1 = G__18099;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_18092_18095;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_18091_18094;
    }
  }
  return null;
};
cljs.pprint.two_forms = function cljs$pprint$two_forms(amap) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.mapcat.call(null, cljs.core.identity, function() {
    var iter__6336__auto__ = function cljs$pprint$two_forms_$_iter__18104(s__18105) {
      return new cljs.core.LazySeq(null, function() {
        var s__18105__$1 = s__18105;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__18105__$1);
          if (temp__4425__auto__) {
            var s__18105__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__18105__$2)) {
              var c__6334__auto__ = cljs.core.chunk_first.call(null, s__18105__$2);
              var size__6335__auto__ = cljs.core.count.call(null, c__6334__auto__);
              var b__18107 = cljs.core.chunk_buffer.call(null, size__6335__auto__);
              if (function() {
                var i__18106 = 0;
                while (true) {
                  if (i__18106 < size__6335__auto__) {
                    var x = cljs.core._nth.call(null, c__6334__auto__, i__18106);
                    cljs.core.chunk_append.call(null, b__18107, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null));
                    var G__18108 = i__18106 + 1;
                    i__18106 = G__18108;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__18107), cljs$pprint$two_forms_$_iter__18104.call(null, cljs.core.chunk_rest.call(null, s__18105__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__18107), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__18105__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null), cljs$pprint$two_forms_$_iter__18104.call(null, cljs.core.rest.call(null, s__18105__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6336__auto__.call(null, amap);
  }()));
};
cljs.pprint.add_core_ns = function cljs$pprint$add_core_ns(amap) {
  var core = "clojure.core";
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(core) {
    return function(p1__18109_SHARP_) {
      var vec__18111 = p1__18109_SHARP_;
      var s = cljs.core.nth.call(null, vec__18111, 0, null);
      var f = cljs.core.nth.call(null, vec__18111, 1, null);
      if (cljs.core.not.call(null, function() {
        var or__5583__auto__ = cljs.core.namespace.call(null, s);
        if (cljs.core.truth_(or__5583__auto__)) {
          return or__5583__auto__;
        } else {
          return cljs.core.special_symbol_QMARK_.call(null, s);
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, core, cljs.core.name.call(null, s)), f], null);
      } else {
        return p1__18109_SHARP_;
      }
    };
  }(core), amap));
};
cljs.pprint._STAR_code_table_STAR_ = cljs.pprint.two_forms.call(null, cljs.pprint.add_core_ns.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, ".", ".", 1975675962, null), new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.Symbol(null, "when-first", "when-first", 821699168, null), new cljs.core.Symbol(null, "if", "if", 1181717262, null), new cljs.core.Symbol(null, "condp", "condp", 1054325175, null), new cljs.core.Symbol(null, "..", "..", -300507420, 
null), new cljs.core.Symbol(null, "defmacro", "defmacro", 2054157304, null), new cljs.core.Symbol(null, "defn", "defn", -126010802, null), new cljs.core.Symbol(null, "loop", "loop", 1244978678, null), new cljs.core.Symbol(null, "struct", "struct", 325972931, null), new cljs.core.Symbol(null, "doseq", "doseq", 221164135, null), new cljs.core.Symbol(null, "if-not", "if-not", -265415609, null), new cljs.core.Symbol(null, "when-not", "when-not", -1223136340, null), new cljs.core.Symbol(null, "def", "def", 
597100991, null), new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "with-open", "with-open", 172119667, null), new cljs.core.Symbol(null, "with-local-vars", "with-local-vars", 837642072, null), new cljs.core.Symbol(null, "defonce", "defonce", -1681484013, null), new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "dotimes", "dotimes", -818708397, null), new cljs.core.Symbol(null, 
"cond", "cond", 1606708055, null), new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "defn-", "defn-", 1097765044, null), new cljs.core.Symbol(null, "locking", "locking", 1542862874, null), new cljs.core.Symbol(null, "-\x3e", "-\x3e", -2139605430, null), new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), new cljs.core.Symbol(null, 
"struct-map", "struct-map", -1387540878, null)], [cljs.pprint.pprint_hold_first, cljs.pprint.pprint_anon_func, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_condp, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_if, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_if, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, 
cljs.pprint.pprint_let, cljs.pprint.pprint_ns, cljs.pprint.pprint_let, cljs.pprint.pprint_cond, cljs.pprint.pprint_let, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first])));
cljs.pprint.pprint_code_list = function cljs$pprint$pprint_code_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    var temp__4423__auto__ = cljs.pprint._STAR_code_table_STAR_.call(null, cljs.core.first.call(null, alis));
    if (cljs.core.truth_(temp__4423__auto__)) {
      var special_form = temp__4423__auto__;
      return special_form.call(null, alis);
    } else {
      return cljs.pprint.pprint_simple_code_list.call(null, alis);
    }
  } else {
    return null;
  }
};
cljs.pprint.pprint_code_symbol = function cljs$pprint$pprint_code_symbol(sym) {
  var temp__4423__auto__ = sym.call(null, cljs.pprint._STAR_symbol_map_STAR_);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var arg_num = temp__4423__auto__;
    return cljs.pprint.print.call(null, arg_num);
  } else {
    if (cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_)) {
      return cljs.pprint.print.call(null, cljs.core.name.call(null, sym));
    } else {
      return cljs.pprint.pr.call(null, sym);
    }
  }
};
if (typeof cljs.pprint.code_dispatch !== "undefined") {
} else {
  cljs.pprint.code_dispatch = function() {
    var method_table__6477__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__6478__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__6479__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__6480__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__6481__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "code-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__6481__auto__, method_table__6477__auto__, prefer_table__6478__auto__, method_cache__6479__auto__, cached_hierarchy__6480__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_code_list);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), cljs.pprint.pprint_code_symbol);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "queue", "queue", 1455835879), cljs.pprint.pprint_pqueue);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "deref", "deref", -145586795), cljs.pprint.pprint_ideref);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, null, cljs.pprint.pr);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.add_padding = function cljs$pprint$add_padding(width, s) {
  var padding = function() {
    var x__5895__auto__ = 0;
    var y__5896__auto__ = width - cljs.core.count.call(null, s);
    return x__5895__auto__ > y__5896__auto__ ? x__5895__auto__ : y__5896__auto__;
  }();
  return cljs.core.apply.call(null, cljs.core.str, clojure.string.join.call(null, cljs.core.repeat.call(null, padding, " ")), s);
};
cljs.pprint.print_table = function cljs$pprint$print_table() {
  var args18115 = [];
  var len__6622__auto___18131 = arguments.length;
  var i__6623__auto___18132 = 0;
  while (true) {
    if (i__6623__auto___18132 < len__6622__auto___18131) {
      args18115.push(arguments[i__6623__auto___18132]);
      var G__18133 = i__6623__auto___18132 + 1;
      i__6623__auto___18132 = G__18133;
      continue;
    } else {
    }
    break;
  }
  var G__18117 = args18115.length;
  switch(G__18117) {
    case 2:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18115.length)].join(""));;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2 = function(ks, rows) {
  var _STAR_print_newline_STAR_18118 = cljs.core._STAR_print_newline_STAR_;
  try {
    if (cljs.core.seq.call(null, rows)) {
      var widths = cljs.core.map.call(null, function(_STAR_print_newline_STAR_18118) {
        return function(k) {
          return cljs.core.apply.call(null, cljs.core.max, cljs.core.count.call(null, [cljs.core.str(k)].join("")), cljs.core.map.call(null, function(_STAR_print_newline_STAR_18118) {
            return function(p1__18112_SHARP_) {
              return cljs.core.count.call(null, [cljs.core.str(cljs.core.get.call(null, p1__18112_SHARP_, k))].join(""));
            };
          }(_STAR_print_newline_STAR_18118), rows));
        };
      }(_STAR_print_newline_STAR_18118), ks);
      var spacers = cljs.core.map.call(null, function(widths, _STAR_print_newline_STAR_18118) {
        return function(p1__18113_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, p1__18113_SHARP_, "-"));
        };
      }(widths, _STAR_print_newline_STAR_18118), widths);
      var fmt_row = function(widths, spacers, _STAR_print_newline_STAR_18118) {
        return function(leader, divider, trailer, row) {
          return [cljs.core.str(leader), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, divider, function() {
            var iter__6336__auto__ = function(widths, spacers, _STAR_print_newline_STAR_18118) {
              return function cljs$pprint$iter__18119(s__18120) {
                return new cljs.core.LazySeq(null, function(widths, spacers, _STAR_print_newline_STAR_18118) {
                  return function() {
                    var s__18120__$1 = s__18120;
                    while (true) {
                      var temp__4425__auto__ = cljs.core.seq.call(null, s__18120__$1);
                      if (temp__4425__auto__) {
                        var s__18120__$2 = temp__4425__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__18120__$2)) {
                          var c__6334__auto__ = cljs.core.chunk_first.call(null, s__18120__$2);
                          var size__6335__auto__ = cljs.core.count.call(null, c__6334__auto__);
                          var b__18122 = cljs.core.chunk_buffer.call(null, size__6335__auto__);
                          if (function() {
                            var i__18121 = 0;
                            while (true) {
                              if (i__18121 < size__6335__auto__) {
                                var vec__18125 = cljs.core._nth.call(null, c__6334__auto__, i__18121);
                                var col = cljs.core.nth.call(null, vec__18125, 0, null);
                                var width = cljs.core.nth.call(null, vec__18125, 1, null);
                                cljs.core.chunk_append.call(null, b__18122, cljs.pprint.add_padding.call(null, width, [cljs.core.str(col)].join("")));
                                var G__18135 = i__18121 + 1;
                                i__18121 = G__18135;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__18122), cljs$pprint$iter__18119.call(null, cljs.core.chunk_rest.call(null, s__18120__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__18122), null);
                          }
                        } else {
                          var vec__18126 = cljs.core.first.call(null, s__18120__$2);
                          var col = cljs.core.nth.call(null, vec__18126, 0, null);
                          var width = cljs.core.nth.call(null, vec__18126, 1, null);
                          return cljs.core.cons.call(null, cljs.pprint.add_padding.call(null, width, [cljs.core.str(col)].join("")), cljs$pprint$iter__18119.call(null, cljs.core.rest.call(null, s__18120__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(widths, spacers, _STAR_print_newline_STAR_18118), null, null);
              };
            }(widths, spacers, _STAR_print_newline_STAR_18118);
            return iter__6336__auto__.call(null, cljs.core.map.call(null, cljs.core.vector, cljs.core.map.call(null, function(iter__6336__auto__, widths, spacers, _STAR_print_newline_STAR_18118) {
              return function(p1__18114_SHARP_) {
                return cljs.core.get.call(null, row, p1__18114_SHARP_);
              };
            }(iter__6336__auto__, widths, spacers, _STAR_print_newline_STAR_18118), ks), widths));
          }()))), cljs.core.str(trailer)].join("");
        };
      }(widths, spacers, _STAR_print_newline_STAR_18118);
      cljs.core.println.call(null);
      cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", cljs.core.zipmap.call(null, ks, ks)));
      cljs.core.println.call(null, fmt_row.call(null, "|-", "-+-", "-|", cljs.core.zipmap.call(null, ks, spacers)));
      var seq__18127 = cljs.core.seq.call(null, rows);
      var chunk__18128 = null;
      var count__18129 = 0;
      var i__18130 = 0;
      while (true) {
        if (i__18130 < count__18129) {
          var row = cljs.core._nth.call(null, chunk__18128, i__18130);
          cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
          var G__18136 = seq__18127;
          var G__18137 = chunk__18128;
          var G__18138 = count__18129;
          var G__18139 = i__18130 + 1;
          seq__18127 = G__18136;
          chunk__18128 = G__18137;
          count__18129 = G__18138;
          i__18130 = G__18139;
          continue;
        } else {
          var temp__4425__auto__ = cljs.core.seq.call(null, seq__18127);
          if (temp__4425__auto__) {
            var seq__18127__$1 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__18127__$1)) {
              var c__6367__auto__ = cljs.core.chunk_first.call(null, seq__18127__$1);
              var G__18140 = cljs.core.chunk_rest.call(null, seq__18127__$1);
              var G__18141 = c__6367__auto__;
              var G__18142 = cljs.core.count.call(null, c__6367__auto__);
              var G__18143 = 0;
              seq__18127 = G__18140;
              chunk__18128 = G__18141;
              count__18129 = G__18142;
              i__18130 = G__18143;
              continue;
            } else {
              var row = cljs.core.first.call(null, seq__18127__$1);
              cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
              var G__18144 = cljs.core.next.call(null, seq__18127__$1);
              var G__18145 = null;
              var G__18146 = 0;
              var G__18147 = 0;
              seq__18127 = G__18144;
              chunk__18128 = G__18145;
              count__18129 = G__18146;
              i__18130 = G__18147;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_18118;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1 = function(rows) {
  return cljs.pprint.print_table.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, rows)), rows);
};
cljs.pprint.print_table.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.pprint");
cljs.test.empty_env = function cljs$test$empty_env() {
  var args17013 = [];
  var len__6622__auto___17017 = arguments.length;
  var i__6623__auto___17018 = 0;
  while (true) {
    if (i__6623__auto___17018 < len__6622__auto___17017) {
      args17013.push(arguments[i__6623__auto___17018]);
      var G__17019 = i__6623__auto___17018 + 1;
      i__6623__auto___17018 = G__17019;
      continue;
    } else {
    }
    break;
  }
  var G__17015 = args17013.length;
  switch(G__17015) {
    case 0:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args17013.length)].join(""));;
  }
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.test.empty_env.call(null, new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322));
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1 = function(reporter) {
  var G__17016 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150), 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523), cljs.core.List.EMPTY, new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.core.pr_str, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), reporter], null);
  var G__17016__$1 = cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.test", "pprint", "cljs.test/pprint", 1627393641), reporter) ? cljs.core.assoc.call(null, G__17016, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.pprint.pprint) : G__17016;
  return G__17016__$1;
};
cljs.test.empty_env.cljs$lang$maxFixedArity = 1;
cljs.test._STAR_current_env_STAR_ = null;
cljs.test.get_current_env = function cljs$test$get_current_env() {
  var or__5583__auto__ = cljs.test._STAR_current_env_STAR_;
  if (cljs.core.truth_(or__5583__auto__)) {
    return or__5583__auto__;
  } else {
    return cljs.test.empty_env.call(null);
  }
};
cljs.test.update_current_env_BANG_ = function cljs$test$update_current_env_BANG_() {
  var args__6629__auto__ = [];
  var len__6622__auto___17024 = arguments.length;
  var i__6623__auto___17025 = 0;
  while (true) {
    if (i__6623__auto___17025 < len__6622__auto___17024) {
      args__6629__auto__.push(arguments[i__6623__auto___17025]);
      var G__17026 = i__6623__auto___17025 + 1;
      i__6623__auto___17025 = G__17026;
      continue;
    } else {
    }
    break;
  }
  var argseq__6630__auto__ = 2 < args__6629__auto__.length ? new cljs.core.IndexedSeq(args__6629__auto__.slice(2), 0) : null;
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6630__auto__);
};
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ks, f, args) {
  return cljs.test._STAR_current_env_STAR_ = cljs.core.apply.call(null, cljs.core.update_in, cljs.test.get_current_env.call(null), ks, f, args);
};
cljs.test.update_current_env_BANG_.cljs$lang$maxFixedArity = 2;
cljs.test.update_current_env_BANG_.cljs$lang$applyTo = function(seq17021) {
  var G__17022 = cljs.core.first.call(null, seq17021);
  var seq17021__$1 = cljs.core.next.call(null, seq17021);
  var G__17023 = cljs.core.first.call(null, seq17021__$1);
  var seq17021__$2 = cljs.core.next.call(null, seq17021__$1);
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__17022, G__17023, seq17021__$2);
};
cljs.test.set_env_BANG_ = function cljs$test$set_env_BANG_(new_env) {
  return cljs.test._STAR_current_env_STAR_ = new_env;
};
cljs.test.clear_env_BANG_ = function cljs$test$clear_env_BANG_() {
  return cljs.test._STAR_current_env_STAR_ = null;
};
cljs.test.get_and_clear_env_BANG_ = function cljs$test$get_and_clear_env_BANG_() {
  var env = cljs.test.get_current_env.call(null);
  cljs.test.clear_env_BANG_.call(null);
  return env;
};
cljs.test.testing_vars_str = function cljs$test$testing_vars_str(m) {
  var map__17030 = m;
  var map__17030__$1 = (!(map__17030 == null) ? map__17030.cljs$lang$protocol_mask$partition0$ & 64 || map__17030.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17030) : map__17030;
  var file = cljs.core.get.call(null, map__17030__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  var line = cljs.core.get.call(null, map__17030__$1, new cljs.core.Keyword(null, "line", "line", 212345235));
  var column = cljs.core.get.call(null, map__17030__$1, new cljs.core.Keyword(null, "column", "column", 2078222095));
  return [cljs.core.str(cljs.core.reverse.call(null, cljs.core.map.call(null, function(map__17030, map__17030__$1, file, line, column) {
    return function(p1__17027_SHARP_) {
      return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__17027_SHARP_));
    };
  }(map__17030, map__17030__$1, file, line, column), (new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))))), cljs.core.str(" ("), cljs.core.str(file), cljs.core.str(":"), cljs.core.str(line), cljs.core.str(cljs.core.truth_(column) ? [cljs.core.str(":"), cljs.core.str(column)].join("") : null), cljs.core.str(")")].join("");
};
cljs.test.testing_contexts_str = function cljs$test$testing_contexts_str() {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))));
};
cljs.test.inc_report_counter_BANG_ = function cljs$test$inc_report_counter_BANG_(name) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
  } else {
    return null;
  }
};
if (typeof cljs.test.report !== "undefined") {
} else {
  cljs.test.report = function() {
    var method_table__6477__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__6478__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__6479__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__6480__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__6481__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.test", "report"), function(method_table__6477__auto__, prefer_table__6478__auto__, method_cache__6479__auto__, cached_hierarchy__6480__auto__, hierarchy__6481__auto__) {
      return function(m) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "reporter", "reporter", -805360621)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m)], null);
      };
    }(method_table__6477__auto__, prefer_table__6478__auto__, method_cache__6479__auto__, cached_hierarchy__6480__auto__, hierarchy__6481__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__6481__auto__, method_table__6477__auto__, prefer_table__6478__auto__, method_cache__6479__auto__, cached_hierarchy__6480__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.Keyword(null, "default", "default", -1987822328), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "pass", "pass", 1574159993)], null), function(m) {
  return cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
});
cljs.test.print_comparison = function cljs$test$print_comparison(m) {
  var formatter_fn = function() {
    var or__5583__auto__ = (new cljs.core.Keyword(null, "formatter", "formatter", -483008823)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
    if (cljs.core.truth_(or__5583__auto__)) {
      return or__5583__auto__;
    } else {
      return cljs.core.pr_str;
    }
  }();
  cljs.core.println.call(null, "expected:", formatter_fn.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
  return cljs.core.println.call(null, "  actual:", formatter_fn.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)));
};
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "fail", "fail", 1706214930)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  cljs.core.println.call(null, "\nFAIL in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__4425__auto___17032 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__4425__auto___17032)) {
    var message_17033 = temp__4425__auto___17032;
    cljs.core.println.call(null, message_17033);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "error", "error", -978969032)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "error", "error", -978969032));
  cljs.core.println.call(null, "\nERROR in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__4425__auto___17034 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__4425__auto___17034)) {
    var message_17035 = temp__4425__auto___17034;
    cljs.core.println.call(null, message_17035);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "summary", "summary", 380847952)], null), function(m) {
  cljs.core.println.call(null, "\nRan", (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(m), "tests containing", (new cljs.core.Keyword(null, "pass", "pass", 1574159993)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "assertions.");
  return cljs.core.println.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m), "failures,", (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "errors.");
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null), function(m) {
  return cljs.core.println.call(null, "\nTesting", cljs.core.name.call(null, (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(m)));
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-all-vars", "end-test-all-vars", 548827253)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713)], null), function(m) {
  return null;
});
cljs.test.js_line_and_column = function cljs$test$js_line_and_column(stack_element) {
  var parts = stack_element.split(":");
  var cnt = cljs.core.count.call(null, parts);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [parseInt(cljs.core.nth.call(null, parts, cnt - 2)), parseInt(cljs.core.nth.call(null, parts, cnt - 1))], null);
};
cljs.test.js_filename = function cljs$test$js_filename(stack_element) {
  return cljs.core.first.call(null, cljs.core.last.call(null, stack_element.split("/out/")).split(":"));
};
cljs.test.mapped_line_and_column = function cljs$test$mapped_line_and_column(filename, line, column) {
  var default$ = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line, column], null);
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "source-map", "source-map", 1706252311)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var source_map = temp__4423__auto__;
    var temp__4423__auto____$1 = cljs.core.get_in.call(null, source_map, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line - 1], null));
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var columns = temp__4423__auto____$1;
      return cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first.call(null, function() {
        var temp__4423__auto____$2 = cljs.core.get.call(null, columns, column - 1);
        if (cljs.core.truth_(temp__4423__auto____$2)) {
          var mapping = temp__4423__auto____$2;
          return mapping;
        } else {
          return cljs.core.second.call(null, cljs.core.first.call(null, columns));
        }
      }()), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "source", "source", -433931539), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "col", "col", -1959363084)], null)));
    } else {
      return default$;
    }
  } else {
    return default$;
  }
};
cljs.test.file_and_line = function cljs$test$file_and_line(exception, depth) {
  var temp__4423__auto__ = function() {
    var and__5571__auto__ = typeof exception.stack === "string";
    if (and__5571__auto__) {
      var G__17041 = exception.stack;
      var G__17041__$1 = G__17041 == null ? null : clojure.string.split_lines.call(null, G__17041);
      var G__17041__$2 = G__17041__$1 == null ? null : cljs.core.get.call(null, G__17041__$1, depth);
      var G__17041__$3 = G__17041__$2 == null ? null : clojure.string.trim.call(null, G__17041__$2);
      return G__17041__$3;
    } else {
      return and__5571__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4423__auto__)) {
    var stack_element = temp__4423__auto__;
    var fname = cljs.test.js_filename.call(null, stack_element);
    var vec__17042 = cljs.test.js_line_and_column.call(null, stack_element);
    var line = cljs.core.nth.call(null, vec__17042, 0, null);
    var column = cljs.core.nth.call(null, vec__17042, 1, null);
    var vec__17043 = cljs.test.mapped_line_and_column.call(null, fname, line, column);
    var fname__$1 = cljs.core.nth.call(null, vec__17043, 0, null);
    var line__$1 = cljs.core.nth.call(null, vec__17043, 1, null);
    var column__$1 = cljs.core.nth.call(null, vec__17043, 2, null);
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "file", "file", -1269645878), fname__$1, new cljs.core.Keyword(null, "line", "line", 212345235), line__$1, new cljs.core.Keyword(null, "column", "column", 2078222095), column__$1], null);
  } else {
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), exception.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), exception.lineNumber], null);
  }
};
cljs.test.do_report = function cljs$test$do_report(m) {
  var m__$1 = function() {
    var G__17045 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m).fqn : null;
    switch(G__17045) {
      case "fail":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, new Error, 4), m);
        break;
      case "error":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m), 0), m);
        break;
      default:
        return m;
    }
  }();
  return cljs.test.report.call(null, m__$1);
};
cljs.test.IAsyncTest = {};
cljs.test.async_QMARK_ = function cljs$test$async_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$test$IAsyncTest$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
  }
};
cljs.test.run_block = function cljs$test$run_block(fns) {
  while (true) {
    var temp__4425__auto__ = cljs.core.seq.call(null, fns);
    if (temp__4425__auto__) {
      var xs__4977__auto__ = temp__4425__auto__;
      var f = cljs.core.first.call(null, xs__4977__auto__);
      var obj = f.call(null);
      if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, obj))) {
        return obj.call(null, function() {
          var d = new cljs.core.Delay(function(fns, obj, f, xs__4977__auto__, temp__4425__auto__) {
            return function() {
              return cljs$test$run_block.call(null, cljs.core.rest.call(null, fns));
            };
          }(fns, obj, f, xs__4977__auto__, temp__4425__auto__), null);
          return function(fns, d, obj, f, xs__4977__auto__, temp__4425__auto__) {
            return function() {
              if (cljs.core.realized_QMARK_.call(null, d)) {
                return cljs.core.println.call(null, "WARNING: Async test called done more than one time.");
              } else {
                return cljs.core.deref.call(null, d);
              }
            };
          }(fns, d, obj, f, xs__4977__auto__, temp__4425__auto__);
        }());
      } else {
        var G__17053 = function() {
          var G__17052 = cljs.core.rest.call(null, fns);
          var G__17052__$1 = cljs.core.truth_((new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, obj))) ? cljs.core.concat.call(null, obj, G__17052) : G__17052;
          return G__17052__$1;
        }();
        fns = G__17053;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.test.block = function cljs$test$block(fns) {
  var G__17055 = fns;
  var G__17055__$1 = G__17055 == null ? null : cljs.core.vary_meta.call(null, G__17055, cljs.core.assoc, new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965), true);
  return G__17055__$1;
};
cljs.test.test_var_block_STAR_ = function cljs$test$test_var_block_STAR_(v, t) {
  if (v instanceof cljs.core.Var) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "Var", "Var", -1833791616, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null))))].join(""));
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.conj, v);
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.Keyword(null, "test", "test", 577538877)], null), cljs.core.inc);
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    try {
      return t.call(null);
    } catch (e17058) {
      var e = e17058;
      var G__17059 = e instanceof cljs.core.Keyword ? e.fqn : null;
      switch(G__17059) {
        case "cljs.test/async-disabled":
          throw "Async tests require fixtures to be specified as maps.  Testing aborted.";break;
        default:
          return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), e], null));
      }
    }
  }, function() {
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.rest);
  }], null);
};
cljs.test.test_var_block = function cljs$test$test_var_block(v) {
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var t = temp__4423__auto__;
    return cljs.test.test_var_block_STAR_.call(null, v, t);
  } else {
    return null;
  }
};
cljs.test.test_var = function cljs$test$test_var(v) {
  return cljs.test.run_block.call(null, cljs.test.test_var_block.call(null, v));
};
cljs.test.default_fixture = function cljs$test$default_fixture(f) {
  return f.call(null);
};
cljs.test.compose_fixtures = function cljs$test$compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cljs.test.join_fixtures = function cljs$test$join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cljs.test.compose_fixtures, cljs.test.default_fixture, fixtures);
};
cljs.test.wrap_map_fixtures = function cljs$test$wrap_map_fixtures(map_fixtures, block) {
  return cljs.core.concat.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "before", "before", -1633692388), map_fixtures), block, cljs.core.reverse.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "after", "after", 594996914), map_fixtures)));
};
cljs.test.execution_strategy = function cljs$test$execution_strategy(once, each) {
  var fixtures_type = function cljs$test$execution_strategy_$_fixtures_type(coll) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return new cljs.core.Keyword(null, "none", "none", 1333468478);
    } else {
      if (cljs.core.every_QMARK_.call(null, cljs.core.map_QMARK_, coll)) {
        return new cljs.core.Keyword(null, "map", "map", 1371690461);
      } else {
        if (cljs.core.every_QMARK_.call(null, cljs.core.fn_QMARK_, coll)) {
          return new cljs.core.Keyword(null, "fn", "fn", -1175266204);
        } else {
          return null;
        }
      }
    }
  };
  var fixtures_types = function cljs$test$execution_strategy_$_fixtures_types() {
    return cljs.core.distinct.call(null, cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null), cljs.core.map.call(null, fixtures_type, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [once, each], null))));
  };
  var vec__17062 = fixtures_types.call(null);
  var type = cljs.core.nth.call(null, vec__17062, 0, null);
  var types = vec__17062;
  if (cljs.core.not_any_QMARK_.call(null, cljs.core.nil_QMARK_, types)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Fixtures may not be of mixed types"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not-any?", "not-any?", -2114707554, null), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "types", "types", -2064405130, null))))].join(""));
  }
  if (2 > cljs.core.count.call(null, types)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("fixtures specified in :once and :each must be of the same type"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "types", "types", -2064405130, null)))))].join(""));
  }
  return (new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "async", "async", 1050769601), new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "sync", "sync", -624148946)], null)).call(null, type, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.test.disable_async = function cljs$test$disable_async(f) {
  return function() {
    var obj = f.call(null);
    if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, obj))) {
      throw new cljs.core.Keyword("cljs.test", "async-disabled", "cljs.test/async-disabled", -772095377);
    } else {
    }
    return obj;
  };
};
cljs.test.test_vars_block = function cljs$test$test_vars_block(vars) {
  return cljs.core.map.call(null, function(p__17070) {
    var vec__17071 = p__17070;
    var ns = cljs.core.nth.call(null, vec__17071, 0, null);
    var vars__$1 = cljs.core.nth.call(null, vec__17071, 1, null);
    return function(vec__17071, ns, vars__$1) {
      return function() {
        return cljs.test.block.call(null, function() {
          var env = cljs.test.get_current_env.call(null);
          var once_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-fixtures", "once-fixtures", 1253947167), ns], null));
          var each_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "each-fixtures", "each-fixtures", 802243977), ns], null));
          var G__17072 = cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures) instanceof cljs.core.Keyword ? cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures).fqn : null;
          switch(G__17072) {
            case "async":
              return cljs.test.wrap_map_fixtures.call(null, once_fixtures, cljs.core.mapcat.call(null, cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.test.wrap_map_fixtures, each_fixtures), cljs.test.test_var_block), cljs.core.filter.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "test", "test", 577538877), cljs.core.meta), vars__$1)));
              break;
            case "sync":
              var each_fixture_fn = cljs.test.join_fixtures.call(null, each_fixtures);
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(each_fixture_fn, G__17072, env, once_fixtures, each_fixtures, vec__17071, ns, vars__$1) {
                return function() {
                  return cljs.test.join_fixtures.call(null, once_fixtures).call(null, function(each_fixture_fn, G__17072, env, once_fixtures, each_fixtures, vec__17071, ns, vars__$1) {
                    return function() {
                      var seq__17073 = cljs.core.seq.call(null, vars__$1);
                      var chunk__17074 = null;
                      var count__17075 = 0;
                      var i__17076 = 0;
                      while (true) {
                        if (i__17076 < count__17075) {
                          var v = cljs.core._nth.call(null, chunk__17074, i__17076);
                          var temp__4425__auto___17078 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                          if (cljs.core.truth_(temp__4425__auto___17078)) {
                            var t_17079 = temp__4425__auto___17078;
                            each_fixture_fn.call(null, function(seq__17073, chunk__17074, count__17075, i__17076, t_17079, temp__4425__auto___17078, v, each_fixture_fn, G__17072, env, once_fixtures, each_fixtures, vec__17071, ns, vars__$1) {
                              return function() {
                                return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_17079)));
                              };
                            }(seq__17073, chunk__17074, count__17075, i__17076, t_17079, temp__4425__auto___17078, v, each_fixture_fn, G__17072, env, once_fixtures, each_fixtures, vec__17071, ns, vars__$1));
                          } else {
                          }
                          var G__17080 = seq__17073;
                          var G__17081 = chunk__17074;
                          var G__17082 = count__17075;
                          var G__17083 = i__17076 + 1;
                          seq__17073 = G__17080;
                          chunk__17074 = G__17081;
                          count__17075 = G__17082;
                          i__17076 = G__17083;
                          continue;
                        } else {
                          var temp__4425__auto__ = cljs.core.seq.call(null, seq__17073);
                          if (temp__4425__auto__) {
                            var seq__17073__$1 = temp__4425__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, seq__17073__$1)) {
                              var c__6367__auto__ = cljs.core.chunk_first.call(null, seq__17073__$1);
                              var G__17084 = cljs.core.chunk_rest.call(null, seq__17073__$1);
                              var G__17085 = c__6367__auto__;
                              var G__17086 = cljs.core.count.call(null, c__6367__auto__);
                              var G__17087 = 0;
                              seq__17073 = G__17084;
                              chunk__17074 = G__17085;
                              count__17075 = G__17086;
                              i__17076 = G__17087;
                              continue;
                            } else {
                              var v = cljs.core.first.call(null, seq__17073__$1);
                              var temp__4425__auto___17088__$1 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                              if (cljs.core.truth_(temp__4425__auto___17088__$1)) {
                                var t_17089 = temp__4425__auto___17088__$1;
                                each_fixture_fn.call(null, function(seq__17073, chunk__17074, count__17075, i__17076, t_17089, temp__4425__auto___17088__$1, v, seq__17073__$1, temp__4425__auto__, each_fixture_fn, G__17072, env, once_fixtures, each_fixtures, vec__17071, ns, vars__$1) {
                                  return function() {
                                    return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_17089)));
                                  };
                                }(seq__17073, chunk__17074, count__17075, i__17076, t_17089, temp__4425__auto___17088__$1, v, seq__17073__$1, temp__4425__auto__, each_fixture_fn, G__17072, env, once_fixtures, each_fixtures, vec__17071, ns, vars__$1));
                              } else {
                              }
                              var G__17090 = cljs.core.next.call(null, seq__17073__$1);
                              var G__17091 = null;
                              var G__17092 = 0;
                              var G__17093 = 0;
                              seq__17073 = G__17090;
                              chunk__17074 = G__17091;
                              count__17075 = G__17092;
                              i__17076 = G__17093;
                              continue;
                            }
                          } else {
                            return null;
                          }
                        }
                        break;
                      }
                    };
                  }(each_fixture_fn, G__17072, env, once_fixtures, each_fixtures, vec__17071, ns, vars__$1));
                };
              }(each_fixture_fn, G__17072, env, once_fixtures, each_fixtures, vec__17071, ns, vars__$1)], null);
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures))].join(""));;
          }
        }());
      };
    }(vec__17071, ns, vars__$1);
  }, cljs.core.group_by.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.core.meta), vars));
};
cljs.test.test_vars = function cljs$test$test_vars(vars) {
  return cljs.test.run_block.call(null, cljs.core.concat.call(null, cljs.test.test_vars_block.call(null, vars), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    return cljs.test.report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713), new cljs.core.Keyword(null, "vars", "vars", -2046957217), vars], null));
  }], null)));
};
cljs.test.successful_QMARK_ = function cljs$test$successful_QMARK_(summary) {
  return (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0 && (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0;
};
goog.provide("tiltontec.cell.base");
goog.require("cljs.core");
goog.require("tiltontec.util.base");
goog.require("cljs.test");
goog.require("tiltontec.util.core");
tiltontec.cell.base._PLUS_pulse_PLUS_ = cljs.core.atom.call(null, 0);
tiltontec.cell.base.cells_init = function tiltontec$cell$base$cells_init() {
  return cljs.core.reset_BANG_.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_, 0);
};
tiltontec.cell.base._STAR_causation_STAR_ = cljs.core.List.EMPTY;
tiltontec.cell.base._STAR_call_stack_STAR_ = null;
tiltontec.cell.base._STAR_depender_STAR_ = null;
tiltontec.cell.base._STAR_defer_changes_STAR_ = false;
tiltontec.cell.base._PLUS_client_q_handler_PLUS_ = cljs.core.atom.call(null, null);
if (typeof tiltontec.cell.base.unbound !== "undefined") {
} else {
  tiltontec.cell.base.unbound = cljs.core.gensym.call(null, "unbound-cell-value");
}
if (typeof tiltontec.cell.base.uncurrent !== "undefined") {
} else {
  tiltontec.cell.base.uncurrent = cljs.core.gensym.call(null, "uncurrent-formulaic-value");
}
tiltontec.cell.base._STAR_not_to_be_STAR_ = false;
tiltontec.cell.base._STAR_unfinished_business_STAR_ = null;
tiltontec.cell.base._STAR_within_integrity_STAR_ = false;
tiltontec.cell.base._STAR_finbiz_id_STAR_ = 0;
tiltontec.cell.base._STAR_c_prop_depth_STAR_ = 0;
tiltontec.cell.base._PLUS_c_debug_PLUS_ = cljs.core.atom.call(null, false);
tiltontec.cell.base._PLUS_stop_PLUS_ = cljs.core.atom.call(null, false);
tiltontec.cell.base.cells_reset = function tiltontec$cell$base$cells_reset() {
  var args24586 = [];
  var len__5593__auto___24589 = arguments.length;
  var i__5594__auto___24590 = 0;
  while (true) {
    if (i__5594__auto___24590 < len__5593__auto___24589) {
      args24586.push(arguments[i__5594__auto___24590]);
      var G__24591 = i__5594__auto___24590 + 1;
      i__5594__auto___24590 = G__24591;
      continue;
    } else {
    }
    break;
  }
  var G__24588 = args24586.length;
  switch(G__24588) {
    case 0:
      return tiltontec.cell.base.cells_reset.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return tiltontec.cell.base.cells_reset.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24586.length)].join(""));;
  }
};
tiltontec.cell.base.cells_reset.cljs$core$IFn$_invoke$arity$0 = function() {
  return tiltontec.cell.base.cells_reset.call(null, cljs.core.PersistentArrayMap.EMPTY);
};
tiltontec.cell.base.cells_reset.cljs$core$IFn$_invoke$arity$1 = function(options) {
  cljs.core.reset_BANG_.call(null, tiltontec.cell.base._PLUS_c_debug_PLUS_, (new cljs.core.Keyword(null, "debug", "debug", -1608172596)).cljs$core$IFn$_invoke$arity$2(options, false));
  cljs.core.reset_BANG_.call(null, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_), 0);
  return cljs.core.reset_BANG_.call(null, tiltontec.cell.base._PLUS_client_q_handler_PLUS_, (new cljs.core.Keyword(null, "client-queue-handler", "client-queue-handler", -817174181)).cljs$core$IFn$_invoke$arity$1(options));
};
tiltontec.cell.base.cells_reset.cljs$lang$maxFixedArity = 1;
tiltontec.cell.base.without_c_dependency = function tiltontec$cell$base$without_c_dependency() {
  var args__5600__auto__ = [];
  var len__5593__auto___24596 = arguments.length;
  var i__5594__auto___24597 = 0;
  while (true) {
    if (i__5594__auto___24597 < len__5593__auto___24596) {
      args__5600__auto__.push(arguments[i__5594__auto___24597]);
      var G__24598 = i__5594__auto___24597 + 1;
      i__5594__auto___24597 = G__24598;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.base.without_c_dependency.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.base.without_c_dependency.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "binding", "cljs.core/binding", 2050379843, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "*depender*", "tiltontec.cell.base/*depender*", 
  1302959745, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, null)))))), body)));
};
tiltontec.cell.base.without_c_dependency.cljs$lang$maxFixedArity = 2;
tiltontec.cell.base.without_c_dependency.cljs$lang$applyTo = function(seq24593) {
  var G__24594 = cljs.core.first.call(null, seq24593);
  var seq24593__$1 = cljs.core.next.call(null, seq24593);
  var G__24595 = cljs.core.first.call(null, seq24593__$1);
  var seq24593__$2 = cljs.core.next.call(null, seq24593__$1);
  return tiltontec.cell.base.without_c_dependency.cljs$core$IFn$_invoke$arity$variadic(G__24594, G__24595, seq24593__$2);
};
tiltontec.cell.base.without_c_dependency.cljs$lang$macro = true;
tiltontec.cell.base._PLUS_cause = function tiltontec$cell$base$_PLUS_cause() {
  return cljs.core.first.call(null, tiltontec.cell.base._STAR_causation_STAR_);
};
tiltontec.cell.base.c_stopper = function tiltontec$cell$base$c_stopper(why) {
  return cljs.core.reset_BANG_.call(null, tiltontec.cell.base._PLUS_stop_PLUS_, why);
};
tiltontec.cell.base._PLUS_c_stopper_PLUS_ = cljs.core.atom.call(null, tiltontec.cell.base.c_stopper);
tiltontec.cell.base.c_stop = function tiltontec$cell$base$c_stop() {
  var args24599 = [];
  var len__5593__auto___24602 = arguments.length;
  var i__5594__auto___24603 = 0;
  while (true) {
    if (i__5594__auto___24603 < len__5593__auto___24602) {
      args24599.push(arguments[i__5594__auto___24603]);
      var G__24604 = i__5594__auto___24603 + 1;
      i__5594__auto___24603 = G__24604;
      continue;
    } else {
    }
    break;
  }
  var G__24601 = args24599.length;
  switch(G__24601) {
    case 0:
      return tiltontec.cell.base.c_stop.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return tiltontec.cell.base.c_stop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24599.length)].join(""));;
  }
};
tiltontec.cell.base.c_stop.cljs$core$IFn$_invoke$arity$0 = function() {
  return tiltontec.cell.base.c_stop.call(null, true);
};
tiltontec.cell.base.c_stop.cljs$core$IFn$_invoke$arity$1 = function(why) {
  return cljs.core.deref.call(null, tiltontec.cell.base._PLUS_c_stopper_PLUS_).call(null, why);
};
tiltontec.cell.base.c_stop.cljs$lang$maxFixedArity = 1;
tiltontec.cell.base.c_stopped = function tiltontec$cell$base$c_stopped() {
  return cljs.core.deref.call(null, tiltontec.cell.base._PLUS_stop_PLUS_);
};
tiltontec.cell.base.un_stopped = function tiltontec$cell$base$un_stopped() {
  var args__5600__auto__ = [];
  var len__5593__auto___24609 = arguments.length;
  var i__5594__auto___24610 = 0;
  while (true) {
    if (i__5594__auto___24610 < len__5593__auto___24609) {
      args__5600__auto__.push(arguments[i__5594__auto___24610]);
      var G__24611 = i__5594__auto___24610 + 1;
      i__5594__auto___24610 = G__24611;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.base.un_stopped.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.base.un_stopped.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "when-not", "cljs.core/when-not", -556141047, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "+stop+", "tiltontec.cell.base/+stop+", 1421569483, null)))))), body)));
};
tiltontec.cell.base.un_stopped.cljs$lang$maxFixedArity = 2;
tiltontec.cell.base.un_stopped.cljs$lang$applyTo = function(seq24606) {
  var G__24607 = cljs.core.first.call(null, seq24606);
  var seq24606__$1 = cljs.core.next.call(null, seq24606);
  var G__24608 = cljs.core.first.call(null, seq24606__$1);
  var seq24606__$2 = cljs.core.next.call(null, seq24606__$1);
  return tiltontec.cell.base.un_stopped.cljs$core$IFn$_invoke$arity$variadic(G__24607, G__24608, seq24606__$2);
};
tiltontec.cell.base.un_stopped.cljs$lang$macro = true;
tiltontec.cell.base.ustack$ = function tiltontec$cell$base$ustack$(tag) {
  return [cljs.core.str(tag), cljs.core.str("ustack\x3e "), cljs.core.str(cljs.core.vec.call(null, cljs.core.map.call(null, function(c) {
    return (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c));
  }, tiltontec.cell.base._STAR_call_stack_STAR_)))].join("");
};
tiltontec.cell.base.c_assert = function tiltontec$cell$base$c_assert() {
  var args24612 = [];
  var len__5593__auto___24618 = arguments.length;
  var i__5594__auto___24619 = 0;
  while (true) {
    if (i__5594__auto___24619 < len__5593__auto___24618) {
      args24612.push(arguments[i__5594__auto___24619]);
      var G__24620 = i__5594__auto___24619 + 1;
      i__5594__auto___24619 = G__24620;
      continue;
    } else {
    }
    break;
  }
  var G__24617 = args24612.length;
  switch(G__24617) {
    case 1:
      return tiltontec.cell.base.c_assert.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5612__auto__ = new cljs.core.IndexedSeq(args24612.slice(2), 0);
      return tiltontec.cell.base.c_assert.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5612__auto__);
  }
};
tiltontec.cell.base.c_assert.cljs$core$IFn$_invoke$arity$1 = function(assertion) {
  if (cljs.core.truth_(assertion)) {
    return null;
  } else {
    return tiltontec.util.core.err.call(null, "c-assert anon failed");
  }
};
tiltontec.cell.base.c_assert.cljs$core$IFn$_invoke$arity$variadic = function(assertion, fmt$, fmt_args) {
  if (cljs.core.truth_(tiltontec.cell.base._PLUS_stop_PLUS_)) {
    return null;
  } else {
    if (cljs.core.truth_(assertion)) {
      return null;
    } else {
      return cljs.core.apply.call(null, new cljs.core.Var(function() {
        return tiltontec.util.core.err;
      }, new cljs.core.Symbol("tiltontec.util.core", "err", "tiltontec.util.core/err", -267832473, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core", "tiltontec.util.core", -133870969, null), new cljs.core.Symbol(null, "err", "err", -448925678, null), "src/tiltontec/util/core.cljc", 16, 3, 45, 45, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core.err) ? tiltontec.util.core.err.cljs$lang$test : 
      null])), [cljs.core.str("c-assert\x3e "), cljs.core.str(fmt$), cljs.core.str(fmt_args)].join(""));
    }
  }
};
tiltontec.cell.base.c_assert.cljs$lang$applyTo = function(seq24613) {
  var G__24614 = cljs.core.first.call(null, seq24613);
  var seq24613__$1 = cljs.core.next.call(null, seq24613);
  var G__24615 = cljs.core.first.call(null, seq24613__$1);
  var seq24613__$2 = cljs.core.next.call(null, seq24613__$1);
  return tiltontec.cell.base.c_assert.cljs$core$IFn$_invoke$arity$variadic(G__24614, G__24615, seq24613__$2);
};
tiltontec.cell.base.c_assert.cljs$lang$maxFixedArity = 2;
tiltontec.cell.base.c_break = function tiltontec$cell$base$c_break() {
  var args__5600__auto__ = [];
  var len__5593__auto___24623 = arguments.length;
  var i__5594__auto___24624 = 0;
  while (true) {
    if (i__5594__auto___24624 < len__5593__auto___24623) {
      args__5600__auto__.push(arguments[i__5594__auto___24624]);
      var G__24625 = i__5594__auto___24624 + 1;
      i__5594__auto___24624 = G__24625;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return tiltontec.cell.base.c_break.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
tiltontec.cell.base.c_break.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (cljs.core.truth_(tiltontec.cell.base._PLUS_stop_PLUS_)) {
    return null;
  } else {
    return tiltontec.util.core.err.call(null, [cljs.core.str(args)].join(""));
  }
};
tiltontec.cell.base.c_break.cljs$lang$maxFixedArity = 0;
tiltontec.cell.base.c_break.cljs$lang$applyTo = function(seq24622) {
  return tiltontec.cell.base.c_break.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq24622));
};
tiltontec.cell.base.c_warn = function tiltontec$cell$base$c_warn() {
  var args__5600__auto__ = [];
  var len__5593__auto___24627 = arguments.length;
  var i__5594__auto___24628 = 0;
  while (true) {
    if (i__5594__auto___24628 < len__5593__auto___24627) {
      args__5600__auto__.push(arguments[i__5594__auto___24628]);
      var G__24629 = i__5594__auto___24628 + 1;
      i__5594__auto___24628 = G__24629;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return tiltontec.cell.base.c_warn.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
tiltontec.cell.base.c_warn.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (cljs.core.truth_(tiltontec.cell.base._PLUS_stop_PLUS_)) {
    return null;
  } else {
    return cljs.core.println.call(null, cljs.core.apply.call(null, cljs.core.str, "WARNING: ", args));
  }
};
tiltontec.cell.base.c_warn.cljs$lang$maxFixedArity = 0;
tiltontec.cell.base.c_warn.cljs$lang$applyTo = function(seq24626) {
  return tiltontec.cell.base.c_warn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq24626));
};
if (typeof tiltontec.cell.base.ia_types !== "undefined") {
} else {
  tiltontec.cell.base.ia_types = cljs.core.derive.call(null, cljs.core.derive.call(null, cljs.core.derive.call(null, cljs.core.make_hierarchy.call(null), new cljs.core.Keyword("tiltontec.cell.base", "model", "tiltontec.cell.base/model", 284743830), new cljs.core.Keyword("tiltontec.cell.base", "object", "tiltontec.cell.base/object", 1595927066)), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071), new cljs.core.Keyword("tiltontec.cell.base", "object", "tiltontec.cell.base/object", 
  1595927066)), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071));
}
tiltontec.cell.base.ia_type_QMARK_ = function tiltontec$cell$base$ia_type_QMARK_(it, typ) {
  return cljs.core.isa_QMARK_.call(null, tiltontec.cell.base.ia_types, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, it)), typ);
};
tiltontec.cell.base.c_formula_QMARK_ = function tiltontec$cell$base$c_formula_QMARK_(c) {
  return tiltontec.cell.base.ia_type_QMARK_.call(null, c, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037));
};
tiltontec.cell.base.c_ref_QMARK_ = function tiltontec$cell$base$c_ref_QMARK_(x) {
  return tiltontec.cell.base.ia_type_QMARK_.call(null, x, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071));
};
tiltontec.cell.base.c_me = function tiltontec$cell$base$c_me(ref) {
  return (new cljs.core.Keyword(null, "me", "me", -139006693)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_slot = function tiltontec$cell$base$c_slot(ref) {
  return (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_state = function tiltontec$cell$base$c_state(ref) {
  return (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_input_QMARK_ = function tiltontec$cell$base$c_input_QMARK_(ref) {
  return (new cljs.core.Keyword(null, "input?", "input?", -1792843173)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_rule = function tiltontec$cell$base$c_rule(ref) {
  return (new cljs.core.Keyword(null, "rule", "rule", 729973257)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_pulse = function tiltontec$cell$base$c_pulse(ref) {
  return (new cljs.core.Keyword(null, "pulse", "pulse", -244494476)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_pulse_last_changed = function tiltontec$cell$base$c_pulse_last_changed(ref) {
  return (new cljs.core.Keyword(null, "pulse-last-changed", "pulse-last-changed", 1035703380)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_pulse_observed = function tiltontec$cell$base$c_pulse_observed(ref) {
  return (new cljs.core.Keyword(null, "pulse-observed", "pulse-observed", 595719633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_useds = function tiltontec$cell$base$c_useds(ref) {
  return (new cljs.core.Keyword(null, "useds", "useds", 621350967)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_users = function tiltontec$cell$base$c_users(ref) {
  return (new cljs.core.Keyword(null, "users", "users", -713552705)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_callers = function tiltontec$cell$base$c_callers(ref) {
  return (new cljs.core.Keyword(null, "callers", "callers", -1991542784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_optimize = function tiltontec$cell$base$c_optimize(ref) {
  return (new cljs.core.Keyword(null, "optimize", "optimize", -1912349448)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_ephemeral_QMARK_ = function tiltontec$cell$base$c_ephemeral_QMARK_(ref) {
  return (new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_lazy = function tiltontec$cell$base$c_lazy(ref) {
  return (new cljs.core.Keyword(null, "lazy", "lazy", -424547181)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_synaptic_QMARK_ = function tiltontec$cell$base$c_synaptic_QMARK_(ref) {
  return (new cljs.core.Keyword(null, "synaptic?", "synaptic?", -2113061248)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.cell.base.c_value = function tiltontec$cell$base$c_value(c) {
  if (cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = tiltontec.cell.base.c_ref_QMARK_.call(null, c);
    if (cljs.core.truth_(and__4542__auto__)) {
      return cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, c));
    } else {
      return and__4542__auto__;
    }
  }())) {
    return (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c));
  } else {
    return cljs.core.deref.call(null, c);
  }
};
tiltontec.cell.base.c_optimized_away_QMARK_ = function tiltontec$cell$base$c_optimized_away_QMARK_(c) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
    return !cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, c)) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "optimized-away", "optimized-away", 876765856), (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c)));
  } else {
    return true;
  }
};
tiltontec.cell.base.c_model = function tiltontec$cell$base$c_model(rc) {
  return (new cljs.core.Keyword(null, "me", "me", -139006693)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rc));
};
tiltontec.cell.base.c_slot_name = function tiltontec$cell$base$c_slot_name(rc) {
  return (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rc));
};
tiltontec.cell.base.c_value_state = function tiltontec$cell$base$c_value_state(rc) {
  var v = tiltontec.cell.base.c_value.call(null, rc);
  if (cljs.core._EQ_.call(null, v, tiltontec.cell.base.unbound)) {
    return new cljs.core.Keyword(null, "unbound", "unbound", -1366326654);
  } else {
    if (cljs.core._EQ_.call(null, v, tiltontec.cell.base.uncurrent)) {
      return new cljs.core.Keyword(null, "uncurrent", "uncurrent", -217246265);
    } else {
      return new cljs.core.Keyword(null, "valid", "valid", 155614240);
    }
  }
};
tiltontec.cell.base.c_unbound_QMARK_ = function tiltontec$cell$base$c_unbound_QMARK_(rc) {
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654), tiltontec.cell.base.c_value_state.call(null, rc));
};
tiltontec.cell.base.c_valid_QMARK_ = function tiltontec$cell$base$c_valid_QMARK_(rc) {
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "valid", "valid", 155614240), tiltontec.cell.base.c_value_state.call(null, rc));
};
tiltontec.cell.base.caller_ensure = function tiltontec$cell$base$caller_ensure(used, new_caller) {
  return cljs.core.swap_BANG_.call(null, used, cljs.core.assoc, new cljs.core.Keyword(null, "callers", "callers", -1991542784), cljs.core.conj.call(null, tiltontec.cell.base.c_callers.call(null, used), new_caller));
};
tiltontec.cell.base.caller_drop = function tiltontec$cell$base$caller_drop(used, caller) {
  return cljs.core.swap_BANG_.call(null, used, cljs.core.assoc, new cljs.core.Keyword(null, "callers", "callers", -1991542784), cljs.core.disj.call(null, tiltontec.cell.base.c_callers.call(null, used), caller));
};
tiltontec.cell.base.unlink_from_callers = function tiltontec$cell$base$unlink_from_callers(c) {
  var iter__5307__auto___24638 = function tiltontec$cell$base$unlink_from_callers_$_iter__24634(s__24635) {
    return new cljs.core.LazySeq(null, function() {
      var s__24635__$1 = s__24635;
      while (true) {
        var temp__4425__auto__ = cljs.core.seq.call(null, s__24635__$1);
        if (temp__4425__auto__) {
          var s__24635__$2 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__24635__$2)) {
            var c__5305__auto__ = cljs.core.chunk_first.call(null, s__24635__$2);
            var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
            var b__24637 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
            if (function() {
              var i__24636 = 0;
              while (true) {
                if (i__24636 < size__5306__auto__) {
                  var caller = cljs.core._nth.call(null, c__5305__auto__, i__24636);
                  cljs.core.chunk_append.call(null, b__24637, tiltontec.cell.base.caller_drop.call(null, c, caller));
                  var G__24639 = i__24636 + 1;
                  i__24636 = G__24639;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24637), tiltontec$cell$base$unlink_from_callers_$_iter__24634.call(null, cljs.core.chunk_rest.call(null, s__24635__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24637), null);
            }
          } else {
            var caller = cljs.core.first.call(null, s__24635__$2);
            return cljs.core.cons.call(null, tiltontec.cell.base.caller_drop.call(null, c, caller), tiltontec$cell$base$unlink_from_callers_$_iter__24634.call(null, cljs.core.rest.call(null, s__24635__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  iter__5307__auto___24638.call(null, tiltontec.cell.base.c_callers.call(null, c));
  return tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "callers", "callers", -1991542784), c], null), null);
};
tiltontec.cell.base.c_slots = function tiltontec$cell$base$c_slots(c, k) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  return cljs.core.set.call(null, cljs.core.map.call(null, tiltontec.cell.base.c_slot, k.call(null, cljs.core.deref.call(null, c))));
};
tiltontec.cell.base.md_ref_QMARK_ = function tiltontec$cell$base$md_ref_QMARK_(x) {
  return x instanceof cljs.core.Atom;
};
if (typeof tiltontec.cell.base.mdead_QMARK_ !== "undefined") {
} else {
  tiltontec.cell.base.mdead_QMARK_ = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.cell.base", "mdead?"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(me) {
        if (cljs.core.truth_(function() {
          var or__4554__auto__ = me == null;
          if (or__4554__auto__) {
            return or__4554__auto__;
          } else {
            return tiltontec.cell.base.md_ref_QMARK_.call(null, me);
          }
        }())) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)), cljs.core.list(new cljs.core.Symbol(null, "md-ref?", "md-ref?", 1571167727, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)))))].join(""));
        }
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.type.call(null, cljs.core.truth_(me) ? cljs.core.deref.call(null, me) : null)], null);
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.cell.base.mdead_QMARK_, new cljs.core.Keyword(null, "default", "default", -1987822328), function(me) {
  return false;
});
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.base.md_slot_owning_QMARK_ = function tiltontec$cell$base$md_slot_owning_QMARK_(class_name, slot_name) {
  return false;
};
tiltontec.cell.base.type_isa_test = function tiltontec$cell$base$type_isa_test() {
  return cljs.test.test_var.call(null, tiltontec$cell$base$type_isa_test.cljs$lang$var);
};
tiltontec.cell.base.type_isa_test.cljs$lang$test = function() {
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), tiltontec.cell.base.ia_types);
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core.isa_QMARK_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), 
      new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.isa_QMARK_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), 
      new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e24640) {
    var t__8802__auto__ = e24640;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", 
    -1020749037), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.base.type_isa_test.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.base.type_isa_test;
}, new cljs.core.Symbol("tiltontec.cell.base", "type-isa-test", "tiltontec.cell.base/type-isa-test", 1846115956, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.base", "tiltontec.cell.base", -1575671422, null), new cljs.core.Symbol(null, "type-isa-test", "type-isa-test", -1790163047, null), "src/tiltontec/cell/base.cljc", 26, 4, 205, 205, cljs.core.List.EMPTY, null, 
cljs.core.truth_(tiltontec.cell.base.type_isa_test) ? tiltontec.cell.base.type_isa_test.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env24641 = cljs.test.empty_env.call(null);
  var summary24642 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env24641, summary24642) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env24641);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.base", "tiltontec.cell.base", -1575671422, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__8869__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env24641, summary24642) {
          return function() {
            if (env__8869__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__8869__auto__, env24641, summary24642)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.base.type_isa_test;
        }, new cljs.core.Symbol("tiltontec.cell.base", "type-isa-test", "tiltontec.cell.base/type-isa-test", 1846115956, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.base", "tiltontec.cell.base", -1575671422, null), new cljs.core.Symbol(null, "type-isa-test", "type-isa-test", -1790163047, null), "src/tiltontec/cell/base.cljc", 26, 4, 205, 205, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.base.type_isa_test) ? tiltontec.cell.base.type_isa_test.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env24641, summary24642) {
          return function() {
            if (env__8869__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__8869__auto__, env24641, summary24642)], null));
      }());
    };
  }(env24641, summary24642), function(env24641, summary24642) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.base", "tiltontec.cell.base", -1575671422, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env24641, summary24642)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env24641, summary24642) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary24642, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary24642), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env24641, summary24642)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env24641, summary24642) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env24641);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary24642));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary24642), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env24641, summary24642)], null));
}());
goog.provide("tiltontec.cell.observer");
goog.require("cljs.core");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
tiltontec.cell.observer.type_cljc = function tiltontec$cell$observer$type_cljc(x) {
  var or__4554__auto__ = function() {
    var temp__4425__auto__ = cljs.core.meta.call(null, x);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var m = temp__4425__auto__;
      return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m);
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__4554__auto__)) {
    return or__4554__auto__;
  } else {
    return cljs.core.type.call(null, x);
  }
};
if (typeof tiltontec.cell.observer.observe !== "undefined") {
} else {
  tiltontec.cell.observer.observe = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.cell.observer", "observe"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(slot_name, me, new_val, old_val, c) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot_name, tiltontec.cell.observer.type_cljc.call(null, me)], null);
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.Keyword(null, "default", "default", -1987822328), function(slot, me, new_val, old_val, c) {
  return null;
});
tiltontec.cell.observer.defobserver = function tiltontec$cell$observer$defobserver() {
  var args__5600__auto__ = [];
  var len__5593__auto___24651 = arguments.length;
  var i__5594__auto___24652 = 0;
  while (true) {
    if (i__5594__auto___24652 < len__5593__auto___24651) {
      args__5600__auto__.push(arguments[i__5594__auto___24652]);
      var G__24653 = i__5594__auto___24652 + 1;
      i__5594__auto___24652 = G__24653;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 5 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(5), 0) : null;
  return tiltontec.cell.observer.defobserver.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5601__auto__);
};
tiltontec.cell.observer.defobserver.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, slot, types, params, body) {
  if (slot instanceof cljs.core.Keyword) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("defobserver\x3e slot should be a keyword."), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "slot", "slot", 1880761098, null))))].join(""));
  }
  var ftypes = cljs.core.concat.call(null, types, cljs.core.take_last.call(null, 1 - cljs.core.count.call(null, types), cljs.core.list(new cljs.core.Keyword("tiltontec.cell.base", "model", "tiltontec.cell.base/model", 284743830))));
  var fparams = cljs.core.concat.call(null, params, cljs.core.take_last.call(null, 4 - cljs.core.count.call(null, params), cljs.core.list(new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null), new cljs.core.Symbol(null, "old-value", "old-value", -1791888974, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))));
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "defmethod", "cljs.core/defmethod", -180785162, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.observer", "observe", "tiltontec.cell.observer/observe", -883619497, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, slot), ftypes))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "slot", "slot", 1880761098, null)), fparams))))), body)));
};
tiltontec.cell.observer.defobserver.cljs$lang$maxFixedArity = 5;
tiltontec.cell.observer.defobserver.cljs$lang$applyTo = function(seq24645) {
  var G__24646 = cljs.core.first.call(null, seq24645);
  var seq24645__$1 = cljs.core.next.call(null, seq24645);
  var G__24647 = cljs.core.first.call(null, seq24645__$1);
  var seq24645__$2 = cljs.core.next.call(null, seq24645__$1);
  var G__24648 = cljs.core.first.call(null, seq24645__$2);
  var seq24645__$3 = cljs.core.next.call(null, seq24645__$2);
  var G__24649 = cljs.core.first.call(null, seq24645__$3);
  var seq24645__$4 = cljs.core.next.call(null, seq24645__$3);
  var G__24650 = cljs.core.first.call(null, seq24645__$4);
  var seq24645__$5 = cljs.core.next.call(null, seq24645__$4);
  return tiltontec.cell.observer.defobserver.cljs$core$IFn$_invoke$arity$variadic(G__24646, G__24647, G__24648, G__24649, G__24650, seq24645__$5);
};
tiltontec.cell.observer.defobserver.cljs$lang$macro = true;
tiltontec.cell.observer.fn_obs = function tiltontec$cell$observer$fn_obs() {
  var args__5600__auto__ = [];
  var len__5593__auto___24657 = arguments.length;
  var i__5594__auto___24658 = 0;
  while (true) {
    if (i__5594__auto___24658 < len__5593__auto___24657) {
      args__5600__auto__.push(arguments[i__5594__auto___24658]);
      var G__24659 = i__5594__auto___24658 + 1;
      i__5594__auto___24658 = G__24659;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.observer.fn_obs.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.observer.fn_obs.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "slot", "slot", 1880761098, null)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "new", "new", -444906321, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "old", "old", -184691163, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "c", "c", -122660552, null))))))), body)));
};
tiltontec.cell.observer.fn_obs.cljs$lang$maxFixedArity = 2;
tiltontec.cell.observer.fn_obs.cljs$lang$applyTo = function(seq24654) {
  var G__24655 = cljs.core.first.call(null, seq24654);
  var seq24654__$1 = cljs.core.next.call(null, seq24654);
  var G__24656 = cljs.core.first.call(null, seq24654__$1);
  var seq24654__$2 = cljs.core.next.call(null, seq24654__$1);
  return tiltontec.cell.observer.fn_obs.cljs$core$IFn$_invoke$arity$variadic(G__24655, G__24656, seq24654__$2);
};
tiltontec.cell.observer.fn_obs.cljs$lang$macro = true;
tiltontec.cell.observer.c_observe = function tiltontec$cell$observer$c_observe() {
  var args24660 = [];
  var len__5593__auto___24663 = arguments.length;
  var i__5594__auto___24664 = 0;
  while (true) {
    if (i__5594__auto___24664 < len__5593__auto___24663) {
      args24660.push(arguments[i__5594__auto___24664]);
      var G__24665 = i__5594__auto___24664 + 1;
      i__5594__auto___24664 = G__24665;
      continue;
    } else {
    }
    break;
  }
  var G__24662 = args24660.length;
  switch(G__24662) {
    case 2:
      return tiltontec.cell.observer.c_observe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return tiltontec.cell.observer.c_observe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24660.length)].join(""));;
  }
};
tiltontec.cell.observer.c_observe.cljs$core$IFn$_invoke$arity$2 = function(c, why) {
  return tiltontec.cell.observer.c_observe.call(null, c, tiltontec.cell.base.unbound, why);
};
tiltontec.cell.observer.c_observe.cljs$core$IFn$_invoke$arity$3 = function(c, prior_value, why) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pulse-observed", "pulse-observed", 595719633), c], null), cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_));
  return function() {
    var or__4554__auto__ = (new cljs.core.Keyword(null, "obs", "obs", -664011444)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c));
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return tiltontec.cell.observer.observe;
    }
  }().call(null, tiltontec.cell.base.c_slot.call(null, c), tiltontec.cell.base.c_model.call(null, c), tiltontec.cell.base.c_value.call(null, c), prior_value, c);
};
tiltontec.cell.observer.c_observe.cljs$lang$maxFixedArity = 3;
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function clojure$set$bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__18150_SHARP_) {
      return max === p1__18150_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function clojure$set$union() {
  var args18151 = [];
  var len__6622__auto___18157 = arguments.length;
  var i__6623__auto___18158 = 0;
  while (true) {
    if (i__6623__auto___18158 < len__6622__auto___18157) {
      args18151.push(arguments[i__6623__auto___18158]);
      var G__18159 = i__6623__auto___18158 + 1;
      i__6623__auto___18158 = G__18159;
      continue;
    } else {
    }
    break;
  }
  var G__18156 = args18151.length;
  switch(G__18156) {
    case 0:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18151.slice(2), 0);
      return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.union.cljs$lang$applyTo = function(seq18152) {
  var G__18153 = cljs.core.first.call(null, seq18152);
  var seq18152__$1 = cljs.core.next.call(null, seq18152);
  var G__18154 = cljs.core.first.call(null, seq18152__$1);
  var seq18152__$2 = cljs.core.next.call(null, seq18152__$1);
  return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(G__18153, G__18154, seq18152__$2);
};
clojure.set.union.cljs$lang$maxFixedArity = 2;
clojure.set.intersection = function clojure$set$intersection() {
  var args18162 = [];
  var len__6622__auto___18168 = arguments.length;
  var i__6623__auto___18169 = 0;
  while (true) {
    if (i__6623__auto___18169 < len__6622__auto___18168) {
      args18162.push(arguments[i__6623__auto___18169]);
      var G__18170 = i__6623__auto___18169 + 1;
      i__6623__auto___18169 = G__18170;
      continue;
    } else {
    }
    break;
  }
  var G__18167 = args18162.length;
  switch(G__18167) {
    case 1:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18162.slice(2), 0);
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  while (true) {
    if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
      var G__18172 = s2;
      var G__18173 = s1;
      s1 = G__18172;
      s2 = G__18173;
      continue;
    } else {
      return cljs.core.reduce.call(null, function(s1, s2) {
        return function(result, item) {
          if (cljs.core.contains_QMARK_.call(null, s2, item)) {
            return result;
          } else {
            return cljs.core.disj.call(null, result, item);
          }
        };
      }(s1, s2), s1, s1);
    }
    break;
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__18161_SHARP_) {
    return -cljs.core.count.call(null, p1__18161_SHARP_);
  }, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, clojure.set.intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.intersection.cljs$lang$applyTo = function(seq18163) {
  var G__18164 = cljs.core.first.call(null, seq18163);
  var seq18163__$1 = cljs.core.next.call(null, seq18163);
  var G__18165 = cljs.core.first.call(null, seq18163__$1);
  var seq18163__$2 = cljs.core.next.call(null, seq18163__$1);
  return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(G__18164, G__18165, seq18163__$2);
};
clojure.set.intersection.cljs$lang$maxFixedArity = 2;
clojure.set.difference = function clojure$set$difference() {
  var args18174 = [];
  var len__6622__auto___18180 = arguments.length;
  var i__6623__auto___18181 = 0;
  while (true) {
    if (i__6623__auto___18181 < len__6622__auto___18180) {
      args18174.push(arguments[i__6623__auto___18181]);
      var G__18182 = i__6623__auto___18181 + 1;
      i__6623__auto___18181 = G__18182;
      continue;
    } else {
    }
    break;
  }
  var G__18179 = args18174.length;
  switch(G__18179) {
    case 1:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__6641__auto__ = new cljs.core.IndexedSeq(args18174.slice(2), 0);
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__6641__auto__);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, function(result, item) {
      if (cljs.core.contains_QMARK_.call(null, s2, item)) {
        return cljs.core.disj.call(null, result, item);
      } else {
        return result;
      }
    }, s1, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  return cljs.core.reduce.call(null, clojure.set.difference, s1, cljs.core.conj.call(null, sets, s2));
};
clojure.set.difference.cljs$lang$applyTo = function(seq18175) {
  var G__18176 = cljs.core.first.call(null, seq18175);
  var seq18175__$1 = cljs.core.next.call(null, seq18175);
  var G__18177 = cljs.core.first.call(null, seq18175__$1);
  var seq18175__$2 = cljs.core.next.call(null, seq18175__$1);
  return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(G__18176, G__18177, seq18175__$2);
};
clojure.set.difference.cljs$lang$maxFixedArity = 2;
clojure.set.select = function clojure$set$select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function clojure$set$project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__18184_SHARP_) {
    return cljs.core.select_keys.call(null, p1__18184_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function clojure$set$rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__18187) {
    var vec__18188 = p__18187;
    var old = cljs.core.nth.call(null, vec__18188, 0, null);
    var new$ = cljs.core.nth.call(null, vec__18188, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function clojure$set$rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__18189_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__18189_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function clojure$set$index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function clojure$set$map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__18192) {
    var vec__18193 = p__18192;
    var k = cljs.core.nth.call(null, vec__18193, 0, null);
    var v = cljs.core.nth.call(null, vec__18193, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function clojure$set$join() {
  var args18198 = [];
  var len__6622__auto___18203 = arguments.length;
  var i__6623__auto___18204 = 0;
  while (true) {
    if (i__6623__auto___18204 < len__6622__auto___18203) {
      args18198.push(arguments[i__6623__auto___18204]);
      var G__18205 = i__6623__auto___18204 + 1;
      i__6623__auto___18204 = G__18205;
      continue;
    } else {
    }
    break;
  }
  var G__18200 = args18198.length;
  switch(G__18200) {
    case 2:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18198.length)].join(""));;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$2 = function(xrel, yrel) {
  if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
    var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
    var vec__18201 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
    var r = cljs.core.nth.call(null, vec__18201, 0, null);
    var s = cljs.core.nth.call(null, vec__18201, 1, null);
    var idx = clojure.set.index.call(null, r, ks);
    return cljs.core.reduce.call(null, function(ks, vec__18201, r, s, idx) {
      return function(ret, x) {
        var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, ks, vec__18201, r, s, idx) {
            return function(p1__18194_SHARP_, p2__18195_SHARP_) {
              return cljs.core.conj.call(null, p1__18194_SHARP_, cljs.core.merge.call(null, p2__18195_SHARP_, x));
            };
          }(found, ks, vec__18201, r, s, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(ks, vec__18201, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
  } else {
    return cljs.core.PersistentHashSet.EMPTY;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$3 = function(xrel, yrel, km) {
  var vec__18202 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
  var r = cljs.core.nth.call(null, vec__18202, 0, null);
  var s = cljs.core.nth.call(null, vec__18202, 1, null);
  var k = cljs.core.nth.call(null, vec__18202, 2, null);
  var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
  return cljs.core.reduce.call(null, function(vec__18202, r, s, k, idx) {
    return function(ret, x) {
      var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
      if (cljs.core.truth_(found)) {
        return cljs.core.reduce.call(null, function(found, vec__18202, r, s, k, idx) {
          return function(p1__18196_SHARP_, p2__18197_SHARP_) {
            return cljs.core.conj.call(null, p1__18196_SHARP_, cljs.core.merge.call(null, p2__18197_SHARP_, x));
          };
        }(found, vec__18202, r, s, k, idx), ret, found);
      } else {
        return ret;
      }
    };
  }(vec__18202, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
};
clojure.set.join.cljs$lang$maxFixedArity = 3;
clojure.set.subset_QMARK_ = function clojure$set$subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__18207_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__18207_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function clojure$set$superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__18208_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__18208_SHARP_);
  }, set2);
};
goog.provide("tiltontec.cell.integrity");
goog.require("cljs.core");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.integrity._STAR_one_pulse_QMARK__STAR_ = false;
tiltontec.cell.integrity._STAR_dp_log_STAR_ = false;
tiltontec.cell.integrity.data_pulse_next = function tiltontec$cell$integrity$data_pulse_next() {
  var args24669 = [];
  var len__5593__auto___24672 = arguments.length;
  var i__5594__auto___24673 = 0;
  while (true) {
    if (i__5594__auto___24673 < len__5593__auto___24672) {
      args24669.push(arguments[i__5594__auto___24673]);
      var G__24674 = i__5594__auto___24673 + 1;
      i__5594__auto___24673 = G__24674;
      continue;
    } else {
    }
    break;
  }
  var G__24671 = args24669.length;
  switch(G__24671) {
    case 0:
      return tiltontec.cell.integrity.data_pulse_next.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return tiltontec.cell.integrity.data_pulse_next.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24669.length)].join(""));;
  }
};
tiltontec.cell.integrity.data_pulse_next.cljs$core$IFn$_invoke$arity$0 = function() {
  return tiltontec.cell.integrity.data_pulse_next.call(null, new cljs.core.Keyword(null, "anon", "anon", -765650478));
};
tiltontec.cell.integrity.data_pulse_next.cljs$core$IFn$_invoke$arity$1 = function(pulse_info) {
  if (cljs.core.truth_(tiltontec.cell.integrity._STAR_one_pulse_QMARK__STAR_)) {
    return null;
  } else {
    if (cljs.core.truth_(tiltontec.cell.integrity._STAR_dp_log_STAR_)) {
      tiltontec.util.base.call_trc.call(null, "dp-next\x3e ", cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) + 1, pulse_info);
    } else {
    }
    return cljs.core.swap_BANG_.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_, cljs.core.inc);
  }
};
tiltontec.cell.integrity.data_pulse_next.cljs$lang$maxFixedArity = 1;
tiltontec.cell.integrity.c_current_QMARK_ = function tiltontec$cell$integrity$c_current_QMARK_(c) {
  return cljs.core._EQ_.call(null, tiltontec.cell.base.c_pulse.call(null, c), cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_));
};
tiltontec.cell.integrity.c_pulse_update = function tiltontec$cell$integrity$c_pulse_update(c, key) {
  if (cljs.core.truth_(tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c))) {
    return null;
  } else {
    if (cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) >= tiltontec.cell.base.c_pulse.call(null, c)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e\x3d", "\x3e\x3d", 1016916022, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)))))].join(""));
    }
    return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "pulse", "pulse", -244494476), cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_));
  }
};
tiltontec.cell.integrity._PLUS_ufb_opcodes_PLUS_ = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388), new cljs.core.Keyword(null, "awaken", "awaken", -1899628152), new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.Keyword(null, "ephemeral-reset", "ephemeral-reset", -1442676603), new cljs.core.Keyword(null, "change", "change", -1163046502)], null);
tiltontec.cell.integrity.unfin_biz = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
  var iter__5307__auto__ = function tiltontec$cell$integrity$iter__24676(s__24677) {
    return new cljs.core.LazySeq(null, function() {
      var s__24677__$1 = s__24677;
      while (true) {
        var temp__4425__auto__ = cljs.core.seq.call(null, s__24677__$1);
        if (temp__4425__auto__) {
          var s__24677__$2 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__24677__$2)) {
            var c__5305__auto__ = cljs.core.chunk_first.call(null, s__24677__$2);
            var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
            var b__24679 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
            if (function() {
              var i__24678 = 0;
              while (true) {
                if (i__24678 < size__5306__auto__) {
                  var i = cljs.core._nth.call(null, c__5305__auto__, i__24678);
                  cljs.core.chunk_append.call(null, b__24679, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY)], null));
                  var G__24680 = i__24678 + 1;
                  i__24678 = G__24680;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24679), tiltontec$cell$integrity$iter__24676.call(null, cljs.core.chunk_rest.call(null, s__24677__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24679), null);
            }
          } else {
            var i = cljs.core.first.call(null, s__24677__$2);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY)], null), tiltontec$cell$integrity$iter__24676.call(null, cljs.core.rest.call(null, s__24677__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__5307__auto__.call(null, tiltontec.cell.integrity._PLUS_ufb_opcodes_PLUS_);
}());
tiltontec.cell.integrity.ufb_queue = function tiltontec$cell$integrity$ufb_queue(opcode) {
  var or__4554__auto__ = opcode.call(null, tiltontec.cell.integrity.unfin_biz);
  if (cljs.core.truth_(or__4554__auto__)) {
    return or__4554__auto__;
  } else {
    return tiltontec.util.core.err.call(null, [cljs.core.str("ufb-queue\x3e opcode unknown: "), cljs.core.str(opcode)].join(""));
  }
};
tiltontec.cell.integrity.ufb_queue_ensure = function tiltontec$cell$integrity$ufb_queue_ensure(opcode) {
  return tiltontec.cell.integrity.ufb_queue.call(null, opcode);
};
tiltontec.cell.integrity.ufb_add = function tiltontec$cell$integrity$ufb_add(opcode, continuation) {
  return tiltontec.util.core.fifo_add.call(null, tiltontec.cell.integrity.ufb_queue_ensure.call(null, opcode), continuation);
};
tiltontec.cell.integrity.ufb_assert_q_empty = function tiltontec$cell$integrity$ufb_assert_q_empty(opcode) {
  var temp__4423__auto__ = tiltontec.util.core.fifo_peek.call(null, tiltontec.cell.integrity.ufb_queue_ensure.call(null, opcode));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var uqp = temp__4423__auto__;
    return tiltontec.util.core.err.call(null, [cljs.core.str("ufb queue %s not empty, viz %s"), cljs.core.str(opcode), cljs.core.str(uqp)].join(""));
  } else {
    return true;
  }
};
tiltontec.cell.integrity._STAR_ufb_do_q_STAR_ = null;
tiltontec.cell.integrity.ufb_do = function tiltontec$cell$integrity$ufb_do() {
  var args24681 = [];
  var len__5593__auto___24685 = arguments.length;
  var i__5594__auto___24686 = 0;
  while (true) {
    if (i__5594__auto___24686 < len__5593__auto___24685) {
      args24681.push(arguments[i__5594__auto___24686]);
      var G__24687 = i__5594__auto___24686 + 1;
      i__5594__auto___24686 = G__24687;
      continue;
    } else {
    }
    break;
  }
  var G__24683 = args24681.length;
  switch(G__24683) {
    case 1:
      return tiltontec.cell.integrity.ufb_do.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return tiltontec.cell.integrity.ufb_do.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24681.length)].join(""));;
  }
};
tiltontec.cell.integrity.ufb_do.cljs$core$IFn$_invoke$arity$1 = function(opcode) {
  return tiltontec.cell.integrity.ufb_do.call(null, tiltontec.cell.integrity.ufb_queue.call(null, opcode), opcode);
};
tiltontec.cell.integrity.ufb_do.cljs$core$IFn$_invoke$arity$2 = function(q, opcode) {
  while (true) {
    var temp__4425__auto__ = tiltontec.util.core.fifo_pop.call(null, q);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__24684 = temp__4425__auto__;
      var defer_info = cljs.core.nth.call(null, vec__24684, 0, null);
      var task = cljs.core.nth.call(null, vec__24684, 1, null);
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "ufb-do-yep", "ufb-do-yep", -2077548937), defer_info, task);
      task.call(null, opcode, defer_info);
      var G__24689 = q;
      var G__24690 = opcode;
      q = G__24689;
      opcode = G__24690;
      continue;
    } else {
      return null;
    }
    break;
  }
};
tiltontec.cell.integrity.ufb_do.cljs$lang$maxFixedArity = 2;
tiltontec.cell.integrity.finish_business = function tiltontec$cell$integrity$finish_business() {
  if (cljs.core.truth_(cljs.core.deref.call(null, tiltontec.cell.base._PLUS_stop_PLUS_))) {
    return null;
  } else {
    var tag = new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388);
    while (true) {
      var G__24693 = tag instanceof cljs.core.Keyword ? tag.fqn : null;
      switch(G__24693) {
        case "tell-dependents":
          tiltontec.cell.integrity.ufb_do.call(null, new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388));
          tiltontec.cell.integrity.ufb_do.call(null, new cljs.core.Keyword(null, "awaken", "awaken", -1899628152));
          var G__24696 = cljs.core.truth_(tiltontec.util.core.fifo_peek.call(null, tiltontec.cell.integrity.ufb_queue_ensure.call(null, new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388)))) ? new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388) : new cljs.core.Keyword(null, "handle-clients", "handle-clients", -1446571173);
          tag = G__24696;
          continue;
          break;
        case "handle-clients":
          var temp__4425__auto__ = tiltontec.cell.integrity.ufb_queue.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117));
          if (cljs.core.truth_(temp__4425__auto__)) {
            var clientq = temp__4425__auto__;
            var temp__4423__auto___24697 = cljs.core.deref.call(null, tiltontec.cell.base._PLUS_client_q_handler_PLUS_);
            if (cljs.core.truth_(temp__4423__auto___24697)) {
              var cqh_24698 = temp__4423__auto___24697;
              cqh_24698.call(null, clientq);
            } else {
              tiltontec.cell.integrity.ufb_do.call(null, clientq, new cljs.core.Keyword(null, "client", "client", -1323448117));
            }
            var G__24699 = cljs.core.truth_(tiltontec.util.core.fifo_peek.call(null, tiltontec.cell.integrity.ufb_queue.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117)))) ? new cljs.core.Keyword(null, "handle-clients", "handle-clients", -1446571173) : new cljs.core.Keyword(null, "ephemeral-reset", "ephemeral-reset", -1442676603);
            tag = G__24699;
            continue;
          } else {
            return null;
          }
          break;
        case "ephemeral-reset":
          tiltontec.cell.integrity.ufb_do.call(null, new cljs.core.Keyword(null, "ephemeral-reset", "ephemeral-reset", -1442676603));
          var G__24700 = new cljs.core.Keyword(null, "deferred-state-change", "deferred-state-change", -1362791478);
          tag = G__24700;
          continue;
          break;
        case "deferred-state-change":
          var temp__4425__auto__ = tiltontec.util.core.fifo_pop.call(null, tiltontec.cell.integrity.ufb_queue.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502)));
          if (cljs.core.truth_(temp__4425__auto__)) {
            var vec__24694 = temp__4425__auto__;
            var defer_info = cljs.core.nth.call(null, vec__24694, 0, null);
            var task_fn = cljs.core.nth.call(null, vec__24694, 1, null);
            tiltontec.cell.integrity.data_pulse_next.call(null, new cljs.core.Keyword(null, "def-state-chg", "def-state-chg", 1797246466));
            task_fn.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502), defer_info);
            var G__24701 = new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388);
            tag = G__24701;
            continue;
          } else {
            return null;
          }
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(tag)].join(""));;
      }
      break;
    }
  }
};
tiltontec.cell.integrity.with_integrity = function tiltontec$cell$integrity$with_integrity() {
  var args__5600__auto__ = [];
  var len__5593__auto___24708 = arguments.length;
  var i__5594__auto___24709 = 0;
  while (true) {
    if (i__5594__auto___24709 < len__5593__auto___24708) {
      args__5600__auto__.push(arguments[i__5594__auto___24709]);
      var G__24710 = i__5594__auto___24709 + 1;
      i__5594__auto___24709 = G__24710;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.integrity.with_integrity.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.integrity.with_integrity.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__24706, body) {
  var vec__24707 = p__24706;
  var opcode = cljs.core.nth.call(null, vec__24707, 0, null);
  var info = cljs.core.nth.call(null, vec__24707, 1, null);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.integrity", "call-with-integrity", "tiltontec.cell.integrity/call-with-integrity", -729981427, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, opcode), cljs.core._conj.call(null, cljs.core.List.EMPTY, info), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "opcode", "opcode", 311089360, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "defer-info", "defer-info", 
  -446799704, null))))))), body)))))));
};
tiltontec.cell.integrity.with_integrity.cljs$lang$maxFixedArity = 3;
tiltontec.cell.integrity.with_integrity.cljs$lang$applyTo = function(seq24702) {
  var G__24703 = cljs.core.first.call(null, seq24702);
  var seq24702__$1 = cljs.core.next.call(null, seq24702);
  var G__24704 = cljs.core.first.call(null, seq24702__$1);
  var seq24702__$2 = cljs.core.next.call(null, seq24702__$1);
  var G__24705 = cljs.core.first.call(null, seq24702__$2);
  var seq24702__$3 = cljs.core.next.call(null, seq24702__$2);
  return tiltontec.cell.integrity.with_integrity.cljs$core$IFn$_invoke$arity$variadic(G__24703, G__24704, G__24705, seq24702__$3);
};
tiltontec.cell.integrity.with_integrity.cljs$lang$macro = true;
tiltontec.cell.integrity.with_cc = function tiltontec$cell$integrity$with_cc(_AMPERSAND_form, _AMPERSAND_env, id, _AMPERSAND_body, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.integrity", "with-integrity", "tiltontec.cell.integrity/with-integrity", -1374442056, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "change", "change", 
  -1163046502)), cljs.core._conj.call(null, cljs.core.List.EMPTY, id))))), body)));
};
tiltontec.cell.integrity.with_cc.cljs$lang$macro = true;
tiltontec.cell.integrity.without_integrity = function tiltontec$cell$integrity$without_integrity() {
  var args__5600__auto__ = [];
  var len__5593__auto___24714 = arguments.length;
  var i__5594__auto___24715 = 0;
  while (true) {
    if (i__5594__auto___24715 < len__5593__auto___24714) {
      args__5600__auto__.push(arguments[i__5594__auto___24715]);
      var G__24716 = i__5594__auto___24715 + 1;
      i__5594__auto___24715 = G__24716;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.integrity.without_integrity.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.integrity.without_integrity.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "binding", "cljs.core/binding", 2050379843, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "*within-integrity*", "tiltontec.cell.base/*within-integrity*", 
  1558744567, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, false), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "*defer-changes*", "tiltontec.cell.base/*defer-changes*", 405681033, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, false), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.integrity", "*call-stack*", "tiltontec.cell.integrity/*call-stack*", 1793416916, null)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.List.EMPTY)))))))))), body)));
};
tiltontec.cell.integrity.without_integrity.cljs$lang$maxFixedArity = 2;
tiltontec.cell.integrity.without_integrity.cljs$lang$applyTo = function(seq24711) {
  var G__24712 = cljs.core.first.call(null, seq24711);
  var seq24711__$1 = cljs.core.next.call(null, seq24711);
  var G__24713 = cljs.core.first.call(null, seq24711__$1);
  var seq24711__$2 = cljs.core.next.call(null, seq24711__$1);
  return tiltontec.cell.integrity.without_integrity.cljs$core$IFn$_invoke$arity$variadic(G__24712, G__24713, seq24711__$2);
};
tiltontec.cell.integrity.without_integrity.cljs$lang$macro = true;
tiltontec.cell.integrity.call_with_integrity = function tiltontec$cell$integrity$call_with_integrity(opcode, defer_info, action) {
  if (cljs.core.truth_(opcode)) {
    if (cljs.core.truth_(tiltontec.util.core.cl_find.call(null, opcode, tiltontec.cell.integrity._PLUS_ufb_opcodes_PLUS_))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid opcode for with-integrity: %s. Allowed values: %s"), cljs.core.str(opcode), cljs.core.str(tiltontec.cell.integrity._PLUS_ufb_opcodes_PLUS_)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cl-find", "cl-find", -402244315, null), new cljs.core.Symbol(null, "opcode", "opcode", 311089360, null), new cljs.core.Symbol(null, "+ufb-opcodes+", 
      "+ufb-opcodes+", -1562699838, null))))].join(""));
    }
  } else {
  }
  if (cljs.core.truth_(cljs.core.deref.call(null, tiltontec.cell.base._PLUS_stop_PLUS_))) {
    return null;
  } else {
    if (cljs.core.truth_(tiltontec.cell.base.c_stopped.call(null))) {
      return cljs.core.println.call(null, new cljs.core.Keyword(null, "cwi-sees-stop!!!!!!!!!!!", "cwi-sees-stop!!!!!!!!!!!", -1009254623));
    } else {
      if (cljs.core.truth_(tiltontec.cell.base._STAR_within_integrity_STAR_)) {
        if (cljs.core.truth_(opcode)) {
          var result__22424__auto__ = new cljs.core.Keyword(null, "deferred-to-ufb-1", "deferred-to-ufb-1", -1094275721);
          tiltontec.cell.integrity.ufb_add.call(null, opcode, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [defer_info, action], null));
          return result__22424__auto__;
        } else {
          return action.call(null, opcode, defer_info);
        }
      } else {
        var _STAR_within_integrity_STAR_24719 = tiltontec.cell.base._STAR_within_integrity_STAR_;
        var _STAR_defer_changes_STAR_24720 = tiltontec.cell.base._STAR_defer_changes_STAR_;
        tiltontec.cell.base._STAR_within_integrity_STAR_ = true;
        tiltontec.cell.base._STAR_defer_changes_STAR_ = false;
        try {
          if (cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) === 0 || cljs.core._EQ_.call(null, opcode, new cljs.core.Keyword(null, "change", "change", -1163046502))) {
            tiltontec.cell.integrity.data_pulse_next.call(null, new cljs.core.Keyword(null, "cwi", "cwi", 1748296377));
          } else {
          }
          var result__22424__auto__ = action.call(null, opcode, defer_info);
          tiltontec.cell.integrity.finish_business.call(null);
          tiltontec.cell.integrity.ufb_assert_q_empty.call(null, new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388));
          tiltontec.cell.integrity.ufb_assert_q_empty.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502));
          return result__22424__auto__;
        } finally {
          tiltontec.cell.base._STAR_defer_changes_STAR_ = _STAR_defer_changes_STAR_24720;
          tiltontec.cell.base._STAR_within_integrity_STAR_ = _STAR_within_integrity_STAR_24719;
        }
      }
    }
  }
};
goog.provide("tiltontec.cell.evaluate");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.integrity");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.evaluate.ephemeral_reset = function tiltontec$cell$evaluate$ephemeral_reset(rc) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ephemeral_QMARK_.call(null, rc))) {
    return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "ephemeral-reset", "ephemeral-reset", -1442676603), rc, function(opcode, defer_info) {
      var temp__4425__auto___24723 = (new cljs.core.Keyword(null, "me", "me", -139006693)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rc));
      if (cljs.core.truth_(temp__4425__auto___24723)) {
        var me_24724 = temp__4425__auto___24723;
        cljs.core.swap_BANG_.call(null, me_24724, cljs.core.assoc, (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rc)), null);
      } else {
      }
      return cljs.core.swap_BANG_.call(null, rc, cljs.core.assoc, new cljs.core.Keyword(null, "value", "value", 305978217), null);
    });
  } else {
    return null;
  }
};
tiltontec.cell.evaluate.record_dependency = function tiltontec$cell$evaluate$record_dependency(used) {
  if (cljs.core.truth_(tiltontec.cell.base.c_optimized_away_QMARK_.call(null, used))) {
    return null;
  } else {
    if (cljs.core.truth_(tiltontec.cell.base._STAR_depender_STAR_)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "*depender*", "*depender*", 1156413950, null)))].join(""));
    }
    tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "reco-dep!!!", "reco-dep!!!", 380319801), new cljs.core.Keyword(null, "used", "used", -1414786177), tiltontec.cell.base.c_slot.call(null, used), new cljs.core.Keyword(null, "caller", "caller", -1275362879), tiltontec.cell.base.c_slot.call(null, tiltontec.cell.base._STAR_depender_STAR_));
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "useds", "useds", 621350967), tiltontec.cell.base._STAR_depender_STAR_], null), cljs.core.conj.call(null, tiltontec.cell.base.c_useds.call(null, tiltontec.cell.base._STAR_depender_STAR_), used));
    return tiltontec.cell.base.caller_ensure.call(null, used, tiltontec.cell.base._STAR_depender_STAR_);
  }
};
tiltontec.cell.evaluate.ensure_value_is_current = function tiltontec$cell$evaluate$ensure_value_is_current(c, debug_id, ensurer) {
  if (cljs.core.truth_(tiltontec.cell.base._STAR_not_to_be_STAR_)) {
    if (cljs.core.truth_(tiltontec.cell.base.c_unbound_QMARK_.call(null, c))) {
      return tiltontec.util.core.err.call(null, "evic\x3e unbound slot %s of model %s", tiltontec.cell.base.c_slot.call(null, c), tiltontec.cell.base.c_model.call(null, c));
    } else {
      if (cljs.core.truth_(tiltontec.cell.base.c_valid_QMARK_.call(null, c))) {
        return tiltontec.cell.base.c_value.call(null, c);
      } else {
        return null;
      }
    }
  } else {
    if (cljs.core.truth_(tiltontec.cell.integrity.c_current_QMARK_.call(null, c))) {
      return tiltontec.cell.base.c_value.call(null, c);
    } else {
      if (cljs.core.truth_(function() {
        var and__4542__auto__ = tiltontec.cell.base.c_input_QMARK_.call(null, c);
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = tiltontec.cell.base.c_valid_QMARK_.call(null, c);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            return cljs.core.not.call(null, function() {
              var and__4542__auto____$2 = tiltontec.cell.base.c_formula_QMARK_.call(null, c);
              if (cljs.core.truth_(and__4542__auto____$2)) {
                return cljs.core._EQ_.call(null, tiltontec.cell.base.c_optimize.call(null, c), new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336)) && tiltontec.cell.base.c_value.call(null, c) == null;
              } else {
                return and__4542__auto____$2;
              }
            }());
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }())) {
        return tiltontec.cell.base.c_value.call(null, c);
      } else {
        if (cljs.core.truth_(function() {
          var temp__4425__auto__ = tiltontec.cell.base.c_model.call(null, c);
          if (cljs.core.truth_(temp__4425__auto__)) {
            var md = temp__4425__auto__;
            return tiltontec.cell.base.mdead_QMARK_.call(null, tiltontec.cell.base.c_model.call(null, c));
          } else {
            return null;
          }
        }())) {
          return tiltontec.util.core.err.call(null, cljs.core.str, "evic\x3e model %s of cell %s is dead", tiltontec.cell.base.c_model.call(null, c), c);
        } else {
          if (cljs.core.truth_(function() {
            var or__4554__auto__ = cljs.core.not.call(null, tiltontec.cell.base.c_valid_QMARK_.call(null, c));
            if (or__4554__auto__) {
              return or__4554__auto__;
            } else {
              var G__24738 = cljs.core.seq.call(null, tiltontec.cell.base.c_useds.call(null, c));
              var vec__24739 = G__24738;
              var used = cljs.core.nth.call(null, vec__24739, 0, null);
              var urest = cljs.core.nthnext.call(null, vec__24739, 1);
              var G__24738__$1 = G__24738;
              while (true) {
                var vec__24740 = G__24738__$1;
                var used__$1 = cljs.core.nth.call(null, vec__24740, 0, null);
                var urest__$1 = cljs.core.nthnext.call(null, vec__24740, 1);
                if (cljs.core.truth_(used__$1)) {
                  tiltontec$cell$evaluate$ensure_value_is_current.call(null, used__$1, new cljs.core.Keyword(null, "nested", "nested", 18943849), c);
                  var or__4554__auto____$1 = tiltontec.cell.base.c_pulse_last_changed.call(null, used__$1) > tiltontec.cell.base.c_pulse.call(null, c);
                  if (or__4554__auto____$1) {
                    return or__4554__auto____$1;
                  } else {
                    var G__24741 = urest__$1;
                    G__24738__$1 = G__24741;
                    continue;
                  }
                } else {
                  return null;
                }
                break;
              }
            }
          }())) {
            if (cljs.core.truth_(tiltontec.cell.integrity.c_current_QMARK_.call(null, c))) {
            } else {
              tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "not-current-so-calc", "not-current-so-calc", 1987242617));
              tiltontec.cell.evaluate.calculate_and_set.call(null, c, new cljs.core.Keyword(null, "evic", "evic", 1309656753), ensurer);
            }
            return tiltontec.cell.base.c_value.call(null, c);
          } else {
            tiltontec.cell.integrity.c_pulse_update.call(null, c, new cljs.core.Keyword(null, "valid-uninfluenced", "valid-uninfluenced", 676756797));
            return tiltontec.cell.base.c_value.call(null, c);
          }
        }
      }
    }
  }
};
tiltontec.cell.evaluate.c_get = function tiltontec$cell$evaluate$c_get(c) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
    var result__22424__auto__ = tiltontec.cell.integrity.call_with_integrity.call(null, null, null, function(opcode, defer_info) {
      var prior_value = tiltontec.cell.base.c_value.call(null, c);
      var result__22424__auto__ = tiltontec.cell.evaluate.ensure_value_is_current.call(null, c, new cljs.core.Keyword(null, "c-read", "c-read", -1481921085), null);
      if (tiltontec.cell.base.c_model.call(null, c) == null && cljs.core._EQ_.call(null, tiltontec.cell.base.c_state.call(null, c), new cljs.core.Keyword(null, "nascent", "nascent", 443401807)) && cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) > tiltontec.cell.base.c_pulse_observed.call(null, c)) {
        tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), c], null), new cljs.core.Keyword(null, "awake", "awake", 1922840899));
        tiltontec.cell.observer.c_observe.call(null, c, prior_value, new cljs.core.Keyword(null, "c-get", "c-get", -1456818517));
        tiltontec.cell.evaluate.ephemeral_reset.call(null, c);
      } else {
      }
      return result__22424__auto__;
    });
    if (cljs.core.truth_(tiltontec.cell.base._STAR_depender_STAR_)) {
      tiltontec.cell.evaluate.record_dependency.call(null, c);
    } else {
    }
    return result__22424__auto__;
  } else {
    if (cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, c))) {
      return cljs.core.deref.call(null, c);
    } else {
      return c;
    }
  }
};
tiltontec.cell.evaluate.calculate_and_set = function tiltontec$cell$evaluate$calculate_and_set(c, dbgid, dbgdata) {
  var raw_value = tiltontec.cell.evaluate.calculate_and_link.call(null, c);
  if (cljs.core.truth_(tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c))) {
    return null;
  } else {
    if (cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, c))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("calc-n-set"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)))))].join(""));
    }
    return tiltontec.cell.evaluate.c_value_assume.call(null, c, raw_value, null);
  }
};
tiltontec.cell.evaluate.calculate_and_link = function tiltontec$cell$evaluate$calculate_and_link(c) {
  var _STAR_call_stack_STAR_24745 = tiltontec.cell.base._STAR_call_stack_STAR_;
  var _STAR_depender_STAR_24746 = tiltontec.cell.base._STAR_depender_STAR_;
  var _STAR_defer_changes_STAR_24747 = tiltontec.cell.base._STAR_defer_changes_STAR_;
  tiltontec.cell.base._STAR_call_stack_STAR_ = cljs.core.cons.call(null, c, tiltontec.cell.base._STAR_call_stack_STAR_);
  tiltontec.cell.base._STAR_depender_STAR_ = c;
  tiltontec.cell.base._STAR_defer_changes_STAR_ = true;
  try {
    tiltontec.cell.evaluate.unlink_from_used.call(null, c, new cljs.core.Keyword(null, "pre-rule-clear", "pre-rule-clear", 258781380));
    if (cljs.core.truth_(tiltontec.cell.base.c_rule.call(null, c))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No rule in %s type %s"), cljs.core.str((new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(c)), cljs.core.str(cljs.core.type.call(null, cljs.core.deref.call(null, c)))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
    }
    return tiltontec.cell.base.c_rule.call(null, c).call(null, c);
  } finally {
    tiltontec.cell.base._STAR_defer_changes_STAR_ = _STAR_defer_changes_STAR_24747;
    tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_24746;
    tiltontec.cell.base._STAR_call_stack_STAR_ = _STAR_call_stack_STAR_24745;
  }
};
if (typeof tiltontec.cell.evaluate.c_awaken !== "undefined") {
} else {
  tiltontec.cell.evaluate.c_awaken = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.cell.evaluate", "c-awaken"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(c) {
        return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, c));
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.cell.evaluate.c_awaken, new cljs.core.Keyword(null, "default", "default", -1987822328), function(c) {
  if (cljs.core.coll_QMARK_.call(null, c)) {
    return cljs.core.doall.call(null, function() {
      var iter__5307__auto__ = function tiltontec$cell$evaluate$iter__24748(s__24749) {
        return new cljs.core.LazySeq(null, function() {
          var s__24749__$1 = s__24749;
          while (true) {
            var temp__4425__auto__ = cljs.core.seq.call(null, s__24749__$1);
            if (temp__4425__auto__) {
              var s__24749__$2 = temp__4425__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__24749__$2)) {
                var c__5305__auto__ = cljs.core.chunk_first.call(null, s__24749__$2);
                var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
                var b__24751 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
                if (function() {
                  var i__24750 = 0;
                  while (true) {
                    if (i__24750 < size__5306__auto__) {
                      var ce = cljs.core._nth.call(null, c__5305__auto__, i__24750);
                      cljs.core.chunk_append.call(null, b__24751, tiltontec.cell.evaluate.c_awaken.call(null, ce));
                      var G__24752 = i__24750 + 1;
                      i__24750 = G__24752;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24751), tiltontec$cell$evaluate$iter__24748.call(null, cljs.core.chunk_rest.call(null, s__24749__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24751), null);
                }
              } else {
                var ce = cljs.core.first.call(null, s__24749__$2);
                return cljs.core.cons.call(null, tiltontec.cell.evaluate.c_awaken.call(null, ce), tiltontec$cell$evaluate$iter__24748.call(null, cljs.core.rest.call(null, s__24749__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__5307__auto__.call(null, c);
    }());
  } else {
    return cljs.core.println.call(null, new cljs.core.Keyword(null, "c-awaken-fall-thru", "c-awaken-fall-thru", -2004606871), cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, c)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ref-of", "ref-of", 1886926194), cljs.core.type.call(null, c), cljs.core.deref.call(null, c)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
    "unref", "unref", -1884894186), c, cljs.core.type.call(null, c)], null));
  }
});
cljs.core._add_method.call(null, tiltontec.cell.evaluate.c_awaken, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071), function(c) {
  if (cljs.core.truth_(tiltontec.cell.base.c_input_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  if (cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) > tiltontec.cell.base.c_pulse_observed.call(null, c)) {
    var temp__4425__auto___24753 = tiltontec.cell.base.c_me.call(null, c);
    if (cljs.core.truth_(temp__4425__auto___24753)) {
      var me_24754 = temp__4425__auto___24753;
      tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.cell.base.c_slot.call(null, c), me_24754], null), tiltontec.cell.base.c_value.call(null, c));
    } else {
    }
    tiltontec.cell.observer.c_observe.call(null, c, new cljs.core.Keyword(null, "cell-awaken", "cell-awaken", 2137807704));
    return tiltontec.cell.evaluate.ephemeral_reset.call(null, c);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, tiltontec.cell.evaluate.c_awaken, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), function(c) {
  var _STAR_depender_STAR_24755 = tiltontec.cell.base._STAR_depender_STAR_;
  tiltontec.cell.base._STAR_depender_STAR_ = null;
  try {
    if (cljs.core.truth_(tiltontec.cell.integrity.c_current_QMARK_.call(null, c))) {
      return null;
    } else {
      return tiltontec.cell.evaluate.calculate_and_set.call(null, c, new cljs.core.Keyword(null, "fn-c-awaken", "fn-c-awaken", 1597115821), null);
    }
  } finally {
    tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_24755;
  }
});
tiltontec.cell.evaluate.md_slot_value_store = function tiltontec$cell$evaluate$md_slot_value_store(me, slot, value) {
  if (cljs.core.truth_(me)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "me", "me", 1501524834, null)))].join(""));
  }
  if (cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, me))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))))].join(""));
  }
  return tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me], null), value);
};
tiltontec.cell.evaluate.c_value_assume = function tiltontec$cell$evaluate$c_value_assume(c, new_value, propagation_code) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  var result__22424__auto__ = new_value;
  var _STAR_depender_STAR_24758_24760 = tiltontec.cell.base._STAR_depender_STAR_;
  tiltontec.cell.base._STAR_depender_STAR_ = null;
  try {
    var prior_value_24761 = tiltontec.cell.base.c_value.call(null, c);
    var prior_state_24762 = tiltontec.cell.base.c_value_state.call(null, c);
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), c], null), new_value);
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), c], null), new cljs.core.Keyword(null, "awake", "awake", 1922840899));
    if (cljs.core.truth_(function() {
      var and__4542__auto__ = tiltontec.cell.base.c_model.call(null, c);
      if (cljs.core.truth_(and__4542__auto__)) {
        return cljs.core.not.call(null, tiltontec.cell.base.c_synaptic_QMARK_.call(null, c));
      } else {
        return and__4542__auto__;
      }
    }())) {
      tiltontec.cell.evaluate.md_slot_value_store.call(null, tiltontec.cell.base.c_model.call(null, c), tiltontec.cell.base.c_slot_name.call(null, c), new_value);
    } else {
    }
    tiltontec.cell.integrity.c_pulse_update.call(null, c, new cljs.core.Keyword(null, "slotv-assume", "slotv-assume", -1071260275));
    if (cljs.core.truth_(function() {
      var or__4554__auto__ = cljs.core._EQ_.call(null, propagation_code, new cljs.core.Keyword(null, "propagate", "propagate", 274376905));
      if (or__4554__auto__) {
        return or__4554__auto__;
      } else {
        var or__4554__auto____$1 = cljs.core.not.call(null, cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([prior_state_24762], true), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "valid", "valid", 155614240), new cljs.core.Keyword(null, "uncurrent", "uncurrent", -217246265)], null)));
        if (or__4554__auto____$1) {
          return or__4554__auto____$1;
        } else {
          return tiltontec.cell.evaluate.c_value_changed_QMARK_.call(null, c, new_value, prior_value_24761);
        }
      }
    }())) {
      var callers_24763 = tiltontec.cell.base.c_callers.call(null, c);
      var temp__4425__auto___24764 = function() {
        var and__4542__auto__ = tiltontec.cell.base.c_formula_QMARK_.call(null, c);
        if (cljs.core.truth_(and__4542__auto__)) {
          return tiltontec.cell.base.c_optimize.call(null, c);
        } else {
          return and__4542__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4425__auto___24764)) {
        var optimize_24765 = temp__4425__auto___24764;
        tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "wtf", "wtf", -1581114577), optimize_24765);
        var G__24759_24766 = optimize_24765;
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336), G__24759_24766)) {
          if (cljs.core.truth_(tiltontec.cell.base.c_value.call(null, c))) {
            tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336), tiltontec.cell.base.c_slot.call(null, c));
            tiltontec.cell.evaluate.unlink_from_used.call(null, c, new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336));
          } else {
          }
        } else {
          if (cljs.core._EQ_.call(null, true, G__24759_24766)) {
            tiltontec.cell.evaluate.optimize_away_QMARK__BANG_.call(null, c, prior_value_24761);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(optimize_24765)].join(""));
          }
        }
      } else {
      }
      if (cljs.core.truth_(function() {
        var or__4554__auto__ = cljs.core._EQ_.call(null, propagation_code, new cljs.core.Keyword(null, "no-propagate", "no-propagate", -573850970));
        if (or__4554__auto__) {
          return or__4554__auto__;
        } else {
          return tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c);
        }
      }())) {
      } else {
        if (cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, c))) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)))))].join(""));
        }
        tiltontec.cell.evaluate.propagate.call(null, c, prior_value_24761, callers_24763);
      }
    } else {
    }
  } finally {
    tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_24758_24760;
  }
  return result__22424__auto__;
};
tiltontec.cell.evaluate.unlink_from_used = function tiltontec$cell$evaluate$unlink_from_used(c, why) {
  var iter__5307__auto___24775 = function tiltontec$cell$evaluate$unlink_from_used_$_iter__24771(s__24772) {
    return new cljs.core.LazySeq(null, function() {
      var s__24772__$1 = s__24772;
      while (true) {
        var temp__4425__auto__ = cljs.core.seq.call(null, s__24772__$1);
        if (temp__4425__auto__) {
          var s__24772__$2 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__24772__$2)) {
            var c__5305__auto__ = cljs.core.chunk_first.call(null, s__24772__$2);
            var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
            var b__24774 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
            if (function() {
              var i__24773 = 0;
              while (true) {
                if (i__24773 < size__5306__auto__) {
                  var used = cljs.core._nth.call(null, c__5305__auto__, i__24773);
                  cljs.core.chunk_append.call(null, b__24774, tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "callers", "callers", -1991542784), used], null), cljs.core.disj.call(null, tiltontec.cell.base.c_callers.call(null, used), c)));
                  var G__24776 = i__24773 + 1;
                  i__24773 = G__24776;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24774), tiltontec$cell$evaluate$unlink_from_used_$_iter__24771.call(null, cljs.core.chunk_rest.call(null, s__24772__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24774), null);
            }
          } else {
            var used = cljs.core.first.call(null, s__24772__$2);
            return cljs.core.cons.call(null, tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "callers", "callers", -1991542784), used], null), cljs.core.disj.call(null, tiltontec.cell.base.c_callers.call(null, used), c)), tiltontec$cell$evaluate$unlink_from_used_$_iter__24771.call(null, cljs.core.rest.call(null, s__24772__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  iter__5307__auto___24775.call(null, tiltontec.cell.base.c_useds.call(null, c));
  return tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "useds", "useds", 621350967), c], null), cljs.core.PersistentHashSet.EMPTY);
};
tiltontec.cell.evaluate.md_cell_flush = function tiltontec$cell$evaluate$md_cell_flush(c) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  var temp__4425__auto__ = tiltontec.cell.base.c_model.call(null, c);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var me = temp__4425__auto__;
    return tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cells-flushed", "cells-flushed", -1653073949), me], null), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "cells-flushed", "cells-flushed", -1653073949)).cljs$core$IFn$_invoke$arity$1(me), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.cell.base.c_slot.call(null, c), tiltontec.cell.base.c_pulse_observed.call(null, 
    c)], null)));
  } else {
    return null;
  }
};
tiltontec.cell.evaluate.optimize_away_QMARK__BANG_ = function tiltontec$cell$evaluate$optimize_away_QMARK__BANG_(c, prior_value) {
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = tiltontec.cell.base.c_formula_QMARK_.call(null, c);
    if (cljs.core.truth_(and__4542__auto__)) {
      var and__4542__auto____$1 = cljs.core.empty_QMARK_.call(null, tiltontec.cell.base.c_useds.call(null, c));
      if (and__4542__auto____$1) {
        var and__4542__auto____$2 = tiltontec.cell.base.c_optimize.call(null, c);
        if (cljs.core.truth_(and__4542__auto____$2)) {
          var and__4542__auto____$3 = cljs.core.not.call(null, tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c));
          if (and__4542__auto____$3) {
            var and__4542__auto____$4 = tiltontec.cell.base.c_valid_QMARK_.call(null, c);
            if (cljs.core.truth_(and__4542__auto____$4)) {
              return cljs.core.not.call(null, tiltontec.cell.base.c_synaptic_QMARK_.call(null, c)) && cljs.core.not.call(null, tiltontec.cell.base.c_input_QMARK_.call(null, c));
            } else {
              return and__4542__auto____$4;
            }
          } else {
            return and__4542__auto____$3;
          }
        } else {
          return and__4542__auto____$2;
        }
      } else {
        return and__4542__auto____$1;
      }
    } else {
      return and__4542__auto__;
    }
  }())) {
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), c], null), new cljs.core.Keyword(null, "optimized-away", "optimized-away", 876765856));
    tiltontec.cell.observer.c_observe.call(null, c, prior_value, new cljs.core.Keyword(null, "opti-away", "opti-away", 1290785499));
    var temp__4425__auto___24785 = tiltontec.cell.base.c_model.call(null, c);
    if (cljs.core.truth_(temp__4425__auto___24785)) {
      var me_24786 = temp__4425__auto___24785;
      tiltontec.util.core.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cz", "cz", 1670864932), me_24786], null), cljs.core.dissoc.call(null, (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me_24786)), tiltontec.cell.base.c_slot.call(null, c)));
      tiltontec.cell.evaluate.md_cell_flush.call(null, c);
    } else {
    }
    var seq__24781_24787 = cljs.core.seq.call(null, cljs.core.seq.call(null, tiltontec.cell.base.c_callers.call(null, c)));
    var chunk__24782_24788 = null;
    var count__24783_24789 = 0;
    var i__24784_24790 = 0;
    while (true) {
      if (i__24784_24790 < count__24783_24789) {
        var caller_24791 = cljs.core._nth.call(null, chunk__24782_24788, i__24784_24790);
        cljs.core.swap_BANG_.call(null, caller_24791, cljs.core.assoc, new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.remove.call(null, cljs.core.PersistentHashSet.fromArray([c], true), tiltontec.cell.base.c_useds.call(null, caller_24791)));
        tiltontec.cell.base.caller_drop.call(null, c, caller_24791);
        tiltontec.cell.evaluate.ensure_value_is_current.call(null, caller_24791, new cljs.core.Keyword(null, "opti-used", "opti-used", 660350789), c);
        var G__24792 = seq__24781_24787;
        var G__24793 = chunk__24782_24788;
        var G__24794 = count__24783_24789;
        var G__24795 = i__24784_24790 + 1;
        seq__24781_24787 = G__24792;
        chunk__24782_24788 = G__24793;
        count__24783_24789 = G__24794;
        i__24784_24790 = G__24795;
        continue;
      } else {
        var temp__4425__auto___24796 = cljs.core.seq.call(null, seq__24781_24787);
        if (temp__4425__auto___24796) {
          var seq__24781_24797__$1 = temp__4425__auto___24796;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__24781_24797__$1)) {
            var c__5338__auto___24798 = cljs.core.chunk_first.call(null, seq__24781_24797__$1);
            var G__24799 = cljs.core.chunk_rest.call(null, seq__24781_24797__$1);
            var G__24800 = c__5338__auto___24798;
            var G__24801 = cljs.core.count.call(null, c__5338__auto___24798);
            var G__24802 = 0;
            seq__24781_24787 = G__24799;
            chunk__24782_24788 = G__24800;
            count__24783_24789 = G__24801;
            i__24784_24790 = G__24802;
            continue;
          } else {
            var caller_24803 = cljs.core.first.call(null, seq__24781_24797__$1);
            cljs.core.swap_BANG_.call(null, caller_24803, cljs.core.assoc, new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.remove.call(null, cljs.core.PersistentHashSet.fromArray([c], true), tiltontec.cell.base.c_useds.call(null, caller_24803)));
            tiltontec.cell.base.caller_drop.call(null, c, caller_24803);
            tiltontec.cell.evaluate.ensure_value_is_current.call(null, caller_24803, new cljs.core.Keyword(null, "opti-used", "opti-used", 660350789), c);
            var G__24804 = cljs.core.next.call(null, seq__24781_24797__$1);
            var G__24805 = null;
            var G__24806 = 0;
            var G__24807 = 0;
            seq__24781_24787 = G__24804;
            chunk__24782_24788 = G__24805;
            count__24783_24789 = G__24806;
            i__24784_24790 = G__24807;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.core.reset_BANG_.call(null, c, tiltontec.cell.base.c_value.call(null, c));
  } else {
    return null;
  }
};
tiltontec.cell.evaluate.c_quiesce = function tiltontec$cell$evaluate$c_quiesce(c) {
  tiltontec.cell.base.unlink_from_callers.call(null, c);
  tiltontec.cell.evaluate.unlink_from_used.call(null, c, new cljs.core.Keyword(null, "quiesce", "quiesce", -798294121));
  return cljs.core.reset_BANG_.call(null, c, new cljs.core.Keyword(null, "dead-c", "dead-c", 385485497));
};
if (typeof tiltontec.cell.evaluate.not_to_be !== "undefined") {
} else {
  tiltontec.cell.evaluate.not_to_be = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.cell.evaluate", "not-to-be"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(me) {
        if (cljs.core.truth_(tiltontec.cell.base.md_ref_QMARK_.call(null, me))) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "md-ref?", "md-ref?", 1571167727, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))))].join(""));
        }
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.type.call(null, cljs.core.truth_(me) ? cljs.core.deref.call(null, me) : null)], null);
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.cell.evaluate.not_to_be, new cljs.core.Keyword(null, "default", "default", -1987822328), function(me) {
  var seq__24808_24812 = cljs.core.seq.call(null, cljs.core.vals.call(null, (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, me))));
  var chunk__24809_24813 = null;
  var count__24810_24814 = 0;
  var i__24811_24815 = 0;
  while (true) {
    if (i__24811_24815 < count__24810_24814) {
      var c_24816 = cljs.core._nth.call(null, chunk__24809_24813, i__24811_24815);
      tiltontec.cell.evaluate.c_quiesce.call(null, c_24816);
      var G__24817 = seq__24808_24812;
      var G__24818 = chunk__24809_24813;
      var G__24819 = count__24810_24814;
      var G__24820 = i__24811_24815 + 1;
      seq__24808_24812 = G__24817;
      chunk__24809_24813 = G__24818;
      count__24810_24814 = G__24819;
      i__24811_24815 = G__24820;
      continue;
    } else {
      var temp__4425__auto___24821 = cljs.core.seq.call(null, seq__24808_24812);
      if (temp__4425__auto___24821) {
        var seq__24808_24822__$1 = temp__4425__auto___24821;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__24808_24822__$1)) {
          var c__5338__auto___24823 = cljs.core.chunk_first.call(null, seq__24808_24822__$1);
          var G__24824 = cljs.core.chunk_rest.call(null, seq__24808_24822__$1);
          var G__24825 = c__5338__auto___24823;
          var G__24826 = cljs.core.count.call(null, c__5338__auto___24823);
          var G__24827 = 0;
          seq__24808_24812 = G__24824;
          chunk__24809_24813 = G__24825;
          count__24810_24814 = G__24826;
          i__24811_24815 = G__24827;
          continue;
        } else {
          var c_24828 = cljs.core.first.call(null, seq__24808_24822__$1);
          tiltontec.cell.evaluate.c_quiesce.call(null, c_24828);
          var G__24829 = cljs.core.next.call(null, seq__24808_24822__$1);
          var G__24830 = null;
          var G__24831 = 0;
          var G__24832 = 0;
          seq__24808_24812 = G__24829;
          chunk__24809_24813 = G__24830;
          count__24810_24814 = G__24831;
          i__24811_24815 = G__24832;
          continue;
        }
      } else {
      }
    }
    break;
  }
  cljs.core.reset_BANG_.call(null, me, null);
  return tiltontec.util.core.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), me], null), new cljs.core.Keyword(null, "dead", "dead", -1946604091));
});
if (typeof tiltontec.cell.evaluate.unchanged_test !== "undefined") {
} else {
  tiltontec.cell.evaluate.unchanged_test = function() {
    var method_table__5448__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5449__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5450__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5451__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5452__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.cell.evaluate", "unchanged-test"), function(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__) {
      return function(me, slot) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(me) ? cljs.core.type.call(null, cljs.core.deref.call(null, me)) : null, slot], null);
      };
    }(method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__, hierarchy__5452__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5452__auto__, method_table__5448__auto__, prefer_table__5449__auto__, method_cache__5450__auto__, cached_hierarchy__5451__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.cell.evaluate.unchanged_test, new cljs.core.Keyword(null, "default", "default", -1987822328), function(self, slotname) {
  return cljs.core._EQ_;
});
tiltontec.cell.evaluate.c_value_changed_QMARK_ = function tiltontec$cell$evaluate$c_value_changed_QMARK_(c, new_value, old_value) {
  return cljs.core.not.call(null, function() {
    var or__4554__auto__ = (new cljs.core.Keyword(null, "unchanged-if", "unchanged-if", -923210106)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c));
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return tiltontec.cell.evaluate.unchanged_test.call(null, tiltontec.cell.base.c_model.call(null, c), tiltontec.cell.base.c_slot.call(null, c));
    }
  }().call(null, new_value, old_value));
};
tiltontec.cell.evaluate._STAR_custom_propagater_STAR_ = null;
tiltontec.cell.evaluate.propagate = function tiltontec$cell$evaluate$propagate(c, prior_value, callers) {
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "propagate", "propagate", 274376905), (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c)));
  if (cljs.core.truth_(tiltontec.cell.integrity._STAR_one_pulse_QMARK__STAR_)) {
    if (cljs.core.truth_(tiltontec.cell.evaluate._STAR_custom_propagater_STAR_)) {
      return tiltontec.cell.evaluate._STAR_custom_propagater_STAR_.call(null, c, prior_value);
    } else {
      return null;
    }
  } else {
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pulse-last-changed", "pulse-last-changed", 1035703380), c], null), cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_));
    var _STAR_depender_STAR_24841 = tiltontec.cell.base._STAR_depender_STAR_;
    var _STAR_call_stack_STAR_24842 = tiltontec.cell.base._STAR_call_stack_STAR_;
    var _STAR_c_prop_depth_STAR_24843 = tiltontec.cell.base._STAR_c_prop_depth_STAR_;
    var _STAR_defer_changes_STAR_24844 = tiltontec.cell.base._STAR_defer_changes_STAR_;
    tiltontec.cell.base._STAR_depender_STAR_ = null;
    tiltontec.cell.base._STAR_call_stack_STAR_ = null;
    tiltontec.cell.base._STAR_c_prop_depth_STAR_ = tiltontec.cell.base._STAR_c_prop_depth_STAR_ + 1;
    tiltontec.cell.base._STAR_defer_changes_STAR_ = true;
    try {
      if (cljs.core.truth_(function() {
        var and__4542__auto__ = prior_value;
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = tiltontec.cell.base.c_model.call(null, c);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            return tiltontec.cell.base.md_slot_owning_QMARK_.call(null, cljs.core.type.call(null, tiltontec.cell.base.c_model.call(null, c)), tiltontec.cell.base.c_slot_name.call(null, c));
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }())) {
        var temp__4425__auto___24849 = clojure.set.difference.call(null, tiltontec.util.core.set_ify.call(null, prior_value), tiltontec.util.core.set_ify.call(null, tiltontec.cell.base.c_value.call(null, c)));
        if (cljs.core.truth_(temp__4425__auto___24849)) {
          var ownees_24850 = temp__4425__auto___24849;
          var seq__24845_24851 = cljs.core.seq.call(null, ownees_24850);
          var chunk__24846_24852 = null;
          var count__24847_24853 = 0;
          var i__24848_24854 = 0;
          while (true) {
            if (i__24848_24854 < count__24847_24853) {
              var ownee_24855 = cljs.core._nth.call(null, chunk__24846_24852, i__24848_24854);
              tiltontec.cell.evaluate.not_to_be.call(null, ownee_24855);
              var G__24856 = seq__24845_24851;
              var G__24857 = chunk__24846_24852;
              var G__24858 = count__24847_24853;
              var G__24859 = i__24848_24854 + 1;
              seq__24845_24851 = G__24856;
              chunk__24846_24852 = G__24857;
              count__24847_24853 = G__24858;
              i__24848_24854 = G__24859;
              continue;
            } else {
              var temp__4425__auto___24860__$1 = cljs.core.seq.call(null, seq__24845_24851);
              if (temp__4425__auto___24860__$1) {
                var seq__24845_24861__$1 = temp__4425__auto___24860__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__24845_24861__$1)) {
                  var c__5338__auto___24862 = cljs.core.chunk_first.call(null, seq__24845_24861__$1);
                  var G__24863 = cljs.core.chunk_rest.call(null, seq__24845_24861__$1);
                  var G__24864 = c__5338__auto___24862;
                  var G__24865 = cljs.core.count.call(null, c__5338__auto___24862);
                  var G__24866 = 0;
                  seq__24845_24851 = G__24863;
                  chunk__24846_24852 = G__24864;
                  count__24847_24853 = G__24865;
                  i__24848_24854 = G__24866;
                  continue;
                } else {
                  var ownee_24867 = cljs.core.first.call(null, seq__24845_24861__$1);
                  tiltontec.cell.evaluate.not_to_be.call(null, ownee_24867);
                  var G__24868 = cljs.core.next.call(null, seq__24845_24861__$1);
                  var G__24869 = null;
                  var G__24870 = 0;
                  var G__24871 = 0;
                  seq__24845_24851 = G__24868;
                  chunk__24846_24852 = G__24869;
                  count__24847_24853 = G__24870;
                  i__24848_24854 = G__24871;
                  continue;
                }
              } else {
              }
            }
            break;
          }
        } else {
        }
      } else {
      }
      tiltontec.cell.evaluate.propagate_to_callers.call(null, c, callers);
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obs-chkpulse!!!!!!!!", "obs-chkpulse!!!!!!!!", 498932923), cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_), tiltontec.cell.base.c_pulse_observed.call(null, c));
      if (cljs.core.truth_(function() {
        var or__4554__auto__ = cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_) > tiltontec.cell.base.c_pulse_observed.call(null, c);
        if (or__4554__auto__) {
          return or__4554__auto__;
        } else {
          return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.cell.base.c_lazy.call(null, c)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854), new cljs.core.Keyword(null, "always", "always", -1772028770), true], null));
        }
      }())) {
        tiltontec.cell.observer.c_observe.call(null, c, prior_value, new cljs.core.Keyword(null, "propagate", "propagate", 274376905));
      } else {
      }
      return tiltontec.cell.evaluate.ephemeral_reset.call(null, c);
    } finally {
      tiltontec.cell.base._STAR_defer_changes_STAR_ = _STAR_defer_changes_STAR_24844;
      tiltontec.cell.base._STAR_c_prop_depth_STAR_ = _STAR_c_prop_depth_STAR_24843;
      tiltontec.cell.base._STAR_call_stack_STAR_ = _STAR_call_stack_STAR_24842;
      tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_24841;
    }
  }
};
tiltontec.cell.evaluate.propagate_to_callers = function tiltontec$cell$evaluate$propagate_to_callers(c, callers) {
  if (cljs.core.empty_QMARK_.call(null, callers)) {
    return null;
  } else {
    var causation = cljs.core.cons.call(null, c, tiltontec.cell.base._STAR_causation_STAR_);
    return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388), c, function(causation) {
      return function(opcode, defer_info) {
        if (cljs.core.truth_(tiltontec.cell.base.mdead_QMARK_.call(null, tiltontec.cell.base.c_model.call(null, c)))) {
          return tiltontec.util.base.call_trc.call(null, "WHOAA!!!! dead by time :tell-deps dispatched; bailing", c);
        } else {
          var _STAR_causation_STAR_24877 = tiltontec.cell.base._STAR_causation_STAR_;
          tiltontec.cell.base._STAR_causation_STAR_ = causation;
          try {
            var seq__24878 = cljs.core.seq.call(null, cljs.core.seq.call(null, callers));
            var chunk__24879 = null;
            var count__24880 = 0;
            var i__24881 = 0;
            while (true) {
              if (i__24881 < count__24880) {
                var caller = cljs.core._nth.call(null, chunk__24879, i__24881);
                if (cljs.core.truth_(function() {
                  var or__4554__auto__ = cljs.core._EQ_.call(null, tiltontec.cell.base.c_state.call(null, caller), new cljs.core.Keyword(null, "quiesced", "quiesced", 421940903));
                  if (or__4554__auto__) {
                    return or__4554__auto__;
                  } else {
                    var or__4554__auto____$1 = tiltontec.cell.integrity.c_current_QMARK_.call(null, caller);
                    if (cljs.core.truth_(or__4554__auto____$1)) {
                      return or__4554__auto____$1;
                    } else {
                      var or__4554__auto____$2 = cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.cell.base.c_lazy.call(null, caller)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.Keyword(null, "always", "always", -1772028770), new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854)], null));
                      if (cljs.core.truth_(or__4554__auto____$2)) {
                        return or__4554__auto____$2;
                      } else {
                        return cljs.core.not.call(null, cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([c], true), tiltontec.cell.base.c_useds.call(null, caller))) && cljs.core.not.call(null, tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c));
                      }
                    }
                  }
                }())) {
                  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "not-propping", "not-propping", 438111539), tiltontec.cell.base.c_slot.call(null, c), new cljs.core.Keyword(null, "to", "to", 192099007), tiltontec.cell.base.c_slot.call(null, caller));
                } else {
                  tiltontec.cell.evaluate.calculate_and_set.call(null, caller, new cljs.core.Keyword(null, "propagate", "propagate", 274376905), c);
                }
                var G__24882 = seq__24878;
                var G__24883 = chunk__24879;
                var G__24884 = count__24880;
                var G__24885 = i__24881 + 1;
                seq__24878 = G__24882;
                chunk__24879 = G__24883;
                count__24880 = G__24884;
                i__24881 = G__24885;
                continue;
              } else {
                var temp__4425__auto__ = cljs.core.seq.call(null, seq__24878);
                if (temp__4425__auto__) {
                  var seq__24878__$1 = temp__4425__auto__;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__24878__$1)) {
                    var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__24878__$1);
                    var G__24886 = cljs.core.chunk_rest.call(null, seq__24878__$1);
                    var G__24887 = c__5338__auto__;
                    var G__24888 = cljs.core.count.call(null, c__5338__auto__);
                    var G__24889 = 0;
                    seq__24878 = G__24886;
                    chunk__24879 = G__24887;
                    count__24880 = G__24888;
                    i__24881 = G__24889;
                    continue;
                  } else {
                    var caller = cljs.core.first.call(null, seq__24878__$1);
                    if (cljs.core.truth_(function() {
                      var or__4554__auto__ = cljs.core._EQ_.call(null, tiltontec.cell.base.c_state.call(null, caller), new cljs.core.Keyword(null, "quiesced", "quiesced", 421940903));
                      if (or__4554__auto__) {
                        return or__4554__auto__;
                      } else {
                        var or__4554__auto____$1 = tiltontec.cell.integrity.c_current_QMARK_.call(null, caller);
                        if (cljs.core.truth_(or__4554__auto____$1)) {
                          return or__4554__auto____$1;
                        } else {
                          var or__4554__auto____$2 = cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.cell.base.c_lazy.call(null, caller)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.Keyword(null, "always", "always", -1772028770), new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854)], null));
                          if (cljs.core.truth_(or__4554__auto____$2)) {
                            return or__4554__auto____$2;
                          } else {
                            return cljs.core.not.call(null, cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([c], true), tiltontec.cell.base.c_useds.call(null, caller))) && cljs.core.not.call(null, tiltontec.cell.base.c_optimized_away_QMARK_.call(null, c));
                          }
                        }
                      }
                    }())) {
                      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "not-propping", "not-propping", 438111539), tiltontec.cell.base.c_slot.call(null, c), new cljs.core.Keyword(null, "to", "to", 192099007), tiltontec.cell.base.c_slot.call(null, caller));
                    } else {
                      tiltontec.cell.evaluate.calculate_and_set.call(null, caller, new cljs.core.Keyword(null, "propagate", "propagate", 274376905), c);
                    }
                    var G__24890 = cljs.core.next.call(null, seq__24878__$1);
                    var G__24891 = null;
                    var G__24892 = 0;
                    var G__24893 = 0;
                    seq__24878 = G__24890;
                    chunk__24879 = G__24891;
                    count__24880 = G__24892;
                    i__24881 = G__24893;
                    continue;
                  }
                } else {
                  return null;
                }
              }
              break;
            }
          } finally {
            tiltontec.cell.base._STAR_causation_STAR_ = _STAR_causation_STAR_24877;
          }
        }
      };
    }(causation));
  }
};
goog.provide("tiltontec.cell.core");
goog.require("cljs.core");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.evaluate");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.core.make_cell = function tiltontec$cell$core$make_cell() {
  var args__5600__auto__ = [];
  var len__5593__auto___24897 = arguments.length;
  var i__5594__auto___24898 = 0;
  while (true) {
    if (i__5594__auto___24898 < len__5593__auto___24897) {
      args__5600__auto__.push(arguments[i__5594__auto___24898]);
      var G__24899 = i__5594__auto___24898 + 1;
      i__5594__auto___24898 = G__24899;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return tiltontec.cell.core.make_cell.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
tiltontec.cell.core.make_cell.cljs$core$IFn$_invoke$arity$variadic = function(kvs) {
  var options = cljs.core.apply.call(null, cljs.core.hash_map, kvs);
  return cljs.core.atom.call(null, cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "callers", "callers", -1991542784), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "pulse-observed", "pulse-observed", 595719633), new cljs.core.Keyword(null, "lazy", "lazy", -424547181), new cljs.core.Keyword(null, 
  "pulse-last-changed", "pulse-last-changed", 1035703380), new cljs.core.Keyword(null, "pulse", "pulse", -244494476), new cljs.core.Keyword(null, "input?", "input?", -1792843173)], [cljs.core.PersistentHashSet.EMPTY, tiltontec.cell.base.unbound, false, new cljs.core.Keyword(null, "nascent", "nascent", 443401807), 0, false, 0, 0, true]), options), new cljs.core.Keyword(null, "meta", "meta", 1499536964), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), 
  new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)], null));
};
tiltontec.cell.core.make_cell.cljs$lang$maxFixedArity = 0;
tiltontec.cell.core.make_cell.cljs$lang$applyTo = function(seq24896) {
  return tiltontec.cell.core.make_cell.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq24896));
};
tiltontec.cell.core.make_c_formula = function tiltontec$cell$core$make_c_formula() {
  var args__5600__auto__ = [];
  var len__5593__auto___24901 = arguments.length;
  var i__5594__auto___24902 = 0;
  while (true) {
    if (i__5594__auto___24902 < len__5593__auto___24901) {
      args__5600__auto__.push(arguments[i__5594__auto___24902]);
      var G__24903 = i__5594__auto___24902 + 1;
      i__5594__auto___24902 = G__24903;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return tiltontec.cell.core.make_c_formula.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
tiltontec.cell.core.make_c_formula.cljs$core$IFn$_invoke$arity$variadic = function(kvs) {
  var options = cljs.core.apply.call(null, cljs.core.hash_map, kvs);
  var rule = (new cljs.core.Keyword(null, "rule", "rule", 729973257)).cljs$core$IFn$_invoke$arity$1(options);
  if (cljs.core.truth_(rule)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "rule", "rule", -1924462512, null)))].join(""));
  }
  if (cljs.core.fn_QMARK_.call(null, rule)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), new cljs.core.Symbol(null, "rule", "rule", -1924462512, null))))].join(""));
  }
  return cljs.core.atom.call(null, cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "callers", "callers", -1991542784), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "pulse-observed", "pulse-observed", 595719633), new cljs.core.Keyword(null, "lazy", "lazy", -424547181), new cljs.core.Keyword(null, 
  "pulse-last-changed", "pulse-last-changed", 1035703380), new cljs.core.Keyword(null, "pulse", "pulse", -244494476), new cljs.core.Keyword(null, "useds", "useds", 621350967), new cljs.core.Keyword(null, "optimize", "optimize", -1912349448), new cljs.core.Keyword(null, "input?", "input?", -1792843173)], [cljs.core.PersistentHashSet.EMPTY, tiltontec.cell.base.unbound, false, new cljs.core.Keyword(null, "nascent", "nascent", 443401807), 0, false, 0, 0, cljs.core.PersistentHashSet.EMPTY, true, false]), 
  options), new cljs.core.Keyword(null, "meta", "meta", 1499536964), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)], null));
};
tiltontec.cell.core.make_c_formula.cljs$lang$maxFixedArity = 0;
tiltontec.cell.core.make_c_formula.cljs$lang$applyTo = function(seq24900) {
  return tiltontec.cell.core.make_c_formula.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq24900));
};
tiltontec.cell.core.c_fn_var = function tiltontec$cell$core$c_fn_var() {
  var args__5600__auto__ = [];
  var len__5593__auto___24910 = arguments.length;
  var i__5594__auto___24911 = 0;
  while (true) {
    if (i__5594__auto___24911 < len__5593__auto___24910) {
      args__5600__auto__.push(arguments[i__5594__auto___24911]);
      var G__24912 = i__5594__auto___24911 + 1;
      i__5594__auto___24911 = G__24912;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.core.c_fn_var.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.core.c_fn_var.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__24908, body) {
  var vec__24909 = p__24908;
  var c = cljs.core.nth.call(null, vec__24909, 0, null);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, c)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "c-model", "tiltontec.cell.base/c-model", 566190580, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, c))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "cache", "cache", 403508473, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "c-value", "tiltontec.cell.base/c-value", -808509395, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, c)))))))))), body)))))));
};
tiltontec.cell.core.c_fn_var.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c_fn_var.cljs$lang$applyTo = function(seq24904) {
  var G__24905 = cljs.core.first.call(null, seq24904);
  var seq24904__$1 = cljs.core.next.call(null, seq24904);
  var G__24906 = cljs.core.first.call(null, seq24904__$1);
  var seq24904__$2 = cljs.core.next.call(null, seq24904__$1);
  var G__24907 = cljs.core.first.call(null, seq24904__$2);
  var seq24904__$3 = cljs.core.next.call(null, seq24904__$2);
  return tiltontec.cell.core.c_fn_var.cljs$core$IFn$_invoke$arity$variadic(G__24905, G__24906, G__24907, seq24904__$3);
};
tiltontec.cell.core.c_fn_var.cljs$lang$macro = true;
tiltontec.cell.core.c_fn = function tiltontec$cell$core$c_fn() {
  var args__5600__auto__ = [];
  var len__5593__auto___24916 = arguments.length;
  var i__5594__auto___24917 = 0;
  while (true) {
    if (i__5594__auto___24917 < len__5593__auto___24916) {
      args__5600__auto__.push(arguments[i__5594__auto___24917]);
      var G__24918 = i__5594__auto___24917 + 1;
      i__5594__auto___24917 = G__24918;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_fn.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn-var", "tiltontec.cell.core/c-fn-var", -1960595436, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "slot-c#", "slot-c#", 1084398166, null)))))), 
  body)));
};
tiltontec.cell.core.c_fn.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_fn.cljs$lang$applyTo = function(seq24913) {
  var G__24914 = cljs.core.first.call(null, seq24913);
  var seq24913__$1 = cljs.core.next.call(null, seq24913);
  var G__24915 = cljs.core.first.call(null, seq24913__$1);
  var seq24913__$2 = cljs.core.next.call(null, seq24913__$1);
  return tiltontec.cell.core.c_fn.cljs$core$IFn$_invoke$arity$variadic(G__24914, G__24915, seq24913__$2);
};
tiltontec.cell.core.c_fn.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_ = function tiltontec$cell$core$c_QMARK_() {
  var args__5600__auto__ = [];
  var len__5593__auto___24922 = arguments.length;
  var i__5594__auto___24923 = 0;
  while (true) {
    if (i__5594__auto___24923 < len__5593__auto___24922) {
      args__5600__auto__.push(arguments[i__5594__auto___24923]);
      var G__24924 = i__5594__auto___24923 + 1;
      i__5594__auto___24923 = G__24924;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 
  729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))))));
};
tiltontec.cell.core.c_QMARK_.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_.cljs$lang$applyTo = function(seq24919) {
  var G__24920 = cljs.core.first.call(null, seq24919);
  var seq24919__$1 = cljs.core.next.call(null, seq24919);
  var G__24921 = cljs.core.first.call(null, seq24919__$1);
  var seq24919__$2 = cljs.core.next.call(null, seq24919__$1);
  return tiltontec.cell.core.c_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__24920, G__24921, seq24919__$2);
};
tiltontec.cell.core.c_QMARK_.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK__PLUS_ = function tiltontec$cell$core$c_QMARK__PLUS_() {
  var args__5600__auto__ = [];
  var len__5593__auto___24931 = arguments.length;
  var i__5594__auto___24932 = 0;
  while (true) {
    if (i__5594__auto___24932 < len__5593__auto___24931) {
      args__5600__auto__.push(arguments[i__5594__auto___24932]);
      var G__24933 = i__5594__auto___24932 + 1;
      i__5594__auto___24932 = G__24933;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.core.c_QMARK__PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK__PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__24929, body) {
  var vec__24930 = p__24929;
  var options = cljs.core.nthnext.call(null, vec__24930, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), options, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))))));
};
tiltontec.cell.core.c_QMARK__PLUS_.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c_QMARK__PLUS_.cljs$lang$applyTo = function(seq24925) {
  var G__24926 = cljs.core.first.call(null, seq24925);
  var seq24925__$1 = cljs.core.next.call(null, seq24925);
  var G__24927 = cljs.core.first.call(null, seq24925__$1);
  var seq24925__$2 = cljs.core.next.call(null, seq24925__$1);
  var G__24928 = cljs.core.first.call(null, seq24925__$2);
  var seq24925__$3 = cljs.core.next.call(null, seq24925__$2);
  return tiltontec.cell.core.c_QMARK__PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__24926, G__24927, G__24928, seq24925__$3);
};
tiltontec.cell.core.c_QMARK__PLUS_.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK__PLUS_n = function tiltontec$cell$core$c_QMARK__PLUS_n() {
  var args__5600__auto__ = [];
  var len__5593__auto___24937 = arguments.length;
  var i__5594__auto___24938 = 0;
  while (true) {
    if (i__5594__auto___24938 < len__5593__auto___24937) {
      args__5600__auto__.push(arguments[i__5594__auto___24938]);
      var G__24939 = i__5594__auto___24938 + 1;
      i__5594__auto___24938 = G__24939;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK__PLUS_n.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK__PLUS_n.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", 
  "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))))));
};
tiltontec.cell.core.c_QMARK__PLUS_n.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK__PLUS_n.cljs$lang$applyTo = function(seq24934) {
  var G__24935 = cljs.core.first.call(null, seq24934);
  var seq24934__$1 = cljs.core.next.call(null, seq24934);
  var G__24936 = cljs.core.first.call(null, seq24934__$1);
  var seq24934__$2 = cljs.core.next.call(null, seq24934__$1);
  return tiltontec.cell.core.c_QMARK__PLUS_n.cljs$core$IFn$_invoke$arity$variadic(G__24935, G__24936, seq24934__$2);
};
tiltontec.cell.core.c_QMARK__PLUS_n.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_n = function tiltontec$cell$core$c_QMARK_n() {
  var args__5600__auto__ = [];
  var len__5593__auto___24943 = arguments.length;
  var i__5594__auto___24944 = 0;
  while (true) {
    if (i__5594__auto___24944 < len__5593__auto___24943) {
      args__5600__auto__.push(arguments[i__5594__auto___24944]);
      var G__24945 = i__5594__auto___24944 + 1;
      i__5594__auto___24944 = G__24945;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK_n.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_n.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", 
  "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, 
  null)), body)))))))))));
};
tiltontec.cell.core.c_QMARK_n.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_n.cljs$lang$applyTo = function(seq24940) {
  var G__24941 = cljs.core.first.call(null, seq24940);
  var seq24940__$1 = cljs.core.next.call(null, seq24940);
  var G__24942 = cljs.core.first.call(null, seq24940__$1);
  var seq24940__$2 = cljs.core.next.call(null, seq24940__$1);
  return tiltontec.cell.core.c_QMARK_n.cljs$core$IFn$_invoke$arity$variadic(G__24941, G__24942, seq24940__$2);
};
tiltontec.cell.core.c_QMARK_n.cljs$lang$macro = true;
tiltontec.cell.core.c__QMARK_n = function tiltontec$cell$core$c__QMARK_n() {
  var args__5600__auto__ = [];
  var len__5593__auto___24949 = arguments.length;
  var i__5594__auto___24950 = 0;
  while (true) {
    if (i__5594__auto___24950 < len__5593__auto___24949) {
      args__5600__auto__.push(arguments[i__5594__auto___24950]);
      var G__24951 = i__5594__auto___24950 + 1;
      i__5594__auto___24950 = G__24951;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c__QMARK_n.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c__QMARK_n.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", 
  "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "until-asked", "until-asked", -1449069768)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", 
  "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))))));
};
tiltontec.cell.core.c__QMARK_n.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c__QMARK_n.cljs$lang$applyTo = function(seq24946) {
  var G__24947 = cljs.core.first.call(null, seq24946);
  var seq24946__$1 = cljs.core.next.call(null, seq24946);
  var G__24948 = cljs.core.first.call(null, seq24946__$1);
  var seq24946__$2 = cljs.core.next.call(null, seq24946__$1);
  return tiltontec.cell.core.c__QMARK_n.cljs$core$IFn$_invoke$arity$variadic(G__24947, G__24948, seq24946__$2);
};
tiltontec.cell.core.c__QMARK_n.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_n_dbg = function tiltontec$cell$core$c_QMARK_n_dbg() {
  var args__5600__auto__ = [];
  var len__5593__auto___24955 = arguments.length;
  var i__5594__auto___24956 = 0;
  while (true) {
    if (i__5594__auto___24956 < len__5593__auto___24955) {
      args__5600__auto__.push(arguments[i__5594__auto___24956]);
      var G__24957 = i__5594__auto___24956 + 1;
      i__5594__auto___24956 = G__24957;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK_n_dbg.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_n_dbg.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", 
  "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "debug", "debug", -1608172596)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, 
  null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))))));
};
tiltontec.cell.core.c_QMARK_n_dbg.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_n_dbg.cljs$lang$applyTo = function(seq24952) {
  var G__24953 = cljs.core.first.call(null, seq24952);
  var seq24952__$1 = cljs.core.next.call(null, seq24952);
  var G__24954 = cljs.core.first.call(null, seq24952__$1);
  var seq24952__$2 = cljs.core.next.call(null, seq24952__$1);
  return tiltontec.cell.core.c_QMARK_n_dbg.cljs$core$IFn$_invoke$arity$variadic(G__24953, G__24954, seq24952__$2);
};
tiltontec.cell.core.c_QMARK_n_dbg.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_n_until = function tiltontec$cell$core$c_QMARK_n_until() {
  var args__5600__auto__ = [];
  var len__5593__auto___24962 = arguments.length;
  var i__5594__auto___24963 = 0;
  while (true) {
    if (i__5594__auto___24963 < len__5593__auto___24962) {
      args__5600__auto__.push(arguments[i__5594__auto___24963]);
      var G__24964 = i__5594__auto___24963 + 1;
      i__5594__auto___24963 = G__24964;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.core.c_QMARK_n_until.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_n_until.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, args, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "optimize", "optimize", -1912349448)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", "input?", -1792843173)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))), args)));
};
tiltontec.cell.core.c_QMARK_n_until.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c_QMARK_n_until.cljs$lang$applyTo = function(seq24958) {
  var G__24959 = cljs.core.first.call(null, seq24958);
  var seq24958__$1 = cljs.core.next.call(null, seq24958);
  var G__24960 = cljs.core.first.call(null, seq24958__$1);
  var seq24958__$2 = cljs.core.next.call(null, seq24958__$1);
  var G__24961 = cljs.core.first.call(null, seq24958__$2);
  var seq24958__$3 = cljs.core.next.call(null, seq24958__$2);
  return tiltontec.cell.core.c_QMARK_n_until.cljs$core$IFn$_invoke$arity$variadic(G__24959, G__24960, G__24961, seq24958__$3);
};
tiltontec.cell.core.c_QMARK_n_until.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_once = function tiltontec$cell$core$c_QMARK_once() {
  var args__5600__auto__ = [];
  var len__5593__auto___24968 = arguments.length;
  var i__5594__auto___24969 = 0;
  while (true) {
    if (i__5594__auto___24969 < len__5593__auto___24968) {
      args__5600__auto__.push(arguments[i__5594__auto___24969]);
      var G__24970 = i__5594__auto___24969 + 1;
      i__5594__auto___24969 = G__24970;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK_once.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_once.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", 
  "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, null), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, 
  null)), body)))))))))));
};
tiltontec.cell.core.c_QMARK_once.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_once.cljs$lang$applyTo = function(seq24965) {
  var G__24966 = cljs.core.first.call(null, seq24965);
  var seq24965__$1 = cljs.core.next.call(null, seq24965);
  var G__24967 = cljs.core.first.call(null, seq24965__$1);
  var seq24965__$2 = cljs.core.next.call(null, seq24965__$1);
  return tiltontec.cell.core.c_QMARK_once.cljs$core$IFn$_invoke$arity$variadic(G__24966, G__24967, seq24965__$2);
};
tiltontec.cell.core.c_QMARK_once.cljs$lang$macro = true;
tiltontec.cell.core.c_1 = function tiltontec$cell$core$c_1() {
  var args__5600__auto__ = [];
  var len__5593__auto___24974 = arguments.length;
  var i__5594__auto___24975 = 0;
  while (true) {
    if (i__5594__auto___24975 < len__5593__auto___24974) {
      args__5600__auto__.push(arguments[i__5594__auto___24975]);
      var G__24976 = i__5594__auto___24975 + 1;
      i__5594__auto___24975 = G__24976;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_1.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", 
  "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, null), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "without-c-dependency", "tiltontec.cell.core/without-c-dependency", -1335357661, null)), body)))))))))));
};
tiltontec.cell.core.c_1.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_1.cljs$lang$applyTo = function(seq24971) {
  var G__24972 = cljs.core.first.call(null, seq24971);
  var seq24971__$1 = cljs.core.next.call(null, seq24971);
  var G__24973 = cljs.core.first.call(null, seq24971__$1);
  var seq24971__$2 = cljs.core.next.call(null, seq24971__$1);
  return tiltontec.cell.core.c_1.cljs$core$IFn$_invoke$arity$variadic(G__24972, G__24973, seq24971__$2);
};
tiltontec.cell.core.c_1.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_1 = function tiltontec$cell$core$c_QMARK_1() {
  var args__5600__auto__ = [];
  var len__5593__auto___24980 = arguments.length;
  var i__5594__auto___24981 = 0;
  while (true) {
    if (i__5594__auto___24981 < len__5593__auto___24980) {
      args__5600__auto__.push(arguments[i__5594__auto___24981]);
      var G__24982 = i__5594__auto___24981 + 1;
      i__5594__auto___24981 = G__24982;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK_1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_1.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c?once", "tiltontec.cell.core/c?once", 88229667, null)), body)));
};
tiltontec.cell.core.c_QMARK_1.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_1.cljs$lang$applyTo = function(seq24977) {
  var G__24978 = cljs.core.first.call(null, seq24977);
  var seq24977__$1 = cljs.core.next.call(null, seq24977);
  var G__24979 = cljs.core.first.call(null, seq24977__$1);
  var seq24977__$2 = cljs.core.next.call(null, seq24977__$1);
  return tiltontec.cell.core.c_QMARK_1.cljs$core$IFn$_invoke$arity$variadic(G__24978, G__24979, seq24977__$2);
};
tiltontec.cell.core.c_QMARK_1.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK_dbg = function tiltontec$cell$core$c_QMARK_dbg() {
  var args__5600__auto__ = [];
  var len__5593__auto___24986 = arguments.length;
  var i__5594__auto___24987 = 0;
  while (true) {
    if (i__5594__auto___24987 < len__5593__auto___24986) {
      args__5600__auto__.push(arguments[i__5594__auto___24987]);
      var G__24988 = i__5594__auto___24987 + 1;
      i__5594__auto___24987 = G__24988;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c_QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "debug", "debug", 
  -1608172596)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))))));
};
tiltontec.cell.core.c_QMARK_dbg.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c_QMARK_dbg.cljs$lang$applyTo = function(seq24983) {
  var G__24984 = cljs.core.first.call(null, seq24983);
  var seq24983__$1 = cljs.core.next.call(null, seq24983);
  var G__24985 = cljs.core.first.call(null, seq24983__$1);
  var seq24983__$2 = cljs.core.next.call(null, seq24983__$1);
  return tiltontec.cell.core.c_QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic(G__24984, G__24985, seq24983__$2);
};
tiltontec.cell.core.c_QMARK_dbg.cljs$lang$macro = true;
tiltontec.cell.core.c_QMARK__ = function tiltontec$cell$core$c_QMARK__() {
  var args__5600__auto__ = [];
  var len__5593__auto___24995 = arguments.length;
  var i__5594__auto___24996 = 0;
  while (true) {
    if (i__5594__auto___24996 < len__5593__auto___24995) {
      args__5600__auto__.push(arguments[i__5594__auto___24996]);
      var G__24997 = i__5594__auto___24996 + 1;
      i__5594__auto___24996 = G__24997;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.core.c_QMARK__.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.core.c_QMARK__.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__24993, body) {
  var vec__24994 = p__24993;
  var options = cljs.core.nthnext.call(null, vec__24994, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), options, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))))));
};
tiltontec.cell.core.c_QMARK__.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c_QMARK__.cljs$lang$applyTo = function(seq24989) {
  var G__24990 = cljs.core.first.call(null, seq24989);
  var seq24989__$1 = cljs.core.next.call(null, seq24989);
  var G__24991 = cljs.core.first.call(null, seq24989__$1);
  var seq24989__$2 = cljs.core.next.call(null, seq24989__$1);
  var G__24992 = cljs.core.first.call(null, seq24989__$2);
  var seq24989__$3 = cljs.core.next.call(null, seq24989__$2);
  return tiltontec.cell.core.c_QMARK__.cljs$core$IFn$_invoke$arity$variadic(G__24990, G__24991, G__24992, seq24989__$3);
};
tiltontec.cell.core.c_QMARK__.cljs$lang$macro = true;
tiltontec.cell.core.c__QMARK_ = function tiltontec$cell$core$c__QMARK_() {
  var args__5600__auto__ = [];
  var len__5593__auto___25004 = arguments.length;
  var i__5594__auto___25005 = 0;
  while (true) {
    if (i__5594__auto___25005 < len__5593__auto___25004) {
      args__5600__auto__.push(arguments[i__5594__auto___25005]);
      var G__25006 = i__5594__auto___25005 + 1;
      i__5594__auto___25005 = G__25006;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.core.c__QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.core.c__QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__25002, body) {
  var vec__25003 = p__25002;
  var options = cljs.core.nthnext.call(null, vec__25003, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), options, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "until-asked", "until-asked", -1449069768)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 
  1198019642, null)), body)))))));
};
tiltontec.cell.core.c__QMARK_.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c__QMARK_.cljs$lang$applyTo = function(seq24998) {
  var G__24999 = cljs.core.first.call(null, seq24998);
  var seq24998__$1 = cljs.core.next.call(null, seq24998);
  var G__25000 = cljs.core.first.call(null, seq24998__$1);
  var seq24998__$2 = cljs.core.next.call(null, seq24998__$1);
  var G__25001 = cljs.core.first.call(null, seq24998__$2);
  var seq24998__$3 = cljs.core.next.call(null, seq24998__$2);
  return tiltontec.cell.core.c__QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__24999, G__25000, G__25001, seq24998__$3);
};
tiltontec.cell.core.c__QMARK_.cljs$lang$macro = true;
tiltontec.cell.core.c__QMARK_dbg = function tiltontec$cell$core$c__QMARK_dbg() {
  var args__5600__auto__ = [];
  var len__5593__auto___25010 = arguments.length;
  var i__5594__auto___25011 = 0;
  while (true) {
    if (i__5594__auto___25011 < len__5593__auto___25010) {
      args__5600__auto__.push(arguments[i__5594__auto___25011]);
      var G__25012 = i__5594__auto___25011 + 1;
      i__5594__auto___25011 = G__25012;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.cell.core.c__QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.cell.core.c__QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "lazy", "lazy", 
  -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "until-asked", "until-asked", -1449069768)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 
  1198019642, null)), body)))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "debug", "debug", -1608172596)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true))));
};
tiltontec.cell.core.c__QMARK_dbg.cljs$lang$maxFixedArity = 2;
tiltontec.cell.core.c__QMARK_dbg.cljs$lang$applyTo = function(seq25007) {
  var G__25008 = cljs.core.first.call(null, seq25007);
  var seq25007__$1 = cljs.core.next.call(null, seq25007);
  var G__25009 = cljs.core.first.call(null, seq25007__$1);
  var seq25007__$2 = cljs.core.next.call(null, seq25007__$1);
  return tiltontec.cell.core.c__QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic(G__25008, G__25009, seq25007__$2);
};
tiltontec.cell.core.c__QMARK_dbg.cljs$lang$macro = true;
tiltontec.cell.core.c_formula = function tiltontec$cell$core$c_formula() {
  var args__5600__auto__ = [];
  var len__5593__auto___25019 = arguments.length;
  var i__5594__auto___25020 = 0;
  while (true) {
    if (i__5594__auto___25020 < len__5593__auto___25019) {
      args__5600__auto__.push(arguments[i__5594__auto___25020]);
      var G__25021 = i__5594__auto___25020 + 1;
      i__5594__auto___25020 = G__25021;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 3 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(3), 0) : null;
  return tiltontec.cell.core.c_formula.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5601__auto__);
};
tiltontec.cell.core.c_formula.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__25017, body) {
  var vec__25018 = p__25017;
  var kvs = cljs.core.nthnext.call(null, vec__25018, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "make-c-formula", "tiltontec.cell.core/make-c-formula", -143496150, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", "unbound", "tiltontec.cell.base/unbound", 689136420, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 
  729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "c-fn", "tiltontec.cell.core/c-fn", 1198019642, null)), body)))), cljs.core.keys)));
};
tiltontec.cell.core.c_formula.cljs$lang$maxFixedArity = 3;
tiltontec.cell.core.c_formula.cljs$lang$applyTo = function(seq25013) {
  var G__25014 = cljs.core.first.call(null, seq25013);
  var seq25013__$1 = cljs.core.next.call(null, seq25013);
  var G__25015 = cljs.core.first.call(null, seq25013__$1);
  var seq25013__$2 = cljs.core.next.call(null, seq25013__$1);
  var G__25016 = cljs.core.first.call(null, seq25013__$2);
  var seq25013__$3 = cljs.core.next.call(null, seq25013__$2);
  return tiltontec.cell.core.c_formula.cljs$core$IFn$_invoke$arity$variadic(G__25014, G__25015, G__25016, seq25013__$3);
};
tiltontec.cell.core.c_formula.cljs$lang$macro = true;
tiltontec.cell.core.c_in = function tiltontec$cell$core$c_in() {
  var args__5600__auto__ = [];
  var len__5593__auto___25024 = arguments.length;
  var i__5594__auto___25025 = 0;
  while (true) {
    if (i__5594__auto___25025 < len__5593__auto___25024) {
      args__5600__auto__.push(arguments[i__5594__auto___25025]);
      var G__25026 = i__5594__auto___25025 + 1;
      i__5594__auto___25025 = G__25026;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 1 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(1), 0) : null;
  return tiltontec.cell.core.c_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5601__auto__);
};
tiltontec.cell.core.c_in.cljs$core$IFn$_invoke$arity$variadic = function(value, option_kvs) {
  return cljs.core.apply.call(null, tiltontec.cell.core.make_cell, cljs.core.list_STAR_.call(null, new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "input?", "input?", -1792843173), true, option_kvs));
};
tiltontec.cell.core.c_in.cljs$lang$maxFixedArity = 1;
tiltontec.cell.core.c_in.cljs$lang$applyTo = function(seq25022) {
  var G__25023 = cljs.core.first.call(null, seq25022);
  var seq25022__$1 = cljs.core.next.call(null, seq25022);
  return tiltontec.cell.core.c_in.cljs$core$IFn$_invoke$arity$variadic(G__25023, seq25022__$1);
};
tiltontec.cell.core.c_reset_BANG_ = function tiltontec$cell$core$c_reset_BANG_(c, new_value) {
  if (cljs.core.truth_(c)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "c", "c", -122660552, null)))].join(""));
  }
  if (cljs.core.truth_(tiltontec.cell.base._STAR_defer_changes_STAR_)) {
    throw new Error("c-reset!\x3e change to %s must be deferred by wrapping it in WITH-INTEGRITY", tiltontec.cell.base.c_slot.call(null, c));
  } else {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.cell.base.c_lazy.call(null, c)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854), new cljs.core.Keyword(null, "always", "always", -1772028770), true], null)))) {
      return tiltontec.cell.evaluate.c_value_assume.call(null, c, new_value, null);
    } else {
      return tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502), tiltontec.cell.base.c_slot.call(null, c), function(opcode, defer_info) {
        return tiltontec.cell.evaluate.c_value_assume.call(null, c, new_value, null);
      });
    }
  }
};
tiltontec.cell.core.c_reset_next_BANG_ = function tiltontec$cell$core$c_reset_next_BANG_(_AMPERSAND_form, _AMPERSAND_env, f_c, f_new_value) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "cond", "cljs.core/cond", 2005388338, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "not", "cljs.core/not", 100665144, null)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "*within-integrity*", "tiltontec.cell.core/*within-integrity*", 1558832389, null)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "throw", "throw", 595905694, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("js", "Error.", "js/Error.", 750655924, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, "c-reset-next!\x3e deferred change to %s not under WITH-INTEGRITY supervision."), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.base", 
  "c-slot", "tiltontec.cell.base/c-slot", 1453031347, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, f_c))))))))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "else", "else", -1508377146)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "ufb-add", "tiltontec.cell.core/ufb-add", 
  1421793642, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "change", "change", -1163046502)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "c-reset-next!", "c-reset-next!", -1735615308)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "opcode", "opcode", 311089360, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, 
  "defer-info", "defer-info", -446799704, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
  new cljs.core.Symbol(null, "c__25027__auto__", "c__25027__auto__", 1979504099, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, f_c), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "new-value__25028__auto__", "new-value__25028__auto__", -1838074334, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, f_new_value)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.cell.core", "call-c-reset-next!", "tiltontec.cell.core/call-c-reset-next!", -970475516, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "c__25027__auto__", "c__25027__auto__", 1979504099, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "new-value__25028__auto__", "new-value__25028__auto__", -1838074334, null))))))))))))))))))))))))));
};
tiltontec.cell.core.c_reset_next_BANG_.cljs$lang$macro = true;
tiltontec.cell.core.call_c_reset_next_BANG_ = function tiltontec$cell$core$call_c_reset_next_BANG_(c, new_value) {
  if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.cell.base.c_lazy.call(null, c)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854), new cljs.core.Keyword(null, "always", "always", -1772028770), true], null)))) {
    return tiltontec.cell.evaluate.c_value_assume.call(null, c, new_value, null);
  } else {
    return tiltontec.cell.evaluate.c_value_assume.call(null, c, new_value, null);
  }
};
goog.provide("tiltontec.model.base");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.cell.evaluate");
tiltontec.model.base.md_name = function tiltontec$model$base$md_name(ref) {
  return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.model.base.md_state = function tiltontec$model$base$md_state(ref) {
  return (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, ref));
};
tiltontec.model.base.md_cz = function tiltontec$model$base$md_cz(ref) {
  return (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, ref));
};
tiltontec.model.base.md_cell = function tiltontec$model$base$md_cell(me, slot) {
  return slot.call(null, (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, me)));
};
tiltontec.model.base.md_install_cell = function tiltontec$model$base$md_install_cell(me, slot, c) {
  if (cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, c))) {
    cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "slot", "slot", 240229571), slot, new cljs.core.Keyword(null, "me", "me", -139006693), me);
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me], null), cljs.core.truth_(tiltontec.cell.base.c_input_QMARK_.call(null, c)) ? tiltontec.cell.base.c_value.call(null, c) : null);
    return true;
  } else {
    tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me], null), c);
    return false;
  }
};
tiltontec.model.base.md_awaken = function tiltontec$model$base$md_awaken(me) {
  tiltontec.cell.base.c_assert.call(null, cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "nascent", "nascent", 443401807), tiltontec.model.base.md_state.call(null, me)));
  tiltontec.util.core.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), me], null), new cljs.core.Keyword(null, "awakening", "awakening", 838364227));
  cljs.core.doall.call(null, function() {
    var iter__5307__auto__ = function tiltontec$model$base$md_awaken_$_iter__25035(s__25036) {
      return new cljs.core.LazySeq(null, function() {
        var s__25036__$1 = s__25036;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__25036__$1);
          if (temp__4425__auto__) {
            var s__25036__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__25036__$2)) {
              var c__5305__auto__ = cljs.core.chunk_first.call(null, s__25036__$2);
              var size__5306__auto__ = cljs.core.count.call(null, c__5305__auto__);
              var b__25038 = cljs.core.chunk_buffer.call(null, size__5306__auto__);
              if (function() {
                var i__25037 = 0;
                while (true) {
                  if (i__25037 < size__5306__auto__) {
                    var slot = cljs.core._nth.call(null, c__5305__auto__, i__25037);
                    cljs.core.chunk_append.call(null, b__25038, function() {
                      var c = slot.call(null, tiltontec.model.base.md_cz.call(null, me));
                      if (cljs.core.truth_(c)) {
                        return tiltontec.cell.evaluate.c_awaken.call(null, c);
                      } else {
                        return tiltontec.cell.observer.observe.call(null, slot, me, slot.call(null, cljs.core.deref.call(null, me)), tiltontec.cell.base.unbound, null);
                      }
                    }());
                    var G__25039 = i__25037 + 1;
                    i__25037 = G__25039;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__25038), tiltontec$model$base$md_awaken_$_iter__25035.call(null, cljs.core.chunk_rest.call(null, s__25036__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__25038), null);
              }
            } else {
              var slot = cljs.core.first.call(null, s__25036__$2);
              return cljs.core.cons.call(null, function() {
                var c = slot.call(null, tiltontec.model.base.md_cz.call(null, me));
                if (cljs.core.truth_(c)) {
                  return tiltontec.cell.evaluate.c_awaken.call(null, c);
                } else {
                  return tiltontec.cell.observer.observe.call(null, slot, me, slot.call(null, cljs.core.deref.call(null, me)), tiltontec.cell.base.unbound, null);
                }
              }(), tiltontec$model$base$md_awaken_$_iter__25035.call(null, cljs.core.rest.call(null, s__25036__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5307__auto__.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, me)));
  }());
  tiltontec.util.core.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), me], null), new cljs.core.Keyword(null, "awake", "awake", 1922840899));
  return me;
};
tiltontec.model.base.md_get = function tiltontec$model$base$md_get(me, slot) {
  var temp__4423__auto__ = tiltontec.model.base.md_cell.call(null, me, slot);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var c = temp__4423__auto__;
    return tiltontec.cell.evaluate.c_get.call(null, c);
  } else {
    return slot.call(null, cljs.core.deref.call(null, me));
  }
};
goog.provide("tiltontec.model.family");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.model.base");
goog.require("tiltontec.cell.core");
goog.require("clojure.set");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.integrity");
cljs.core.derive.call(null, tiltontec.cell.base.ia_types, new cljs.core.Keyword("tiltontec.model.family", "family", "tiltontec.model.family/family", 626272545), new cljs.core.Keyword("tiltontec.cell.base", "model", "tiltontec.cell.base/model", 284743830));
tiltontec.model.family._STAR_par_STAR_ = null;
tiltontec.model.family.fget_EQ_ = function tiltontec$model$family$fget_EQ_(seek, poss) {
  if (cljs.core.truth_(tiltontec.util.core.any_ref_QMARK_.call(null, poss))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), new cljs.core.Symbol(null, "poss", "poss", -265534520, null))))].join(""));
  }
  if (cljs.core.fn_QMARK_.call(null, seek)) {
    return seek.call(null, poss);
  } else {
    if (seek instanceof cljs.core.Keyword) {
      return cljs.core._EQ_.call(null, seek, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, poss)));
    } else {
      return cljs.core._EQ_.call(null, seek, poss);
    }
  }
};
tiltontec.model.family.fget = function tiltontec$model$family$fget() {
  var args__5600__auto__ = [];
  var len__5593__auto___25047 = arguments.length;
  var i__5594__auto___25048 = 0;
  while (true) {
    if (i__5594__auto___25048 < len__5593__auto___25047) {
      args__5600__auto__.push(arguments[i__5594__auto___25048]);
      var G__25049 = i__5594__auto___25048 + 1;
      i__5594__auto___25048 = G__25049;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.model.family.fget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.model.family.fget.cljs$core$IFn$_invoke$arity$variadic = function(what, where, options) {
  if (cljs.core.truth_(function() {
    var and__4542__auto__ = where;
    if (cljs.core.truth_(and__4542__auto__)) {
      return what;
    } else {
      return and__4542__auto__;
    }
  }())) {
    var options__$1 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "me?", "me?", -625404259), false, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true, new cljs.core.Keyword(null, "wocd?", "wocd?", -195637516), true], null), cljs.core.apply.call(null, cljs.core.hash_map, options));
    var _STAR_depender_STAR_25046 = tiltontec.cell.base._STAR_depender_STAR_;
    tiltontec.cell.base._STAR_depender_STAR_ = cljs.core.truth_((new cljs.core.Keyword(null, "wocd?", "wocd?", -195637516)).cljs$core$IFn$_invoke$arity$1(options__$1)) ? null : tiltontec.cell.base._STAR_depender_STAR_;
    try {
      var or__4554__auto__ = function() {
        var and__4542__auto__ = (new cljs.core.Keyword(null, "me?", "me?", -625404259)).cljs$core$IFn$_invoke$arity$1(options__$1);
        if (cljs.core.truth_(and__4542__auto__)) {
          var and__4542__auto____$1 = tiltontec.model.family.fget_EQ_.call(null, what, where);
          if (cljs.core.truth_(and__4542__auto____$1)) {
            return where;
          } else {
            return and__4542__auto____$1;
          }
        } else {
          return and__4542__auto__;
        }
      }();
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        var or__4554__auto____$1 = function() {
          var and__4542__auto__ = (new cljs.core.Keyword(null, "inside?", "inside?", 639243696)).cljs$core$IFn$_invoke$arity$1(options__$1);
          if (cljs.core.truth_(and__4542__auto__)) {
            var temp__4423__auto__ = tiltontec.model.base.md_get.call(null, where, new cljs.core.Keyword(null, "kids", "kids", 1156670771));
            if (cljs.core.truth_(temp__4423__auto__)) {
              var kids = temp__4423__auto__;
              var temp__4423__auto____$1 = cljs.core.remove.call(null, cljs.core.PersistentHashSet.fromArray([(new cljs.core.Keyword(null, "skip", "skip", 602715391)).cljs$core$IFn$_invoke$arity$1(options__$1)], true), kids);
              if (cljs.core.truth_(temp__4423__auto____$1)) {
                var netkids = temp__4423__auto____$1;
                return cljs.core.some.call(null, function(netkids, temp__4423__auto____$1, kids, temp__4423__auto__, and__4542__auto__, or__4554__auto__, _STAR_depender_STAR_25046, options__$1) {
                  return function(p1__25042_SHARP_) {
                    return tiltontec.model.family.fget.call(null, what, p1__25042_SHARP_, new cljs.core.Keyword(null, "me?", "me?", -625404259), true, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), false);
                  };
                }(netkids, temp__4423__auto____$1, kids, temp__4423__auto__, and__4542__auto__, or__4554__auto__, _STAR_depender_STAR_25046, options__$1), netkids);
              } else {
                return tiltontec.util.base.call_trc.call(null, ":no-net-kids");
              }
            } else {
              return tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "inside-no-kids", "inside-no-kids", -1437068961), cljs.core.deref.call(null, where));
            }
          } else {
            return and__4542__auto__;
          }
        }();
        if (cljs.core.truth_(or__4554__auto____$1)) {
          return or__4554__auto____$1;
        } else {
          var or__4554__auto____$2 = function() {
            var and__4542__auto__ = (new cljs.core.Keyword(null, "up?", "up?", 77854972)).cljs$core$IFn$_invoke$arity$1(options__$1);
            if (cljs.core.truth_(and__4542__auto__)) {
              var temp__4425__auto__ = (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, where));
              if (cljs.core.truth_(temp__4425__auto__)) {
                var par = temp__4425__auto__;
                return tiltontec.model.family.fget.call(null, what, par, new cljs.core.Keyword(null, "up?", "up?", 77854972), true, new cljs.core.Keyword(null, "me?", "me?", -625404259), true, new cljs.core.Keyword(null, "skip", "skip", 602715391), where, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true);
              } else {
                return null;
              }
            } else {
              return and__4542__auto__;
            }
          }();
          if (cljs.core.truth_(or__4554__auto____$2)) {
            return or__4554__auto____$2;
          } else {
            if (cljs.core.truth_((new cljs.core.Keyword(null, "must?", "must?", 1639898554)).cljs$core$IFn$_invoke$arity$1(options__$1))) {
              return tiltontec.util.core.err.call(null, new cljs.core.Keyword(null, "fget-must-failed", "fget-must-failed", 237242954), what, where, options__$1);
            } else {
              return null;
            }
          }
        }
      }
    } finally {
      tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_25046;
    }
  } else {
    return null;
  }
};
tiltontec.model.family.fget.cljs$lang$maxFixedArity = 2;
tiltontec.model.family.fget.cljs$lang$applyTo = function(seq25043) {
  var G__25044 = cljs.core.first.call(null, seq25043);
  var seq25043__$1 = cljs.core.next.call(null, seq25043);
  var G__25045 = cljs.core.first.call(null, seq25043__$1);
  var seq25043__$2 = cljs.core.next.call(null, seq25043__$1);
  return tiltontec.model.family.fget.cljs$core$IFn$_invoke$arity$variadic(G__25044, G__25045, seq25043__$2);
};
tiltontec.model.family.fm_BANG_ = function tiltontec$model$family$fm_BANG_(what, where) {
  return tiltontec.model.family.fget.call(null, what, where, new cljs.core.Keyword(null, "me?", "me?", -625404259), false, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true, new cljs.core.Keyword(null, "must?", "must?", 1639898554), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true);
};
tiltontec.model.family.mdv_BANG_ = function tiltontec$model$family$mdv_BANG_() {
  var args__5600__auto__ = [];
  var len__5593__auto___25057 = arguments.length;
  var i__5594__auto___25058 = 0;
  while (true) {
    if (i__5594__auto___25058 < len__5593__auto___25057) {
      args__5600__auto__.push(arguments[i__5594__auto___25058]);
      var G__25059 = i__5594__auto___25058 + 1;
      i__5594__auto___25058 = G__25059;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 4 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(4), 0) : null;
  return tiltontec.model.family.mdv_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5601__auto__);
};
tiltontec.model.family.mdv_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, what, slot, p__25055) {
  var vec__25056 = p__25055;
  var me = cljs.core.nth.call(null, vec__25056, 0, null);
  var me__$1 = function() {
    var or__4554__auto__ = me;
    if (cljs.core.truth_(or__4554__auto__)) {
      return or__4554__auto__;
    } else {
      return new cljs.core.Symbol(null, "me", "me", 1501524834, null);
    }
  }();
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.base", "md-get", "tiltontec.model.base/md-get", -1259419266, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.family", "fm!", "tiltontec.model.family/fm!", 
  204792444, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, what), cljs.core._conj.call(null, cljs.core.List.EMPTY, me__$1))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, slot))));
};
tiltontec.model.family.mdv_BANG_.cljs$lang$maxFixedArity = 4;
tiltontec.model.family.mdv_BANG_.cljs$lang$applyTo = function(seq25050) {
  var G__25051 = cljs.core.first.call(null, seq25050);
  var seq25050__$1 = cljs.core.next.call(null, seq25050);
  var G__25052 = cljs.core.first.call(null, seq25050__$1);
  var seq25050__$2 = cljs.core.next.call(null, seq25050__$1);
  var G__25053 = cljs.core.first.call(null, seq25050__$2);
  var seq25050__$3 = cljs.core.next.call(null, seq25050__$2);
  var G__25054 = cljs.core.first.call(null, seq25050__$3);
  var seq25050__$4 = cljs.core.next.call(null, seq25050__$3);
  return tiltontec.model.family.mdv_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__25051, G__25052, G__25053, G__25054, seq25050__$4);
};
tiltontec.model.family.mdv_BANG_.cljs$lang$macro = true;
tiltontec.model.family.the_kids = function tiltontec$model$family$the_kids() {
  var args__5600__auto__ = [];
  var len__5593__auto___25063 = arguments.length;
  var i__5594__auto___25064 = 0;
  while (true) {
    if (i__5594__auto___25064 < len__5593__auto___25063) {
      args__5600__auto__.push(arguments[i__5594__auto___25064]);
      var G__25065 = i__5594__auto___25064 + 1;
      i__5594__auto___25064 = G__25065;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 2 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(2), 0) : null;
  return tiltontec.model.family.the_kids.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5601__auto__);
};
tiltontec.model.family.the_kids.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, tree) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "binding", "cljs.core/binding", 2050379843, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.model.family", "*par*", "tiltontec.model.family/*par*", 
  -208021890, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "remove", "cljs.core/remove", 20102034, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "nil?", "cljs.core/nil?", 
  945071861, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "flatten", "cljs.core/flatten", -237795822, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", 
  "list", "cljs.core/list", -1331406371, null)), tree)))))))))))))));
};
tiltontec.model.family.the_kids.cljs$lang$maxFixedArity = 2;
tiltontec.model.family.the_kids.cljs$lang$applyTo = function(seq25060) {
  var G__25061 = cljs.core.first.call(null, seq25060);
  var seq25060__$1 = cljs.core.next.call(null, seq25060);
  var G__25062 = cljs.core.first.call(null, seq25060__$1);
  var seq25060__$2 = cljs.core.next.call(null, seq25060__$1);
  return tiltontec.model.family.the_kids.cljs$core$IFn$_invoke$arity$variadic(G__25061, G__25062, seq25060__$2);
};
tiltontec.model.family.the_kids.cljs$lang$macro = true;
tiltontec.model.family.mm_obj = Object;
cljs.core._add_method.call(null, tiltontec.cell.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kids", "kids", 1156670771), new cljs.core.Keyword("tiltontec.model.family", "family", "tiltontec.model.family/family", 626272545)], null), function(_, ___$1, newk, oldk, ___$2) {
  if (cljs.core._EQ_.call(null, oldk, tiltontec.cell.base.unbound)) {
    return null;
  } else {
    var lostks = clojure.set.difference.call(null, cljs.core.set.call(null, oldk), cljs.core.set.call(null, newk));
    if (cljs.core.empty_QMARK_.call(null, lostks)) {
      return null;
    } else {
      var seq__25066 = cljs.core.seq.call(null, lostks);
      var chunk__25067 = null;
      var count__25068 = 0;
      var i__25069 = 0;
      while (true) {
        if (i__25069 < count__25068) {
          var k = cljs.core._nth.call(null, chunk__25067, i__25069);
          tiltontec.cell.evaluate.not_to_be.call(null, k);
          var G__25070 = seq__25066;
          var G__25071 = chunk__25067;
          var G__25072 = count__25068;
          var G__25073 = i__25069 + 1;
          seq__25066 = G__25070;
          chunk__25067 = G__25071;
          count__25068 = G__25072;
          i__25069 = G__25073;
          continue;
        } else {
          var temp__4425__auto__ = cljs.core.seq.call(null, seq__25066);
          if (temp__4425__auto__) {
            var seq__25066__$1 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__25066__$1)) {
              var c__5338__auto__ = cljs.core.chunk_first.call(null, seq__25066__$1);
              var G__25074 = cljs.core.chunk_rest.call(null, seq__25066__$1);
              var G__25075 = c__5338__auto__;
              var G__25076 = cljs.core.count.call(null, c__5338__auto__);
              var G__25077 = 0;
              seq__25066 = G__25074;
              chunk__25067 = G__25075;
              count__25068 = G__25076;
              i__25069 = G__25077;
              continue;
            } else {
              var k = cljs.core.first.call(null, seq__25066__$1);
              tiltontec.cell.evaluate.not_to_be.call(null, k);
              var G__25078 = cljs.core.next.call(null, seq__25066__$1);
              var G__25079 = null;
              var G__25080 = 0;
              var G__25081 = 0;
              seq__25066 = G__25078;
              chunk__25067 = G__25079;
              count__25068 = G__25080;
              i__25069 = G__25081;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    }
  }
});
goog.provide("tiltontec.model.core");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.model.family");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.model.base");
goog.require("tiltontec.cell.core");
goog.require("clojure.set");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.integrity");
tiltontec.model.core.md_reset_BANG_ = function tiltontec$model$core$md_reset_BANG_(me, slot, new_value) {
  var temp__4423__auto__ = tiltontec.model.base.md_cell.call(null, me, slot);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var c = temp__4423__auto__;
    return tiltontec.cell.core.c_reset_BANG_.call(null, c, new_value);
  } else {
    tiltontec.util.core.err.call(null, cljs.core.str, "change to slot %s not mediated by cell", slot);
    return tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me], null), new_value);
  }
};
tiltontec.model.core.make = function tiltontec$model$core$make() {
  var args__5600__auto__ = [];
  var len__5593__auto___25093 = arguments.length;
  var i__5594__auto___25094 = 0;
  while (true) {
    if (i__5594__auto___25094 < len__5593__auto___25093) {
      args__5600__auto__.push(arguments[i__5594__auto___25094]);
      var G__25095 = i__5594__auto___25094 + 1;
      i__5594__auto___25094 = G__25095;
      continue;
    } else {
    }
    break;
  }
  var argseq__5601__auto__ = 0 < args__5600__auto__.length ? new cljs.core.IndexedSeq(args__5600__auto__.slice(0), 0) : null;
  return tiltontec.model.core.make.cljs$core$IFn$_invoke$arity$variadic(argseq__5601__auto__);
};
tiltontec.model.core.make.cljs$core$IFn$_invoke$arity$variadic = function(iargs) {
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, iargs))) {
    return cljs.core.apply.call(null, tiltontec.model.core.make, new cljs.core.Keyword(null, "type", "type", 1174270348), iargs);
  } else {
    var me = cljs.core.atom.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "par", "par", -61778778), tiltontec.model.family._STAR_par_STAR_], null), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__25085) {
      var vec__25086 = p__25085;
      var k = cljs.core.nth.call(null, vec__25086, 0, null);
      var v = cljs.core.nth.call(null, vec__25086, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.truth_(tiltontec.cell.base.c_ref_QMARK_.call(null, v)) ? tiltontec.cell.base.unbound : v], null);
    }, cljs.core.filter.call(null, function(p__25087) {
      var vec__25088 = p__25087;
      var slot = cljs.core.nth.call(null, vec__25088, 0, null);
      var v = cljs.core.nth.call(null, vec__25088, 1, null);
      return !cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), slot);
    }, cljs.core.partition.call(null, 2, iargs))))), new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "nascent", "nascent", 443401807)], null), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, cljs.core.vec, cljs.core.filter.call(null, function(p__25089) {
      var vec__25090 = p__25089;
      var slot = cljs.core.nth.call(null, vec__25090, 0, null);
      var v = cljs.core.nth.call(null, vec__25090, 1, null);
      return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), slot);
    }, cljs.core.partition.call(null, 2, iargs))))));
    if (cljs.core.truth_(cljs.core.meta.call(null, me))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))))].join(""));
    }
    tiltontec.util.core.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cz", "cz", 1670864932), me], null), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, cljs.core.vec, cljs.core.filter.call(null, function(me) {
      return function(p__25091) {
        var vec__25092 = p__25091;
        var slot = cljs.core.nth.call(null, vec__25092, 0, null);
        var v = cljs.core.nth.call(null, vec__25092, 1, null);
        return tiltontec.model.base.md_install_cell.call(null, me, slot, v);
      };
    }(me), cljs.core.partition.call(null, 2, iargs)))));
    tiltontec.cell.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "awaken", "awaken", -1899628152), me, function(me) {
      return function(opcode, defer_info) {
        return tiltontec.model.base.md_awaken.call(null, me);
      };
    }(me));
    return me;
  }
};
tiltontec.model.core.make.cljs$lang$maxFixedArity = 0;
tiltontec.model.core.make.cljs$lang$applyTo = function(seq25084) {
  return tiltontec.model.core.make.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq25084));
};
goog.provide("tiltontec.model.family_test");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.model.family");
goog.require("tiltontec.model.core");
goog.require("tiltontec.util.core");
goog.require("cljs.test");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.model.base");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.integrity");
tiltontec.model.family_test.fm_0 = function tiltontec$model$family_test$fm_0() {
  return cljs.test.test_var.call(null, tiltontec$model$family_test$fm_0.cljs$lang$var);
};
tiltontec.model.family_test.fm_0.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var u = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "kon", "kon", 437684854), tiltontec.cell.core.c_in.call(null, false, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), 
  cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", 
  "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), 3))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    if (cljs.core.truth_(tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "kon", "kon", 437684854)))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), tiltontec.cell.core.c_in.call(null, 3))], null);
    } else {
      return null;
    }
  }));
  try {
    var values__8764__auto___25215 = cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u)));
    var result__8765__auto___25216 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25215);
    if (cljs.core.truth_(result__8765__auto___25216)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "u", "u", 483896742, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25215), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "u", "u", 483896742, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25215)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25212) {
    var t__8802__auto___25217 = e25212;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "u", "u", 483896742, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25217, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var kc = tiltontec.model.base.md_cell.call(null, u, new cljs.core.Keyword(null, "kids", "kids", 1156670771));
  var kon = tiltontec.model.base.md_cell.call(null, u, new cljs.core.Keyword(null, "kon", "kon", 437684854));
  tiltontec.cell.core.c_reset_BANG_.call(null, kon, true);
  try {
    var values__8764__auto___25218 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u)))), 1);
    var result__8765__auto___25219 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25218);
    if (cljs.core.truth_(result__8765__auto___25219)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25218), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25218)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null))
      ;
    }
  } catch (e25213) {
    var t__8802__auto___25220 = e25213;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25220, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), u), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423));
    var result__8765__auto__ = cljs.core.apply.call(null, tiltontec.model.family.fget, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.family.fget, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25214) {
    var t__8802__auto__ = e25214;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.family_test.fm_0.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.family_test.fm_0;
}, new cljs.core.Symbol("tiltontec.model.family-test", "fm-0", "tiltontec.model.family-test/fm-0", -779736890, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.family-test", "tiltontec.model.family-test", -404050268, null), new cljs.core.Symbol(null, "fm-0", "fm-0", -1904222876, null), "test/tiltontec/model/family_test.cljc", 14, 1, 49, 49, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.family_test.fm_0) ? 
tiltontec.model.family_test.fm_0.cljs$lang$test : null]));
tiltontec.model.family_test.fm_1 = function tiltontec$model$family_test$fm_1() {
  return cljs.test.test_var.call(null, tiltontec$model$family_test$fm_1.cljs$lang$var);
};
tiltontec.model.family_test.fm_1.cljs$lang$test = function() {
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2 + 2), 4);
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 2, 2)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 2, 2)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25221) {
    var t__8802__auto__ = e25221;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 2, 2)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.family_test.fm_1.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.family_test.fm_1;
}, new cljs.core.Symbol("tiltontec.model.family-test", "fm-1", "tiltontec.model.family-test/fm-1", 813665500, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.family-test", "tiltontec.model.family-test", -404050268, null), new cljs.core.Symbol(null, "fm-1", "fm-1", -329834626, null), "test/tiltontec/model/family_test.cljc", 14, 1, 69, 69, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.family_test.fm_1) ? 
tiltontec.model.family_test.fm_1.cljs$lang$test : null]));
tiltontec.model.family_test.fm_2 = function tiltontec$model$family_test$fm_2() {
  return cljs.test.test_var.call(null, tiltontec$model$family_test$fm_2.cljs$lang$var);
};
tiltontec.model.family_test.fm_2.cljs$lang$test = function() {
  var u = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "uni", "uni", -1194876440), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, 
  "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, 
  "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bba", "bba", -1624545451)), cljs.core.list(new cljs.core.Symbol("md", 
  "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152)), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), 
    new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), 
    new cljs.core.Keyword(null, "bba", "bba", -1624545451)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), 
    function(me, cache) {
      return function(slot_c_SHARP___$1) {
        var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
        var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me__$1, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bba", "bba", -1624545451)), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me__$1, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbb", 
        "bbb", -1323051640))], null);
      };
    }(me, cache)))], null);
  }));
  var bba = tiltontec.model.family.fget.call(null, new cljs.core.Keyword(null, "bba", "bba", -1624545451), u, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true, new cljs.core.Keyword(null, "must?", "must?", 1639898554), true);
  try {
    var value__8767__auto___25227 = bba;
    if (cljs.core.truth_(value__8767__auto___25227)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto___25227, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto___25227, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25222) {
    var t__8802__auto___25228 = e25222;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25228, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25229 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "up?", "up?", 77854972)), true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), bba), new cljs.core.Keyword(null, "uni", "uni", -1194876440));
    var result__8765__auto___25230 = cljs.core.apply.call(null, tiltontec.model.family.fget, values__8764__auto___25229);
    if (cljs.core.truth_(result__8765__auto___25230)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("fm", "fget", "fm/fget", 1054681297, null), new cljs.core.Keyword(null, "uni", "uni", -1194876440), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.family.fget, values__8764__auto___25229), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("fm", "fget", "fm/fget", 1054681297, null), new cljs.core.Keyword(null, "uni", "uni", -1194876440), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol("fm", "fget", "fm/fget", 1054681297, null), values__8764__auto___25229)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25223) {
    var t__8802__auto___25231 = e25223;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("fm", "fget", "fm/fget", 1054681297, null), new cljs.core.Keyword(null, "uni", "uni", -1194876440), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25231, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25232 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "up?", "up?", 77854972)), false), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), bba), new cljs.core.Keyword(null, "aa", "aa", 1986357152));
    var result__8765__auto___25233 = cljs.core.apply.call(null, tiltontec.model.family.fget, values__8764__auto___25232);
    if (cljs.core.truth_(result__8765__auto___25233)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.family.fget, values__8764__auto___25232), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__8764__auto___25232)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25224) {
    var t__8802__auto___25234 = e25224;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
    false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25234, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25235 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "up?", "up?", 77854972)), true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), bba), new cljs.core.Keyword(null, "bb", "bb", 75940837));
    var result__8765__auto___25236 = cljs.core.apply.call(null, tiltontec.model.family.fget, values__8764__auto___25235);
    if (cljs.core.truth_(result__8765__auto___25236)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.family.fget, values__8764__auto___25235), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__8764__auto___25235)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25225) {
    var t__8802__auto___25237 = e25225;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
    true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25237, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "up?", "up?", 77854972)), false), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), bba), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640));
    var result__8765__auto__ = cljs.core.apply.call(null, tiltontec.model.family.fget, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.family.fget, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25226) {
    var t__8802__auto__ = e25226;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.family_test.fm_2.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.family_test.fm_2;
}, new cljs.core.Symbol("tiltontec.model.family-test", "fm-2", "tiltontec.model.family-test/fm-2", 547699739, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.family-test", "tiltontec.model.family-test", -404050268, null), new cljs.core.Symbol(null, "fm-2", "fm-2", -589475911, null), "test/tiltontec/model/family_test.cljc", 14, 1, 74, 74, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.family_test.fm_2) ? 
tiltontec.model.family_test.fm_2.cljs$lang$test : null]));
tiltontec.model.family_test.fm_3 = function tiltontec$model$family_test$fm_3() {
  return cljs.test.test_var.call(null, tiltontec$model$family_test$fm_3.cljs$lang$var);
};
tiltontec.model.family_test.fm_3.cljs$lang$test = function() {
  var u = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "u63", "u63", 1660619135), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130)), cljs.core.list(new cljs.core.Symbol(null, 
  "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return tiltontec.model.base.md_get.call(null, tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), me), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130)) + tiltontec.model.base.md_get.call(null, tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), me), new cljs.core.Keyword(null, "bb21", "bb21", 848021780));
  }), new cljs.core.Keyword(null, "kon", "kon", 437684854), tiltontec.cell.core.c_in.call(null, false), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "remove", "remove", 1509103113, null), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), 
  cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 
  2, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), 3)), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
  "me", "me", 1501524834, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 
  517820292, null), 3))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "*", 
  "*", 345799209, null), 7, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912)))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return cljs.core.remove.call(null, cljs.core.nil_QMARK_, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), 
    cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 2, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(me, cache) {
      return function(slot_c_SHARP___$1) {
        var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
        var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
        return 2 * tiltontec.model.base.md_get.call(null, tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), me__$1), new cljs.core.Keyword(null, "bb21", "bb21", 848021780));
      };
    }(me, cache)), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912), tiltontec.cell.core.c_in.call(null, 3)), cljs.core.truth_(tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "kon", "kon", 437684854))) ? tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), tiltontec.cell.core.c_in.call(null, 
    3)) : null, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 7, cljs.core.list(new cljs.core.Symbol(null, 
    "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(me, cache) {
      return function(slot_c_SHARP___$1) {
        var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
        var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
        return 7 * tiltontec.model.base.md_get.call(null, tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), me__$1), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912));
      };
    }(me, cache)))], null));
  }));
  try {
    var values__8764__auto___25246 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, u, new cljs.core.Keyword(null, "u63", "u63", 1660619135))), 63);
    var result__8765__auto___25247 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25246);
    if (cljs.core.truth_(result__8765__auto___25247)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
      "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25246), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
      "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25246)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25238) {
    var t__8802__auto___25248 = e25238;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
    "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25248, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25249 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), u), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130))), 42);
    var result__8765__auto___25250 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25249);
    if (cljs.core.truth_(result__8765__auto___25250)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
      "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25249), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
      "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25249)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25239) {
    var t__8802__auto___25251 = e25239;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
    "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25251, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25252 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), u), new cljs.core.Keyword(null, "bb21", "bb21", 848021780))), 21);
    var result__8765__auto___25253 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25252);
    if (cljs.core.truth_(result__8765__auto___25253)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
      "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25252), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
      "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25252)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25240) {
    var t__8802__auto___25254 = e25240;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
    "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25254, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25255 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.family.fget.call(null, new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), u, new cljs.core.Keyword(null, "must?", "must?", 1639898554), false));
    var result__8765__auto___25256 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25255);
    if (cljs.core.truth_(result__8765__auto___25256)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
      "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25255), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
      "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25255)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25241) {
    var t__8802__auto___25257 = e25241;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
    "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25257, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, tiltontec.model.base.md_cell.call(null, u, new cljs.core.Keyword(null, "kon", "kon", 437684854)), true);
  try {
    var value__8767__auto___25258 = (new cljs.core.Keyword(null, "kon", "kon", 437684854)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u));
    if (cljs.core.truth_(value__8767__auto___25258)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__8767__auto___25258, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__8767__auto___25258, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25242) {
    var t__8802__auto___25259 = e25242;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25259, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25260 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kon", "kon", 437684854)), u);
    var result__8765__auto___25261 = cljs.core.apply.call(null, tiltontec.model.base.md_cell, values__8764__auto___25260);
    if (cljs.core.truth_(result__8765__auto___25261)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core.cons.call(null, tiltontec.model.base.md_cell, values__8764__auto___25260), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), values__8764__auto___25260)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25243) {
    var t__8802__auto___25262 = e25243;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
    t__8802__auto___25262, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25263 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u)))), 3);
    var result__8765__auto___25264 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25263);
    if (cljs.core.truth_(result__8765__auto___25264)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25263), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25263)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null))
      ;
    }
  } catch (e25244) {
    var t__8802__auto___25265 = e25244;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25265, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), u), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423));
    var result__8765__auto__ = cljs.core.apply.call(null, tiltontec.model.family.fget, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.family.fget, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25245) {
    var t__8802__auto__ = e25245;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.family_test.fm_3.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.family_test.fm_3;
}, new cljs.core.Symbol("tiltontec.model.family-test", "fm-3", "tiltontec.model.family-test/fm-3", -55610013, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.family-test", "tiltontec.model.family-test", -404050268, null), new cljs.core.Symbol(null, "fm-3", "fm-3", -1601771135, null), "test/tiltontec/model/family_test.cljc", 14, 1, 106, 106, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.family_test.fm_3) ? 
tiltontec.model.family_test.fm_3.cljs$lang$test : null]));
tiltontec.model.family_test.fm_3x = function tiltontec$model$family_test$fm_3x() {
  return cljs.test.test_var.call(null, tiltontec$model$family_test$fm_3x.cljs$lang$var);
};
tiltontec.model.family_test.fm_3x.cljs$lang$test = function() {
  var u = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "u63", "u63", 1660619135), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130)), cljs.core.list(new cljs.core.Symbol(null, 
  "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return tiltontec.model.base.md_get.call(null, tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), me), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130)) + tiltontec.model.base.md_get.call(null, tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), me), new cljs.core.Keyword(null, "bb21", "bb21", 848021780));
  }), new cljs.core.Keyword(null, "kon", "kon", 437684854), tiltontec.cell.core.c_in.call(null, false), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, 
  "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 2, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912), cljs.core.list(new cljs.core.Symbol(null, 
  "c-in", "c-in", 517820292, null), 3)), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), 
  new cljs.core.Keyword(null, "kzo", "kzo", 29004960), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), 3))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 
  345799209, null), 7, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_25266 = tiltontec.model.family._STAR_par_STAR_;
    tiltontec.model.family._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, 
      "*", "*", 345799209, null), 7, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_25266, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          return 7 * tiltontec.model.base.md_get.call(null, tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), me__$1), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912));
        };
      }(_STAR_par_STAR_25266, me, cache)))), cljs.core.truth_(tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "kon", "kon", 437684854))) ? tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), tiltontec.cell.core.c_in.call(null, 3)) : null), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), 
      new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 2, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, 
      "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_25266, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          return 2 * tiltontec.model.base.md_get.call(null, tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), me__$1), new cljs.core.Keyword(null, "bb21", "bb21", 848021780));
        };
      }(_STAR_par_STAR_25266, me, cache)), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912), tiltontec.cell.core.c_in.call(null, 3)))));
    } finally {
      tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_25266;
    }
  }));
  try {
    var values__8764__auto___25275 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, u, new cljs.core.Keyword(null, "u63", "u63", 1660619135))), 63);
    var result__8765__auto___25276 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25275);
    if (cljs.core.truth_(result__8765__auto___25276)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
      "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25275), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
      "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25275)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25267) {
    var t__8802__auto___25277 = e25267;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
    "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25277, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25278 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), u), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130))), 42);
    var result__8765__auto___25279 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25278);
    if (cljs.core.truth_(result__8765__auto___25279)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
      "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25278), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
      "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25278)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25268) {
    var t__8802__auto___25280 = e25268;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
    "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25280, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25281 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), u), new cljs.core.Keyword(null, "bb21", "bb21", 848021780))), 21);
    var result__8765__auto___25282 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25281);
    if (cljs.core.truth_(result__8765__auto___25282)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
      "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25281), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
      "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25281)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25269) {
    var t__8802__auto___25283 = e25269;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
    "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25283, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25284 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.family.fget.call(null, new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), u, new cljs.core.Keyword(null, "must?", "must?", 1639898554), false));
    var result__8765__auto___25285 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25284);
    if (cljs.core.truth_(result__8765__auto___25285)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
      "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25284), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
      "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25284)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25270) {
    var t__8802__auto___25286 = e25270;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
    "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25286, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, tiltontec.model.base.md_cell.call(null, u, new cljs.core.Keyword(null, "kon", "kon", 437684854)), true);
  try {
    var value__8767__auto___25287 = (new cljs.core.Keyword(null, "kon", "kon", 437684854)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u));
    if (cljs.core.truth_(value__8767__auto___25287)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__8767__auto___25287, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__8767__auto___25287, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25271) {
    var t__8802__auto___25288 = e25271;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25288, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25289 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kon", "kon", 437684854)), u);
    var result__8765__auto___25290 = cljs.core.apply.call(null, tiltontec.model.base.md_cell, values__8764__auto___25289);
    if (cljs.core.truth_(result__8765__auto___25290)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core.cons.call(null, tiltontec.model.base.md_cell, values__8764__auto___25289), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), values__8764__auto___25289)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25272) {
    var t__8802__auto___25291 = e25272;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
    t__8802__auto___25291, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25292 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u)))), 3);
    var result__8765__auto___25293 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25292);
    if (cljs.core.truth_(result__8765__auto___25293)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25292), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25292)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null))
      ;
    }
  } catch (e25273) {
    var t__8802__auto___25294 = e25273;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25294, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), u), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423));
    var result__8765__auto__ = cljs.core.apply.call(null, tiltontec.model.family.fget, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.model.family.fget, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25274) {
    var t__8802__auto__ = e25274;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.family_test.fm_3x.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.family_test.fm_3x;
}, new cljs.core.Symbol("tiltontec.model.family-test", "fm-3x", "tiltontec.model.family-test/fm-3x", -2013001013, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.family-test", "tiltontec.model.family-test", -404050268, null), new cljs.core.Symbol(null, "fm-3x", "fm-3x", 875338153, null), "test/tiltontec/model/family_test.cljc", 15, 1, 139, 139, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.model.family_test.fm_3x) ? tiltontec.model.family_test.fm_3x.cljs$lang$test : null]));
goog.provide("tiltontec.cell.observer_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.observer_test.t_formula = function tiltontec$cell$observer_test$t_formula() {
  return cljs.test.test_var.call(null, tiltontec$cell$observer_test$t_formula.cljs$lang$var);
};
tiltontec.cell.observer_test.t_formula.cljs$lang$test = function() {
  var bingo = cljs.core.atom.call(null, false);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(bingo) {
    return function(slot, me, new$, old, c) {
      return cljs.core.reset_BANG_.call(null, bingo, true);
    };
  }(bingo), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 40, 2)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(bingo) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return 40 + 2;
    };
  }(bingo));
  try {
    var values__8764__auto___25575 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), c);
    var result__8765__auto___25576 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto___25575);
    if (cljs.core.truth_(result__8765__auto___25576)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto___25575), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8764__auto___25575)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25564) {
    var t__8802__auto___25577 = e25564;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25577, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25578 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), c);
    var result__8765__auto___25579 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto___25578);
    if (cljs.core.truth_(result__8765__auto___25579)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto___25578), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8764__auto___25578)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25565) {
    var t__8802__auto___25580 = e25565;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25580, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25581 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__8765__auto___25582 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25581);
    if (cljs.core.truth_(result__8765__auto___25582)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25581), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25581)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25566) {
    var t__8802__auto___25583 = e25566;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25583, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25584 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8765__auto___25585 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25584);
    if (cljs.core.truth_(result__8765__auto___25585)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25584), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25584)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25567) {
    var t__8802__auto___25586 = e25567;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25586, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25587 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8765__auto___25588 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25587);
    if (cljs.core.truth_(result__8765__auto___25588)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25587), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25587)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25568) {
    var t__8802__auto___25589 = e25568;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25589, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25590 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_input_QMARK_.call(null, c));
    var result__8765__auto___25591 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___25590);
    if (cljs.core.truth_(result__8765__auto___25591)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8764__auto___25590), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___25590)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25569) {
    var t__8802__auto___25592 = e25569;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25592, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25593 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_valid_QMARK_.call(null, c));
    var result__8765__auto___25594 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___25593);
    if (cljs.core.truth_(result__8765__auto___25594)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8764__auto___25593), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___25593)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25570) {
    var t__8802__auto___25595 = e25570;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25595, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25596 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__8765__auto___25597 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25596);
    if (cljs.core.truth_(result__8765__auto___25597)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25596), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25596)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25571) {
    var t__8802__auto___25598 = e25571;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25598, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25599 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8765__auto___25600 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25599);
    if (cljs.core.truth_(result__8765__auto___25600)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25599), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25599)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25572) {
    var t__8802__auto___25601 = e25572;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25601, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25602 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, c)), 42);
    var result__8765__auto___25603 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25602);
    if (cljs.core.truth_(result__8765__auto___25603)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25602), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25602)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25573) {
    var t__8802__auto___25604 = e25573;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25604, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__8767__auto__ = cljs.core.deref.call(null, bingo);
    if (cljs.core.truth_(value__8767__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo", "bingo", -1934750747, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto__, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo", "bingo", -1934750747, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto__, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return value__8767__auto__;
  } catch (e25574) {
    var t__8802__auto__ = e25574;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo", "bingo", -1934750747, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.observer_test.t_formula.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.observer_test.t_formula;
}, new cljs.core.Symbol("tiltontec.cell.observer-test", "t-formula", "tiltontec.cell.observer-test/t-formula", 453750507, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "t-formula", "t-formula", -178019426, null), "test/tiltontec/cell/observer_test.cljc", 19, 1, 43, 43, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.t_formula) ? tiltontec.cell.observer_test.t_formula.cljs$lang$test : null]));
tiltontec.cell.observer_test.bingo2 = cljs.core.atom.call(null, false);
tiltontec.cell.observer_test.test_input = function tiltontec$cell$observer_test$test_input() {
  return cljs.test.test_var.call(null, tiltontec$cell$observer_test$test_input.cljs$lang$var);
};
tiltontec.cell.observer_test.test_input.cljs$lang$test = function() {
  var c = tiltontec.cell.core.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(slot, me, new$, old, c) {
    return cljs.core.reset_BANG_.call(null, tiltontec.cell.observer_test.bingo2, true);
  });
  try {
    var values__8764__auto___25614 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), c);
    var result__8765__auto___25615 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto___25614);
    if (cljs.core.truth_(result__8765__auto___25615)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto___25614), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8764__auto___25614)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25605) {
    var t__8802__auto___25616 = e25605;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25616, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25617 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__8765__auto___25618 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25617);
    if (cljs.core.truth_(result__8765__auto___25618)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25617), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25617)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25606) {
    var t__8802__auto___25619 = e25606;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25619, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25620 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8765__auto___25621 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25620);
    if (cljs.core.truth_(result__8765__auto___25621)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25620), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25620)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25607) {
    var t__8802__auto___25622 = e25607;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25622, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25623 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__8765__auto___25624 = cljs.core.apply.call(null, tiltontec.cell.base.c_input_QMARK_, values__8764__auto___25623);
    if (cljs.core.truth_(result__8765__auto___25624)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_input_QMARK_, 
      values__8764__auto___25623), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__8764__auto___25623)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25608) {
    var t__8802__auto___25625 = e25608;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25625, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25626 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__8765__auto___25627 = cljs.core.apply.call(null, tiltontec.cell.base.c_valid_QMARK_, values__8764__auto___25626);
    if (cljs.core.truth_(result__8765__auto___25627)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_valid_QMARK_, 
      values__8764__auto___25626), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__8764__auto___25626)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25609) {
    var t__8802__auto___25628 = e25609;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25628, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25629 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__8765__auto___25630 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25629);
    if (cljs.core.truth_(result__8765__auto___25630)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25629), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25629)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25610) {
    var t__8802__auto___25631 = e25610;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25631, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25632 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slot_name.call(null, c)), tiltontec.cell.base.c_slot.call(null, c)), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551));
    var result__8765__auto___25633 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25632);
    if (cljs.core.truth_(result__8765__auto___25633)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25632), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25632)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25611) {
    var t__8802__auto___25634 = e25611;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25634, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25635 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8765__auto___25636 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25635);
    if (cljs.core.truth_(result__8765__auto___25636)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25635), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25635)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25612) {
    var t__8802__auto___25637 = e25612;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25637, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__8767__auto__ = cljs.core.deref.call(null, tiltontec.cell.observer_test.bingo2);
    if (cljs.core.truth_(value__8767__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo2", "bingo2", 1462680976, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto__, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo2", "bingo2", 1462680976, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto__, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return value__8767__auto__;
  } catch (e25613) {
    var t__8802__auto__ = e25613;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo2", "bingo2", 1462680976, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.observer_test.test_input.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.observer_test.test_input;
}, new cljs.core.Symbol("tiltontec.cell.observer-test", "test-input", "tiltontec.cell.observer-test/test-input", -1111092170, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/observer_test.cljc", 20, 1, 64, 64, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.test_input) ? tiltontec.cell.observer_test.test_input.cljs$lang$test : null]));
tiltontec.cell.observer_test.t_custom_obs = function tiltontec$cell$observer_test$t_custom_obs() {
  return cljs.test.test_var.call(null, tiltontec$cell$observer_test$t_custom_obs.cljs$lang$var);
};
tiltontec.cell.observer_test.t_custom_obs.cljs$lang$test = function() {
  var bobs = cljs.core.atom.call(null, null);
  var b = tiltontec.cell.core.c_in.call(null, 2, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(bobs) {
    return function(slot, me, new$, old, c) {
      tiltontec.util.base.call_trc.call(null, null, slot, me, new$, old);
      return cljs.core.reset_BANG_.call(null, bobs, new$);
    };
  }(bobs));
  var cobs = cljs.core.atom.call(null, null);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(bobs, b, cobs) {
    return function(slot, me, new$, old, c) {
      new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me, new$, old, c], null);
      tiltontec.util.base.call_trc.call(null, "slot", me, new$, old);
      return cljs.core.reset_BANG_.call(null, cobs, new$);
    };
  }(bobs, b, cobs), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 10, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(bobs, b, cobs) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return 10 * tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(bobs, b, cobs));
  try {
    var values__8764__auto___25641 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__8765__auto___25642 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25641);
    if (cljs.core.truth_(result__8765__auto___25642)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25641), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25641)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25638) {
    var t__8802__auto___25643 = e25638;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25643, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25644 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), cljs.core.deref.call(null, bobs));
    var result__8765__auto___25645 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25644);
    if (cljs.core.truth_(result__8765__auto___25645)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bobs", "bobs", 2084089253, null)), 
      2), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25644), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bobs", "bobs", 2084089253, null)), 
      2), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25644)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25639) {
    var t__8802__auto___25646 = e25639;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bobs", "bobs", 2084089253, null)), 
    2), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25646, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 20), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 20), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 20), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25640) {
    var t__8802__auto__ = e25640;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 20), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.observer_test.t_custom_obs.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.observer_test.t_custom_obs;
}, new cljs.core.Symbol("tiltontec.cell.observer-test", "t-custom-obs", "tiltontec.cell.observer-test/t-custom-obs", 662258146, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "t-custom-obs", "t-custom-obs", -1659782311, null), "test/tiltontec/cell/observer_test.cljc", 22, 1, 79, 
79, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.t_custom_obs) ? tiltontec.cell.observer_test.t_custom_obs.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env25647 = cljs.test.empty_env.call(null);
  var summary25648 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25647, summary25648) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env25647);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__8869__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env25647, summary25648) {
          return function() {
            if (env__8869__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__8869__auto__, env25647, summary25648)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.observer_test.t_formula;
        }, new cljs.core.Symbol("tiltontec.cell.observer-test", "t-formula", "tiltontec.cell.observer-test/t-formula", 453750507, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "t-formula", "t-formula", -178019426, null), "test/tiltontec/cell/observer_test.cljc", 
        19, 1, 43, 43, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.t_formula) ? tiltontec.cell.observer_test.t_formula.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.observer_test.test_input;
        }, new cljs.core.Symbol("tiltontec.cell.observer-test", "test-input", "tiltontec.cell.observer-test/test-input", -1111092170, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/observer_test.cljc", 
        20, 1, 64, 64, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.test_input) ? tiltontec.cell.observer_test.test_input.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.observer_test.t_custom_obs;
        }, new cljs.core.Symbol("tiltontec.cell.observer-test", "t-custom-obs", "tiltontec.cell.observer-test/t-custom-obs", 662258146, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Symbol(null, "t-custom-obs", "t-custom-obs", -1659782311, null), "test/tiltontec/cell/observer_test.cljc", 
        22, 1, 79, 79, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.observer_test.t_custom_obs) ? tiltontec.cell.observer_test.t_custom_obs.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env25647, summary25648) {
          return function() {
            if (env__8869__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__8869__auto__, env25647, summary25648)], null));
      }());
    };
  }(env25647, summary25648), function(env25647, summary25648) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.observer-test", "tiltontec.cell.observer-test", 894490220, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env25647, summary25648)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25647, summary25648) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary25648, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary25648), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env25647, summary25648)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25647, summary25648) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env25647);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary25648));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary25648), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env25647, summary25648)], null));
}());
goog.provide("tiltontec.model.kids_test");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.model.family");
goog.require("tiltontec.model.core");
goog.require("tiltontec.util.core");
goog.require("cljs.test");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.model.base");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.integrity");
tiltontec.model.kids_test.k_notq2be = function tiltontec$model$kids_test$k_notq2be() {
  return cljs.test.test_var.call(null, tiltontec$model$kids_test$k_notq2be.cljs$lang$var);
};
tiltontec.model.kids_test.k_notq2be.cljs$lang$test = function() {
  var f = tiltontec.model.core.make.call(null, new cljs.core.Keyword("tiltontec.model.family", "family", "tiltontec.model.family/family", 626272545), new cljs.core.Keyword(null, "ee", "ee", 643317400), tiltontec.cell.core.c_in.call(null, 2), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), 
  cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "odd?", "odd?", -1458588199, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "ee", "ee", 643317400))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, 
  "yep", "yep", 1342783469), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "par", "par", 1578752749, null), cljs.core.list(new cljs.core.Keyword(null, "par", "par", 
  -61778778), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
  "par", "par", 1578752749, null), new cljs.core.Keyword(null, "ee", "ee", 643317400))], null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 14, new cljs.core.Symbol(null, "ee", "ee", -2011118369, null)))))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_25297 = tiltontec.model.family._STAR_par_STAR_;
    tiltontec.model.family._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.odd_QMARK_.call(null, tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "ee", "ee", 643317400))) ? tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.core.make_c_formula.call(null, 
      new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "par", "par", 1578752749, null), cljs.core.list(new cljs.core.Keyword(null, "par", "par", -61778778), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "par", "par", 1578752749, null), new cljs.core.Keyword(null, "ee", "ee", 643317400))], 
      null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 14, new cljs.core.Symbol(null, "ee", "ee", -2011118369, null)))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_25297, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var par = (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me__$1));
          var ee = tiltontec.model.base.md_get.call(null, par, new cljs.core.Keyword(null, "ee", "ee", 643317400));
          return 14 * ee;
        };
      }(_STAR_par_STAR_25297, me, cache))) : null)));
    } finally {
      tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_25297;
    }
  }));
  try {
    var values__8764__auto___25305 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.model.family", "family", "tiltontec.model.family/family", 626272545)), f);
    var result__8765__auto___25306 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto___25305);
    if (cljs.core.truth_(result__8765__auto___25306)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword("tiltontec.model.family", "family", "tiltontec.model.family/family", 626272545)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto___25305), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword("tiltontec.model.family", "family", "tiltontec.model.family/family", 626272545)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8764__auto___25305)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25298) {
    var t__8802__auto___25307 = e25298;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword("tiltontec.model.family", "family", "tiltontec.model.family/family", 626272545)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25307, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25308 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, f, new cljs.core.Keyword(null, "kids", "kids", 1156670771)));
    var result__8765__auto___25309 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__8764__auto___25308);
    if (cljs.core.truth_(result__8765__auto___25309)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__8764__auto___25308), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__8764__auto___25308)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25299) {
    var t__8802__auto___25310 = e25299;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
    "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25310, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.model.core.md_reset_BANG_.call(null, f, new cljs.core.Keyword(null, "ee", "ee", 643317400), 3);
  try {
    var values__8764__auto___25311 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.empty_QMARK_.call(null, tiltontec.model.base.md_get.call(null, f, new cljs.core.Keyword(null, "kids", "kids", 1156670771))));
    var result__8765__auto___25312 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___25311);
    if (cljs.core.truth_(result__8765__auto___25312)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
      "f", "f", 43394975, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8764__auto___25311), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
      "f", "f", 43394975, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___25311)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25300) {
    var t__8802__auto___25313 = e25300;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
    "f", "f", 43394975, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25313, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25314 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "yep", "yep", 1342783469), f), new cljs.core.Keyword(null, "value", "value", 305978217))), 42);
    var result__8765__auto___25315 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25314);
    if (cljs.core.truth_(result__8765__auto___25315)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, 
      "value", "value", 305978217), new cljs.core.Symbol(null, "f", "f", 43394975, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25314), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, 
      "value", "value", 305978217), new cljs.core.Symbol(null, "f", "f", 43394975, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25314)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25301) {
    var t__8802__auto___25316 = e25301;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, 
    "value", "value", 305978217), new cljs.core.Symbol(null, "f", "f", 43394975, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25316, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var dmw = cljs.core.first.call(null, tiltontec.model.base.md_get.call(null, f, new cljs.core.Keyword(null, "kids", "kids", 1156670771)));
  if (cljs.core.truth_(tiltontec.cell.base.md_ref_QMARK_.call(null, dmw))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "md-ref?", "md-ref?", 1571167727, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null))))].join(""));
  }
  tiltontec.model.core.md_reset_BANG_.call(null, f, new cljs.core.Keyword(null, "ee", "ee", 643317400), 0);
  try {
    var values__8764__auto___25317 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, f, new cljs.core.Keyword(null, "kids", "kids", 1156670771)));
    var result__8765__auto___25318 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__8764__auto___25317);
    if (cljs.core.truth_(result__8765__auto___25318)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__8764__auto___25317), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__8764__auto___25317)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25302) {
    var t__8802__auto___25319 = e25302;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
    "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25319, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25320 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, dmw));
    var result__8765__auto___25321 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25320);
    if (cljs.core.truth_(result__8765__auto___25321)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25320), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25320)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25303) {
    var t__8802__auto___25322 = e25303;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25322, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, dmw))), new cljs.core.Keyword(null, "dead", "dead", -1946604091));
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "dead", "dead", -1946604091), cljs.core.list(new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.list(new cljs.core.Symbol(null, 
      "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "dead", "dead", -1946604091), cljs.core.list(new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.list(new cljs.core.Symbol(null, 
      "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25304) {
    var t__8802__auto__ = e25304;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "dead", "dead", -1946604091), cljs.core.list(new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.list(new cljs.core.Symbol(null, 
    "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.kids_test.k_notq2be.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.kids_test.k_notq2be;
}, new cljs.core.Symbol("tiltontec.model.kids-test", "k-notq2be", "tiltontec.model.kids-test/k-notq2be", 1863973409, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.kids-test", "tiltontec.model.kids-test", 566869290, null), new cljs.core.Symbol(null, "k-notq2be", "k-notq2be", -2113236140, null), "test/tiltontec/model/kids_test.cljc", 19, 1, 49, 49, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.model.kids_test.k_notq2be) ? tiltontec.model.kids_test.k_notq2be.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env25323 = cljs.test.empty_env.call(null);
  var summary25324 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25323, summary25324) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env25323);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.model.kids-test", "tiltontec.model.kids-test", 566869290, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__8869__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env25323, summary25324) {
          return function() {
            if (env__8869__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__8869__auto__, env25323, summary25324)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.model.kids_test.k_notq2be;
        }, new cljs.core.Symbol("tiltontec.model.kids-test", "k-notq2be", "tiltontec.model.kids-test/k-notq2be", 1863973409, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.kids-test", "tiltontec.model.kids-test", 566869290, null), new cljs.core.Symbol(null, "k-notq2be", "k-notq2be", -2113236140, null), "test/tiltontec/model/kids_test.cljc", 19, 1, 49, 49, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.kids_test.k_notq2be) ? tiltontec.model.kids_test.k_notq2be.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env25323, summary25324) {
          return function() {
            if (env__8869__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__8869__auto__, env25323, summary25324)], null));
      }());
    };
  }(env25323, summary25324), function(env25323, summary25324) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.model.kids-test", "tiltontec.model.kids-test", 566869290, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env25323, summary25324)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25323, summary25324) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary25324, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary25324), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env25323, summary25324)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25323, summary25324) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env25323);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary25324));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary25324), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env25323, summary25324)], null));
}());
goog.provide("tiltontec.cell.evaluate_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.cell.evaluate");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.evaluate_test.test_input = function tiltontec$cell$evaluate_test$test_input() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$test_input.cljs$lang$var);
};
tiltontec.cell.evaluate_test.test_input.cljs$lang$test = function() {
  var c = tiltontec.cell.core.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
  try {
    var values__8764__auto___26167 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), c);
    var result__8765__auto___26168 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto___26167);
    if (cljs.core.truth_(result__8765__auto___26168)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto___26167), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8764__auto___26167)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26159) {
    var t__8802__auto___26169 = e26159;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26169, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26170 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__8765__auto___26171 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26170);
    if (cljs.core.truth_(result__8765__auto___26171)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26170), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26170)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26160) {
    var t__8802__auto___26172 = e26160;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26172, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26173 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8765__auto___26174 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26173);
    if (cljs.core.truth_(result__8765__auto___26174)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26173), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26173)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26161) {
    var t__8802__auto___26175 = e26161;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26175, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26176 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__8765__auto___26177 = cljs.core.apply.call(null, tiltontec.cell.base.c_input_QMARK_, values__8764__auto___26176);
    if (cljs.core.truth_(result__8765__auto___26177)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_input_QMARK_, 
      values__8764__auto___26176), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__8764__auto___26176)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26162) {
    var t__8802__auto___26178 = e26162;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26178, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26179 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__8765__auto___26180 = cljs.core.apply.call(null, tiltontec.cell.base.c_valid_QMARK_, values__8764__auto___26179);
    if (cljs.core.truth_(result__8765__auto___26180)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_valid_QMARK_, 
      values__8764__auto___26179), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__8764__auto___26179)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26163) {
    var t__8802__auto___26181 = e26163;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26181, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26182 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__8765__auto___26183 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___26182);
    if (cljs.core.truth_(result__8765__auto___26183)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___26182), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___26182)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26164) {
    var t__8802__auto___26184 = e26164;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26184, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26185 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slot_name.call(null, c)), tiltontec.cell.base.c_slot.call(null, c)), new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
    var result__8765__auto___26186 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26185);
    if (cljs.core.truth_(result__8765__auto___26186)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26185), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26185)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26165) {
    var t__8802__auto___26187 = e26165;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26187, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e26166) {
    var t__8802__auto__ = e26166;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.test_input.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.test_input;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "test-input", "tiltontec.cell.evaluate-test/test-input", -1028428775, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/evaluate_test.cljc", 20, 1, 45, 45, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.test_input) ? tiltontec.cell.evaluate_test.test_input.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.t_formula = function tiltontec$cell$evaluate_test$t_formula() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$t_formula.cljs$lang$var);
};
tiltontec.cell.evaluate_test.t_formula.cljs$lang$test = function() {
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 40, 2)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return 40 + 2;
  });
  try {
    var values__8764__auto___26198 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), tiltontec.cell.base.ia_types);
    var result__8765__auto___26199 = cljs.core.apply.call(null, cljs.core.isa_QMARK_, values__8764__auto___26198);
    if (cljs.core.truth_(result__8765__auto___26199)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), 
      new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.isa_QMARK_, values__8764__auto___26198), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), 
      new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), values__8764__auto___26198)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26188) {
    var t__8802__auto___26200 = e26188;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037), 
    new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26200, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26201 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), c);
    var result__8765__auto___26202 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto___26201);
    if (cljs.core.truth_(result__8765__auto___26202)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto___26201), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8764__auto___26201)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26189) {
    var t__8802__auto___26203 = e26189;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26203, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26204 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), c);
    var result__8765__auto___26205 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto___26204);
    if (cljs.core.truth_(result__8765__auto___26205)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto___26204), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8764__auto___26204)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26190) {
    var t__8802__auto___26206 = e26190;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26206, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26207 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__8765__auto___26208 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26207);
    if (cljs.core.truth_(result__8765__auto___26208)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26207), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26207)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26191) {
    var t__8802__auto___26209 = e26191;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26209, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26210 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8765__auto___26211 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26210);
    if (cljs.core.truth_(result__8765__auto___26211)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26210), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26210)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26192) {
    var t__8802__auto___26212 = e26192;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26212, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26213 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8765__auto___26214 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26213);
    if (cljs.core.truth_(result__8765__auto___26214)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26213), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26213)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26193) {
    var t__8802__auto___26215 = e26193;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26215, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26216 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_input_QMARK_.call(null, c));
    var result__8765__auto___26217 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___26216);
    if (cljs.core.truth_(result__8765__auto___26217)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8764__auto___26216), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___26216)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26194) {
    var t__8802__auto___26218 = e26194;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26218, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26219 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_valid_QMARK_.call(null, c));
    var result__8765__auto___26220 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___26219);
    if (cljs.core.truth_(result__8765__auto___26220)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8764__auto___26219), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___26219)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26195) {
    var t__8802__auto___26221 = e26195;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26221, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26222 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__8765__auto___26223 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___26222);
    if (cljs.core.truth_(result__8765__auto___26223)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___26222), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___26222)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26196) {
    var t__8802__auto___26224 = e26196;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26224, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "readddd", "readddd", 455623157), tiltontec.cell.evaluate.c_get.call(null, c));
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e26197) {
    var t__8802__auto__ = e26197;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.t_formula.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.t_formula;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula", "tiltontec.cell.evaluate-test/t-formula", 1151821320, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula", "t-formula", -178019426, null), "test/tiltontec/cell/evaluate_test.cljc", 19, 1, 57, 57, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula) ? tiltontec.cell.evaluate_test.t_formula.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.t_formula_2 = function tiltontec$cell$evaluate_test$t_formula_2() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$t_formula_2.cljs$lang$var);
};
tiltontec.cell.evaluate_test.t_formula_2.cljs$lang$test = function() {
  var b = tiltontec.cell.core.c_in.call(null, 2);
  var cct = cljs.core.atom.call(null, 0);
  var dct = cljs.core.atom.call(null, 0);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, 
  "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(b, cct, dct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, cct, cljs.core.inc);
      return 40 + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(b, cct, dct));
  var d = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, 
  "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(b, cct, dct, c) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, dct, cljs.core.inc);
      return tiltontec.cell.evaluate.c_get.call(null, c) + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(b, cct, dct, c));
  try {
    var values__8764__auto___26236 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 44), tiltontec.cell.evaluate.c_get.call(null, d));
    var result__8765__auto___26237 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26236);
    if (cljs.core.truth_(result__8765__auto___26237)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26236), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26236)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26225) {
    var t__8802__auto___26238 = e26225;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26238, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26239 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8765__auto___26240 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26239);
    if (cljs.core.truth_(result__8765__auto___26240)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26239), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26239)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26226) {
    var t__8802__auto___26241 = e26226;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26241, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26242 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__8765__auto___26243 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26242);
    if (cljs.core.truth_(result__8765__auto___26243)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26242), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26242)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26227) {
    var t__8802__auto___26244 = e26227;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26244, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26245 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, dct)), 1);
    var result__8765__auto___26246 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26245);
    if (cljs.core.truth_(result__8765__auto___26246)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26245), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26245)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26228) {
    var t__8802__auto___26247 = e26228;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26247, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26248 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 1);
    var result__8765__auto___26249 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26248);
    if (cljs.core.truth_(result__8765__auto___26249)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26248), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26248)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26229) {
    var t__8802__auto___26250 = e26229;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26250, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26251 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.cell.base.c_useds.call(null, b))), 0);
    var result__8765__auto___26252 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26251);
    if (cljs.core.truth_(result__8765__auto___26252)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26251), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26251)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26230) {
    var t__8802__auto___26253 = e26230;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
    new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26253, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26254 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.cell.base.c_callers.call(null, b))), 2);
    var result__8765__auto___26255 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26254);
    if (cljs.core.truth_(result__8765__auto___26255)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26254), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26254)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26231) {
    var t__8802__auto___26256 = e26231;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
    new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26256, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26257 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.cell.base.c_useds.call(null, c))), 1);
    var result__8765__auto___26258 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26257);
    if (cljs.core.truth_(result__8765__auto___26258)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26257), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26257)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26232) {
    var t__8802__auto___26259 = e26232;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
    new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26259, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26260 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.cell.base.c_callers.call(null, c))), 1);
    var result__8765__auto___26261 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26260);
    if (cljs.core.truth_(result__8765__auto___26261)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26260), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26260)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26233) {
    var t__8802__auto___26262 = e26233;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
    new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26262, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26263 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.cell.base.c_useds.call(null, d))), 2);
    var result__8765__auto___26264 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26263);
    if (cljs.core.truth_(result__8765__auto___26264)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26263), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26263)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26234) {
    var t__8802__auto___26265 = e26234;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
    new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26265, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.cell.base.c_callers.call(null, d))), 0);
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e26235) {
    var t__8802__auto__ = e26235;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, 
    null), new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.t_formula_2.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.t_formula_2;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula-2", "tiltontec.cell.evaluate-test/t-formula-2", 1653829372, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula-2", "t-formula-2", 844540770, null), "test/tiltontec/cell/evaluate_test.cljc", 21, 1, 74, 
74, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula_2) ? tiltontec.cell.evaluate_test.t_formula_2.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.yowza = cljs.core.atom.call(null, 0);
tiltontec.cell.evaluate_test.t_in_reset = function tiltontec$cell$evaluate_test$t_in_reset() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$t_in_reset.cljs$lang$var);
};
tiltontec.cell.evaluate_test.t_in_reset.cljs$lang$test = function() {
  cljs.core.reset_BANG_.call(null, tiltontec.cell.evaluate_test.yowza, 0);
  try {
    var values__8764__auto___26271 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 0), cljs.core.deref.call(null, tiltontec.cell.evaluate_test.yowza));
    var result__8765__auto___26272 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26271);
    if (cljs.core.truth_(result__8765__auto___26272)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null)), 
      0), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26271), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null)), 
      0), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26271)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26266) {
    var t__8802__auto___26273 = e26266;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null)), 
    0), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26273, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var b = tiltontec.cell.core.c_in.call(null, 2, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "yowza", "yowza", 561311574), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(slot, me, new$, old, c) {
    return cljs.core.reset_BANG_.call(null, tiltontec.cell.evaluate_test.yowza, new$);
  });
  try {
    var values__8764__auto___26274 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, b)), 2);
    var result__8765__auto___26275 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26274);
    if (cljs.core.truth_(result__8765__auto___26275)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26274), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26274)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26267) {
    var t__8802__auto___26276 = e26267;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26276, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26277 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.evaluate_test.yowza)), 2);
    var result__8765__auto___26278 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26277);
    if (cljs.core.truth_(result__8765__auto___26278)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26277), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26277)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26268) {
    var t__8802__auto___26279 = e26268;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26279, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, 42);
  try {
    var values__8764__auto___26280 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, b)), 42);
    var result__8765__auto___26281 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26280);
    if (cljs.core.truth_(result__8765__auto___26281)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26280), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26280)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26269) {
    var t__8802__auto___26282 = e26269;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26282, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.evaluate_test.yowza)), 42);
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e26270) {
    var t__8802__auto__ = e26270;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.t_in_reset.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.t_in_reset;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-in-reset", "tiltontec.cell.evaluate-test/t-in-reset", -1060627208, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-in-reset", "t-in-reset", 285694538, null), "test/tiltontec/cell/evaluate_test.cljc", 20, 1, 100, 100, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_in_reset) ? tiltontec.cell.evaluate_test.t_in_reset.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.t_formula_22 = function tiltontec$cell$evaluate_test$t_formula_22() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$t_formula_22.cljs$lang$var);
};
tiltontec.cell.evaluate_test.t_formula_22.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var b = tiltontec.cell.core.c_in.call(null, 2, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837));
  var cct = cljs.core.atom.call(null, 0);
  var dct = cljs.core.atom.call(null, 0);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "cc", "cc", 301258124), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 
  40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(b, cct, dct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, cct, cljs.core.inc);
      return 40 + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(b, cct, dct));
  var d = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, 
  null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(b, cct, dct, c) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, dct, cljs.core.inc);
      return tiltontec.cell.evaluate.c_get.call(null, c) + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(b, cct, dct, c));
  try {
    var values__8764__auto___26293 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 44), tiltontec.cell.evaluate.c_get.call(null, d));
    var result__8765__auto___26294 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26293);
    if (cljs.core.truth_(result__8765__auto___26294)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26293), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26293)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26283) {
    var t__8802__auto___26295 = e26283;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26295, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26296 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8765__auto___26297 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26296);
    if (cljs.core.truth_(result__8765__auto___26297)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26296), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26296)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26284) {
    var t__8802__auto___26298 = e26284;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26298, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26299 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__8765__auto___26300 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26299);
    if (cljs.core.truth_(result__8765__auto___26300)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26299), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26299)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26285) {
    var t__8802__auto___26301 = e26285;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26301, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26302 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, dct)), 1);
    var result__8765__auto___26303 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26302);
    if (cljs.core.truth_(result__8765__auto___26303)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26302), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26302)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26286) {
    var t__8802__auto___26304 = e26286;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26304, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26305 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 1);
    var result__8765__auto___26306 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26305);
    if (cljs.core.truth_(result__8765__auto___26306)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26305), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26305)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26287) {
    var t__8802__auto___26307 = e26287;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26307, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, 3);
  try {
    var values__8764__auto___26308 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 46), tiltontec.cell.evaluate.c_get.call(null, d));
    var result__8765__auto___26309 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26308);
    if (cljs.core.truth_(result__8765__auto___26309)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 46), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26308), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 46), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26308)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26288) {
    var t__8802__auto___26310 = e26288;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 46), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26310, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26311 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 43), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8765__auto___26312 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26311);
    if (cljs.core.truth_(result__8765__auto___26312)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 43), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26311), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 43), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26311)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26289) {
    var t__8802__auto___26313 = e26289;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 43), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26313, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26314 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 3), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__8765__auto___26315 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26314);
    if (cljs.core.truth_(result__8765__auto___26315)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 3), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26314), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 3), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26314)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26290) {
    var t__8802__auto___26316 = e26290;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 3), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26316, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26317 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, dct)), 2);
    var result__8765__auto___26318 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26317);
    if (cljs.core.truth_(result__8765__auto___26318)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26317), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26317)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26291) {
    var t__8802__auto___26319 = e26291;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26319, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 2);
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e26292) {
    var t__8802__auto__ = e26292;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.t_formula_22.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.t_formula_22;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula-22", "tiltontec.cell.evaluate-test/t-formula-22", 626462137, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula-22", "t-formula-22", -194457801, null), "test/tiltontec/cell/evaluate_test.cljc", 22, 1, 111, 
111, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula_22) ? tiltontec.cell.evaluate_test.t_formula_22.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.pentagram_of_death = function tiltontec$cell$evaluate_test$pentagram_of_death() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$pentagram_of_death.cljs$lang$var);
};
tiltontec.cell.evaluate_test.pentagram_of_death.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var run = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var obs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var rset = function(run, obs) {
    return function() {
      cljs.core.swap_BANG_.call(null, run, cljs.core.empty);
      return cljs.core.swap_BANG_.call(null, obs, cljs.core.empty);
    };
  }(run, obs);
  var logit = function(run, obs, rset) {
    return function(log, key) {
      return cljs.core.swap_BANG_.call(null, run, cljs.core.assoc, key, key.call(null, cljs.core.deref.call(null, run), 0) + 1);
    };
  }(run, obs, rset);
  var logrun = function(run, obs, rset, logit) {
    return function(p1__26320_SHARP_) {
      return logit.call(null, run, p1__26320_SHARP_);
    };
  }(run, obs, rset, logit);
  var cr = function(run, obs, rset, logit, logrun) {
    return function(c) {
      return tiltontec.cell.evaluate.c_get.call(null, c);
    };
  }(run, obs, rset, logit, logrun);
  var podobs = function(run, obs, rset, logit, logrun, cr) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, obs, cljs.core.assoc, slot, slot.call(null, cljs.core.deref.call(null, obs), 0) + 1);
    };
  }(run, obs, rset, logit, logrun, cr);
  var aa = tiltontec.cell.core.c_in.call(null, 1, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs);
  var a7 = tiltontec.cell.core.c_in.call(null, 7, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "a7", "a7", 1513050971), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs);
  var a70 = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "a70", "a70", 798099193), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "a70", "a70", 798099193)), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, 
  null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "a7", "a7", -1141384798, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "a70", "a70", 798099193));
      return 10 * cr.call(null, a7);
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7));
  var bb = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "bb", "bb", 75940837)), cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), 
  new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837));
      return cr.call(null, aa);
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70));
  var cc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "cc", "cc", 301258124), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "cc", "cc", 301258124)), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 
  10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "cc", "cc", 301258124));
      return 10 * cr.call(null, aa);
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb));
  var dd = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "dd", "dd", -1340437629)), cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, 
  null), cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), 42)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, 
  new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "dd", "dd", -1340437629));
      if (cljs.core.even_QMARK_.call(null, cr.call(null, bb))) {
        return 10 * cr.call(null, cc);
      } else {
        return 42;
      }
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc));
  var ee = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "ee", "ee", 643317400), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "ee", "ee", 643317400)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 
  cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "a70", "a70", -1856336576, null)), cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null)), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 1E4, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))))), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc, dd) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "ee", "ee", 643317400));
      return cr.call(null, a70) + cr.call(null, bb) + 1E4 * cr.call(null, dd);
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc, dd));
  var verify_p_current = function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc, dd, ee) {
    return function() {
      try {
        var values__8764__auto___26369 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, aa)), 2);
        var result__8765__auto___26370 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26369);
        if (cljs.core.truth_(result__8765__auto___26370)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26369), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26369)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e26321) {
        var t__8802__auto___26371 = e26321;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__8802__auto___26371, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__8764__auto___26372 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, bb)), 2);
        var result__8765__auto___26373 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26372);
        if (cljs.core.truth_(result__8765__auto___26373)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26372), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26372)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e26322) {
        var t__8802__auto___26374 = e26322;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__8802__auto___26374, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__8764__auto___26375 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, cc)), 20);
        var result__8765__auto___26376 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26375);
        if (cljs.core.truth_(result__8765__auto___26376)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 20, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26375), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 20, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26375)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e26323) {
        var t__8802__auto___26377 = e26323;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 20, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__8802__auto___26377, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__8764__auto___26378 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, dd)), 200);
        var result__8765__auto___26379 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26378);
        if (cljs.core.truth_(result__8765__auto___26379)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 200, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26378), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 200, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26378)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e26324) {
        var t__8802__auto___26380 = e26324;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 200, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__8802__auto___26380, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, ee)), 2000072);
        var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
        if (cljs.core.truth_(result__8765__auto__)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2000072, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2000072, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return result__8765__auto__;
      } catch (e26325) {
        var t__8802__auto__ = e26325;
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2000072, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc, dd, ee);
  try {
    var values__8764__auto___26381 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, aa)), 1);
    var result__8765__auto___26382 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26381);
    if (cljs.core.truth_(result__8765__auto___26382)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26381), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26381)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26326) {
    var t__8802__auto___26383 = e26326;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__8802__auto___26383, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26384 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, bb)), 1);
    var result__8765__auto___26385 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26384);
    if (cljs.core.truth_(result__8765__auto___26385)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26384), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26384)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26327) {
    var t__8802__auto___26386 = e26327;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__8802__auto___26386, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26387 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, cc)), 10);
    var result__8765__auto___26388 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26387);
    if (cljs.core.truth_(result__8765__auto___26388)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26387), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26387)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26328) {
    var t__8802__auto___26389 = e26328;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26389, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26390 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, dd)), 42);
    var result__8765__auto___26391 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26390);
    if (cljs.core.truth_(result__8765__auto___26391)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26390), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26390)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26329) {
    var t__8802__auto___26392 = e26329;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__8802__auto___26392, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26393 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, ee)), 420071);
    var result__8765__auto___26394 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26393);
    if (cljs.core.truth_(result__8765__auto___26394)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 420071, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26393), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 420071, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26393)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26330) {
    var t__8802__auto___26395 = e26330;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 420071, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26395, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26396 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, aa)), null);
    var result__8765__auto___26397 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26396);
    if (cljs.core.truth_(result__8765__auto___26397)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26396), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26396)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26331) {
    var t__8802__auto___26398 = e26331;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26398, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26399 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, aa, new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "cc", "cc", 301258124), null], null), null));
    var result__8765__auto___26400 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26399);
    if (cljs.core.truth_(result__8765__auto___26400)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
      "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26399), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
      "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26399)), 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26332) {
    var t__8802__auto___26401 = e26332;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
    "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26401, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26402 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, bb, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null));
    var result__8765__auto___26403 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26402);
    if (cljs.core.truth_(result__8765__auto___26403)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26402), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26402)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e26333) {
    var t__8802__auto___26404 = e26333;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26404, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26405 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, bb, new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null));
    var result__8765__auto___26406 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26405);
    if (cljs.core.truth_(result__8765__auto___26406)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
      "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26405), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
      "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26405)), 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26334) {
    var t__8802__auto___26407 = e26334;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
    "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26407, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26408 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, cc, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null));
    var result__8765__auto___26409 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26408);
    if (cljs.core.truth_(result__8765__auto___26409)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26408), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26408)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e26335) {
    var t__8802__auto___26410 = e26335;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26410, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26411 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, cc, new cljs.core.Keyword(null, "callers", "callers", -1991542784))), cljs.core.PersistentHashSet.EMPTY);
    var result__8765__auto___26412 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26411);
    if (cljs.core.truth_(result__8765__auto___26412)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, 
      null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26411), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, 
      null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26411)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26336) {
    var t__8802__auto___26413 = e26336;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, 
    null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26413, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26414 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, dd, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null));
    var result__8765__auto___26415 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26414);
    if (cljs.core.truth_(result__8765__auto___26415)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26414), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26414)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e26337) {
    var t__8802__auto___26416 = e26337;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26416, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26417 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, dd, new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null));
    var result__8765__auto___26418 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26417);
    if (cljs.core.truth_(result__8765__auto___26418)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26417), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26417)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e26338) {
    var t__8802__auto___26419 = e26338;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26419, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26420 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, ee, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "a70", "a70", 798099193), null], null), null));
    var result__8765__auto___26421 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26420);
    if (cljs.core.truth_(result__8765__auto___26421)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
      "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "a70", "a70", 798099193), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26420), new cljs.core.Keyword(null, "message", "message", -406056002), 
      null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
      "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "a70", "a70", 798099193), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, 
      "\x3d", "\x3d", -1501502141, null), values__8764__auto___26420)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26339) {
    var t__8802__auto___26422 = e26339;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
    "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "a70", "a70", 798099193), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26422, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26423 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, ee, new cljs.core.Keyword(null, "callers", "callers", -1991542784))), cljs.core.PersistentHashSet.EMPTY);
    var result__8765__auto___26424 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26423);
    if (cljs.core.truth_(result__8765__auto___26424)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, 
      null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26423), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, 
      null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26423)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26340) {
    var t__8802__auto___26425 = e26340;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, 
    null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26425, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var _STAR_trx_QMARK__STAR_26341 = tiltontec.util.base._STAR_trx_QMARK__STAR_;
  tiltontec.util.base._STAR_trx_QMARK__STAR_ = true;
  try {
    rset.call(null);
    var seq__26342_26426 = cljs.core.seq.call(null, cljs.core.seq.call(null, cljs.core.deref.call(null, obs)));
    var chunk__26343_26427 = null;
    var count__26344_26428 = 0;
    var i__26345_26429 = 0;
    while (true) {
      if (i__26345_26429 < count__26344_26428) {
        var vec__26346_26430 = cljs.core._nth.call(null, chunk__26343_26427, i__26345_26429);
        var k_26431 = cljs.core.nth.call(null, vec__26346_26430, 0, null);
        var v_26432 = cljs.core.nth.call(null, vec__26346_26430, 1, null);
        tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obschk", "obschk", -637525555), k_26431, v_26432);
        try {
          var value__8767__auto___26433 = k_26431 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 0, v_26432);
          if (value__8767__auto___26433) {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto___26433, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          } else {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto___26433, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          }
        } catch (e26347) {
          var t__8802__auto___26434 = e26347;
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26434, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        var G__26435 = seq__26342_26426;
        var G__26436 = chunk__26343_26427;
        var G__26437 = count__26344_26428;
        var G__26438 = i__26345_26429 + 1;
        seq__26342_26426 = G__26435;
        chunk__26343_26427 = G__26436;
        count__26344_26428 = G__26437;
        i__26345_26429 = G__26438;
        continue;
      } else {
        var temp__4425__auto___26439 = cljs.core.seq.call(null, seq__26342_26426);
        if (temp__4425__auto___26439) {
          var seq__26342_26440__$1 = temp__4425__auto___26439;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__26342_26440__$1)) {
            var c__5338__auto___26441 = cljs.core.chunk_first.call(null, seq__26342_26440__$1);
            var G__26442 = cljs.core.chunk_rest.call(null, seq__26342_26440__$1);
            var G__26443 = c__5338__auto___26441;
            var G__26444 = cljs.core.count.call(null, c__5338__auto___26441);
            var G__26445 = 0;
            seq__26342_26426 = G__26442;
            chunk__26343_26427 = G__26443;
            count__26344_26428 = G__26444;
            i__26345_26429 = G__26445;
            continue;
          } else {
            var vec__26348_26446 = cljs.core.first.call(null, seq__26342_26440__$1);
            var k_26447 = cljs.core.nth.call(null, vec__26348_26446, 0, null);
            var v_26448 = cljs.core.nth.call(null, vec__26348_26446, 1, null);
            tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obschk", "obschk", -637525555), k_26447, v_26448);
            try {
              var value__8767__auto___26449 = k_26447 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 0, v_26448);
              if (value__8767__auto___26449) {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto___26449, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              } else {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto___26449, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              }
            } catch (e26349) {
              var t__8802__auto___26450 = e26349;
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
              "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26450, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
            var G__26451 = cljs.core.next.call(null, seq__26342_26440__$1);
            var G__26452 = null;
            var G__26453 = 0;
            var G__26454 = 0;
            seq__26342_26426 = G__26451;
            chunk__26343_26427 = G__26452;
            count__26344_26428 = G__26453;
            i__26345_26429 = G__26454;
            continue;
          }
        } else {
        }
      }
      break;
    }
    tiltontec.cell.core.c_reset_BANG_.call(null, aa, cr.call(null, aa) + 1);
    cljs.core._EQ_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "cc", "cc", 301258124), null, new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, run))));
    var seq__26350_26455 = cljs.core.seq.call(null, cljs.core.seq.call(null, cljs.core.deref.call(null, run)));
    var chunk__26351_26456 = null;
    var count__26352_26457 = 0;
    var i__26353_26458 = 0;
    while (true) {
      if (i__26353_26458 < count__26352_26457) {
        var vec__26354_26459 = cljs.core._nth.call(null, chunk__26351_26456, i__26353_26458);
        var k_26460 = cljs.core.nth.call(null, vec__26354_26459, 0, null);
        var v_26461 = cljs.core.nth.call(null, vec__26354_26459, 1, null);
        tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "runchk", "runchk", -886583070), k_26460, v_26461);
        try {
          var value__8767__auto___26462 = k_26460 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 1, v_26461);
          if (value__8767__auto___26462) {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto___26462, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          } else {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto___26462, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          }
        } catch (e26355) {
          var t__8802__auto___26463 = e26355;
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26463, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        var G__26464 = seq__26350_26455;
        var G__26465 = chunk__26351_26456;
        var G__26466 = count__26352_26457;
        var G__26467 = i__26353_26458 + 1;
        seq__26350_26455 = G__26464;
        chunk__26351_26456 = G__26465;
        count__26352_26457 = G__26466;
        i__26353_26458 = G__26467;
        continue;
      } else {
        var temp__4425__auto___26468 = cljs.core.seq.call(null, seq__26350_26455);
        if (temp__4425__auto___26468) {
          var seq__26350_26469__$1 = temp__4425__auto___26468;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__26350_26469__$1)) {
            var c__5338__auto___26470 = cljs.core.chunk_first.call(null, seq__26350_26469__$1);
            var G__26471 = cljs.core.chunk_rest.call(null, seq__26350_26469__$1);
            var G__26472 = c__5338__auto___26470;
            var G__26473 = cljs.core.count.call(null, c__5338__auto___26470);
            var G__26474 = 0;
            seq__26350_26455 = G__26471;
            chunk__26351_26456 = G__26472;
            count__26352_26457 = G__26473;
            i__26353_26458 = G__26474;
            continue;
          } else {
            var vec__26356_26475 = cljs.core.first.call(null, seq__26350_26469__$1);
            var k_26476 = cljs.core.nth.call(null, vec__26356_26475, 0, null);
            var v_26477 = cljs.core.nth.call(null, vec__26356_26475, 1, null);
            tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "runchk", "runchk", -886583070), k_26476, v_26477);
            try {
              var value__8767__auto___26478 = k_26476 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 1, v_26477);
              if (value__8767__auto___26478) {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto___26478, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              } else {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto___26478, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              }
            } catch (e26357) {
              var t__8802__auto___26479 = e26357;
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
              "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26479, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
            var G__26480 = cljs.core.next.call(null, seq__26350_26469__$1);
            var G__26481 = null;
            var G__26482 = 0;
            var G__26483 = 0;
            seq__26350_26455 = G__26480;
            chunk__26351_26456 = G__26481;
            count__26352_26457 = G__26482;
            i__26353_26458 = G__26483;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.core._EQ_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null, new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "cc", "cc", 301258124), null, new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, obs))));
    var seq__26358_26484 = cljs.core.seq.call(null, cljs.core.seq.call(null, cljs.core.deref.call(null, obs)));
    var chunk__26359_26485 = null;
    var count__26360_26486 = 0;
    var i__26361_26487 = 0;
    while (true) {
      if (i__26361_26487 < count__26360_26486) {
        var vec__26362_26488 = cljs.core._nth.call(null, chunk__26359_26485, i__26361_26487);
        var k_26489 = cljs.core.nth.call(null, vec__26362_26488, 0, null);
        var v_26490 = cljs.core.nth.call(null, vec__26362_26488, 1, null);
        tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obschk", "obschk", -637525555), k_26489, v_26490);
        try {
          var value__8767__auto___26491 = k_26489 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 1, v_26490);
          if (value__8767__auto___26491) {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto___26491, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          } else {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto___26491, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          }
        } catch (e26363) {
          var t__8802__auto___26492 = e26363;
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26492, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        var G__26493 = seq__26358_26484;
        var G__26494 = chunk__26359_26485;
        var G__26495 = count__26360_26486;
        var G__26496 = i__26361_26487 + 1;
        seq__26358_26484 = G__26493;
        chunk__26359_26485 = G__26494;
        count__26360_26486 = G__26495;
        i__26361_26487 = G__26496;
        continue;
      } else {
        var temp__4425__auto___26497 = cljs.core.seq.call(null, seq__26358_26484);
        if (temp__4425__auto___26497) {
          var seq__26358_26498__$1 = temp__4425__auto___26497;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__26358_26498__$1)) {
            var c__5338__auto___26499 = cljs.core.chunk_first.call(null, seq__26358_26498__$1);
            var G__26500 = cljs.core.chunk_rest.call(null, seq__26358_26498__$1);
            var G__26501 = c__5338__auto___26499;
            var G__26502 = cljs.core.count.call(null, c__5338__auto___26499);
            var G__26503 = 0;
            seq__26358_26484 = G__26500;
            chunk__26359_26485 = G__26501;
            count__26360_26486 = G__26502;
            i__26361_26487 = G__26503;
            continue;
          } else {
            var vec__26364_26504 = cljs.core.first.call(null, seq__26358_26498__$1);
            var k_26505 = cljs.core.nth.call(null, vec__26364_26504, 0, null);
            var v_26506 = cljs.core.nth.call(null, vec__26364_26504, 1, null);
            tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obschk", "obschk", -637525555), k_26505, v_26506);
            try {
              var value__8767__auto___26507 = k_26505 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 1, v_26506);
              if (value__8767__auto___26507) {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto___26507, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              } else {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto___26507, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              }
            } catch (e26365) {
              var t__8802__auto___26508 = e26365;
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
              "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26508, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
            var G__26509 = cljs.core.next.call(null, seq__26358_26498__$1);
            var G__26510 = null;
            var G__26511 = 0;
            var G__26512 = 0;
            seq__26358_26484 = G__26509;
            chunk__26359_26485 = G__26510;
            count__26360_26486 = G__26511;
            i__26361_26487 = G__26512;
            continue;
          }
        } else {
        }
      }
      break;
    }
    try {
      var values__8764__auto___26513 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, dd, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "cc", "cc", 301258124), null], null), null));
      var result__8765__auto___26514 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26513);
      if (cljs.core.truth_(result__8765__auto___26514)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
        "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26513), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
        "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26513)), 
        new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e26366) {
      var t__8802__auto___26515 = e26366;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
      "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26515, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    verify_p_current.call(null);
    tiltontec.cell.core.c_reset_BANG_.call(null, aa, cr.call(null, aa) + 1);
    try {
      var values__8764__auto___26516 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, dd)), 42);
      var result__8765__auto___26517 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26516);
      if (cljs.core.truth_(result__8765__auto___26517)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26516), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26516)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e26367) {
      var t__8802__auto___26518 = e26367;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), t__8802__auto___26518, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    try {
      var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slots.call(null, dd, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null));
      var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
      if (cljs.core.truth_(result__8765__auto__)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
        "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
        "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
        "message", "message", -406056002), null], null));
      }
      return result__8765__auto__;
    } catch (e26368) {
      var t__8802__auto__ = e26368;
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } finally {
    tiltontec.util.base._STAR_trx_QMARK__STAR_ = _STAR_trx_QMARK__STAR_26341;
  }
};
tiltontec.cell.evaluate_test.pentagram_of_death.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.pentagram_of_death;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "pentagram-of-death", "tiltontec.cell.evaluate-test/pentagram-of-death", -438613751, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "pentagram-of-death", "pentagram-of-death", 874385051, null), "test/tiltontec/cell/evaluate_test.cljc", 
28, 1, 147, 147, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.pentagram_of_death) ? tiltontec.cell.evaluate_test.pentagram_of_death.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.t_cell_unchanged_test = function tiltontec$cell$evaluate_test$t_cell_unchanged_test() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$t_cell_unchanged_test.cljs$lang$var);
};
tiltontec.cell.evaluate_test.t_cell_unchanged_test.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var ob = cljs.core.atom.call(null, 0);
  var b = tiltontec.cell.core.c_in.call(null, 2, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(ob) {
    return function(slot, me, new$, old, c) {
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "obs-bb!!", "obs-bb!!", -1369030842), new$, old);
      return cljs.core.swap_BANG_.call(null, ob, cljs.core.inc);
    };
  }(ob), new cljs.core.Keyword(null, "unchanged-if", "unchanged-if", -923210106), function(ob) {
    return function(n, p) {
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "ucif-sees", "ucif-sees", -1878078109), n, p);
      return typeof n === "number" && typeof p === "number" && (cljs.core.even_QMARK_.call(null, n) && cljs.core.even_QMARK_.call(null, p) || cljs.core.odd_QMARK_.call(null, n) && cljs.core.odd_QMARK_.call(null, p));
    };
  }(ob));
  var cct = cljs.core.atom.call(null, 0);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "cc", "cc", 301258124), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 
  40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(ob, b, cct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, cct, cljs.core.inc);
      return 40 + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(ob, b, cct));
  try {
    var values__8764__auto___26531 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8765__auto___26532 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26531);
    if (cljs.core.truth_(result__8765__auto___26532)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26531), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26531)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26519) {
    var t__8802__auto___26533 = e26519;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26533, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26534 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__8765__auto___26535 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26534);
    if (cljs.core.truth_(result__8765__auto___26535)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26534), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26534)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26520) {
    var t__8802__auto___26536 = e26520;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26536, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26537 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, ob)), 1);
    var result__8765__auto___26538 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26537);
    if (cljs.core.truth_(result__8765__auto___26538)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26537), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26537)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26521) {
    var t__8802__auto___26539 = e26521;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26539, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26540 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 1);
    var result__8765__auto___26541 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26540);
    if (cljs.core.truth_(result__8765__auto___26541)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26540), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26540)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26522) {
    var t__8802__auto___26542 = e26522;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26542, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, 4);
  try {
    var values__8764__auto___26543 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8765__auto___26544 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26543);
    if (cljs.core.truth_(result__8765__auto___26544)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26543), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26543)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26523) {
    var t__8802__auto___26545 = e26523;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26545, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26546 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 4), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__8765__auto___26547 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26546);
    if (cljs.core.truth_(result__8765__auto___26547)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 4), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26546), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 4), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26546)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26524) {
    var t__8802__auto___26548 = e26524;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 4), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26548, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26549 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, ob)), 1);
    var result__8765__auto___26550 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26549);
    if (cljs.core.truth_(result__8765__auto___26550)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26549), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26549)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26525) {
    var t__8802__auto___26551 = e26525;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26551, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26552 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 1);
    var result__8765__auto___26553 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26552);
    if (cljs.core.truth_(result__8765__auto___26553)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26552), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26552)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26526) {
    var t__8802__auto___26554 = e26526;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26554, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, 5);
  try {
    var values__8764__auto___26555 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 45), tiltontec.cell.evaluate.c_get.call(null, c));
    var result__8765__auto___26556 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26555);
    if (cljs.core.truth_(result__8765__auto___26556)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 45), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26555), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 45), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26555)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26527) {
    var t__8802__auto___26557 = e26527;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 45), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26557, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26558 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 5), tiltontec.cell.evaluate.c_get.call(null, b));
    var result__8765__auto___26559 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26558);
    if (cljs.core.truth_(result__8765__auto___26559)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 5), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26558), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 5), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26558)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26528) {
    var t__8802__auto___26560 = e26528;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 5), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26560, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26561 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, ob)), 2);
    var result__8765__auto___26562 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26561);
    if (cljs.core.truth_(result__8765__auto___26562)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26561), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26561)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26529) {
    var t__8802__auto___26563 = e26529;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26563, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 2);
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e26530) {
    var t__8802__auto__ = e26530;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.t_cell_unchanged_test.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.t_cell_unchanged_test;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-cell-unchanged-test", "tiltontec.cell.evaluate-test/t-cell-unchanged-test", -1587253216, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-cell-unchanged-test", "t-cell-unchanged-test", -257732942, null), "test/tiltontec/cell/evaluate_test.cljc", 
31, 1, 294, 294, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_cell_unchanged_test) ? tiltontec.cell.evaluate_test.t_cell_unchanged_test.cljs$lang$test : null]));
tiltontec.cell.evaluate_test.opti_away = function tiltontec$cell$evaluate_test$opti_away() {
  return cljs.test.test_var.call(null, tiltontec$cell$evaluate_test$opti_away.cljs$lang$var);
};
tiltontec.cell.evaluate_test.opti_away.cljs$lang$test = function() {
  var aa = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(42), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return 42;
  });
  try {
    var values__8764__auto___26567 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, aa)), 42);
    var result__8765__auto___26568 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26567);
    if (cljs.core.truth_(result__8765__auto___26568)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26567), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26567)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26564) {
    var t__8802__auto___26569 = e26564;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26569, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.println.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), cljs.core.deref.call(null, aa));
  try {
    var values__8764__auto___26570 = cljs.core._conj.call(null, cljs.core.List.EMPTY, aa);
    var result__8765__auto___26571 = cljs.core.apply.call(null, tiltontec.cell.base.c_optimized_away_QMARK_, values__8764__auto___26570);
    if (cljs.core.truth_(result__8765__auto___26571)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-optimized-away?", "c-optimized-away?", 285032327, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      tiltontec.cell.base.c_optimized_away_QMARK_, values__8764__auto___26570), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-optimized-away?", "c-optimized-away?", 285032327, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-optimized-away?", "c-optimized-away?", 285032327, null), values__8764__auto___26570)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26565) {
    var t__8802__auto___26572 = e26565;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-optimized-away?", "c-optimized-away?", 285032327, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26572, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, aa)), 42);
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e26566) {
    var t__8802__auto__ = e26566;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.evaluate_test.opti_away.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.evaluate_test.opti_away;
}, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "opti-away", "tiltontec.cell.evaluate-test/opti-away", 1608981072, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "opti-away", "opti-away", -1363650270, null), "test/tiltontec/cell/evaluate_test.cljc", 19, 1, 329, 329, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.opti_away) ? tiltontec.cell.evaluate_test.opti_away.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env26573 = cljs.test.empty_env.call(null);
  var summary26574 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env26573, summary26574) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env26573);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__8869__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env26573, summary26574) {
          return function() {
            if (env__8869__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__8869__auto__, env26573, summary26574)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.test_input;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "test-input", "tiltontec.cell.evaluate-test/test-input", -1028428775, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/evaluate_test.cljc", 
        20, 1, 45, 45, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.test_input) ? tiltontec.cell.evaluate_test.test_input.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.t_formula;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula", "tiltontec.cell.evaluate-test/t-formula", 1151821320, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula", "t-formula", -178019426, null), "test/tiltontec/cell/evaluate_test.cljc", 
        19, 1, 57, 57, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula) ? tiltontec.cell.evaluate_test.t_formula.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.t_formula_2;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula-2", "tiltontec.cell.evaluate-test/t-formula-2", 1653829372, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula-2", "t-formula-2", 844540770, null), "test/tiltontec/cell/evaluate_test.cljc", 
        21, 1, 74, 74, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula_2) ? tiltontec.cell.evaluate_test.t_formula_2.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.t_in_reset;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-in-reset", "tiltontec.cell.evaluate-test/t-in-reset", -1060627208, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-in-reset", "t-in-reset", 285694538, null), "test/tiltontec/cell/evaluate_test.cljc", 
        20, 1, 100, 100, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_in_reset) ? tiltontec.cell.evaluate_test.t_in_reset.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.t_formula_22;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-formula-22", "tiltontec.cell.evaluate-test/t-formula-22", 626462137, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-formula-22", "t-formula-22", -194457801, null), "test/tiltontec/cell/evaluate_test.cljc", 
        22, 1, 111, 111, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_formula_22) ? tiltontec.cell.evaluate_test.t_formula_22.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.pentagram_of_death;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "pentagram-of-death", "tiltontec.cell.evaluate-test/pentagram-of-death", -438613751, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "pentagram-of-death", "pentagram-of-death", 874385051, null), "test/tiltontec/cell/evaluate_test.cljc", 
        28, 1, 147, 147, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.pentagram_of_death) ? tiltontec.cell.evaluate_test.pentagram_of_death.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.t_cell_unchanged_test;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "t-cell-unchanged-test", "tiltontec.cell.evaluate-test/t-cell-unchanged-test", -1587253216, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "t-cell-unchanged-test", "t-cell-unchanged-test", -257732942, null), "test/tiltontec/cell/evaluate_test.cljc", 
        31, 1, 294, 294, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.t_cell_unchanged_test) ? tiltontec.cell.evaluate_test.t_cell_unchanged_test.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.evaluate_test.opti_away;
        }, new cljs.core.Symbol("tiltontec.cell.evaluate-test", "opti-away", "tiltontec.cell.evaluate-test/opti-away", 1608981072, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Symbol(null, "opti-away", "opti-away", -1363650270, null), "test/tiltontec/cell/evaluate_test.cljc", 
        19, 1, 329, 329, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.evaluate_test.opti_away) ? tiltontec.cell.evaluate_test.opti_away.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env26573, summary26574) {
          return function() {
            if (env__8869__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__8869__auto__, env26573, summary26574)], null));
      }());
    };
  }(env26573, summary26574), function(env26573, summary26574) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.evaluate-test", "tiltontec.cell.evaluate-test", 1040475999, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env26573, summary26574)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env26573, summary26574) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary26574, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary26574), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env26573, summary26574)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env26573, summary26574) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env26573);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary26574));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary26574), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env26573, summary26574)], null));
}());
goog.provide("tiltontec.cell.hello_cells_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.cell.evaluate");
tiltontec.cell.hello_cells_test.hw_01 = function tiltontec$cell$hello_cells_test$hw_01() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hw_01.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hw_01.cljs$lang$test = function() {
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.make_cell.call(null, new cljs.core.Keyword(null, "value", "value", 305978217), "knocks", new cljs.core.Keyword(null, "input?", "input?", -1792843173), true)], null);
  cljs.core.println.call(null, tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(v)), tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
  try {
    var values__8764__auto___25865 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "World"), tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__8765__auto___25866 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25865);
    if (cljs.core.truth_(result__8765__auto___25866)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25865), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25865)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25863) {
    var t__8802__auto___25867 = e25863;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25867, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "knocks"), tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25864) {
    var t__8802__auto__ = e25864;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.hello_cells_test.hw_01.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hw_01;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-01", "tiltontec.cell.hello-cells-test/hw-01", -1914102464, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-01", "hw-01", -198427897, null), "test/tiltontec/cell/hello_cells_test.cljc", 15, 1, 42, 42, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_01) ? tiltontec.cell.hello_cells_test.hw_01.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.hw_02 = function tiltontec$cell$hello_cells_test$hw_02() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hw_02.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hw_02.cljs$lang$test = function() {
  var obs_action = cljs.core.atom.call(null, null);
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, "knocks", new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action) {
    return function(slot, me, new$, old, c) {
      cljs.core.reset_BANG_.call(null, obs_action, new$);
      return cljs.core.println.call(null, new cljs.core.Keyword(null, "observing", "observing", 1065333653), slot, new$, old);
    };
  }(obs_action))], null);
  try {
    var values__8764__auto___25871 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "World"), tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__8765__auto___25872 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25871);
    if (cljs.core.truth_(result__8765__auto___25872)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25871), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25871)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25868) {
    var t__8802__auto___25873 = e25868;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25873, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25874 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "knocks"), tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__8765__auto___25875 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25874);
    if (cljs.core.truth_(result__8765__auto___25875)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25874), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25874)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25869) {
    var t__8802__auto___25876 = e25869;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25876, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, obs_action)), "knocks");
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knocks", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs-action", "obs-action", 
      223700248, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knocks", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs-action", "obs-action", 
      223700248, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25870) {
    var t__8802__auto__ = e25870;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knocks", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs-action", "obs-action", 
    223700248, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.hello_cells_test.hw_02.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hw_02;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-02", "tiltontec.cell.hello-cells-test/hw-02", -1923842247, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-02", "hw-02", -1769431692, null), "test/tiltontec/cell/hello_cells_test.cljc", 15, 1, 54, 
54, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_02) ? tiltontec.cell.hello_cells_test.hw_02.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.hw_03 = function tiltontec$cell$hello_cells_test$hw_03() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hw_03.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hw_03.cljs$lang$test = function() {
  var action = cljs.core.atom.call(null, null);
  var obs_action = function(action) {
    return function(slot, me, new$, old, c) {
      cljs.core.reset_BANG_.call(null, action, new$);
      return cljs.core.println.call(null, new cljs.core.Keyword(null, "observing", "observing", 1065333653), slot, new$, old);
    };
  }(action);
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "obs", "obs", -664011444), obs_action)], null);
  try {
    var values__8764__auto___25881 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__8765__auto___25882 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25881);
    if (cljs.core.truth_(result__8765__auto___25882)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25881), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25881)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25877) {
    var t__8802__auto___25883 = e25877;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25883, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25884 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, action));
    var result__8765__auto___25885 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25884);
    if (cljs.core.truth_(result__8765__auto___25885)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25884), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25884)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25878) {
    var t__8802__auto___25886 = e25878;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25886, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), "knock-knock");
  try {
    var values__8764__auto___25887 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, action)), "knock-knock");
    var result__8765__auto___25888 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25887);
    if (cljs.core.truth_(result__8765__auto___25888)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knock-knock", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25887), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knock-knock", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25887)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25879) {
    var t__8802__auto___25889 = e25879;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knock-knock", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25889, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "knock-knock"), tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knock-knock"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knock-knock"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25880) {
    var t__8802__auto__ = e25880;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "knock-knock"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.hello_cells_test.hw_03.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hw_03;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-03", "tiltontec.cell.hello-cells-test/hw-03", -166136141, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-03", "hw-03", -237693708, null), "test/tiltontec/cell/hello_cells_test.cljc", 15, 1, 68, 68, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_03) ? tiltontec.cell.hello_cells_test.hw_03.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.gobs = function tiltontec$cell$hello_cells_test$gobs(slot, me, new$, old, c) {
  return cljs.core.println.call(null, new cljs.core.Keyword(null, "gobs\x3e", "gobs\x3e", 972099754), slot, new$, old);
};
tiltontec.cell.hello_cells_test.hw_04 = function tiltontec$cell$hello_cells_test$hw_04() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hw_04.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hw_04.cljs$lang$test = function() {
  var r_action = tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "r-action", "r-action", -113870725), new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.hello_cells_test.gobs);
  var r_loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "r-loc", "r-loc", 1040711343), new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.hello_cells_test.gobs, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(r_action) {
    return function(c) {
      var G__25890 = tiltontec.cell.evaluate.c_get.call(null, r_action) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, r_action).fqn : null;
      switch(G__25890) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "at-home", "at-home", 1687350383);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(r_action));
  tiltontec.cell.evaluate.c_awaken.call(null, r_loc);
  try {
    var values__8764__auto___25894 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, r_loc))), new cljs.core.Keyword(null, "missing", "missing", 362507769));
    var result__8765__auto___25895 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25894);
    if (cljs.core.truth_(result__8765__auto___25895)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25894), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25894)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), 
      null], null));
    }
  } catch (e25891) {
    var t__8802__auto___25896 = e25891;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25896, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.println.call(null, new cljs.core.Keyword(null, "---about-to-leave------------------", "---about-to-leave------------------", 511366567));
  tiltontec.cell.core.c_reset_BANG_.call(null, r_action, new cljs.core.Keyword(null, "leave", "leave", 1022579443));
  cljs.core.println.call(null, new cljs.core.Keyword(null, "---left------------------", "---left------------------", -1129059094));
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, r_loc)), new cljs.core.Keyword(null, "away", "away", 1142420954));
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "away", "away", 1142420954), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "away", "away", 1142420954), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25892) {
    var t__8802__auto__ = e25892;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "away", "away", 1142420954), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, 
    "r-loc", "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.hello_cells_test.hw_04.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hw_04;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-04", "tiltontec.cell.hello-cells-test/hw-04", -1022076846, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-04", "hw-04", -86409835, null), "test/tiltontec/cell/hello_cells_test.cljc", 15, 1, 88, 88, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_04) ? tiltontec.cell.hello_cells_test.hw_04.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.hw_5 = function tiltontec$cell$hello_cells_test$hw_5() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hw_5.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hw_5.cljs$lang$test = function() {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "--go------------------", "--go------------------", 69945111));
  var obs_action = function(slot, me, new$, old, c) {
    return cljs.core.println.call(null, slot, new$, old);
  };
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "obs", "obs", -664011444), obs_action)], null);
  var r_action = tiltontec.cell.core.c_in.call(null, null);
  var r_loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action) {
    return function(slot, me, new$, old, c) {
      if (cljs.core.truth_(new$)) {
        return tiltontec.util.base.call_trc.call(null, ":honey-im", new$);
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-action", "r-action", 1526660802, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), 
  new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__25897 = tiltontec.cell.evaluate.c_get.call(null, r_action) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, r_action).fqn : null;
      switch(G__25897) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(obs_action, v, r_action));
  var r_response = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc) {
    return function(slot, me, new$, old, c) {
      return tiltontec.util.base.call_trc.call(null, ":r-resp", new$);
    };
  }(obs_action, v, r_action, r_loc), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null))), cljs.core.list(new cljs.core.Symbol(null, 
  "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, 
  "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.cell.evaluate.c_get.call(null, r_loc))) {
        var temp__4425__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
        if (cljs.core.truth_(temp__4425__auto__)) {
          var act = temp__4425__auto__;
          var G__25898 = act instanceof cljs.core.Keyword ? act.fqn : null;
          switch(G__25898) {
            case "knock-knock":
              return "hello, world";
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(act)].join(""));;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc));
  try {
    var values__8764__auto___25903 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, r_response));
    var result__8765__auto___25904 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25903);
    if (cljs.core.truth_(result__8765__auto___25904)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25903), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25903)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25899) {
    var t__8802__auto___25905 = e25899;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25905, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
  tiltontec.cell.core.c_reset_BANG_.call(null, r_action, new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, r_loc)), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25900) {
    var t__8802__auto__ = e25900;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, 
    "r-loc", "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.hello_cells_test.hw_5.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hw_5;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-5", "tiltontec.cell.hello-cells-test/hw-5", -1695099335, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-5", "hw-5", -2093878022, null), "test/tiltontec/cell/hello_cells_test.cljc", 14, 1, 107, 107, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_5) ? tiltontec.cell.hello_cells_test.hw_5.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.hello_world = function tiltontec$cell$hello_cells_test$hello_world() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hello_world.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hello_world.cljs$lang$test = function() {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "--go------------------", "--go------------------", 69945111));
  var obs_action = function(slot, me, new$, old, c) {
    return cljs.core.println.call(null, slot, new$, old);
  };
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "obs", "obs", -664011444), obs_action)], null);
  var r_action = tiltontec.cell.core.c_in.call(null, null);
  var r_loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action) {
    return function(slot, me, new$, old, c) {
      if (cljs.core.truth_(new$)) {
        return tiltontec.util.base.call_trc.call(null, ":honey-im", new$);
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-action", "r-action", 1526660802, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), 
  new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__25906 = tiltontec.cell.evaluate.c_get.call(null, r_action) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, r_action).fqn : null;
      switch(G__25906) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(obs_action, v, r_action));
  var r_response = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc) {
    return function(slot, me, new$, old, c) {
      return tiltontec.util.base.call_trc.call(null, ":r-response", new$);
    };
  }(obs_action, v, r_action, r_loc), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
  "r-loc", -1613724426, null))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))], null), cljs.core.list(new cljs.core.Symbol(null, 
  "case", "case", -1510733573, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.cell.evaluate.c_get.call(null, r_loc))) {
        var temp__4425__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
        if (cljs.core.truth_(temp__4425__auto__)) {
          var act = temp__4425__auto__;
          var G__25907 = act instanceof cljs.core.Keyword ? act.fqn : null;
          switch(G__25907) {
            case "knock-knock":
              return "hello, world";
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(act)].join(""));;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc));
  try {
    var values__8764__auto___25912 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, r_response));
    var result__8765__auto___25913 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25912);
    if (cljs.core.truth_(result__8765__auto___25913)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25912), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25912)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25908) {
    var t__8802__auto___25914 = e25908;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25914, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
  tiltontec.cell.core.c_reset_BANG_.call(null, r_action, new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__8764__auto___25915 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, r_loc)), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__8765__auto___25916 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25915);
    if (cljs.core.truth_(result__8765__auto___25916)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25915), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25915)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25909) {
    var t__8802__auto___25917 = e25909;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
    "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25917, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  return tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
};
tiltontec.cell.hello_cells_test.hello_world.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hello_world;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hello-world", "tiltontec.cell.hello-cells-test/hello-world", -896604635, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hello-world", "hello-world", 852100064, null), "test/tiltontec/cell/hello_cells_test.cljc", 
21, 1, 130, 130, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hello_world) ? tiltontec.cell.hello_cells_test.hello_world.cljs$lang$test : null]));
tiltontec.cell.hello_cells_test.hello_world_2 = function tiltontec$cell$hello_cells_test$hello_world_2() {
  return cljs.test.test_var.call(null, tiltontec$cell$hello_cells_test$hello_world_2.cljs$lang$var);
};
tiltontec.cell.hello_cells_test.hello_world_2.cljs$lang$test = function() {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "--go------------------", "--go------------------", 69945111));
  var obs_action = function(slot, me, new$, old, c) {
    if (cljs.core.truth_(new$)) {
      return tiltontec.util.base.call_trc.call(null, "visitor-did", new$);
    } else {
      return null;
    }
  };
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "obs", "obs", -664011444), obs_action)], null);
  var r_action = tiltontec.cell.core.c_in.call(null, null);
  var r_loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action) {
    return function(slot, me, new$, old, c) {
      if (cljs.core.truth_(new$)) {
        return tiltontec.util.base.call_trc.call(null, ":honey-im", new$);
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-action", "r-action", 1526660802, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), 
  new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__25918 = tiltontec.cell.evaluate.c_get.call(null, r_action) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, r_action).fqn : null;
      switch(G__25918) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(obs_action, v, r_action));
  var r_response = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc) {
    return function(slot, me, new$, old, c) {
      if (cljs.core.truth_(new$)) {
        return tiltontec.util.base.call_trc.call(null, ":r-response", new$);
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
  "r-loc", -1613724426, null))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))], null), cljs.core.list(new cljs.core.Symbol(null, 
  "case", "case", -1510733573, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.cell.evaluate.c_get.call(null, r_loc))) {
        var temp__4425__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
        if (cljs.core.truth_(temp__4425__auto__)) {
          var act = temp__4425__auto__;
          var G__25919 = act instanceof cljs.core.Keyword ? act.fqn : null;
          switch(G__25919) {
            case "knock-knock":
              return "hello, world";
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(act)].join(""));;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc));
  var alarm = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc, r_response) {
    return function(slot, me, new$, old, c) {
      return tiltontec.util.base.call_trc.call(null, ":telling-alarm-api", new$);
    };
  }(obs_action, v, r_action, r_loc, r_response), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null))), new cljs.core.Keyword(null, 
  "off", "off", 606440789), new cljs.core.Keyword(null, "on", "on", 173873944))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc, r_response) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.cell.evaluate.c_get.call(null, r_loc))) {
        return new cljs.core.Keyword(null, "off", "off", 606440789);
      } else {
        return new cljs.core.Keyword(null, "on", "on", 173873944);
      }
    };
  }(obs_action, v, r_action, r_loc, r_response));
  var alarm_do = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc, r_response, alarm) {
    return function(slot, me, new$, old, c) {
      var G__25920 = new$ instanceof cljs.core.Keyword ? new$.fqn : null;
      switch(G__25920) {
        case "call-police":
          return tiltontec.util.base.call_trc.call(null, ":auto-dialing-911");
          break;
        default:
          return null;
      }
    };
  }(obs_action, v, r_action, r_loc, r_response, alarm), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "on", "on", 173873944), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null))), cljs.core.list(new cljs.core.Symbol(null, 
  "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "action", "action", 829293503, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, 
  "action", "action", 829293503, null), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646), new cljs.core.Keyword(null, "call-police", "call-police", -2114689981), null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc, r_response, alarm) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "on", "on", 173873944), tiltontec.cell.evaluate.c_get.call(null, alarm))) {
        var temp__4425__auto__ = tiltontec.cell.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
        if (cljs.core.truth_(temp__4425__auto__)) {
          var action = temp__4425__auto__;
          var G__25921 = action instanceof cljs.core.Keyword ? action.fqn : null;
          switch(G__25921) {
            case "smashing-window":
              return new cljs.core.Keyword(null, "call-police", "call-police", -2114689981);
              break;
            default:
              return null;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc, r_response, alarm));
  tiltontec.cell.evaluate.c_awaken.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [alarm_do, r_response, r_loc, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)], null));
  try {
    var values__8764__auto___25928 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, r_loc))), new cljs.core.Keyword(null, "missing", "missing", 362507769));
    var result__8765__auto___25929 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25928);
    if (cljs.core.truth_(result__8765__auto___25929)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25928), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25928)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), 
      null], null));
    }
  } catch (e25922) {
    var t__8802__auto___25930 = e25922;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25930, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
  tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646));
  tiltontec.cell.core.c_reset_BANG_.call(null, r_action, new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__8764__auto___25931 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, r_loc)), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__8765__auto___25932 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25931);
    if (cljs.core.truth_(result__8765__auto___25932)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25931), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25931)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25923) {
    var t__8802__auto___25933 = e25923;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
    "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25933, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  return tiltontec.cell.core.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
};
tiltontec.cell.hello_cells_test.hello_world_2.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.hello_cells_test.hello_world_2;
}, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hello-world-2", "tiltontec.cell.hello-cells-test/hello-world-2", 1570168257, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hello-world-2", "hello-world-2", 1439841158, null), "test/tiltontec/cell/hello_cells_test.cljc", 
23, 1, 157, 157, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hello_world_2) ? tiltontec.cell.hello_cells_test.hello_world_2.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env25934 = cljs.test.empty_env.call(null);
  var summary25935 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25934, summary25935) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env25934);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__8869__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env25934, summary25935) {
          return function() {
            if (env__8869__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__8869__auto__, env25934, summary25935)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hw_01;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-01", "tiltontec.cell.hello-cells-test/hw-01", -1914102464, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-01", "hw-01", -198427897, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        15, 1, 42, 42, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_01) ? tiltontec.cell.hello_cells_test.hw_01.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hw_02;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-02", "tiltontec.cell.hello-cells-test/hw-02", -1923842247, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-02", "hw-02", -1769431692, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        15, 1, 54, 54, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_02) ? tiltontec.cell.hello_cells_test.hw_02.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hw_03;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-03", "tiltontec.cell.hello-cells-test/hw-03", -166136141, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-03", "hw-03", -237693708, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        15, 1, 68, 68, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_03) ? tiltontec.cell.hello_cells_test.hw_03.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hw_04;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-04", "tiltontec.cell.hello-cells-test/hw-04", -1022076846, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-04", "hw-04", -86409835, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        15, 1, 88, 88, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_04) ? tiltontec.cell.hello_cells_test.hw_04.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hw_5;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hw-5", "tiltontec.cell.hello-cells-test/hw-5", -1695099335, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hw-5", "hw-5", -2093878022, null), "test/tiltontec/cell/hello_cells_test.cljc", 14, 1, 
        107, 107, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hw_5) ? tiltontec.cell.hello_cells_test.hw_5.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hello_world;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hello-world", "tiltontec.cell.hello-cells-test/hello-world", -896604635, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hello-world", "hello-world", 852100064, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        21, 1, 130, 130, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hello_world) ? tiltontec.cell.hello_cells_test.hello_world.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.hello_cells_test.hello_world_2;
        }, new cljs.core.Symbol("tiltontec.cell.hello-cells-test", "hello-world-2", "tiltontec.cell.hello-cells-test/hello-world-2", 1570168257, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Symbol(null, "hello-world-2", "hello-world-2", 1439841158, null), "test/tiltontec/cell/hello_cells_test.cljc", 
        23, 1, 157, 157, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.hello_cells_test.hello_world_2) ? tiltontec.cell.hello_cells_test.hello_world_2.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env25934, summary25935) {
          return function() {
            if (env__8869__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__8869__auto__, env25934, summary25935)], null));
      }());
    };
  }(env25934, summary25935), function(env25934, summary25935) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.hello-cells-test", "tiltontec.cell.hello-cells-test", -1127239522, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env25934, summary25935)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25934, summary25935) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary25935, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary25935), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env25934, summary25935)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25934, summary25935) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env25934);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary25935));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary25935), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env25934, summary25935)], null));
}());
goog.provide("tiltontec.util.core_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("clojure.set");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
tiltontec.util.core_test.fake_cl = function tiltontec$util$core_test$fake_cl() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$fake_cl.cljs$lang$var);
};
tiltontec.util.core_test.fake_cl.cljs$lang$test = function() {
  try {
    var values__8764__auto___25946 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
      var result__22424__auto__ = 42;
      return result__22424__auto__;
    }()), 42);
    var result__8765__auto___25947 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25946);
    if (cljs.core.truth_(result__8765__auto___25947)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "prog1", "utm/prog1", -359814004, null), 42, 43, 44)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core._EQ_, values__8764__auto___25946), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "prog1", "utm/prog1", -359814004, null), 42, 43, 44)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25946)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25938) {
    var t__8802__auto___25948 = e25938;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "prog1", "utm/prog1", -359814004, null), 42, 43, 44)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25948, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25949 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
      var temp__4425__auto__ = 21 + 21;
      if (cljs.core.truth_(temp__4425__auto__)) {
        var x = temp__4425__auto__;
        return x;
      } else {
        return null;
      }
    }()), 42);
    var result__8765__auto___25950 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25949);
    if (cljs.core.truth_(result__8765__auto___25950)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), cljs.core.list(new cljs.core.Symbol(null, 
      "+", "+", -740910886, null), 21, 21), 42, new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25949), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), cljs.core.list(new cljs.core.Symbol(null, 
      "+", "+", -740910886, null), 21, 21), 42, new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25949)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25939) {
    var t__8802__auto___25951 = e25939;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), cljs.core.list(new cljs.core.Symbol(null, 
    "+", "+", -740910886, null), 21, 21), 42, new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25951, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25952 = cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
      var temp__4425__auto__ = false;
      if (temp__4425__auto__) {
        var x = temp__4425__auto__;
        return 42;
      } else {
        return null;
      }
    }());
    var result__8765__auto___25953 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25952);
    if (cljs.core.truth_(result__8765__auto___25953)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), false, 43, 42)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25952), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), false, 43, 42)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25952)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25940) {
    var t__8802__auto___25954 = e25940;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), false, 43, 42)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25954, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25955 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.cl_find.call(null, 42, cljs.core.list(41, 42, 43))), 42);
    var result__8765__auto___25956 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25955);
    if (cljs.core.truth_(result__8765__auto___25956)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(41, 42, 43)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25955), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(41, 42, 43)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25955)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25941) {
    var t__8802__auto___25957 = e25941;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
    null), cljs.core.list(41, 42, 43)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25957, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25958 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.cl_find.call(null, 42, cljs.core.list(42, 43, 44))), 42);
    var result__8765__auto___25959 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25958);
    if (cljs.core.truth_(result__8765__auto___25959)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(42, 43, 44)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25958), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(42, 43, 44)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25958)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25942) {
    var t__8802__auto___25960 = e25942;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
    null), cljs.core.list(42, 43, 44)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25960, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25961 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.cl_find.call(null, 42, cljs.core.list(40, 41, 42))), 42);
    var result__8765__auto___25962 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25961);
    if (cljs.core.truth_(result__8765__auto___25962)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(40, 41, 42)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25961), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(40, 41, 42)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25961)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25943) {
    var t__8802__auto___25963 = e25943;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
    null), cljs.core.list(40, 41, 42)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25963, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25964 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._EQ_.call(null, 2, 3) ? null : function() {
      return 42;
    }()), 42);
    var result__8765__auto___25965 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25964);
    if (cljs.core.truth_(result__8765__auto___25965)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 
      2, 3), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25964), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 
      2, 3), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25964)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25944) {
    var t__8802__auto___25966 = e25944;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 
    2, 3), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25966, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._EQ_.call(null, 2, 2) ? null : function() {
      return 42;
    }());
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, 
      2), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, 
      2), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25945) {
    var t__8802__auto__ = e25945;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 
    2, 2), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.fake_cl.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.fake_cl;
}, new cljs.core.Symbol("tiltontec.util.core-test", "fake-cl", "tiltontec.util.core-test/fake-cl", -187163971, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fake-cl", "fake-cl", -506046351, null), "test/tiltontec/util/core_test.cljc", 17, 1, 22, 22, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.fake_cl) ? 
tiltontec.util.core_test.fake_cl.cljs$lang$test : null]));
tiltontec.util.core_test.setify = function tiltontec$util$core_test$setify() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$setify.cljs$lang$var);
};
tiltontec.util.core_test.setify.cljs$lang$test = function() {
  try {
    var values__8764__auto___25974 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.set_ify.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 2, 2, 3, 3], null))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null));
    var result__8765__auto___25975 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25974);
    if (cljs.core.truth_(result__8765__auto___25975)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 2, 2, 3, 3], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25974), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 2, 2, 3, 3], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25974)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e25967) {
    var t__8802__auto___25976 = e25967;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 2, 2, 3, 3], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25976, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25977 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.set_ify.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 3), 3), 2), 2), 1), 1))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null));
    var result__8765__auto___25978 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25977);
    if (cljs.core.truth_(result__8765__auto___25978)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 1, 2, 2, 3, 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25977), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 1, 2, 2, 3, 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25977)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", 
      -406056002), null], null));
    }
  } catch (e25968) {
    var t__8802__auto___25979 = e25968;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 1, 2, 2, 3, 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25979, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25980 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.set_ify.call(null, null)), cljs.core.PersistentHashSet.EMPTY);
    var result__8765__auto___25981 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25980);
    if (cljs.core.truth_(result__8765__auto___25981)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), null)), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25980), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), null)), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25980)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25969) {
    var t__8802__auto___25982 = e25969;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), null)), new cljs.core.Keyword(null, "actual", "actual", 
    107306363), t__8802__auto___25982, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25983 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.set_ify.call(null, 42)), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null));
    var result__8765__auto___25984 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25983);
    if (cljs.core.truth_(result__8765__auto___25984)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
      174791520, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25983), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
      174791520, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25983)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25970) {
    var t__8802__auto___25985 = e25970;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
    174791520, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25985, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25986 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.set_ify.call(null, "bob")), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["bob", null], null), null));
    var result__8765__auto___25987 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25986);
    if (cljs.core.truth_(result__8765__auto___25987)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["bob", null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
      174791520, null), "bob")), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25986), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["bob", null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
      174791520, null), "bob")), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25986)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25971) {
    var t__8802__auto___25988 = e25971;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["bob", null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
    174791520, null), "bob")), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25988, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25989 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.set_ify.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null))), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null)], true));
    var result__8765__auto___25990 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25989);
    if (cljs.core.truth_(result__8765__auto___25990)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null)], true), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25989), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null)], true), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25989)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", 
      "message", -406056002), null], null));
    }
  } catch (e25972) {
    var t__8802__auto___25991 = e25972;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null)], true), cljs.core.list(new cljs.core.Symbol(null, 
    "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25991, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, clojure.set.difference.call(null, tiltontec.util.core.set_ify.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 42], null)), tiltontec.util.core.set_ify.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), 1)))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), 
    null));
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol("cset", "difference", 
      "cset/difference", -754182536, null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 42], null)), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 2)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol("cset", "difference", 
      "cset/difference", -754182536, null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 42], null)), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 2)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25973) {
    var t__8802__auto__ = e25973;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol("cset", "difference", 
    "cset/difference", -754182536, null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 42], null)), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 2)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.setify.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.setify;
}, new cljs.core.Symbol("tiltontec.util.core-test", "setify", "tiltontec.util.core-test/setify", -128931653, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "setify", "setify", 86404727, null), "test/tiltontec/util/core_test.cljc", 16, 1, 36, 36, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.setify) ? 
tiltontec.util.core_test.setify.cljs$lang$test : null]));
tiltontec.util.core_test.jj_boom = function tiltontec$util$core_test$jj_boom(ref) {
  return (new cljs.core.Keyword(null, "boom", "boom", 984913816)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.util.core_test.test_rmap = function tiltontec$util$core_test$test_rmap() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$test_rmap.cljs$lang$var);
};
tiltontec.util.core_test.test_rmap.cljs$lang$test = function() {
  var x = tiltontec.util.core.ia_ref.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), 0, new cljs.core.Keyword(null, "boom", "boom", 984913816), 42], null));
  try {
    var values__8764__auto___25997 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core_test.jj_boom.call(null, x)), 42);
    var result__8765__auto___25998 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25997);
    if (cljs.core.truth_(result__8765__auto___25998)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "jj-boom", "jj-boom", -75708647, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25997), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "jj-boom", "jj-boom", -75708647, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25997)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25992) {
    var t__8802__auto___25999 = e25992;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "jj-boom", "jj-boom", -75708647, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25999, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26000 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), 0);
    var result__8765__auto___26001 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26000);
    if (cljs.core.truth_(result__8765__auto___26001)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26000), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26000)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25993) {
    var t__8802__auto___26002 = e25993;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26002, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), x], null), 42);
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "xxx", "xxx", -1019301908), x, cljs.core.deref.call(null, x), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x)));
  try {
    var values__8764__auto___26003 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), 42);
    var result__8765__auto___26004 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26003);
    if (cljs.core.truth_(result__8765__auto___26004)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26003), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26003)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25994) {
    var t__8802__auto___26005 = e25994;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26005, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__8767__auto___26006 = function() {
      var j = tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), x], null), 43);
      return cljs.core._EQ_.call(null, 43, j);
    }();
    if (value__8767__auto___26006) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "j", "j", 242556762, null), cljs.core.list(new cljs.core.Symbol(null, 
      "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 43))], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, new cljs.core.Symbol(null, "j", "j", 242556762, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__8767__auto___26006, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "j", "j", 242556762, null), cljs.core.list(new cljs.core.Symbol(null, 
      "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 43))], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, new cljs.core.Symbol(null, "j", "j", 242556762, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__8767__auto___26006, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25995) {
    var t__8802__auto___26007 = e25995;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "j", "j", 242556762, null), cljs.core.list(new cljs.core.Symbol(null, 
    "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 43))], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, new cljs.core.Symbol(null, "j", "j", 242556762, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26007, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), x], null), 44)), 44);
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 44, cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 44))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 44, cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 44))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25996) {
    var t__8802__auto__ = e25996;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 44, cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 44))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.test_rmap.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.test_rmap;
}, new cljs.core.Symbol("tiltontec.util.core-test", "test-rmap", "tiltontec.util.core-test/test-rmap", 589953074, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "test-rmap", "test-rmap", 786413294, null), "test/tiltontec/util/core_test.cljc", 19, 1, 49, 49, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.util.core_test.test_rmap) ? tiltontec.util.core_test.test_rmap.cljs$lang$test : null]));
tiltontec.util.core_test.err_handling = function tiltontec$util$core_test$err_handling() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$err_handling.cljs$lang$var);
};
tiltontec.util.core_test.err_handling.cljs$lang$test = function() {
  try {
    try {
      tiltontec.util.core.err.call(null, "boom");
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, null), "boom")), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e26009) {
      if (e26009 instanceof Error) {
        var e__8791__auto___26025 = e26009;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, null), "boom")), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), e__8791__auto___26025, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        throw e26009;
      }
    }
  } catch (e26008) {
    var t__8802__auto___26026 = e26008;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, null), "boom")), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26026, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    try {
      tiltontec.util.core.err.call(null, "boom");
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /oom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
      null), "boom")), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e26011) {
      if (e26011 instanceof Error) {
        var e__8796__auto___26027 = e26011;
        var m__8797__auto___26028 = e__8796__auto___26027.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /oom/, m__8797__auto___26028))) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /oom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
          null), "boom")), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__8796__auto___26027, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /oom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
          null), "boom")), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__8796__auto___26027, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } else {
        throw e26011;
      }
    }
  } catch (e26010) {
    var t__8802__auto___26029 = e26010;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /oom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
    null), "boom")), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26029, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    try {
      tiltontec.util.core.err.call(null, cljs.core.str, "Hi ", new cljs.core.Symbol(null, "mom", "mom", 320137679, null));
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Hi mom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
      null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "mom", "mom", 320137679, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e26013) {
      if (e26013 instanceof Error) {
        var e__8796__auto___26030 = e26013;
        var m__8797__auto___26031 = e__8796__auto___26030.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /Hi mom/, m__8797__auto___26031))) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Hi mom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
          null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "mom", "mom", 320137679, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__8796__auto___26030, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Hi mom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
          null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "mom", "mom", 320137679, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__8796__auto___26030, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } else {
        throw e26013;
      }
    }
  } catch (e26012) {
    var t__8802__auto___26032 = e26012;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Hi mom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
    null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "mom", "mom", 320137679, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26032, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26033 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.any_ref_QMARK_.call(null, null));
    var result__8765__auto___26034 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___26033);
    if (cljs.core.truth_(result__8765__auto___26034)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core.not, values__8764__auto___26033), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___26033)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26014) {
    var t__8802__auto___26035 = e26014;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26035, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26036 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.any_ref_QMARK_.call(null, 42));
    var result__8765__auto___26037 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___26036);
    if (cljs.core.truth_(result__8765__auto___26037)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core.not, values__8764__auto___26036), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___26036)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26015) {
    var t__8802__auto___26038 = e26015;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26038, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26039 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.any_ref_QMARK_.call(null, cljs.core.PersistentVector.EMPTY));
    var result__8765__auto___26040 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___26039);
    if (cljs.core.truth_(result__8765__auto___26040)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), cljs.core.PersistentVector.EMPTY)), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core.cons.call(null, cljs.core.not, values__8764__auto___26039), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), cljs.core.PersistentVector.EMPTY)), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___26039)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26016) {
    var t__8802__auto___26041 = e26016;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), cljs.core.PersistentVector.EMPTY)), new cljs.core.Keyword(null, "actual", "actual", 
    107306363), t__8802__auto___26041, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26042 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
      var sb__5509__auto__ = new goog.string.StringBuffer;
      var _STAR_print_newline_STAR_26018_26044 = cljs.core._STAR_print_newline_STAR_;
      var _STAR_print_fn_STAR_26019_26045 = cljs.core._STAR_print_fn_STAR_;
      cljs.core._STAR_print_newline_STAR_ = true;
      cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_newline_STAR_26018_26044, _STAR_print_fn_STAR_26019_26045, sb__5509__auto__) {
        return function(x__5510__auto__) {
          return sb__5509__auto__.append(x__5510__auto__);
        };
      }(_STAR_print_newline_STAR_26018_26044, _STAR_print_fn_STAR_26019_26045, sb__5509__auto__);
      try {
        var _STAR_trxdepth_STAR_26020_26046 = tiltontec.util.base._STAR_trxdepth_STAR_;
        tiltontec.util.base._STAR_trxdepth_STAR_ = 5;
        try {
          var _STAR_trxdepth_STAR_26021_26047 = tiltontec.util.base._STAR_trxdepth_STAR_;
          tiltontec.util.base._STAR_trxdepth_STAR_ = tiltontec.util.base._STAR_trxdepth_STAR_ + 1;
          try {
            if (0 <= tiltontec.util.base._STAR_trxdepth_STAR_ && tiltontec.util.base._STAR_trxdepth_STAR_ <= 100) {
              tiltontec.util.base.call_trc.call(null, "cool", 1, 2, 3);
            } else {
              if (tiltontec.util.base._STAR_trxdepth_STAR_ > 100) {
                throw new java.lang.Exception([cljs.core.str("wtrx exceeded max depth "), cljs.core.str(100), cljs.core.str(":"), cljs.core.str(tiltontec.util.base.call_trc$.call(null, "cool", cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 3), 2), 1)))].join(""));
              } else {
              }
            }
            cljs.core.println.call(null, new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
          } finally {
            tiltontec.util.base._STAR_trxdepth_STAR_ = _STAR_trxdepth_STAR_26021_26047;
          }
        } finally {
          tiltontec.util.base._STAR_trxdepth_STAR_ = _STAR_trxdepth_STAR_26020_26046;
        }
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_26019_26045;
        cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_26018_26044;
      }
      return [cljs.core.str(sb__5509__auto__)].join("");
    }()), "...... cool: 1, 2, 3\n:bingo\n");
    var result__8765__auto___26043 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26042);
    if (cljs.core.truth_(result__8765__auto___26043)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "...... cool: 1, 2, 3\n:bingo\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
      "binding", "binding", -2114503176, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*trxdepth*", "*trxdepth*", -1772449719, null), 5], null), cljs.core.list(new cljs.core.Symbol(null, "wtrx", "wtrx", -1957918579, null), cljs.core.list(0, 100, "cool", 1, 2, 3), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022)))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26042), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "...... cool: 1, 2, 3\n:bingo\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
      "binding", "binding", -2114503176, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*trxdepth*", "*trxdepth*", -1772449719, null), 5], null), cljs.core.list(new cljs.core.Symbol(null, "wtrx", "wtrx", -1957918579, null), cljs.core.list(0, 100, "cool", 1, 2, 3), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022)))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26042)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26017) {
    var t__8802__auto___26048 = e26017;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "...... cool: 1, 2, 3\n:bingo\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
    "binding", "binding", -2114503176, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*trxdepth*", "*trxdepth*", -1772449719, null), 5], null), cljs.core.list(new cljs.core.Symbol(null, "wtrx", "wtrx", -1957918579, null), cljs.core.list(0, 100, "cool", 1, 2, 3), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022)))))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26048, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
      var sb__5509__auto__ = new goog.string.StringBuffer;
      var _STAR_print_newline_STAR_26023_26049 = cljs.core._STAR_print_newline_STAR_;
      var _STAR_print_fn_STAR_26024_26050 = cljs.core._STAR_print_fn_STAR_;
      cljs.core._STAR_print_newline_STAR_ = true;
      cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_newline_STAR_26023_26049, _STAR_print_fn_STAR_26024_26050, sb__5509__auto__) {
        return function(x__5510__auto__) {
          return sb__5509__auto__.append(x__5510__auto__);
        };
      }(_STAR_print_newline_STAR_26023_26049, _STAR_print_fn_STAR_26024_26050, sb__5509__auto__);
      try {
        tiltontec.util.core.wtrx_test.call(null, 3);
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_26024_26050;
        cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_26023_26049;
      }
      return [cljs.core.str(sb__5509__auto__)].join("");
    }()), ". test: 3\n.. test: 2\n... test: 1\n.... test: 0\n");
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), ". test: 3\n.. test: 2\n... test: 1\n.... test: 0\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
      "wtrx-test", "wtrx-test", 1124366211, null), 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), ". test: 3\n.. test: 2\n... test: 1\n.... test: 0\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
      "wtrx-test", "wtrx-test", 1124366211, null), 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e26022) {
    var t__8802__auto__ = e26022;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), ". test: 3\n.. test: 2\n... test: 1\n.... test: 0\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
    "wtrx-test", "wtrx-test", 1124366211, null), 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.err_handling.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.err_handling;
}, new cljs.core.Symbol("tiltontec.util.core-test", "err-handling", "tiltontec.util.core-test/err-handling", 432282689, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "err-handling", "err-handling", 751948053, null), "test/tiltontec/util/core_test.cljc", 22, 1, 64, 64, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.util.core_test.err_handling) ? tiltontec.util.core_test.err_handling.cljs$lang$test : null]));
tiltontec.util.core_test.fifo_build = function tiltontec$util$core_test$fifo_build() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$fifo_build.cljs$lang$var);
};
tiltontec.util.core_test.fifo_build.cljs$lang$test = function() {
  var q = tiltontec.util.core.make_fifo_queue.call(null);
  try {
    var values__8764__auto___26064 = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__8765__auto___26065 = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__8764__auto___26064);
    if (cljs.core.truth_(result__8765__auto___26065)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__8764__auto___26064), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__8764__auto___26064)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26051) {
    var t__8802__auto___26066 = e26051;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26066, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26067 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_peek.call(null, q));
    var result__8765__auto___26068 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___26067);
    if (cljs.core.truth_(result__8765__auto___26068)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___26067), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___26067)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26052) {
    var t__8802__auto___26069 = e26052;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26069, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26070 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q));
    var result__8765__auto___26071 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___26070);
    if (cljs.core.truth_(result__8765__auto___26071)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___26070), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___26070)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26053) {
    var t__8802__auto___26072 = e26053;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26072, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26073 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_data.call(null, q));
    var result__8765__auto___26074 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__8764__auto___26073);
    if (cljs.core.truth_(result__8765__auto___26074)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__8764__auto___26073), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__8764__auto___26073)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26054) {
    var t__8802__auto___26075 = e26054;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26075, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.core.fifo_add.call(null, q, 1);
  try {
    var values__8764__auto___26076 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_empty_QMARK_.call(null, q));
    var result__8765__auto___26077 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___26076);
    if (cljs.core.truth_(result__8765__auto___26077)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8764__auto___26076), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___26076)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26055) {
    var t__8802__auto___26078 = e26055;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26078, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26079 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_peek.call(null, q)), 1);
    var result__8765__auto___26080 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26079);
    if (cljs.core.truth_(result__8765__auto___26080)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26079), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26079)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26056) {
    var t__8802__auto___26081 = e26056;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26081, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26082 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q)), 1);
    var result__8765__auto___26083 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26082);
    if (cljs.core.truth_(result__8765__auto___26083)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26082), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26082)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26057) {
    var t__8802__auto___26084 = e26057;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26084, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26085 = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__8765__auto___26086 = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__8764__auto___26085);
    if (cljs.core.truth_(result__8765__auto___26086)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__8764__auto___26085), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__8764__auto___26085)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26058) {
    var t__8802__auto___26087 = e26058;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26087, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  tiltontec.util.core.fifo_add.call(null, q, 1);
  tiltontec.util.core.fifo_add.call(null, q, 2);
  try {
    var values__8764__auto___26088 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_empty_QMARK_.call(null, q));
    var result__8765__auto___26089 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___26088);
    if (cljs.core.truth_(result__8765__auto___26089)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8764__auto___26088), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___26088)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26059) {
    var t__8802__auto___26090 = e26059;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26090, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26091 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_peek.call(null, q)), 1);
    var result__8765__auto___26092 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26091);
    if (cljs.core.truth_(result__8765__auto___26092)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26091), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26091)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26060) {
    var t__8802__auto___26093 = e26060;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26093, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26094 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q)), 1);
    var result__8765__auto___26095 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26094);
    if (cljs.core.truth_(result__8765__auto___26095)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26094), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26094)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26061) {
    var t__8802__auto___26096 = e26061;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26096, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26097 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q)), 2);
    var result__8765__auto___26098 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26097);
    if (cljs.core.truth_(result__8765__auto___26098)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26097), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26097)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26062) {
    var t__8802__auto___26099 = e26062;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26099, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__8765__auto__ = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e26063) {
    var t__8802__auto__ = e26063;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.fifo_build.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.fifo_build;
}, new cljs.core.Symbol("tiltontec.util.core-test", "fifo-build", "tiltontec.util.core-test/fifo-build", 1265681264, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fifo-build", "fifo-build", 1577255980, null), "test/tiltontec/util/core_test.cljc", 20, 1, 89, 89, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.util.core_test.fifo_build) ? tiltontec.util.core_test.fifo_build.cljs$lang$test : null]));
tiltontec.util.core_test.fifo_build_test = function tiltontec$util$core_test$fifo_build_test() {
  return cljs.test.test_var.call(null, tiltontec$util$core_test$fifo_build_test.cljs$lang$var);
};
tiltontec.util.core_test.fifo_build_test.cljs$lang$test = function() {
  var q = tiltontec.util.core.make_fifo_queue.call(null);
  try {
    var values__8764__auto___26113 = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__8765__auto___26114 = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__8764__auto___26113);
    if (cljs.core.truth_(result__8765__auto___26114)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__8764__auto___26113), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__8764__auto___26113)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26100) {
    var t__8802__auto___26115 = e26100;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26115, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26116 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_peek.call(null, q));
    var result__8765__auto___26117 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___26116);
    if (cljs.core.truth_(result__8765__auto___26117)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___26116), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___26116)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26101) {
    var t__8802__auto___26118 = e26101;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26118, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26119 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q));
    var result__8765__auto___26120 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___26119);
    if (cljs.core.truth_(result__8765__auto___26120)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___26119), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___26119)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26102) {
    var t__8802__auto___26121 = e26102;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26121, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26122 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_data.call(null, q));
    var result__8765__auto___26123 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__8764__auto___26122);
    if (cljs.core.truth_(result__8765__auto___26123)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__8764__auto___26122), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__8764__auto___26122)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26103) {
    var t__8802__auto___26124 = e26103;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26124, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.core.fifo_add.call(null, q, 1);
  try {
    var values__8764__auto___26125 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_empty_QMARK_.call(null, q));
    var result__8765__auto___26126 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___26125);
    if (cljs.core.truth_(result__8765__auto___26126)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8764__auto___26125), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___26125)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26104) {
    var t__8802__auto___26127 = e26104;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26127, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26128 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_peek.call(null, q)), 1);
    var result__8765__auto___26129 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26128);
    if (cljs.core.truth_(result__8765__auto___26129)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26128), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26128)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26105) {
    var t__8802__auto___26130 = e26105;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26130, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26131 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q)), 1);
    var result__8765__auto___26132 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26131);
    if (cljs.core.truth_(result__8765__auto___26132)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26131), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26131)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26106) {
    var t__8802__auto___26133 = e26106;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26133, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26134 = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__8765__auto___26135 = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__8764__auto___26134);
    if (cljs.core.truth_(result__8765__auto___26135)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__8764__auto___26134), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__8764__auto___26134)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26107) {
    var t__8802__auto___26136 = e26107;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___26136, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  tiltontec.util.core.fifo_add.call(null, q, 1);
  tiltontec.util.core.fifo_add.call(null, q, 2);
  try {
    var values__8764__auto___26137 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_empty_QMARK_.call(null, q));
    var result__8765__auto___26138 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___26137);
    if (cljs.core.truth_(result__8765__auto___26138)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8764__auto___26137), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___26137)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26108) {
    var t__8802__auto___26139 = e26108;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26139, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26140 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_peek.call(null, q)), 1);
    var result__8765__auto___26141 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26140);
    if (cljs.core.truth_(result__8765__auto___26141)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26140), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26140)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26109) {
    var t__8802__auto___26142 = e26109;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26142, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26143 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q)), 1);
    var result__8765__auto___26144 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26143);
    if (cljs.core.truth_(result__8765__auto___26144)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26143), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26143)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26110) {
    var t__8802__auto___26145 = e26110;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26145, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___26146 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.util.core.fifo_pop.call(null, q)), 2);
    var result__8765__auto___26147 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___26146);
    if (cljs.core.truth_(result__8765__auto___26147)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___26146), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___26146)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e26111) {
    var t__8802__auto___26148 = e26111;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___26148, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__8765__auto__ = cljs.core.apply.call(null, tiltontec.util.core.fifo_empty_QMARK_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.util.core.fifo_empty_QMARK_, 
      values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e26112) {
    var t__8802__auto__ = e26112;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
};
tiltontec.util.core_test.fifo_build_test.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.util.core_test.fifo_build_test;
}, new cljs.core.Symbol("tiltontec.util.core-test", "fifo-build-test", "tiltontec.util.core-test/fifo-build-test", 1967563513, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fifo-build-test", "fifo-build-test", 1616174349, null), "test/tiltontec/util/core_test.cljc", 25, 1, 111, 111, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.fifo_build_test) ? tiltontec.util.core_test.fifo_build_test.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env26149 = cljs.test.empty_env.call(null);
  var summary26150 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env26149, summary26150) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env26149);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__8869__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env26149, summary26150) {
          return function() {
            if (env__8869__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__8869__auto__, env26149, summary26150)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.util.core_test.fake_cl;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "fake-cl", "tiltontec.util.core-test/fake-cl", -187163971, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fake-cl", "fake-cl", -506046351, null), "test/tiltontec/util/core_test.cljc", 17, 1, 22, 22, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.util.core_test.fake_cl) ? tiltontec.util.core_test.fake_cl.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.util.core_test.setify;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "setify", "tiltontec.util.core-test/setify", -128931653, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "setify", "setify", 86404727, null), "test/tiltontec/util/core_test.cljc", 16, 1, 36, 36, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.util.core_test.setify) ? tiltontec.util.core_test.setify.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.util.core_test.test_rmap;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "test-rmap", "tiltontec.util.core-test/test-rmap", 589953074, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "test-rmap", "test-rmap", 786413294, null), "test/tiltontec/util/core_test.cljc", 19, 1, 49, 49, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.util.core_test.test_rmap) ? tiltontec.util.core_test.test_rmap.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.util.core_test.err_handling;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "err-handling", "tiltontec.util.core-test/err-handling", 432282689, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "err-handling", "err-handling", 751948053, null), "test/tiltontec/util/core_test.cljc", 22, 1, 64, 64, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.err_handling) ? tiltontec.util.core_test.err_handling.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.util.core_test.fifo_build;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "fifo-build", "tiltontec.util.core-test/fifo-build", 1265681264, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fifo-build", "fifo-build", 1577255980, null), "test/tiltontec/util/core_test.cljc", 20, 1, 89, 89, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.fifo_build) ? tiltontec.util.core_test.fifo_build.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.util.core_test.fifo_build_test;
        }, new cljs.core.Symbol("tiltontec.util.core-test", "fifo-build-test", "tiltontec.util.core-test/fifo-build-test", 1967563513, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Symbol(null, "fifo-build-test", "fifo-build-test", 1616174349, null), "test/tiltontec/util/core_test.cljc", 
        25, 1, 111, 111, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.util.core_test.fifo_build_test) ? tiltontec.util.core_test.fifo_build_test.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env26149, summary26150) {
          return function() {
            if (env__8869__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__8869__auto__, env26149, summary26150)], null));
      }());
    };
  }(env26149, summary26150), function(env26149, summary26150) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.util.core-test", "tiltontec.util.core-test", -2049790658, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env26149, summary26150)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env26149, summary26150) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary26150, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary26150), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env26149, summary26150)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env26149, summary26150) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env26149);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary26150));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary26150), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env26149, summary26150)], null));
}());
goog.provide("tiltontec.qxia.core");
goog.require("cljs.core");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.model.base");
goog.require("tiltontec.model.family");
cljs.core.enable_console_print_BANG_.call(null);
tiltontec.qxia.core.booya = function tiltontec$qxia$core$booya(tag) {
  return cljs.core.println.call(null, [cljs.core.str("booya 6 "), cljs.core.str(tag)].join(""));
};
goog.provide("tiltontec.cell.integrity_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
tiltontec.cell.integrity_test.obsdbg = function tiltontec$cell$integrity_test$obsdbg() {
  return null;
};
tiltontec.cell.integrity_test.obs_setf = function tiltontec$cell$integrity_test$obs_setf() {
  return cljs.test.test_var.call(null, tiltontec$cell$integrity_test$obs_setf.cljs$lang$var);
};
tiltontec.cell.integrity_test.obs_setf.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  try {
    var values__8764__auto___25765 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_));
    var result__8765__auto___25766 = cljs.core.apply.call(null, cljs.core.zero_QMARK_, values__8764__auto___25765);
    if (cljs.core.truth_(result__8765__auto___25766)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.zero_QMARK_, values__8764__auto___25765), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), values__8764__auto___25765)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25754) {
    var t__8802__auto___25767 = e25754;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25767, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var alarm = tiltontec.cell.core.c_in.call(null, new cljs.core.Keyword(null, "undefined", "undefined", -1970511116), new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.integrity_test.obsdbg.call(null));
  var act = tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.integrity_test.obsdbg.call(null));
  var loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(alarm, act) {
    return function(slot, me, new$, old, c) {
      if (cljs.core._EQ_.call(null, new$, new cljs.core.Keyword(null, "missing", "missing", 362507769))) {
        return null;
      } else {
        if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_), 2)) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null)), 2)))].join(""));
        }
        if (cljs.core.not.call(null, tiltontec.cell.base._STAR_within_integrity_STAR_)) {
          throw new java.lang.Exception("c-reset-next!\x3e deferred change to %s not under WITH-INTEGRITY supervision.", tiltontec.cell.base.c_slot.call(null, alarm));
        } else {
          return tiltontec.cell.integrity.ufb_add.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "c-reset-next!", "c-reset-next!", -1735615308), function(alarm, act) {
            return function(opcode, defer_info) {
              var c__22346__auto__ = alarm;
              var new_value__22347__auto__ = function() {
                var G__25755 = new$ instanceof cljs.core.Keyword ? new$.fqn : null;
                switch(G__25755) {
                  case "home":
                    return new cljs.core.Keyword(null, "off", "off", 606440789);
                    break;
                  case "away":
                    return new cljs.core.Keyword(null, "on", "on", 173873944);
                    break;
                  default:
                    return tiltontec.util.core.err.call(null, cljs.core.str, "unexpected loc %s", new$);
                }
              }();
              return tiltontec.cell.core.call_c_reset_next_BANG_.call(null, c__22346__auto__, new_value__22347__auto__);
            };
          }(alarm, act)], null));
        }
      }
    };
  }(alarm, act), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, 
  "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(alarm, act) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__25756 = tiltontec.cell.evaluate.c_get.call(null, act) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, act).fqn : null;
      switch(G__25756) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(alarm, act));
  var alarm_speak = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(alarm, act, loc) {
    return function(slot, me, new$, old, c) {
      try {
        var values__8764__auto___25770 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
          var G__25758 = tiltontec.cell.evaluate.c_get.call(null, act) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, act).fqn : null;
          switch(G__25758) {
            case "return":
              return new cljs.core.Keyword(null, "off", "off", 606440789);
              break;
            case "leave":
              return new cljs.core.Keyword(null, "on", "on", 173873944);
              break;
            default:
              return new cljs.core.Keyword(null, "undefined", "undefined", -1970511116);
          }
        }()), tiltontec.cell.evaluate.c_get.call(null, alarm));
        var result__8765__auto___25771 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25770);
        if (cljs.core.truth_(result__8765__auto___25771)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25770), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25770)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e25757) {
        var t__8802__auto___25773 = e25757;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
        "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__8802__auto___25773, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_pulse.call(null, c)), tiltontec.cell.base.c_pulse.call(null, loc)), tiltontec.cell.base.c_pulse.call(null, act)), tiltontec.cell.base._PLUS_pulse_PLUS_);
        var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
        if (cljs.core.truth_(result__8765__auto__)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
          "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", 
          -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
          "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return result__8765__auto__;
      } catch (e25759) {
        var t__8802__auto__ = e25759;
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
        "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    };
  }(alarm, act, loc), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "alarm-speak sees act ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(alarm, act, loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return [cljs.core.str("alarm-speak sees act "), cljs.core.str(tiltontec.cell.evaluate.c_get.call(null, act))].join("");
    };
  }(alarm, act, loc));
  try {
    var values__8764__auto___25774 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "undefined", "undefined", -1970511116)), tiltontec.cell.evaluate.c_get.call(null, alarm));
    var result__8765__auto___25775 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25774);
    if (cljs.core.truth_(result__8765__auto___25775)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
      "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25774), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
      "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25774)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25760) {
    var t__8802__auto___25776 = e25760;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
    "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25776, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25777 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_)), 1);
    var result__8765__auto___25778 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25777);
    if (cljs.core.truth_(result__8765__auto___25778)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25777), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25777)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25761) {
    var t__8802__auto___25779 = e25761;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25779, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25780 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "missing", "missing", 362507769)), tiltontec.cell.evaluate.c_get.call(null, loc));
    var result__8765__auto___25781 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25780);
    if (cljs.core.truth_(result__8765__auto___25781)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
      "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25780), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
      "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25780)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25762) {
    var t__8802__auto___25782 = e25762;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
    "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25782, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25783 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_)), 1);
    var result__8765__auto___25784 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25783);
    if (cljs.core.truth_(result__8765__auto___25784)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25783), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25783)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25763) {
    var t__8802__auto___25785 = e25763;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25785, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, act, new cljs.core.Keyword(null, "leave", "leave", 1022579443));
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_)), 3);
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25764) {
    var t__8802__auto__ = e25764;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.integrity_test.obs_setf.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.integrity_test.obs_setf;
}, new cljs.core.Symbol("tiltontec.cell.integrity-test", "obs-setf", "tiltontec.cell.integrity-test/obs-setf", -1903746607, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "obs-setf", "obs-setf", -941176517, null), "test/tiltontec/cell/integrity_test.cljc", 18, 1, 45, 45, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.obs_setf) ? tiltontec.cell.integrity_test.obs_setf.cljs$lang$test : null]));
tiltontec.cell.integrity_test.obs_setf_bad_caught = function tiltontec$cell$integrity_test$obs_setf_bad_caught() {
  return cljs.test.test_var.call(null, tiltontec$cell$integrity_test$obs_setf_bad_caught.cljs$lang$var);
};
tiltontec.cell.integrity_test.obs_setf_bad_caught.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var alarm = tiltontec.cell.core.c_in.call(null, new cljs.core.Keyword(null, "undefined", "undefined", -1970511116), new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.integrity_test.obsdbg.call(null));
  var act = tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.cell.integrity_test.obsdbg.call(null));
  var loc = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(alarm, act) {
    return function(slot, me, new$, old, c) {
      try {
        try {
          tiltontec.cell.core.c_reset_BANG_.call(null, act, new cljs.core.Keyword(null, "leave", "leave", 1022579443));
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /c-reset!> change/, cljs.core.list(new cljs.core.Symbol(null, "c-reset!", 
          "c-reset!", 561145783, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "leave", "leave", 1022579443))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } catch (e25787) {
          if (e25787 instanceof Error) {
            var e__8796__auto___25797 = e25787;
            var m__8797__auto___25798 = e__8796__auto___25797.message;
            if (cljs.core.truth_(cljs.core.re_find.call(null, /c-reset!> change/, m__8797__auto___25798))) {
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /c-reset!> change/, cljs.core.list(new cljs.core.Symbol(null, "c-reset!", 
              "c-reset!", 561145783, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "leave", "leave", 1022579443))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__8796__auto___25797, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            } else {
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /c-reset!> change/, cljs.core.list(new cljs.core.Symbol(null, "c-reset!", 
              "c-reset!", 561145783, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "leave", "leave", 1022579443))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__8796__auto___25797, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
          } else {
            throw e25787;
          }
        }
      } catch (e25786) {
        var t__8802__auto___25799 = e25786;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /c-reset!> change/, cljs.core.list(new cljs.core.Symbol(null, "c-reset!", 
        "c-reset!", 561145783, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "leave", "leave", 1022579443))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25799, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      if (cljs.core._EQ_.call(null, new$, new cljs.core.Keyword(null, "missing", "missing", 362507769))) {
        return null;
      } else {
        if (cljs.core.not.call(null, tiltontec.cell.base._STAR_within_integrity_STAR_)) {
          throw new java.lang.Exception("c-reset-next!\x3e deferred change to %s not under WITH-INTEGRITY supervision.", tiltontec.cell.base.c_slot.call(null, alarm));
        } else {
          return tiltontec.cell.integrity.ufb_add.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "c-reset-next!", "c-reset-next!", -1735615308), function(alarm, act) {
            return function(opcode, defer_info) {
              var c__22346__auto__ = alarm;
              var new_value__22347__auto__ = function() {
                var G__25788 = new$ instanceof cljs.core.Keyword ? new$.fqn : null;
                switch(G__25788) {
                  case "home":
                    return new cljs.core.Keyword(null, "off", "off", 606440789);
                    break;
                  case "away":
                    return new cljs.core.Keyword(null, "on", "on", 173873944);
                    break;
                  default:
                    return tiltontec.util.core.err.call(null, cljs.core.str, "unexpected loc %s", new$);
                }
              }();
              return tiltontec.cell.core.call_c_reset_next_BANG_.call(null, c__22346__auto__, new_value__22347__auto__);
            };
          }(alarm, act)], null));
        }
      }
    };
  }(alarm, act), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, 
  "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(alarm, act) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__25789 = tiltontec.cell.evaluate.c_get.call(null, act) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, act).fqn : null;
      switch(G__25789) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(alarm, act));
  var alarm_speak = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(alarm, act, loc) {
    return function(slot, me, new$, old, c) {
      tiltontec.util.base.call_trc.call(null, ":alarm-speak", tiltontec.cell.evaluate.c_get.call(null, act), new cljs.core.Keyword(null, "sees", "sees", -135494032), tiltontec.cell.evaluate.c_get.call(null, alarm), tiltontec.cell.evaluate.c_get.call(null, loc));
      try {
        var values__8764__auto___25802 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
          var G__25791 = tiltontec.cell.evaluate.c_get.call(null, act) instanceof cljs.core.Keyword ? tiltontec.cell.evaluate.c_get.call(null, act).fqn : null;
          switch(G__25791) {
            case "return":
              return new cljs.core.Keyword(null, "off", "off", 606440789);
              break;
            case "leave":
              return new cljs.core.Keyword(null, "on", "on", 173873944);
              break;
            default:
              return new cljs.core.Keyword(null, "undefined", "undefined", -1970511116);
          }
        }()), tiltontec.cell.evaluate.c_get.call(null, alarm));
        var result__8765__auto___25803 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25802);
        if (cljs.core.truth_(result__8765__auto___25803)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25802), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25802)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e25790) {
        var t__8802__auto___25805 = e25790;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
        "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__8802__auto___25805, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_pulse.call(null, c)), tiltontec.cell.base.c_pulse.call(null, loc)), tiltontec.cell.base.c_pulse.call(null, act)), tiltontec.cell.base._PLUS_pulse_PLUS_);
        var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
        if (cljs.core.truth_(result__8765__auto__)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
          "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", 
          -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
          "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return result__8765__auto__;
      } catch (e25792) {
        var t__8802__auto__ = e25792;
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
        "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    };
  }(alarm, act, loc), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "alarm-speak sees act ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(alarm, act, loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return [cljs.core.str("alarm-speak sees act "), cljs.core.str(tiltontec.cell.evaluate.c_get.call(null, act))].join("");
    };
  }(alarm, act, loc));
  try {
    var values__8764__auto___25806 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "undefined", "undefined", -1970511116)), tiltontec.cell.evaluate.c_get.call(null, alarm));
    var result__8765__auto___25807 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25806);
    if (cljs.core.truth_(result__8765__auto___25807)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
      "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25806), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
      "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25806)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25793) {
    var t__8802__auto___25808 = e25793;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
    "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25808, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25809 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_)), 1);
    var result__8765__auto___25810 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25809);
    if (cljs.core.truth_(result__8765__auto___25810)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25809), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25809)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25794) {
    var t__8802__auto___25811 = e25794;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25811, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25812 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "missing", "missing", 362507769)), tiltontec.cell.evaluate.c_get.call(null, loc));
    var result__8765__auto___25813 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25812);
    if (cljs.core.truth_(result__8765__auto___25813)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
      "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25812), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
      "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25812)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25795) {
    var t__8802__auto___25814 = e25795;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
    "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25814, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.cell.base._PLUS_pulse_PLUS_)), 1);
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25796) {
    var t__8802__auto__ = e25796;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.integrity_test.obs_setf_bad_caught.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.integrity_test.obs_setf_bad_caught;
}, new cljs.core.Symbol("tiltontec.cell.integrity-test", "obs-setf-bad-caught", "tiltontec.cell.integrity-test/obs-setf-bad-caught", -1085043785, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "obs-setf-bad-caught", "obs-setf-bad-caught", -936124387, null), "test/tiltontec/cell/integrity_test.cljc", 
29, 1, 85, 85, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.obs_setf_bad_caught) ? tiltontec.cell.integrity_test.obs_setf_bad_caught.cljs$lang$test : null]));
tiltontec.cell.integrity_test.see_into_fn = function tiltontec$cell$integrity_test$see_into_fn() {
  return cljs.test.test_var.call(null, tiltontec$cell$integrity_test$see_into_fn.cljs$lang$var);
};
tiltontec.cell.integrity_test.see_into_fn.cljs$lang$test = function() {
  var sia = tiltontec.cell.core.c_in.call(null, 0);
  var rsic = cljs.core.atom.call(null, false);
  var sic = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "reset!", "reset!", 527275632, null), new cljs.core.Symbol(null, "rsic", "rsic", -1388734565, null), true), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sia", "sia", 737031502, null)))), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(sia, rsic) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.reset_BANG_.call(null, rsic, true);
      return 42 + tiltontec.cell.evaluate.c_get.call(null, sia);
    };
  }(sia, rsic));
  var fsia = function(sia, rsic, sic) {
    return function() {
      return tiltontec.cell.evaluate.c_get.call(null, sia);
    };
  }(sia, rsic, sic);
  var sib = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fsia", "fsia", -1523177093, null))), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)))), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(sia, rsic, sic, fsia) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var or__4554__auto__ = 1 + fsia.call(null);
      if (cljs.core.truth_(or__4554__auto__)) {
        return or__4554__auto__;
      } else {
        return tiltontec.cell.evaluate.c_get.call(null, sic);
      }
    };
  }(sia, rsic, sic, fsia));
  try {
    var values__8764__auto___25820 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 1), tiltontec.cell.evaluate.c_get.call(null, sib));
    var result__8765__auto___25821 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25820);
    if (cljs.core.truth_(result__8765__auto___25821)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 1), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25820), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 1), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25820)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25815) {
    var t__8802__auto___25822 = e25815;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 1), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25822, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25823 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.PersistentHashSet.fromArray([sia], true)), (new cljs.core.Keyword(null, "useds", "useds", 621350967)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, sib)));
    var result__8765__auto___25824 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25823);
    if (cljs.core.truth_(result__8765__auto___25824)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "sia", "sia", 737031502, null), null], null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25823), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "sia", "sia", 737031502, null), null], null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25823)), new cljs.core.Symbol(null, 
      "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25816) {
    var t__8802__auto___25825 = e25816;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "sia", "sia", 737031502, null), null], null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25825, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25826 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, rsic));
    var result__8765__auto___25827 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___25826);
    if (cljs.core.truth_(result__8765__auto___25827)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "rsic", "rsic", -1388734565, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8764__auto___25826), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "rsic", "rsic", -1388734565, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___25826)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25817) {
    var t__8802__auto___25828 = e25817;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "rsic", "rsic", -1388734565, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25828, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, sia, 1);
  try {
    var values__8764__auto___25829 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, sib))), 2);
    var result__8765__auto___25830 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25829);
    if (cljs.core.truth_(result__8765__auto___25830)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25829), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25829)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25818) {
    var t__8802__auto___25831 = e25818;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25831, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), tiltontec.cell.evaluate.c_get.call(null, sib));
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25819) {
    var t__8802__auto__ = e25819;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.integrity_test.see_into_fn.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.integrity_test.see_into_fn;
}, new cljs.core.Symbol("tiltontec.cell.integrity-test", "see-into-fn", "tiltontec.cell.integrity-test/see-into-fn", 794556004, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "see-into-fn", "see-into-fn", 1996218062, null), "test/tiltontec/cell/integrity_test.cljc", 21, 1, 
125, 125, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.see_into_fn) ? tiltontec.cell.integrity_test.see_into_fn.cljs$lang$test : null]));
tiltontec.cell.integrity_test.no_prop_no_obs = function tiltontec$cell$integrity_test$no_prop_no_obs() {
  return cljs.test.test_var.call(null, tiltontec$cell$integrity_test$no_prop_no_obs.cljs$lang$var);
};
tiltontec.cell.integrity_test.no_prop_no_obs.cljs$lang$test = function() {
  var sia = tiltontec.cell.core.c_in.call(null, 0);
  var obs = cljs.core.atom.call(null, false);
  var sib = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(sia, obs) {
    return function(slot, me, new$, old, c) {
      return cljs.core.reset_BANG_.call(null, obs, true);
    };
  }(sia, obs), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sia", "sia", 737031502, null))), 42, 10)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, 
  "rule", "rule", 729973257), function(sia, obs) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      if (cljs.core.even_QMARK_.call(null, tiltontec.cell.evaluate.c_get.call(null, sia))) {
        return 42;
      } else {
        return 10;
      }
    };
  }(sia, obs));
  var run = cljs.core.atom.call(null, false);
  var sic = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "reset!", "reset!", 527275632, null), new cljs.core.Symbol(null, "run", "run", -180635126, null), true), cljs.core.list(new cljs.core.Symbol(null, "/", "/", -1371932971, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 2)), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(sia, obs, sib, run) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.reset_BANG_.call(null, run, true);
      return tiltontec.cell.evaluate.c_get.call(null, sib) / 2;
    };
  }(sia, obs, sib, run));
  try {
    var values__8764__auto___25840 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, sib));
    var result__8765__auto___25841 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25840);
    if (cljs.core.truth_(result__8765__auto___25841)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25840), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25840)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25832) {
    var t__8802__auto___25842 = e25832;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25842, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25843 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 21), tiltontec.cell.evaluate.c_get.call(null, sic));
    var result__8765__auto___25844 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25843);
    if (cljs.core.truth_(result__8765__auto___25844)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25843), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25843)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25833) {
    var t__8802__auto___25845 = e25833;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25845, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__8767__auto___25846 = cljs.core.deref.call(null, obs);
    if (cljs.core.truth_(value__8767__auto___25846)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto___25846, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto___25846, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25834) {
    var t__8802__auto___25847 = e25834;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25847, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__8767__auto___25848 = cljs.core.deref.call(null, run);
    if (cljs.core.truth_(value__8767__auto___25848)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto___25848, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__8767__auto___25848, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25835) {
    var t__8802__auto___25849 = e25835;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25849, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.reset_BANG_.call(null, obs, false);
  cljs.core.reset_BANG_.call(null, run, false);
  tiltontec.cell.core.c_reset_BANG_.call(null, sia, 2);
  try {
    var values__8764__auto___25850 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.evaluate.c_get.call(null, sib));
    var result__8765__auto___25851 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25850);
    if (cljs.core.truth_(result__8765__auto___25851)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25850), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25850)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25836) {
    var t__8802__auto___25852 = e25836;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25852, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25853 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 21), tiltontec.cell.evaluate.c_get.call(null, sic));
    var result__8765__auto___25854 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25853);
    if (cljs.core.truth_(result__8765__auto___25854)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25853), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25853)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25837) {
    var t__8802__auto___25855 = e25837;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25855, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25856 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, obs));
    var result__8765__auto___25857 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___25856);
    if (cljs.core.truth_(result__8765__auto___25857)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8764__auto___25856), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___25856)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25838) {
    var t__8802__auto___25858 = e25838;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25858, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, run));
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core.not, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25839) {
    var t__8802__auto__ = e25839;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.integrity_test.no_prop_no_obs.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.integrity_test.no_prop_no_obs;
}, new cljs.core.Symbol("tiltontec.cell.integrity-test", "no-prop-no-obs", "tiltontec.cell.integrity-test/no-prop-no-obs", 182636463, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "no-prop-no-obs", "no-prop-no-obs", -771561679, null), "test/tiltontec/cell/integrity_test.cljc", 
24, 1, 141, 141, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.no_prop_no_obs) ? tiltontec.cell.integrity_test.no_prop_no_obs.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env25859 = cljs.test.empty_env.call(null);
  var summary25860 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25859, summary25860) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env25859);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__8869__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env25859, summary25860) {
          return function() {
            if (env__8869__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__8869__auto__, env25859, summary25860)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.integrity_test.obs_setf;
        }, new cljs.core.Symbol("tiltontec.cell.integrity-test", "obs-setf", "tiltontec.cell.integrity-test/obs-setf", -1903746607, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "obs-setf", "obs-setf", -941176517, null), "test/tiltontec/cell/integrity_test.cljc", 
        18, 1, 45, 45, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.obs_setf) ? tiltontec.cell.integrity_test.obs_setf.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.integrity_test.obs_setf_bad_caught;
        }, new cljs.core.Symbol("tiltontec.cell.integrity-test", "obs-setf-bad-caught", "tiltontec.cell.integrity-test/obs-setf-bad-caught", -1085043785, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "obs-setf-bad-caught", "obs-setf-bad-caught", -936124387, null), "test/tiltontec/cell/integrity_test.cljc", 
        29, 1, 85, 85, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.obs_setf_bad_caught) ? tiltontec.cell.integrity_test.obs_setf_bad_caught.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.integrity_test.see_into_fn;
        }, new cljs.core.Symbol("tiltontec.cell.integrity-test", "see-into-fn", "tiltontec.cell.integrity-test/see-into-fn", 794556004, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "see-into-fn", "see-into-fn", 1996218062, null), "test/tiltontec/cell/integrity_test.cljc", 
        21, 1, 125, 125, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.see_into_fn) ? tiltontec.cell.integrity_test.see_into_fn.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.integrity_test.no_prop_no_obs;
        }, new cljs.core.Symbol("tiltontec.cell.integrity-test", "no-prop-no-obs", "tiltontec.cell.integrity-test/no-prop-no-obs", 182636463, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Symbol(null, "no-prop-no-obs", "no-prop-no-obs", -771561679, null), "test/tiltontec/cell/integrity_test.cljc", 
        24, 1, 141, 141, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.integrity_test.no_prop_no_obs) ? tiltontec.cell.integrity_test.no_prop_no_obs.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env25859, summary25860) {
          return function() {
            if (env__8869__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__8869__auto__, env25859, summary25860)], null));
      }());
    };
  }(env25859, summary25860), function(env25859, summary25860) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.integrity-test", "tiltontec.cell.integrity-test", -497413125, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env25859, summary25860)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25859, summary25860) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary25860, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary25860), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env25859, summary25860)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25859, summary25860) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env25859);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary25860));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary25860), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env25859, summary25860)], null));
}());
goog.provide("tiltontec.model.core_test");
goog.require("cljs.core");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.model.family");
goog.require("tiltontec.model.core");
goog.require("tiltontec.util.core");
goog.require("cljs.test");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.model.base");
goog.require("tiltontec.cell.core");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.integrity");
cljs.core.derive.call(null, tiltontec.cell.base.ia_types, new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", -1267867644), new cljs.core.Keyword("tiltontec.cell.base", "model", "tiltontec.cell.base/model", 284743830));
tiltontec.model.core_test.mm_typed = function tiltontec$model$core_test$mm_typed() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$mm_typed.cljs$lang$var);
};
tiltontec.model.core_test.mm_typed.cljs$lang$test = function() {
  var me = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", -1267867644), new cljs.core.Keyword(null, "x2", "x2", -1362513475), tiltontec.cell.core.c_in.call(null, 2), new cljs.core.Keyword(null, "age", "age", -604307804), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, 
  "*", "*", 345799209, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "x2", "x2", -1362513475)), 21)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "x2", "x2", -1362513475)) * 21;
  }));
  try {
    var values__8764__auto___25102 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "age", "age", -604307804))), 42);
    var result__8765__auto___25103 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25102);
    if (cljs.core.truth_(result__8765__auto___25103)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25102), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25102)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25100) {
    var t__8802__auto___25104 = e25100;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
    "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25104, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", -1267867644)), me);
    var result__8765__auto__ = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", 
      -1267867644)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", 
      -1267867644)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25101) {
    var t__8802__auto__ = e25101;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword("tiltontec.model.core-test", "typetest", "tiltontec.model.core-test/typetest", 
    -1267867644)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.mm_typed.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.mm_typed;
}, new cljs.core.Symbol("tiltontec.model.core-test", "mm-typed", "tiltontec.model.core-test/mm-typed", 160483804, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-typed", "mm-typed", 1121916947, null), "test/tiltontec/model/core_test.cljc", 18, 1, 50, 50, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.model.core_test.mm_typed) ? tiltontec.model.core_test.mm_typed.cljs$lang$test : null]));
tiltontec.model.core_test.mm_opti_1 = function tiltontec$model$core_test$mm_opti_1() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$mm_opti_1.cljs$lang$var);
};
tiltontec.model.core_test.mm_opti_1.cljs$lang$test = function() {
  var me = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "x2", "x2", -1362513475), 2, new cljs.core.Keyword(null, "age", "age", -604307804), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 21, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
  "x2", "x2", -1362513475)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return 21 * tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "x2", "x2", -1362513475));
  }));
  cljs.core.println.call(null, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core.meta.call(null, me));
  try {
    var values__8764__auto___25108 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "x2", "x2", -1362513475))), 2);
    var result__8765__auto___25109 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25108);
    if (cljs.core.truth_(result__8765__auto___25109)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "x2", "x2", -1362513475))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25108), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "x2", "x2", -1362513475))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25108)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25105) {
    var t__8802__auto___25110 = e25105;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
    "x2", "x2", -1362513475))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25110, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25111 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "age", "age", -604307804))), 42);
    var result__8765__auto___25112 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25111);
    if (cljs.core.truth_(result__8765__auto___25112)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25111), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25111)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25106) {
    var t__8802__auto___25113 = e25106;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
    "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25113, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_cell.call(null, me, new cljs.core.Keyword(null, "age", "age", -604307804)));
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25107) {
    var t__8802__auto__ = e25107;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
    "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.mm_opti_1.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.mm_opti_1;
}, new cljs.core.Symbol("tiltontec.model.core-test", "mm-opti-1", "tiltontec.model.core-test/mm-opti-1", -1273683452, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-opti-1", "mm-opti-1", -1060539455, null), "test/tiltontec/model/core_test.cljc", 19, 1, 59, 59, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.model.core_test.mm_opti_1) ? tiltontec.model.core_test.mm_opti_1.cljs$lang$test : null]));
tiltontec.model.core_test.mm_install_alive = function tiltontec$model$core_test$mm_install_alive() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$mm_install_alive.cljs$lang$var);
};
tiltontec.model.core_test.mm_install_alive.cljs$lang$test = function() {
  var bct = cljs.core.atom.call(null, 0);
  var res = tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), "Bob", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true), new cljs.core.Keyword(null, "bogus", "bogus", 637345996), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, 
  "if-let", "if-let", 1803593690, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "be", "be", -1545923187, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242))], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, 
  "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "bingo-e!!!!!!!!", "bingo-e!!!!!!!!", -1781230244), new cljs.core.Symbol(null, "be", "be", -1545923187, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null), new cljs.core.Symbol(null, 
  "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 2, new cljs.core.Symbol(null, "be", "be", -1545923187, null))), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "bogus-no-e", "bogus-no-e", 2095562930), cljs.core.list(new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, 
  "me", "me", 1501524834, null)))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(bct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var temp__4423__auto__ = tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242));
      if (cljs.core.truth_(temp__4423__auto__)) {
        var be = temp__4423__auto__;
        tiltontec.util.base.call_trc.call(null, ":bingo-e!!!!!!!!", be, cljs.core.deref.call(null, bct));
        cljs.core.swap_BANG_.call(null, bct, cljs.core.inc);
        return 2 * be;
      } else {
        return tiltontec.util.base.call_trc.call(null, ":bogus-no-e", (new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me)));
      }
    };
  }(bct)), new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), tiltontec.cell.core.c_in.call(null, 21, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true), new cljs.core.Keyword(null, "loc", "loc", -584284901), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", 
  -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "action", "action", -811238024)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, 
  new cljs.core.Keyword(null, "rule", "rule", 729973257), function(bct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var G__25116 = tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "action", "action", -811238024)) instanceof cljs.core.Keyword ? tiltontec.model.base.md_get.call(null, me, new cljs.core.Keyword(null, "action", "action", -811238024)).fqn : null;
      switch(G__25116) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(bct)));
  cljs.core.println.call(null, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core.meta.call(null, res));
  try {
    var values__8764__auto___25133 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_cz.call(null, res)), (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, res)));
    var result__8765__auto___25134 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25133);
    if (cljs.core.truth_(result__8765__auto___25134)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "cz", "cz", 1670864932), cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, 
      "res", "res", 245523648, null))), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25133), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "cz", "cz", 1670864932), cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, 
      "res", "res", 245523648, null))), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25133)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e25117) {
    var t__8802__auto___25135 = e25117;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "cz", "cz", 1670864932), cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, 
    "res", "res", 245523648, null))), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25135, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25136 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.model.base.md_cz.call(null, res))), 4);
    var result__8765__auto___25137 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25136);
    if (cljs.core.truth_(result__8765__auto___25137)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, 
      "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25136), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, 
      "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25136)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25118) {
    var t__8802__auto___25138 = e25118;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, 
    "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25138, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25139 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vals.call(null, tiltontec.model.base.md_cz.call(null, res))), tiltontec.cell.base.c_ref_QMARK_);
    var result__8765__auto___25140 = cljs.core.apply.call(null, cljs.core.every_QMARK_, values__8764__auto___25139);
    if (cljs.core.truth_(result__8765__auto___25140)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, 
      "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.every_QMARK_, values__8764__auto___25139), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, 
      "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), values__8764__auto___25139)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25119) {
    var t__8802__auto___25141 = e25119;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, 
    "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25141, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25142 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.set.call(null, cljs.core.keys.call(null, tiltontec.model.base.md_cz.call(null, res)))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, 
    "bogus-e", "bogus-e", -1082314242), null], null), null));
    var result__8765__auto___25143 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25142);
    if (cljs.core.truth_(result__8765__auto___25143)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
      "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25142), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
      "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25142)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25120) {
    var t__8802__auto___25144 = e25120;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
    "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25144, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25145 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vals.call(null, tiltontec.model.base.md_cz.call(null, res))), function(bct, res) {
      return function(p1__25114_SHARP_) {
        return cljs.core._EQ_.call(null, res, tiltontec.cell.base.c_me.call(null, p1__25114_SHARP_));
      };
    }(bct, res));
    var result__8765__auto___25146 = cljs.core.apply.call(null, cljs.core.every_QMARK_, values__8764__auto___25145);
    if (cljs.core.truth_(result__8765__auto___25146)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p1__25114#", "p1__25114#", 1412986540, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "res", "res", 245523648, null), cljs.core.list(new cljs.core.Symbol(null, "c-me", "c-me", 1049565946, null), new cljs.core.Symbol(null, "p1__25114#", "p1__25114#", 1412986540, null)))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.every_QMARK_, values__8764__auto___25145), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p1__25114#", "p1__25114#", 1412986540, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "res", "res", 245523648, null), cljs.core.list(new cljs.core.Symbol(null, "c-me", "c-me", 1049565946, null), new cljs.core.Symbol(null, "p1__25114#", "p1__25114#", 1412986540, null)))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), values__8764__auto___25145)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25121) {
    var t__8802__auto___25147 = e25121;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
    "p1__25114#", "p1__25114#", 1412986540, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "res", "res", 245523648, null), cljs.core.list(new cljs.core.Symbol(null, "c-me", "c-me", 1049565946, null), new cljs.core.Symbol(null, "p1__25114#", "p1__25114#", 1412986540, null)))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), 
    new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25147, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25148 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.set.call(null, cljs.core.map.call(null, function(bct, res) {
      return function(p1__25115_SHARP_) {
        return tiltontec.cell.base.c_slot.call(null, p1__25115_SHARP_);
      };
    }(bct, res), cljs.core.vals.call(null, tiltontec.model.base.md_cz.call(null, res))))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null));
    var result__8765__auto___25149 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25148);
    if (cljs.core.truth_(result__8765__auto___25149)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
      "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p1__25115#", "p1__25115#", -1079466206, null)], null), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, "p1__25115#", "p1__25115#", -1079466206, null))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25148), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
      "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p1__25115#", "p1__25115#", -1079466206, null)], null), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, "p1__25115#", "p1__25115#", -1079466206, null))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25148)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25122) {
    var t__8802__auto___25150 = e25122;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
    "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
    "p1__25115#", "p1__25115#", -1079466206, null)], null), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, "p1__25115#", "p1__25115#", -1079466206, null))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25150, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25151 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), "Bob");
    var result__8765__auto___25152 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25151);
    if (cljs.core.truth_(result__8765__auto___25152)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25151), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25151)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25123) {
    var t__8802__auto___25153 = e25123;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25153, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25154 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_name.call(null, res)), "Bob");
    var result__8765__auto___25155 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25154);
    if (cljs.core.truth_(result__8765__auto___25155)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Symbol(null, "md-name", "md-name", -1172444206, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25154), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Symbol(null, "md-name", "md-name", -1172444206, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25154)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25124) {
    var t__8802__auto___25156 = e25124;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Symbol(null, "md-name", "md-name", -1172444206, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25156, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.println.call(null, new cljs.core.Keyword(null, "res", "res", -1395007879), cljs.core.deref.call(null, res));
  try {
    var values__8764__auto___25157 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "bogus", "bogus", 637345996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), 42);
    var result__8765__auto___25158 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25157);
    if (cljs.core.truth_(result__8765__auto___25158)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "bogus", "bogus", 637345996), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25157), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "bogus", "bogus", 637345996), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25157)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25125) {
    var t__8802__auto___25159 = e25125;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "bogus", "bogus", 637345996), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25159, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25160 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), null);
    var result__8765__auto___25161 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25160);
    if (cljs.core.truth_(result__8765__auto___25161)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25160), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25160)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25126) {
    var t__8802__auto___25162 = e25126;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
    188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25162, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25163 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), null);
    var result__8765__auto___25164 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25163);
    if (cljs.core.truth_(result__8765__auto___25164)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25163), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25163)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25127) {
    var t__8802__auto___25165 = e25127;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
    188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25165, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.println.call(null, new cljs.core.Keyword(null, "loc", "loc", -584284901), (new cljs.core.Keyword(null, "loc", "loc", -584284901)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res)));
  try {
    var values__8764__auto___25166 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "loc", "loc", -584284901)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), new cljs.core.Keyword(null, "missing", "missing", 362507769));
    var result__8765__auto___25167 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25166);
    if (cljs.core.truth_(result__8765__auto___25167)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25166), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25166)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], 
      null));
    }
  } catch (e25128) {
    var t__8802__auto___25168 = e25128;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25168, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25169 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, bct)), 1);
    var result__8765__auto___25170 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25169);
    if (cljs.core.truth_(result__8765__auto___25170)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25169), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25169)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25129) {
    var t__8802__auto___25171 = e25129;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25171, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.reset_BANG_.call(null, bct, 0);
  tiltontec.model.core.md_reset_BANG_.call(null, res, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__8764__auto___25172 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "loc", "loc", -584284901)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__8765__auto___25173 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25172);
    if (cljs.core.truth_(result__8765__auto___25173)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25172), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25172)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], 
      null));
    }
  } catch (e25130) {
    var t__8802__auto___25174 = e25130;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25174, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, bct));
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core.zero_QMARK_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.zero_QMARK_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25131) {
    var t__8802__auto__ = e25131;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.model.core_test.mm_install_alive.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.mm_install_alive;
}, new cljs.core.Symbol("tiltontec.model.core-test", "mm-install-alive", "tiltontec.model.core-test/mm-install-alive", -206095115, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-install-alive", "mm-install-alive", 1190325296, null), "test/tiltontec/model/core_test.cljc", 
26, 1, 70, 70, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.mm_install_alive) ? tiltontec.model.core_test.mm_install_alive.cljs$lang$test : null]));
tiltontec.model.core_test.hello_model = function tiltontec$model$core_test$hello_model() {
  return cljs.test.test_var.call(null, tiltontec$model$core_test$hello_model.cljs$lang$var);
};
tiltontec.model.core_test.hello_model.cljs$lang$test = function() {
  var uni = tiltontec.model.core.make.call(null, new cljs.core.Keyword("tiltontec.model.family", "family", "tiltontec.model.family/family", 626272545), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, 
  "name", "name", 1843675177), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "moniker", "moniker", -1330203766), "World", new cljs.core.Keyword(null, "action", "action", -811238024), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, 
  null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "slot", "slot", 1880761098, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Symbol(null, "new", "new", -444906321, null), new cljs.core.Symbol(null, "old", "old", -184691163, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "new", 
  "new", -444906321, null), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Symbol(null, "visitor-did", "visitor-did", 1352408685, null), new cljs.core.Symbol(null, "new", "new", -444906321, null)))))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "resident", "resident", 1053225840), new cljs.core.Keyword(null, "action", "action", -811238024), 
  cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true), new cljs.core.Keyword(null, "location", "location", 1815599388), cljs.core.list(new cljs.core.Symbol(null, "c?+", "c?+", -133955249, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn-obs", "fn-obs", 305587329, 
  null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "new", "new", -444906321, null), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "honey-im", "honey-im", 546332184), new cljs.core.Symbol(null, "new", "new", -444906321, null))))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, 
  null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "action", "action", -811238024)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "response", "response", -1068424192), cljs.core.list(new cljs.core.Symbol(null, 
  "c?+", "c?+", -133955249, null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn-obs", "fn-obs", 305587329, null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "new", "new", -444906321, null), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "r-response", 
  "r-response", 1211417459), new cljs.core.Symbol(null, "new", "new", -444906321, null)))), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", 
  "me", 1501524834, null), new cljs.core.Keyword(null, "location", "location", 1815599388))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "action", 
  "action", -811238024))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world"))))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "alarm", "alarm", 2066206946), new cljs.core.Keyword(null, "on-off", "on-off", 
  420433376), cljs.core.list(new cljs.core.Symbol(null, "c?+", "c?+", -133955249, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn-obs", "fn-obs", 305587329, null), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "telling-alarm-api", "telling-alarm-api", -905807036), new cljs.core.Symbol(null, "new", "new", 
  -444906321, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388))), new cljs.core.Keyword(null, "off", "off", 606440789), 
  new cljs.core.Keyword(null, "on", "on", 173873944))), new cljs.core.Keyword(null, "activity", "activity", -1179221455), cljs.core.list(new cljs.core.Symbol(null, "c?+", "c?+", -133955249, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn-obs", "fn-obs", 305587329, null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, 
  "new", "new", -444906321, null), new cljs.core.Keyword(null, "call-police", "call-police", -2114689981), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "auto-dialing-911", "auto-dialing-911", -1790610355)), null))], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "on", "on", 173873944), cljs.core.list(new cljs.core.Symbol(null, 
  "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "on-off", "on-off", 420433376))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "action", "action", 829293503, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, 
  "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "action", "action", -811238024))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, "action", "action", 829293503, null), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646), new cljs.core.Keyword(null, "call-police", "call-police", -2114689981), null))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, 
  new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_25175 = tiltontec.model.family._STAR_par_STAR_;
    tiltontec.model.family._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "alarm", "alarm", 2066206946), new cljs.core.Keyword(null, "on-off", "on-off", 420433376), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), 
      function(_STAR_par_STAR_25175, me, cache) {
        return function(slot, me__$1, new$, old, c) {
          return tiltontec.util.base.call_trc.call(null, ":telling-alarm-api", new$);
        };
      }(_STAR_par_STAR_25175, me, cache), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", 
      "location", 1815599388))), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "on", "on", 173873944))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_25175, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.model.base.md_get.call(null, tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "resident", "resident", 1053225840), me__$1), new cljs.core.Keyword(null, "location", "location", 1815599388)))) {
            return new cljs.core.Keyword(null, "off", "off", 606440789);
          } else {
            return new cljs.core.Keyword(null, "on", "on", 173873944);
          }
        };
      }(_STAR_par_STAR_25175, me, cache)), new cljs.core.Keyword(null, "activity", "activity", -1179221455), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(_STAR_par_STAR_25175, me, cache) {
        return function(slot, me__$1, new$, old, c) {
          var G__25176 = new$ instanceof cljs.core.Keyword ? new$.fqn : null;
          switch(G__25176) {
            case "call-police":
              return tiltontec.util.base.call_trc.call(null, ":auto-dialing-911");
              break;
            default:
              return null;
          }
        };
      }(_STAR_par_STAR_25175, me, cache), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "on", "on", 173873944), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "on-off", "on-off", 
      420433376))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "action", "action", 829293503, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "action", "action", -811238024))], null), cljs.core.list(new cljs.core.Symbol(null, 
      "case", "case", -1510733573, null), new cljs.core.Symbol(null, "action", "action", 829293503, null), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646), new cljs.core.Keyword(null, "call-police", "call-police", -2114689981), null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_25175, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "on", "on", 173873944), tiltontec.model.base.md_get.call(null, me__$1, new cljs.core.Keyword(null, "on-off", "on-off", 420433376)))) {
            var temp__4425__auto__ = tiltontec.model.base.md_get.call(null, tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), me__$1), new cljs.core.Keyword(null, "action", "action", -811238024));
            if (cljs.core.truth_(temp__4425__auto__)) {
              var action = temp__4425__auto__;
              var G__25177 = action instanceof cljs.core.Keyword ? action.fqn : null;
              switch(G__25177) {
                case "smashing-window":
                  return new cljs.core.Keyword(null, "call-police", "call-police", -2114689981);
                  break;
                default:
                  return null;
              }
            } else {
              return null;
            }
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_25175, me, cache)))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "resident", "resident", 1053225840), new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true), new cljs.core.Keyword(null, "location", "location", 1815599388), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, 
      "obs", "obs", -664011444), function(_STAR_par_STAR_25175, me, cache) {
        return function(slot, me__$1, new$, old, c) {
          if (cljs.core.truth_(new$)) {
            return tiltontec.util.base.call_trc.call(null, ":honey-im", new$);
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_25175, me, cache), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "action", "action", -811238024)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), 
      new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_25175, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          var G__25178 = tiltontec.model.base.md_get.call(null, me__$1, new cljs.core.Keyword(null, "action", "action", -811238024)) instanceof cljs.core.Keyword ? tiltontec.model.base.md_get.call(null, me__$1, new cljs.core.Keyword(null, "action", "action", -811238024)).fqn : null;
          switch(G__25178) {
            case "leave":
              return new cljs.core.Keyword(null, "away", "away", 1142420954);
              break;
            case "return":
              return new cljs.core.Keyword(null, "home", "home", -74557309);
              break;
            default:
              return new cljs.core.Keyword(null, "missing", "missing", 362507769);
          }
        };
      }(_STAR_par_STAR_25175, me, cache)), new cljs.core.Keyword(null, "response", "response", -1068424192), tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(_STAR_par_STAR_25175, me, cache) {
        return function(slot, me__$1, new$, old, c) {
          if (cljs.core.truth_(new$)) {
            return tiltontec.util.base.call_trc.call(null, ":r-response", new$);
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_25175, me, cache), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
      "me", "me", 1501524834, null), new cljs.core.Keyword(null, "location", "location", 1815599388))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, 
      "action", "action", -811238024))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_25175, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.cell.base.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.cell.base.c_value.call(null, slot_c_SHARP___$1);
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.model.base.md_get.call(null, me__$1, new cljs.core.Keyword(null, "location", "location", 1815599388)))) {
            var temp__4425__auto__ = tiltontec.model.base.md_get.call(null, tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), me__$1), new cljs.core.Keyword(null, "action", "action", -811238024));
            if (cljs.core.truth_(temp__4425__auto__)) {
              var act = temp__4425__auto__;
              var G__25179 = act instanceof cljs.core.Keyword ? act.fqn : null;
              switch(G__25179) {
                case "knock-knock":
                  return "hello, world";
                  break;
                default:
                  throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(act)].join(""));;
              }
            } else {
              return null;
            }
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_25175, me, cache)))), tiltontec.model.core.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "moniker", "moniker", -1330203766), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "obs", "obs", -664011444), 
      function(_STAR_par_STAR_25175, me, cache) {
        return function(slot, me__$1, new$, old, c) {
          if (cljs.core.truth_(new$)) {
            return tiltontec.util.base.call_trc.call(null, "visitor-did", new$);
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_25175, me, cache))))));
    } finally {
      tiltontec.model.family._STAR_par_STAR_ = _STAR_par_STAR_25175;
    }
  }));
  var viz = tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), uni);
  var rez = tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "resident", "resident", 1053225840), uni);
  try {
    var values__8764__auto___25190 = cljs.core._conj.call(null, cljs.core.List.EMPTY, viz == null);
    var result__8765__auto___25191 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___25190);
    if (cljs.core.truth_(result__8765__auto___25191)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "viz", "viz", -1183834940, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8764__auto___25190), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "viz", "viz", -1183834940, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___25190)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25180) {
    var t__8802__auto___25192 = e25180;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "viz", "viz", -1183834940, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25192, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25193 = cljs.core._conj.call(null, cljs.core.List.EMPTY, rez == null);
    var result__8765__auto___25194 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___25193);
    if (cljs.core.truth_(result__8765__auto___25194)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "rez", "rez", 574832853, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8764__auto___25193), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "rez", "rez", 574832853, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___25193)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25181) {
    var t__8802__auto___25195 = e25181;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "rez", "rez", 574832853, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__8802__auto___25195, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25196 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_cell.call(null, rez, new cljs.core.Keyword(null, "action", "action", -811238024)) == null);
    var result__8765__auto___25197 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___25196);
    if (cljs.core.truth_(result__8765__auto___25197)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
      "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8764__auto___25196), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
      "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___25196)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25182) {
    var t__8802__auto___25198 = e25182;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
    "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25198, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25199 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "resident", "resident", 1053225840), uni), new cljs.core.Keyword(null, "location", "location", 1815599388))), new cljs.core.Keyword(null, "missing", "missing", 362507769));
    var result__8765__auto___25200 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25199);
    if (cljs.core.truth_(result__8765__auto___25200)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, 
      "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25199), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, 
      "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25199)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e25183) {
    var t__8802__auto___25201 = e25183;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, 
    "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25201, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.model.core.md_reset_BANG_.call(null, viz, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
  tiltontec.model.core.md_reset_BANG_.call(null, viz, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646));
  try {
    var values__8764__auto___25202 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_cell.call(null, rez, new cljs.core.Keyword(null, "action", "action", -811238024)) == null);
    var result__8765__auto___25203 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___25202);
    if (cljs.core.truth_(result__8765__auto___25203)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
      "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8764__auto___25202), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
      "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___25202)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25184) {
    var t__8802__auto___25204 = e25184;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
    "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25204, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.model.core.md_reset_BANG_.call(null, rez, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__8764__auto___25205 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.model.base.md_get.call(null, tiltontec.model.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "resident", "resident", 1053225840), uni), new cljs.core.Keyword(null, "location", "location", 1815599388))), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__8765__auto___25206 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25205);
    if (cljs.core.truth_(result__8765__auto___25206)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", 
      "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25205), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", 
      "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25205)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e25185) {
    var t__8802__auto___25207 = e25185;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", 
    "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25207, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  return tiltontec.model.core.md_reset_BANG_.call(null, viz, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
};
tiltontec.model.core_test.hello_model.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.model.core_test.hello_model;
}, new cljs.core.Symbol("tiltontec.model.core-test", "hello-model", "tiltontec.model.core-test/hello-model", 1793459768, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "hello-model", "hello-model", 287487483, null), "test/tiltontec/model/core_test.cljc", 21, 1, 115, 115, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.model.core_test.hello_model) ? tiltontec.model.core_test.hello_model.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env25208 = cljs.test.empty_env.call(null);
  var summary25209 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25208, summary25209) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env25208);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__8869__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env25208, summary25209) {
          return function() {
            if (env__8869__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__8869__auto__, env25208, summary25209)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.model.core_test.mm_typed;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "mm-typed", "tiltontec.model.core-test/mm-typed", 160483804, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-typed", "mm-typed", 1121916947, null), "test/tiltontec/model/core_test.cljc", 18, 1, 50, 50, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.model.core_test.mm_typed) ? tiltontec.model.core_test.mm_typed.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.mm_opti_1;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "mm-opti-1", "tiltontec.model.core-test/mm-opti-1", -1273683452, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-opti-1", "mm-opti-1", -1060539455, null), "test/tiltontec/model/core_test.cljc", 19, 1, 59, 59, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.mm_opti_1) ? tiltontec.model.core_test.mm_opti_1.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.mm_install_alive;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "mm-install-alive", "tiltontec.model.core-test/mm-install-alive", -206095115, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "mm-install-alive", "mm-install-alive", 1190325296, null), "test/tiltontec/model/core_test.cljc", 
        26, 1, 70, 70, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.mm_install_alive) ? tiltontec.model.core_test.mm_install_alive.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.model.core_test.hello_model;
        }, new cljs.core.Symbol("tiltontec.model.core-test", "hello-model", "tiltontec.model.core-test/hello-model", 1793459768, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Symbol(null, "hello-model", "hello-model", 287487483, null), "test/tiltontec/model/core_test.cljc", 21, 
        1, 115, 115, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.model.core_test.hello_model) ? tiltontec.model.core_test.hello_model.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env25208, summary25209) {
          return function() {
            if (env__8869__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__8869__auto__, env25208, summary25209)], null));
      }());
    };
  }(env25208, summary25209), function(env25208, summary25209) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.model.core-test", "tiltontec.model.core-test", -1605112512, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env25208, summary25209)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25208, summary25209) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary25209, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary25209), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env25208, summary25209)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25208, summary25209) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env25208);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary25209));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary25209), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env25208, summary25209)], null));
}());
goog.provide("testrun");
goog.require("cljs.core");
goog.require("cljs.test");
cljs.core.enable_console_print_BANG_.call(null);
testrun.run = function testrun$run() {
  return cljs.test.run_block.call(null, function() {
    var env26155 = /tiltontec.util.*-test/;
    var summary26156 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
    return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env26155, summary26156) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env26155);
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "testrun", "testrun", 252374431, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
        return cljs.test.block.call(null, function() {
          var env__8869__auto__ = cljs.test.get_current_env.call(null);
          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env26155, summary26156) {
            return function() {
              if (env__8869__auto__ == null) {
                cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
              } else {
              }
              return null;
            };
          }(env__8869__auto__, env26155, summary26156)], null), cljs.test.test_vars_block.call(null, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env26155, summary26156) {
            return function() {
              if (env__8869__auto__ == null) {
                return cljs.test.clear_env_BANG_.call(null);
              } else {
                return null;
              }
            };
          }(env__8869__auto__, env26155, summary26156)], null));
        }());
      };
    }(env26155, summary26156), function(env26155, summary26156) {
      return function() {
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "testrun", "testrun", 252374431, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
      };
    }(env26155, summary26156)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env26155, summary26156) {
      return function() {
        return cljs.core._vreset_BANG_.call(null, summary26156, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary26156), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
      };
    }(env26155, summary26156)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env26155, summary26156) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env26155);
        cljs.test.do_report.call(null, cljs.core.deref.call(null, summary26156));
        cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary26156), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
        return cljs.test.clear_env_BANG_.call(null);
      };
    }(env26155, summary26156)], null));
  }());
};
goog.exportSymbol("testrun.run", testrun.run);
goog.provide("tiltontec.cell.lazy_cells_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.core");
tiltontec.cell.lazy_cells_test.solid_lazy = function tiltontec$cell$lazy_cells_test$solid_lazy() {
  return cljs.test.test_var.call(null, tiltontec$cell$lazy_cells_test$solid_lazy.cljs$lang$var);
};
tiltontec.cell.lazy_cells_test.solid_lazy.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var xo = cljs.core.atom.call(null, 0);
  var a = tiltontec.cell.core.c_in.call(null, 0);
  var x = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(xo, a) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, xo, cljs.core.inc);
    };
  }(xo, a), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null)), 40)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "lazy", "lazy", -424547181), true, new cljs.core.Keyword(null, "rule", "rule", 729973257), 
  function(xo, a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return tiltontec.cell.evaluate.c_get.call(null, a) + 40;
    };
  }(xo, a));
  try {
    var values__8764__auto___25659 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), tiltontec.cell.base.unbound);
    var result__8765__auto___25660 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25659);
    if (cljs.core.truth_(result__8765__auto___25660)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25659), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25659)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null))
      ;
    }
  } catch (e25651) {
    var t__8802__auto___25661 = e25651;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25661, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25662 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 0);
    var result__8765__auto___25663 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25662);
    if (cljs.core.truth_(result__8765__auto___25663)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25662), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25662)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25652) {
    var t__8802__auto___25664 = e25652;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25664, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25665 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x)), 40);
    var result__8765__auto___25666 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25665);
    if (cljs.core.truth_(result__8765__auto___25666)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25665), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25665)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25653) {
    var t__8802__auto___25667 = e25653;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25667, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25668 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 1);
    var result__8765__auto___25669 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25668);
    if (cljs.core.truth_(result__8765__auto___25669)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25668), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25668)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25654) {
    var t__8802__auto___25670 = e25654;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25670, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, a, 100);
  try {
    var values__8764__auto___25671 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 1);
    var result__8765__auto___25672 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25671);
    if (cljs.core.truth_(result__8765__auto___25672)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25671), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25671)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25655) {
    var t__8802__auto___25673 = e25655;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25673, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25674 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), 40);
    var result__8765__auto___25675 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25674);
    if (cljs.core.truth_(result__8765__auto___25675)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25674), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25674)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25656) {
    var t__8802__auto___25676 = e25656;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25676, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25677 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x)), 140);
    var result__8765__auto___25678 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25677);
    if (cljs.core.truth_(result__8765__auto___25678)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25677), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25677)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25657) {
    var t__8802__auto___25679 = e25657;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25679, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 2);
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25658) {
    var t__8802__auto__ = e25658;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.lazy_cells_test.solid_lazy.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.lazy_cells_test.solid_lazy;
}, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "solid-lazy", "tiltontec.cell.lazy-cells-test/solid-lazy", -621454351, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "solid-lazy", "solid-lazy", -1673817790, null), "test/tiltontec/cell/lazy_cells_test.cljc", 
20, 1, 40, 40, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.solid_lazy) ? tiltontec.cell.lazy_cells_test.solid_lazy.cljs$lang$test : null]));
tiltontec.cell.lazy_cells_test.lazy_until_asked = function tiltontec$cell$lazy_cells_test$lazy_until_asked() {
  return cljs.test.test_var.call(null, tiltontec$cell$lazy_cells_test$lazy_until_asked.cljs$lang$var);
};
tiltontec.cell.lazy_cells_test.lazy_until_asked.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var xo = cljs.core.atom.call(null, 0);
  var xr = cljs.core.atom.call(null, 0);
  var a = tiltontec.cell.core.c_in.call(null, 0);
  var x = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(xo, xr, a) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, xo, cljs.core.inc);
    };
  }(xo, xr, a), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null)), 40)), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "lazy", "lazy", -424547181), new cljs.core.Keyword(null, "until-asked", "until-asked", -1449069768), new cljs.core.Keyword(null, "rule", "rule", 729973257), function(xo, xr, a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, xr, cljs.core.inc);
      return tiltontec.cell.evaluate.c_get.call(null, a) + 40;
    };
  }(xo, xr, a));
  try {
    var values__8764__auto___25692 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), tiltontec.cell.base.unbound);
    var result__8765__auto___25693 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25692);
    if (cljs.core.truth_(result__8765__auto___25693)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25692), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25692)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null))
      ;
    }
  } catch (e25680) {
    var t__8802__auto___25694 = e25680;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25694, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25695 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 0);
    var result__8765__auto___25696 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25695);
    if (cljs.core.truth_(result__8765__auto___25696)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25695), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25695)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25681) {
    var t__8802__auto___25697 = e25681;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25697, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25698 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xr)), 0);
    var result__8765__auto___25699 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25698);
    if (cljs.core.truth_(result__8765__auto___25699)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25698), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25698)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25682) {
    var t__8802__auto___25700 = e25682;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25700, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25701 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x)), 40);
    var result__8765__auto___25702 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25701);
    if (cljs.core.truth_(result__8765__auto___25702)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25701), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25701)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25683) {
    var t__8802__auto___25703 = e25683;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25703, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25704 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 1);
    var result__8765__auto___25705 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25704);
    if (cljs.core.truth_(result__8765__auto___25705)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25704), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25704)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25684) {
    var t__8802__auto___25706 = e25684;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25706, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25707 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xr)), 1);
    var result__8765__auto___25708 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25707);
    if (cljs.core.truth_(result__8765__auto___25708)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25707), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25707)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25685) {
    var t__8802__auto___25709 = e25685;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25709, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, a, 100);
  try {
    var values__8764__auto___25710 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 2);
    var result__8765__auto___25711 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25710);
    if (cljs.core.truth_(result__8765__auto___25711)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25710), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25710)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25686) {
    var t__8802__auto___25712 = e25686;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25712, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25713 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xr)), 2);
    var result__8765__auto___25714 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25713);
    if (cljs.core.truth_(result__8765__auto___25714)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25713), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25713)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25687) {
    var t__8802__auto___25715 = e25687;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25715, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25716 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), 140);
    var result__8765__auto___25717 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25716);
    if (cljs.core.truth_(result__8765__auto___25717)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25716), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25716)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25688) {
    var t__8802__auto___25718 = e25688;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25718, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25719 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x)), 140);
    var result__8765__auto___25720 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25719);
    if (cljs.core.truth_(result__8765__auto___25720)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25719), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25719)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25689) {
    var t__8802__auto___25721 = e25689;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25721, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25722 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 2);
    var result__8765__auto___25723 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25722);
    if (cljs.core.truth_(result__8765__auto___25723)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25722), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25722)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25690) {
    var t__8802__auto___25724 = e25690;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25724, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xr)), 2);
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25691) {
    var t__8802__auto__ = e25691;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.lazy_cells_test.lazy_until_asked.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.lazy_cells_test.lazy_until_asked;
}, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "lazy-until-asked", "tiltontec.cell.lazy-cells-test/lazy-until-asked", -1250993920, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "lazy-until-asked", "lazy-until-asked", -63631277, null), "test/tiltontec/cell/lazy_cells_test.cljc", 
26, 1, 57, 57, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.lazy_until_asked) ? tiltontec.cell.lazy_cells_test.lazy_until_asked.cljs$lang$test : null]));
tiltontec.cell.lazy_cells_test.optimize_when_value_t = function tiltontec$cell$lazy_cells_test$optimize_when_value_t() {
  return cljs.test.test_var.call(null, tiltontec$cell$lazy_cells_test$optimize_when_value_t.cljs$lang$var);
};
tiltontec.cell.lazy_cells_test.optimize_when_value_t.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var xo = cljs.core.atom.call(null, 0);
  var xr = cljs.core.atom.call(null, 0);
  var a = tiltontec.cell.core.c_in.call(null, 0, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "aaa", "aaa", 392664825));
  var x = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "xxx", "xxx", -1019301908), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(xo, xr, a) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, xo, cljs.core.inc);
    };
  }(xo, xr, a), new cljs.core.Keyword(null, "optimize", "optimize", -1912349448), new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), null, 
  new cljs.core.Keyword(null, "reading-a!!!", "reading-a!!!", -391404819)), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "av", "av", 1883447185, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null))], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 
  1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "av", "av", 1883447185, null), 1), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), new cljs.core.Symbol(null, "av", "av", 1883447185, null), 40)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(xo, xr, a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, xr, cljs.core.inc);
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "reading-a!!!", "reading-a!!!", -391404819));
      var temp__4425__auto__ = tiltontec.cell.evaluate.c_get.call(null, a);
      if (cljs.core.truth_(temp__4425__auto__)) {
        var av = temp__4425__auto__;
        if (av > 1) {
          return av + 40;
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(xo, xr, a));
  try {
    var values__8764__auto___25732 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x));
    var result__8765__auto___25733 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25732);
    if (cljs.core.truth_(result__8765__auto___25733)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25732), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25732)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25725) {
    var t__8802__auto___25734 = e25725;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__8802__auto___25734, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25735 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, x)), cljs.core.PersistentHashSet.fromArray([a], true));
    var result__8765__auto___25736 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25735);
    if (cljs.core.truth_(result__8765__auto___25736)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25735), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25735)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25726) {
    var t__8802__auto___25737 = e25726;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25737, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, a, 1);
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "reset-finished!!!!!!!!!!", "reset-finished!!!!!!!!!!", -898693691));
  try {
    var values__8764__auto___25738 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x));
    var result__8765__auto___25739 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25738);
    if (cljs.core.truth_(result__8765__auto___25739)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25738), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25738)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25727) {
    var t__8802__auto___25740 = e25727;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__8802__auto___25740, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25741 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, x)), cljs.core.PersistentHashSet.fromArray([a], true));
    var result__8765__auto___25742 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25741);
    if (cljs.core.truth_(result__8765__auto___25742)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25741), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25741)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25728) {
    var t__8802__auto___25743 = e25728;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25743, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "reset-2-beginning!!!!!!!!!!!!", "reset-2-beginning!!!!!!!!!!!!", 206221749));
  tiltontec.cell.core.c_reset_BANG_.call(null, a, 2);
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "reset-2-finished!!!!!!!!!!", "reset-2-finished!!!!!!!!!!", -1742930051));
  try {
    var values__8764__auto___25744 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, x)), 42);
    var result__8765__auto___25745 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25744);
    if (cljs.core.truth_(result__8765__auto___25745)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25744), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25744)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25729) {
    var t__8802__auto___25746 = e25729;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25746, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25747 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, x));
    var result__8765__auto___25748 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__8764__auto___25747);
    if (cljs.core.truth_(result__8765__auto___25748)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__8764__auto___25747), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__8764__auto___25747)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25730) {
    var t__8802__auto___25749 = e25730;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25749, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "useds", "useds", 621350967), tiltontec.cell.base.c_useds.call(null, x));
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, x));
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25731) {
    var t__8802__auto__ = e25731;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.lazy_cells_test.optimize_when_value_t.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.lazy_cells_test.optimize_when_value_t;
}, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "optimize-when-value-t", "tiltontec.cell.lazy-cells-test/optimize-when-value-t", 919000791, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "optimize-when-value-t", "optimize-when-value-t", 2131697560, null), "test/tiltontec/cell/lazy_cells_test.cljc", 
31, 1, 80, 80, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.optimize_when_value_t) ? tiltontec.cell.lazy_cells_test.optimize_when_value_t.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env25750 = cljs.test.empty_env.call(null);
  var summary25751 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25750, summary25751) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env25750);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__8869__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env25750, summary25751) {
          return function() {
            if (env__8869__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__8869__auto__, env25750, summary25751)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.lazy_cells_test.solid_lazy;
        }, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "solid-lazy", "tiltontec.cell.lazy-cells-test/solid-lazy", -621454351, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "solid-lazy", "solid-lazy", -1673817790, null), "test/tiltontec/cell/lazy_cells_test.cljc", 
        20, 1, 40, 40, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.solid_lazy) ? tiltontec.cell.lazy_cells_test.solid_lazy.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.lazy_cells_test.lazy_until_asked;
        }, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "lazy-until-asked", "tiltontec.cell.lazy-cells-test/lazy-until-asked", -1250993920, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "lazy-until-asked", "lazy-until-asked", -63631277, null), "test/tiltontec/cell/lazy_cells_test.cljc", 
        26, 1, 57, 57, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.lazy_until_asked) ? tiltontec.cell.lazy_cells_test.lazy_until_asked.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.lazy_cells_test.optimize_when_value_t;
        }, new cljs.core.Symbol("tiltontec.cell.lazy-cells-test", "optimize-when-value-t", "tiltontec.cell.lazy-cells-test/optimize-when-value-t", 919000791, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Symbol(null, "optimize-when-value-t", "optimize-when-value-t", 2131697560, 
        null), "test/tiltontec/cell/lazy_cells_test.cljc", 31, 1, 80, 80, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.lazy_cells_test.optimize_when_value_t) ? tiltontec.cell.lazy_cells_test.optimize_when_value_t.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env25750, summary25751) {
          return function() {
            if (env__8869__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__8869__auto__, env25750, summary25751)], null));
      }());
    };
  }(env25750, summary25751), function(env25750, summary25751) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.lazy-cells-test", "tiltontec.cell.lazy-cells-test", -482147820, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env25750, summary25751)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25750, summary25751) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary25751, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary25751), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env25750, summary25751)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25750, summary25751) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env25750);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary25751));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary25751), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env25750, summary25751)], null));
}());
goog.provide("tiltontec.cell.core_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.util.base");
goog.require("tiltontec.util.core");
goog.require("tiltontec.cell.base");
goog.require("tiltontec.cell.integrity");
goog.require("tiltontec.cell.observer");
goog.require("tiltontec.cell.evaluate");
goog.require("tiltontec.cell.core");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.cell.core_test.test_input = function tiltontec$cell$core_test$test_input() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$test_input.cljs$lang$var);
};
tiltontec.cell.core_test.test_input.cljs$lang$test = function() {
  var c = tiltontec.cell.core.make_cell.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "mol", "mol", -2087943467), new cljs.core.Keyword(null, "value", "value", 305978217), 42);
  try {
    var values__8764__auto___25334 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), c);
    var result__8765__auto___25335 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto___25334);
    if (cljs.core.truth_(result__8765__auto___25335)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto___25334), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8764__auto___25334)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25327) {
    var t__8802__auto___25336 = e25327;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25336, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25337 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.base.c_value.call(null, c));
    var result__8765__auto___25338 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25337);
    if (cljs.core.truth_(result__8765__auto___25338)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25337), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25337)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25328) {
    var t__8802__auto___25339 = e25328;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25339, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25340 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__8765__auto___25341 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25340);
    if (cljs.core.truth_(result__8765__auto___25341)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25340), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25340)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25329) {
    var t__8802__auto___25342 = e25329;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25342, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25343 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8765__auto___25344 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25343);
    if (cljs.core.truth_(result__8765__auto___25344)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25343), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25343)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25330) {
    var t__8802__auto___25345 = e25330;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25345, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25346 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__8765__auto___25347 = cljs.core.apply.call(null, tiltontec.cell.base.c_input_QMARK_, values__8764__auto___25346);
    if (cljs.core.truth_(result__8765__auto___25347)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_input_QMARK_, 
      values__8764__auto___25346), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__8764__auto___25346)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25331) {
    var t__8802__auto___25348 = e25331;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25348, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25349 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__8765__auto___25350 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25349);
    if (cljs.core.truth_(result__8765__auto___25350)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25349), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25349)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25332) {
    var t__8802__auto___25351 = e25332;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25351, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slot.call(null, c)), new cljs.core.Keyword(null, "mol", "mol", -2087943467));
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "mol", "mol", -2087943467), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "mol", "mol", -2087943467), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25333) {
    var t__8802__auto__ = e25333;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "mol", "mol", -2087943467), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.test_input.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.test_input;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "test-input", "tiltontec.cell.core-test/test-input", 584139487, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/core_test.cljc", 20, 1, 45, 45, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.core_test.test_input) ? tiltontec.cell.core_test.test_input.cljs$lang$test : null]));
tiltontec.cell.core_test.test_c_in = function tiltontec$cell$core_test$test_c_in() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$test_c_in.cljs$lang$var);
};
tiltontec.cell.core_test.test_c_in.cljs$lang$test = function() {
  var c = tiltontec.cell.core.c_in.call(null, 42);
  try {
    var values__8764__auto___25359 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), c);
    var result__8765__auto___25360 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto___25359);
    if (cljs.core.truth_(result__8765__auto___25360)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto___25359), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8764__auto___25359)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25352) {
    var t__8802__auto___25361 = e25352;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "cell", "tiltontec.cell.base/cell", 608738071)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25361, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25362 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.base.c_value.call(null, c));
    var result__8765__auto___25363 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25362);
    if (cljs.core.truth_(result__8765__auto___25363)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25362), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25362)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25353) {
    var t__8802__auto___25364 = e25353;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25364, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25365 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__8765__auto___25366 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25365);
    if (cljs.core.truth_(result__8765__auto___25366)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25365), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25365)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25354) {
    var t__8802__auto___25367 = e25354;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25367, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25368 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8765__auto___25369 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25368);
    if (cljs.core.truth_(result__8765__auto___25369)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25368), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25368)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25355) {
    var t__8802__auto___25370 = e25355;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25370, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25371 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__8765__auto___25372 = cljs.core.apply.call(null, tiltontec.cell.base.c_input_QMARK_, values__8764__auto___25371);
    if (cljs.core.truth_(result__8765__auto___25372)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_input_QMARK_, 
      values__8764__auto___25371), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__8764__auto___25371)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25356) {
    var t__8802__auto___25373 = e25356;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25373, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25374 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__8765__auto___25375 = cljs.core.apply.call(null, tiltontec.cell.base.c_valid_QMARK_, values__8764__auto___25374);
    if (cljs.core.truth_(result__8765__auto___25375)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_valid_QMARK_, 
      values__8764__auto___25374), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__8764__auto___25374)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25357) {
    var t__8802__auto___25376 = e25357;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25376, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25358) {
    var t__8802__auto__ = e25358;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.test_c_in.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.test_c_in;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-in", "tiltontec.cell.core-test/test-c-in", -99212066, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-in", "test-c-in", -885735134, null), "test/tiltontec/cell/core_test.cljc", 19, 1, 58, 58, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.core_test.test_c_in) ? tiltontec.cell.core_test.test_c_in.cljs$lang$test : null]));
tiltontec.cell.core_test.test_c_in_PLUS_ = function tiltontec$cell$core_test$test_c_in_PLUS_() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$test_c_in_PLUS_.cljs$lang$var);
};
tiltontec.cell.core_test.test_c_in_PLUS_.cljs$lang$test = function() {
  var c = tiltontec.cell.core.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "cool", "cool", -10453819));
  try {
    var values__8764__auto___25384 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__8765__auto___25385 = cljs.core.apply.call(null, tiltontec.cell.base.c_ref_QMARK_, values__8764__auto___25384);
    if (cljs.core.truth_(result__8765__auto___25385)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_ref_QMARK_, 
      values__8764__auto___25384), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), values__8764__auto___25384)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25377) {
    var t__8802__auto___25386 = e25377;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25386, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25387 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.cell.base.c_value.call(null, c));
    var result__8765__auto___25388 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25387);
    if (cljs.core.truth_(result__8765__auto___25388)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25387), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25387)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25378) {
    var t__8802__auto___25389 = e25378;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25389, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25390 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__8765__auto___25391 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25390);
    if (cljs.core.truth_(result__8765__auto___25391)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25390), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25390)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25379) {
    var t__8802__auto___25392 = e25379;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25392, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25393 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8765__auto___25394 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25393);
    if (cljs.core.truth_(result__8765__auto___25394)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25393), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25393)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25380) {
    var t__8802__auto___25395 = e25380;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25395, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25396 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__8765__auto___25397 = cljs.core.apply.call(null, tiltontec.cell.base.c_input_QMARK_, values__8764__auto___25396);
    if (cljs.core.truth_(result__8765__auto___25397)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_input_QMARK_, 
      values__8764__auto___25396), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__8764__auto___25396)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25381) {
    var t__8802__auto___25398 = e25381;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25398, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25399 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__8765__auto___25400 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25399);
    if (cljs.core.truth_(result__8765__auto___25400)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25399), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25399)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25382) {
    var t__8802__auto___25401 = e25382;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25401, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slot_name.call(null, c)), tiltontec.cell.base.c_slot.call(null, c)), new cljs.core.Keyword(null, "cool", "cool", -10453819));
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "cool", "cool", -10453819), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "cool", "cool", -10453819), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25383) {
    var t__8802__auto__ = e25383;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "cool", "cool", -10453819), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.test_c_in_PLUS_.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.test_c_in_PLUS_;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-in+", "tiltontec.cell.core-test/test-c-in+", 856803589, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-in+", "test-c-in+", -1036603951, null), "test/tiltontec/cell/core_test.cljc", 20, 1, 69, 69, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.core_test.test_c_in_PLUS_) ? tiltontec.cell.core_test.test_c_in_PLUS_.cljs$lang$test : null]));
tiltontec.cell.core_test.test_c_formula = function tiltontec$cell$core_test$test_c_formula() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$test_c_formula.cljs$lang$var);
};
tiltontec.cell.core_test.test_c_formula.cljs$lang$test = function() {
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 40, 2)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    return 40 + 2;
  });
  try {
    var values__8764__auto___25410 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), c);
    var result__8765__auto___25411 = cljs.core.apply.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto___25410);
    if (cljs.core.truth_(result__8765__auto___25411)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.ia_type_QMARK_, values__8764__auto___25410), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__8764__auto___25410)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25402) {
    var t__8802__auto___25412 = e25402;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.cell.base", "c-formula", "tiltontec.cell.base/c-formula", -1020749037)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25412, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25413 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_rule.call(null, c));
    var result__8765__auto___25414 = cljs.core.apply.call(null, cljs.core.fn_QMARK_, values__8764__auto___25413);
    if (cljs.core.truth_(result__8765__auto___25414)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.fn_QMARK_, values__8764__auto___25413), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), values__8764__auto___25413)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25403) {
    var t__8802__auto___25415 = e25403;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25415, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25416 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.unbound), tiltontec.cell.base.c_value.call(null, c));
    var result__8765__auto___25417 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25416);
    if (cljs.core.truth_(result__8765__auto___25417)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
      "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25416), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
      "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25416)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25404) {
    var t__8802__auto___25418 = e25404;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
    "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25418, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25419 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__8765__auto___25420 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25419);
    if (cljs.core.truth_(result__8765__auto___25420)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25419), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25419)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25405) {
    var t__8802__auto___25421 = e25405;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25421, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25422 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8765__auto___25423 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25422);
    if (cljs.core.truth_(result__8765__auto___25423)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25422), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25422)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25406) {
    var t__8802__auto___25424 = e25406;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25424, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25425 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8765__auto___25426 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25425);
    if (cljs.core.truth_(result__8765__auto___25426)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25425), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25425)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25407) {
    var t__8802__auto___25427 = e25407;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25427, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25428 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_input_QMARK_.call(null, c));
    var result__8765__auto___25429 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___25428);
    if (cljs.core.truth_(result__8765__auto___25429)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8764__auto___25428), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___25428)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25408) {
    var t__8802__auto___25430 = e25408;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25430, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25409) {
    var t__8802__auto__ = e25409;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.test_c_formula.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.test_c_formula;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-formula", "tiltontec.cell.core-test/test-c-formula", -143714513, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-formula", "test-c-formula", -2076148965, null), "test/tiltontec/cell/core_test.cljc", 24, 1, 80, 80, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.core_test.test_c_formula) ? tiltontec.cell.core_test.test_c_formula.cljs$lang$test : null]));
tiltontec.cell.core_test.t_c_QMARK__PLUS_ = function tiltontec$cell$core_test$t_c_QMARK__PLUS_() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$t_c_QMARK__PLUS_.cljs$lang$var);
};
tiltontec.cell.core_test.t_c_QMARK__PLUS_.cljs$lang$test = function() {
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "optimize", "optimize", -1912349448), false, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), null, new cljs.core.Keyword(null, "cool", "cool", -10453819)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", 
  -740910886, null), 40, 2)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
    tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "cool", "cool", -10453819));
    return 40 + 2;
  });
  try {
    var values__8764__auto___25441 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__8765__auto___25442 = cljs.core.apply.call(null, tiltontec.cell.base.c_ref_QMARK_, values__8764__auto___25441);
    if (cljs.core.truth_(result__8765__auto___25442)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_ref_QMARK_, 
      values__8764__auto___25441), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), values__8764__auto___25441)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25431) {
    var t__8802__auto___25443 = e25431;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25443, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25444 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_rule.call(null, c));
    var result__8765__auto___25445 = cljs.core.apply.call(null, cljs.core.fn_QMARK_, values__8764__auto___25444);
    if (cljs.core.truth_(result__8765__auto___25445)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.fn_QMARK_, values__8764__auto___25444), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), values__8764__auto___25444)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25432) {
    var t__8802__auto___25446 = e25432;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25446, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25447 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.unbound), tiltontec.cell.base.c_value.call(null, c));
    var result__8765__auto___25448 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25447);
    if (cljs.core.truth_(result__8765__auto___25448)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
      "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25447), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
      "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25447)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25433) {
    var t__8802__auto___25449 = e25433;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
    "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25449, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25450 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654)), tiltontec.cell.base.c_value_state.call(null, c));
    var result__8765__auto___25451 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25450);
    if (cljs.core.truth_(result__8765__auto___25451)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25450), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25450)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25434) {
    var t__8802__auto___25452 = e25434;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25452, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25453 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8765__auto___25454 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25453);
    if (cljs.core.truth_(result__8765__auto___25454)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25453), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25453)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25435) {
    var t__8802__auto___25455 = e25435;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25455, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25456 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_useds.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__8765__auto___25457 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25456);
    if (cljs.core.truth_(result__8765__auto___25457)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25456), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25456)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25436) {
    var t__8802__auto___25458 = e25436;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25458, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25459 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_input_QMARK_.call(null, c));
    var result__8765__auto___25460 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___25459);
    if (cljs.core.truth_(result__8765__auto___25460)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8764__auto___25459), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___25459)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25437) {
    var t__8802__auto___25461 = e25437;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25461, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25462 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_model.call(null, c));
    var result__8765__auto___25463 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25462);
    if (cljs.core.truth_(result__8765__auto___25463)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25462), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25462)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25438) {
    var t__8802__auto___25464 = e25438;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25464, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25465 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_optimize.call(null, c));
    var result__8765__auto___25466 = cljs.core.apply.call(null, cljs.core.not, values__8764__auto___25465);
    if (cljs.core.truth_(result__8765__auto___25466)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-optimize", "c-optimize", 1870981226, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__8764__auto___25465), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-optimize", "c-optimize", 1870981226, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__8764__auto___25465)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25439) {
    var t__8802__auto___25467 = e25439;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-optimize", "c-optimize", 1870981226, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25467, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_slot_name.call(null, c)), tiltontec.cell.base.c_slot.call(null, c)), new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25440) {
    var t__8802__auto__ = e25440;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.t_c_QMARK__PLUS_.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.t_c_QMARK__PLUS_;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?+", "tiltontec.cell.core-test/t-c?+", -1190817413, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?+", "t-c?+", 1747367215, null), "test/tiltontec/cell/core_test.cljc", 15, 1, 92, 92, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK__PLUS_) ? 
tiltontec.cell.core_test.t_c_QMARK__PLUS_.cljs$lang$test : null]));
tiltontec.cell.core_test.t_eph_1 = function tiltontec$cell$core_test$t_eph_1() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$t_eph_1.cljs$lang$var);
};
tiltontec.cell.core_test.t_eph_1.cljs$lang$test = function() {
  tiltontec.cell.base.cells_init.call(null);
  var boct = cljs.core.atom.call(null, 0);
  var b = tiltontec.cell.core.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "b", "b", 1482224470), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(boct) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, boct, cljs.core.inc);
    };
  }(boct), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true);
  var crun = cljs.core.atom.call(null, 0);
  var cobs = cljs.core.atom.call(null, 0);
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "c", "c", -1763192079), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(boct, b, crun, cobs) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, cobs, cljs.core.inc);
    };
  }(boct, b, crun, cobs), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), null, new cljs.core.Keyword(null, "bingo", "bingo", 719685022)), cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "prog1", "prog1", -359901378, 
  null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), null, new cljs.core.Keyword(null, "cellread!!", "cellread!!", -2142314459), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, 
  "b", "b", -1172211299, null))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(boct, b, crun, cobs) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
      cljs.core.swap_BANG_.call(null, crun, cljs.core.inc);
      var result__22424__auto__ = [cljs.core.str("Hi "), cljs.core.str(tiltontec.cell.evaluate.c_get.call(null, b))].join("");
      tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "cellread!!", "cellread!!", -2142314459), cljs.core.deref.call(null, b));
      return result__22424__auto__;
    };
  }(boct, b, crun, cobs));
  if (cljs.core.truth_(tiltontec.cell.base.c_rule.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Early no rule"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  try {
    var values__8764__auto___25487 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_value.call(null, b));
    var result__8765__auto___25488 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25487);
    if (cljs.core.truth_(result__8765__auto___25488)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25487), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25487)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25468) {
    var t__8802__auto___25489 = e25468;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25489, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.util.base.call_trc.call(null, null, new cljs.core.Keyword(null, "valstate", "valstate", 283440834), tiltontec.cell.base.c_value_state.call(null, b));
  try {
    var values__8764__auto___25490 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_value_state.call(null, b)), new cljs.core.Keyword(null, "valid", "valid", 155614240));
    var result__8765__auto___25491 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25490);
    if (cljs.core.truth_(result__8765__auto___25491)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "valid", "valid", 155614240), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, 
      "b", "b", -1172211299, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25490), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "valid", "valid", 155614240), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, 
      "b", "b", -1172211299, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25490)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25469) {
    var t__8802__auto___25492 = e25469;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "valid", "valid", 155614240), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, 
    "b", "b", -1172211299, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25492, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25493 = cljs.core._conj.call(null, cljs.core.List.EMPTY, b);
    var result__8765__auto___25494 = cljs.core.apply.call(null, tiltontec.cell.base.c_valid_QMARK_, values__8764__auto___25493);
    if (cljs.core.truth_(result__8765__auto___25494)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_valid_QMARK_, 
      values__8764__auto___25493), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__8764__auto___25493)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25470) {
    var t__8802__auto___25495 = e25470;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25495, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  tiltontec.util.base.call_trc.call(null, null, b);
  tiltontec.util.base.call_trc.call(null, null, cljs.core.deref.call(null, b));
  try {
    var values__8764__auto___25496 = cljs.core._conj.call(null, cljs.core.List.EMPTY, b);
    var result__8765__auto___25497 = cljs.core.apply.call(null, tiltontec.cell.base.c_valid_QMARK_, values__8764__auto___25496);
    if (cljs.core.truth_(result__8765__auto___25497)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.cell.base.c_valid_QMARK_, 
      values__8764__auto___25496), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__8764__auto___25496)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25471) {
    var t__8802__auto___25498 = e25471;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25498, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25499 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, c)), "Hi ");
    var result__8765__auto___25500 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25499);
    if (cljs.core.truth_(result__8765__auto___25500)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25499), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25499)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25472) {
    var t__8802__auto___25501 = e25472;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25501, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25502 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, boct)), 1);
    var result__8765__auto___25503 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25502);
    if (cljs.core.truth_(result__8765__auto___25503)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25502), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25502)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25473) {
    var t__8802__auto___25504 = e25473;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25504, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25505 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cobs)), cljs.core.deref.call(null, crun)), 1);
    var result__8765__auto___25506 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25505);
    if (cljs.core.truth_(result__8765__auto___25506)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
      cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25505), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
      cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25505)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e25474) {
    var t__8802__auto___25507 = e25474;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
    cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25507, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25508 = cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, b)));
    var result__8765__auto___25509 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25508);
    if (cljs.core.truth_(result__8765__auto___25509)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25508), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25508)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25475) {
    var t__8802__auto___25510 = e25475;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25510, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, "Mom");
  try {
    var values__8764__auto___25511 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, c)), "Hi Mom");
    var result__8765__auto___25512 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25511);
    if (cljs.core.truth_(result__8765__auto___25512)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25511), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25511)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25476) {
    var t__8802__auto___25513 = e25476;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25513, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25514 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, boct)), 2);
    var result__8765__auto___25515 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25514);
    if (cljs.core.truth_(result__8765__auto___25515)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25514), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25514)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25477) {
    var t__8802__auto___25516 = e25477;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25516, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25517 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cobs)), cljs.core.deref.call(null, crun)), 2);
    var result__8765__auto___25518 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25517);
    if (cljs.core.truth_(result__8765__auto___25518)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
      cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25517), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
      cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25517)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e25478) {
    var t__8802__auto___25519 = e25478;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
    cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25519, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25520 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_value.call(null, b));
    var result__8765__auto___25521 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25520);
    if (cljs.core.truth_(result__8765__auto___25521)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25520), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25520)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25479) {
    var t__8802__auto___25522 = e25479;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25522, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25523 = cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, b)));
    var result__8765__auto___25524 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25523);
    if (cljs.core.truth_(result__8765__auto___25524)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25523), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25523)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25480) {
    var t__8802__auto___25525 = e25480;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25525, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, "Mom");
  try {
    var values__8764__auto___25526 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, c)), "Hi Mom");
    var result__8765__auto___25527 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25526);
    if (cljs.core.truth_(result__8765__auto___25527)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25526), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25526)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25481) {
    var t__8802__auto___25528 = e25481;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25528, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25529 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, boct)), 3);
    var result__8765__auto___25530 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25529);
    if (cljs.core.truth_(result__8765__auto___25530)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25529), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25529)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25482) {
    var t__8802__auto___25531 = e25482;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25531, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25532 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, crun)), 3);
    var result__8765__auto___25533 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25532);
    if (cljs.core.truth_(result__8765__auto___25533)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25532), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25532)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25483) {
    var t__8802__auto___25534 = e25483;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25534, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25535 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cobs)), 2);
    var result__8765__auto___25536 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25535);
    if (cljs.core.truth_(result__8765__auto___25536)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25535), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25535)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25484) {
    var t__8802__auto___25537 = e25484;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto___25537, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25538 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.base.c_value.call(null, b));
    var result__8765__auto___25539 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto___25538);
    if (cljs.core.truth_(result__8765__auto___25539)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto___25538), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto___25538)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25485) {
    var t__8802__auto___25540 = e25485;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25540, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, b)));
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25486) {
    var t__8802__auto__ = e25486;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.t_eph_1.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.t_eph_1;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "t-eph-1", "tiltontec.cell.core-test/t-eph-1", 1953166092, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-eph-1", "t-eph-1", 655169488, null), "test/tiltontec/cell/core_test.cljc", 17, 1, 108, 108, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.core_test.t_eph_1) ? 
tiltontec.cell.core_test.t_eph_1.cljs$lang$test : null]));
tiltontec.cell.core_test.t_c_QMARK_n = function tiltontec$cell$core_test$t_c_QMARK_n() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$t_c_QMARK_n.cljs$lang$var);
};
tiltontec.cell.core_test.t_c_QMARK_n.cljs$lang$test = function() {
  var a = tiltontec.cell.core.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "aa", "aa", 1986357152));
  var b = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(new cljs.core.Symbol("tiltontec.cell.base", "without-c-dependency", "tiltontec.cell.base/without-c-dependency", -1335265675, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837)], null), cljs.core.list(new cljs.core.Symbol(null, "/", 
  "/", -1371932971, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null)), 2)), new cljs.core.Keyword(null, "input?", "input?", -1792843173), true, new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var _STAR_depender_STAR_25541 = tiltontec.cell.base._STAR_depender_STAR_;
      tiltontec.cell.base._STAR_depender_STAR_ = null;
      try {
        new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837)], null);
        return tiltontec.cell.evaluate.c_get.call(null, a) / 2;
      } finally {
        tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_25541;
      }
    };
  }(a));
  var c = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 1, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(a, b) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      return 1 + tiltontec.cell.evaluate.c_get.call(null, b);
    };
  }(a, b));
  try {
    var values__8764__auto___25546 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, b)), 21);
    var result__8765__auto___25547 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25546);
    if (cljs.core.truth_(result__8765__auto___25547)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25546), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25546)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25542) {
    var t__8802__auto___25548 = e25542;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25548, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto___25549 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, c)), 22);
    var result__8765__auto___25550 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25549);
    if (cljs.core.truth_(result__8765__auto___25550)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 22, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25549), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 22, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25549)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25543) {
    var t__8802__auto___25551 = e25543;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 22, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25551, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.cell.core.c_reset_BANG_.call(null, b, 42);
  try {
    var values__8764__auto___25552 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, b)), 42);
    var result__8765__auto___25553 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25552);
    if (cljs.core.truth_(result__8765__auto___25553)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25552), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25552)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25544) {
    var t__8802__auto___25554 = e25544;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25554, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__8764__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, c)), 43);
    var result__8765__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto__);
    if (cljs.core.truth_(result__8765__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__8765__auto__;
  } catch (e25545) {
    var t__8802__auto__ = e25545;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.cell.core_test.t_c_QMARK_n.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.t_c_QMARK_n;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?n", "tiltontec.cell.core-test/t-c?n", 149604314, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?n", "t-c?n", 1065739150, null), "test/tiltontec/cell/core_test.cljc", 15, 1, 156, 156, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK_n) ? 
tiltontec.cell.core_test.t_c_QMARK_n.cljs$lang$test : null]));
tiltontec.cell.core_test.t_c_QMARK_once = function tiltontec$cell$core_test$t_c_QMARK_once() {
  return cljs.test.test_var.call(null, tiltontec$cell$core_test$t_c_QMARK_once.cljs$lang$var);
};
tiltontec.cell.core_test.t_c_QMARK_once.cljs$lang$test = function() {
  var a = tiltontec.cell.core.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "aa", "aa", 1986357152));
  var b = tiltontec.cell.core.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(new cljs.core.Symbol("tiltontec.cell.base", "without-c-dependency", "tiltontec.cell.base/without-c-dependency", -1335265675, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837)], null), cljs.core.list(new cljs.core.Symbol(null, "/", 
  "/", -1371932971, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null)), 2)), new cljs.core.Keyword(null, "input?", "input?", -1792843173), null, new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.cell.base.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.cell.base.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.cell.base.c_value.call(null, slot_c_SHARP_);
      var _STAR_depender_STAR_25555 = tiltontec.cell.base._STAR_depender_STAR_;
      tiltontec.cell.base._STAR_depender_STAR_ = null;
      try {
        new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837)], null);
        return tiltontec.cell.evaluate.c_get.call(null, a) / 2;
      } finally {
        tiltontec.cell.base._STAR_depender_STAR_ = _STAR_depender_STAR_25555;
      }
    };
  }(a));
  try {
    var values__8764__auto___25557 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.cell.evaluate.c_get.call(null, b)), 21);
    var result__8765__auto___25558 = cljs.core.apply.call(null, cljs.core._EQ_, values__8764__auto___25557);
    if (cljs.core.truth_(result__8765__auto___25558)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__8764__auto___25557), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__8764__auto___25557)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25556) {
    var t__8802__auto___25559 = e25556;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__8802__auto___25559, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  return null;
};
tiltontec.cell.core_test.t_c_QMARK_once.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.cell.core_test.t_c_QMARK_once;
}, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?once", "tiltontec.cell.core-test/t-c?once", 1148131532, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?once", "t-c?once", 1934477112, null), "test/tiltontec/cell/core_test.cljc", 18, 1, 167, 167, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK_once) ? tiltontec.cell.core_test.t_c_QMARK_once.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env25560 = cljs.test.empty_env.call(null);
  var summary25561 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25560, summary25561) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env25560);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__8869__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env25560, summary25561) {
          return function() {
            if (env__8869__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__8869__auto__, env25560, summary25561)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.cell.core_test.test_input;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "test-input", "tiltontec.cell.core-test/test-input", 584139487, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/cell/core_test.cljc", 20, 1, 45, 45, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.test_input) ? tiltontec.cell.core_test.test_input.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.test_c_in;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-in", "tiltontec.cell.core-test/test-c-in", -99212066, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-in", "test-c-in", -885735134, null), "test/tiltontec/cell/core_test.cljc", 19, 1, 58, 58, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.test_c_in) ? tiltontec.cell.core_test.test_c_in.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.test_c_in_PLUS_;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-in+", "tiltontec.cell.core-test/test-c-in+", 856803589, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-in+", "test-c-in+", -1036603951, null), "test/tiltontec/cell/core_test.cljc", 20, 1, 69, 69, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.test_c_in_PLUS_) ? tiltontec.cell.core_test.test_c_in_PLUS_.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.test_c_formula;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "test-c-formula", "tiltontec.cell.core-test/test-c-formula", -143714513, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "test-c-formula", "test-c-formula", -2076148965, null), "test/tiltontec/cell/core_test.cljc", 
        24, 1, 80, 80, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.cell.core_test.test_c_formula) ? tiltontec.cell.core_test.test_c_formula.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.t_c_QMARK__PLUS_;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?+", "tiltontec.cell.core-test/t-c?+", -1190817413, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?+", "t-c?+", 1747367215, null), "test/tiltontec/cell/core_test.cljc", 15, 1, 92, 92, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK__PLUS_) ? tiltontec.cell.core_test.t_c_QMARK__PLUS_.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.t_eph_1;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "t-eph-1", "tiltontec.cell.core-test/t-eph-1", 1953166092, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-eph-1", "t-eph-1", 655169488, null), "test/tiltontec/cell/core_test.cljc", 17, 1, 108, 108, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.t_eph_1) ? tiltontec.cell.core_test.t_eph_1.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.t_c_QMARK_n;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?n", "tiltontec.cell.core-test/t-c?n", 149604314, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?n", "t-c?n", 1065739150, null), "test/tiltontec/cell/core_test.cljc", 15, 1, 156, 156, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK_n) ? tiltontec.cell.core_test.t_c_QMARK_n.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.cell.core_test.t_c_QMARK_once;
        }, new cljs.core.Symbol("tiltontec.cell.core-test", "t-c?once", "tiltontec.cell.core-test/t-c?once", 1148131532, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Symbol(null, "t-c?once", "t-c?once", 1934477112, null), "test/tiltontec/cell/core_test.cljc", 18, 1, 167, 167, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.cell.core_test.t_c_QMARK_once) ? tiltontec.cell.core_test.t_c_QMARK_once.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__8869__auto__, env25560, summary25561) {
          return function() {
            if (env__8869__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__8869__auto__, env25560, summary25561)], null));
      }());
    };
  }(env25560, summary25561), function(env25560, summary25561) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.cell.core-test", "tiltontec.cell.core-test", 169280107, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env25560, summary25561)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25560, summary25561) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary25561, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary25561), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env25560, summary25561)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25560, summary25561) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env25560);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary25561));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary25561), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env25560, summary25561)], null));
}());
